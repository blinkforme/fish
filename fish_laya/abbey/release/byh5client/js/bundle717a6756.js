(function () {
	'use strict';

	(function(window){
		var Laya=window.Laya;
		var Animation=Laya.Animation,BaseTexture=Laya.BaseTexture,Box=Laya.Box,Browser=Laya.Browser,Button=Laya.Button;
		var Byte=Laya.Byte,CONST3D2D=Laya.CONST3D2D,CheckBox=Laya.CheckBox,ClassUtils=Laya.ClassUtils,ColorFilter=Laya.ColorFilter;
		var Config=Laya.Config,Dialog=Laya.Dialog,Ease=Laya.Ease,Event=Laya.Event,EventDispatcher=Laya.EventDispatcher;
		var Filter=Laya.Filter,FontClip=Laya.FontClip,FrameAnimation=Laya.FrameAnimation,GraphicAnimation=Laya.GraphicAnimation;
		var Graphics=Laya.Graphics,HScrollBar=Laya.HScrollBar,HSlider=Laya.HSlider,HTMLCanvas=Laya.HTMLCanvas,HTMLDivElement=Laya.HTMLDivElement;
		var Handler=Laya.Handler,HttpRequest=Laya.HttpRequest,Image=Laya.Image,IndexBuffer2D=Laya.IndexBuffer2D,Input=Laya.Input;
		var Label=Laya.Label,List=Laya.List,Loader=Laya.Loader,MouseManager=Laya.MouseManager,Node=Laya.Node,Panel=Laya.Panel;
		var Particle2D=Laya.Particle2D,ParticleSetting=Laya.ParticleSetting,Point=Laya.Point,ProgressBar=Laya.ProgressBar;
		var RadioGroup=Laya.RadioGroup,Rectangle=Laya.Rectangle,Render=Laya.Render,RenderSprite=Laya.RenderSprite;
		var ResourceVersion=Laya.ResourceVersion,Scene=Laya.Scene,Shader=Laya.Shader,Skeleton=Laya.Skeleton,Socket=Laya.Socket;
		var SoundManager=Laya.SoundManager,Sprite=Laya.Sprite,Stage=Laya.Stage,Stat=Laya.Stat,Tab=Laya.Tab,Templet=Laya.Templet;
		var Text=Laya.Text,TextInput=Laya.TextInput,Texture=Laya.Texture,Texture2D=Laya.Texture2D,TextureFormat=Laya.TextureFormat;
		var TimeLine=Laya.TimeLine,Tween=Laya.Tween,UIConfig=Laya.UIConfig,URL=Laya.URL,Utils=Laya.Utils,Value2D=Laya.Value2D;
		var VertexBuffer2D=Laya.VertexBuffer2D,View=Laya.View,WebGLContext=Laya.WebGLContext;
		window.conf={};

		class cfg_actsign{
			constructor (){
				//this.id=0;
				//this.title=null;
				//this.reward_ids=null;
				//this.reward_nums=null;
				//this.remark=null;
			}
			static init (sheet){
				var a=new cfg_actsign();
				a.id=sheet[0];
				a.title=sheet[1];
				a.reward_ids=sheet[2];
				a.reward_nums=sheet[3];
				a.remark=sheet[4];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_actsign",key);
			}
		}

		conf.cfg_actsign=Laya.cfg_actsign=cfg_actsign;	

		class cfg_anicollision{
			constructor (){
				//this.id=null;
				//this.name=null;
				//this.colliOffsetX1=NaN;
				//this.colliOffsetY1=NaN;
				//this.colliWidth1=NaN;
				//this.colliHeight1=NaN;
				//this.colliOffsetX2=NaN;
				//this.colliOffsetY2=NaN;
				//this.colliWidth2=NaN;
				//this.colliHeight2=NaN;
				//this.colliOffsetX3=NaN;
				//this.colliOffsetY3=NaN;
				//this.colliWidth3=NaN;
				//this.colliHeight3=NaN;
				//this.colliOffsetX4=NaN;
				//this.colliOffsetY4=NaN;
				//this.colliWidth4=NaN;
				//this.colliHeight4=NaN;
				//this.colliOffsetX5=NaN;
				//this.colliOffsetY5=NaN;
				//this.colliWidth5=NaN;
				//this.colliHeight5=NaN;
				//this.pivotX=NaN;
				//this.pivotY=NaN;
				//this.deviationX=NaN;
				//this.deviationY=NaN;
				//this.aniSpeed=NaN;
				//this.change=0;
				//this.refL=NaN;
				//this.colliOffsetX6=NaN;
				//this.colliOffsetY6=NaN;
				//this.colliWidth6=NaN;
				//this.colliHeight6=NaN;
				//this.aniPath=null;
				//this.aniType=0;
				//this.anilength=NaN;
				//this.scale=NaN;
				//this.spinePath=null;
				//this.calMax=NaN;
			}
			static init (sheet){
				var a=new cfg_anicollision();
				a.id=sheet[0];
				a.name=sheet[1];
				a.colliOffsetX1=sheet[2];
				a.colliOffsetY1=sheet[3];
				a.colliWidth1=sheet[4];
				a.colliHeight1=sheet[5];
				a.colliOffsetX2=sheet[6];
				a.colliOffsetY2=sheet[7];
				a.colliWidth2=sheet[8];
				a.colliHeight2=sheet[9];
				a.colliOffsetX3=sheet[10];
				a.colliOffsetY3=sheet[11];
				a.colliWidth3=sheet[12];
				a.colliHeight3=sheet[13];
				a.colliOffsetX4=sheet[14];
				a.colliOffsetY4=sheet[15];
				a.colliWidth4=sheet[16];
				a.colliHeight4=sheet[17];
				a.colliOffsetX5=sheet[18];
				a.colliOffsetY5=sheet[19];
				a.colliWidth5=sheet[20];
				a.colliHeight5=sheet[21];
				a.pivotX=sheet[22];
				a.pivotY=sheet[23];
				a.deviationX=sheet[24];
				a.deviationY=sheet[25];
				a.aniSpeed=sheet[26];
				a.change=sheet[27];
				a.refL=sheet[28];
				a.colliOffsetX6=sheet[29];
				a.colliOffsetY6=sheet[30];
				a.colliWidth6=sheet[31];
				a.colliHeight6=sheet[32];
				a.aniPath=sheet[33];
				a.aniType=sheet[34];
				a.anilength=sheet[35];
				a.scale=sheet[36];
				a.spinePath=sheet[37];
				a.calMax=sheet[38];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_anicollision",key);
			}
		}

		conf.cfg_anicollision=Laya.cfg_anicollision=cfg_anicollision;	

		class cfg_battery{
			constructor (){
				//this.id=0;
				//this.need_diamond=0;
				//this.cast_diamond=0;
				//this.maxDegree=0;
				//this.degree=0;
				//this.comsume=0;
				//this.award=null;
				//this.buff=null;
				//this.prize=0;
			}
			static init (sheet){
				var a=new cfg_battery();
				a.id=sheet[0];
				a.need_diamond=sheet[1];
				a.cast_diamond=sheet[2];
				a.maxDegree=sheet[3];
				a.degree=sheet[4];
				a.comsume=sheet[5];
				a.award=sheet[6];
				a.buff=sheet[7];
				a.prize=sheet[8];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_battery",key);
			}
		}

		conf.cfg_battery=Laya.cfg_battery=cfg_battery;	

		class cfg_battery_skin{
			constructor (){
				//this.id=0;
				//this.ani=null;
				//this.batteryImg=null;
				//this.batteryImg1=null;
				//this.itemLabel=null;
				//this.batteryBaseImg=null;
				//this.name=null;
				//this.web=null;
				//this.action=null;
				//this.follow=null;
				//this.catch_count=0;
				//this.multi=0;
				//this.speed=NaN;
				//this.shootInterval=NaN;
				//this.offLen=null;
				//this.offX=null;
				//this.offAngle=null;
				//this.desc=null;
				//this.channel=null;
				//this.tip_id=0;
				//this.activity=null;
				//this.more_change=0;
				//this.less_change=0;
				//this.toskin=0;
				//this.isShowInList=0;
			}
			static init (sheet){
				var a=new cfg_battery_skin();
				a.id=sheet[0];
				a.ani=sheet[1];
				a.batteryImg=sheet[2];
				a.batteryImg1=sheet[3];
				a.itemLabel=sheet[4];
				a.batteryBaseImg=sheet[5];
				a.name=sheet[6];
				a.web=sheet[7];
				a.action=sheet[8];
				a.follow=sheet[9];
				a.catch_count=sheet[10];
				a.multi=sheet[11];
				a.speed=sheet[12];
				a.shootInterval=sheet[13];
				a.offLen=sheet[14];
				a.offX=sheet[15];
				a.offAngle=sheet[16];
				a.desc=sheet[17];
				a.channel=sheet[18];
				a.tip_id=sheet[19];
				a.activity=sheet[20];
				a.more_change=sheet[21];
				a.less_change=sheet[22];
				a.toskin=sheet[23];
				a.isShowInList=sheet[24];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_battery_skin",key);
			}
		}

		conf.cfg_battery_skin=Laya.cfg_battery_skin=cfg_battery_skin;	

		class cfg_bullet{
			constructor (){
				//this.id=0;
				//this.name=null;
				//this.comsume=0;
				//this.speed=NaN;
			}
			static init (sheet){
				var a=new cfg_bullet();
				a.id=sheet[0];
				a.name=sheet[1];
				a.comsume=sheet[2];
				a.speed=sheet[3];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_bullet",key);
			}
		}

		conf.cfg_bullet=Laya.cfg_bullet=cfg_bullet;	

		class cfg_bulletmodel{
			constructor (){
				//this.id=null;
				//this.bulletAni=null;
				//this.bulletImg=null;
				//this.cannonImg=null;
				//this.bulletShotSound=null;
				//this.cannonAni=null;
				//this.cannonWaitAni=null;
				//this.cannonFireAni=null;
				//this.bulletBombAni=null;
				//this.bulletWidth=NaN;
				//this.bulletHeight=NaN;
				//this.bulletBombWidthScale=NaN;
				//this.bulletBombHeightScale=NaN;
				//this.bulletXOffset=NaN;
				//this.bulletYOffset=NaN;
			}
			static init (sheet){
				var a=new cfg_bulletmodel();
				a.id=sheet[0];
				a.bulletAni=sheet[1];
				a.bulletImg=sheet[2];
				a.cannonImg=sheet[3];
				a.bulletShotSound=sheet[4];
				a.cannonAni=sheet[5];
				a.cannonWaitAni=sheet[6];
				a.cannonFireAni=sheet[7];
				a.bulletBombAni=sheet[8];
				a.bulletWidth=sheet[9];
				a.bulletHeight=sheet[10];
				a.bulletBombWidthScale=sheet[11];
				a.bulletBombHeightScale=sheet[12];
				a.bulletXOffset=sheet[13];
				a.bulletYOffset=sheet[14];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_bulletmodel",key);
			}
		}

		conf.cfg_bulletmodel=Laya.cfg_bulletmodel=cfg_bulletmodel;	

		class cfg_code{
			constructor (){
				//this.id=0;
				//this.txtContent=null;
			}
			static init (sheet){
				var a=new cfg_code();
				a.id=sheet[0];
				a.txtContent=sheet[1];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_code",key);
			}
		}

		conf.cfg_code=Laya.cfg_code=cfg_code;	

		class cfg_commodity{
			constructor (){
				//this.id=0;
				//this.title=null;
				//this.img=null;
				//this.img_w=0;
				//this.img_h=0;
				//this.currency_id=0;
				//this.currency_amount=0;
				//this.mini_currency_id=0;
				//this.mini_currency_amount=0;
				//this.item_id=0;
				//this.item_count=0;
				//this.item_label=null;
				//this.vip_exp=0;
				//this.extra_item_id=0;
				//this.extra_item_count=0;
				//this.extra_item_good_id=0;
				//this.extra_item_text=null;
				//this.tab=null;
				//this.buff=null;
				//this.first_buy_gift_id=0;
				//this.first_buy_gift_count=0;
				//this.first_buy_good_id=0;
				//this.first_buy_text=null;
				//this.is_single_buy=0;
				//this.sidebar_img=null;
				//this.card_type=0;
				//this.card_duration=0;
				//this.reward_item_ids=null;
				//this.reward_item_nums=null;
				//this.card_title=null;
				//this.card_title2=null;
				//this.card_detail=null;
				//this.good_ids=null;
				//this.good_nums=null;
				//this.activity=null;
			}
			static init (sheet){
				var a=new cfg_commodity();
				a.id=sheet[0];
				a.title=sheet[1];
				a.img=sheet[2];
				a.img_w=sheet[3];
				a.img_h=sheet[4];
				a.currency_id=sheet[5];
				a.currency_amount=sheet[6];
				a.mini_currency_id=sheet[7];
				a.mini_currency_amount=sheet[8];
				a.item_id=sheet[9];
				a.item_count=sheet[10];
				a.item_label=sheet[11];
				a.vip_exp=sheet[12];
				a.extra_item_id=sheet[13];
				a.extra_item_count=sheet[14];
				a.extra_item_good_id=sheet[15];
				a.extra_item_text=sheet[16];
				a.tab=sheet[17];
				a.buff=sheet[18];
				a.first_buy_gift_id=sheet[19];
				a.first_buy_gift_count=sheet[20];
				a.first_buy_good_id=sheet[21];
				a.first_buy_text=sheet[22];
				a.is_single_buy=sheet[23];
				a.sidebar_img=sheet[24];
				a.card_type=sheet[25];
				a.card_duration=sheet[26];
				a.reward_item_ids=sheet[27];
				a.reward_item_nums=sheet[28];
				a.card_title=sheet[29];
				a.card_title2=sheet[30];
				a.card_detail=sheet[31];
				a.good_ids=sheet[32];
				a.good_nums=sheet[33];
				a.activity=sheet[34];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_commodity",key);
			}
		}

		conf.cfg_commodity=Laya.cfg_commodity=cfg_commodity;	

		class cfg_content{
			constructor (){
				//this.id=0;
				//this.mainContent=null;
				//this.timeContent=0;
				//this.topContent=null;
				//this.state=0;
			}
			static init (sheet){
				var a=new cfg_content();
				a.id=sheet[0];
				a.mainContent=sheet[1];
				a.timeContent=sheet[2];
				a.topContent=sheet[3];
				a.state=sheet[4];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_content",key);
			}
		}

		conf.cfg_content=Laya.cfg_content=cfg_content;	

		class cfg_first_charge{
			constructor (){
				//this.id=0;
				//this.level=0;
				//this.reward_item_ids=null;
				//this.reward_item_nums=null;
				//this.reward_skin_id=0;
			}
			static init (sheet){
				var a=new cfg_first_charge();
				a.id=sheet[0];
				a.level=sheet[1];
				a.reward_item_ids=sheet[2];
				a.reward_item_nums=sheet[3];
				a.reward_skin_id=sheet[4];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_first_charge",key);
			}
		}

		conf.cfg_first_charge=Laya.cfg_first_charge=cfg_first_charge;	

		class cfg_fish{
			constructor (){
				//this.id=0;
				//this.aniName=null;
				//this.aniName_down=null;
				//this.coin_fly=null;
				//this.group=0;
				//this.group_down=0;
				//this.horse_id=0;
				//this.ctype=0;
				//this.delay=NaN;
				//this.diamond_drop=0;
				//this.call=0;
				//this.callEffectTime=NaN;
				//this.lock_pri=0;
				//this.weight=null;
				//this.boom=0;
				//this.specFlag=null;
				//this.catch_show_range=null;
				//this.show_ani_range=null;
				//this.show_ani_name=null;
				//this.catch_range=0;
				//this.start_time=NaN;
				//this.end_time=NaN;
				//this.catch_time=NaN;
				//this.catch_show_rate=NaN;
				//this.catch_show=0;
				//this.ani_name=null;
				//this.action_name=null;
				//this.dead_ani=null;
				//this.come_ani_name=null;
				//this.come_action_name=null;
				//this.playCatchSound=0;
				//this.comeSound=null;
				//this.CatchSound=null;
				//this.swimName=null;
				//this.deadAniExist=0;
				//this.hitSound=null;
				//this.layer=0;
				//this.isMirror=0;
				//this.length=NaN;
				//this.height=NaN;
				//this.speed=NaN;
				//this.sizeType=0;
				//this.scale=NaN;
				//this.chance=0;
				//this.goldFishRate=NaN;
				//this.coin_rate=NaN;
				//this.goldFishHpRate=NaN;
				//this.goldFishAwardCoin=NaN;
				//this.Imageurl=null;
				//this.Imageurl_down=null;
				//this.fishType=0;
				//this.fishname=null;
				//this.fishname_down=null;
				//this.shock=null;
				//this.hitAni=0;
				//this.hit_time=NaN;
				//this.task_id=0;
				//this.change_coin_value=0;
				//this.change_num=0;
				//this.ticket_type=0;
				//this.stock=0;
				//this.change_img=null;
				//this.wagesX=0;
				//this.wagesY=0;
				//this.preLoadNum=0;
				//this.replace_id=0;
			}
			static init (sheet){
				var a=new cfg_fish();
				a.id=sheet[0];
				a.aniName=sheet[1];
				a.aniName_down=sheet[2];
				a.coin_fly=sheet[3];
				a.group=sheet[4];
				a.group_down=sheet[5];
				a.horse_id=sheet[6];
				a.ctype=sheet[7];
				a.delay=sheet[8];
				a.diamond_drop=sheet[9];
				a.call=sheet[10];
				a.callEffectTime=sheet[11];
				a.lock_pri=sheet[12];
				a.weight=sheet[13];
				a.boom=sheet[14];
				a.specFlag=sheet[15];
				a.catch_show_range=sheet[16];
				a.show_ani_range=sheet[17];
				a.show_ani_name=sheet[18];
				a.catch_range=sheet[19];
				a.start_time=sheet[20];
				a.end_time=sheet[21];
				a.catch_time=sheet[22];
				a.catch_show_rate=sheet[23];
				a.catch_show=sheet[24];
				a.ani_name=sheet[25];
				a.action_name=sheet[26];
				a.dead_ani=sheet[27];
				a.come_ani_name=sheet[28];
				a.come_action_name=sheet[29];
				a.playCatchSound=sheet[30];
				a.comeSound=sheet[31];
				a.CatchSound=sheet[32];
				a.swimName=sheet[33];
				a.deadAniExist=sheet[34];
				a.hitSound=sheet[35];
				a.layer=sheet[36];
				a.isMirror=sheet[37];
				a.length=sheet[38];
				a.height=sheet[39];
				a.speed=sheet[40];
				a.sizeType=sheet[41];
				a.scale=sheet[42];
				a.chance=sheet[43];
				a.goldFishRate=sheet[44];
				a.coin_rate=sheet[45];
				a.goldFishHpRate=sheet[46];
				a.goldFishAwardCoin=sheet[47];
				a.Imageurl=sheet[48];
				a.Imageurl_down=sheet[49];
				a.fishType=sheet[50];
				a.fishname=sheet[51];
				a.fishname_down=sheet[52];
				a.shock=sheet[53];
				a.hitAni=sheet[54];
				a.hit_time=sheet[55];
				a.task_id=sheet[56];
				a.change_coin_value=sheet[57];
				a.change_num=sheet[58];
				a.ticket_type=sheet[59];
				a.stock=sheet[60];
				a.change_img=sheet[61];
				a.wagesX=sheet[62];
				a.wagesY=sheet[63];
				a.preLoadNum=sheet[64];
				a.replace_id=sheet[65];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_fish",key);
			}
		}

		conf.cfg_fish=Laya.cfg_fish=cfg_fish;	

		class cfg_fishform{
			constructor (){
				//this.id=0;
			}
			static init (sheet){
				var a=new cfg_fishform();
				a.id=sheet[0];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_fishform",key);
			}
		}

		conf.cfg_fishform=Laya.cfg_fishform=cfg_fishform;	

		class cfg_fishgroup{
			constructor (){
				//this.id=0;
				//this.tmin=0;
				//this.tmax=0;
				//this.cmin=0;
				//this.cmax=0;
				//this.args=NaN;
				//this.delay=NaN;
			}
			static init (sheet){
				var a=new cfg_fishgroup();
				a.id=sheet[0];
				a.tmin=sheet[1];
				a.tmax=sheet[2];
				a.cmin=sheet[3];
				a.cmax=sheet[4];
				a.args=sheet[5];
				a.delay=sheet[6];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_fishgroup",key);
			}
		}

		conf.cfg_fishgroup=Laya.cfg_fishgroup=cfg_fishgroup;	

		class cfg_fishgrouppath{
			constructor (){
				//this.id=0;
				//this.group=0;
				//this.time=NaN;
				//this.angle=0;
				//this.patharg=NaN;
				//this.segInfo=null;
				//this.loop=0;
				//this.mirror=0;
				//this.closePath=0;
				//this.path=null;
			}
			static init (sheet){
				var a=new cfg_fishgrouppath();
				a.id=sheet[0];
				a.group=sheet[1];
				a.time=sheet[2];
				a.angle=sheet[3];
				a.patharg=sheet[4];
				a.segInfo=sheet[5];
				a.loop=sheet[6];
				a.mirror=sheet[7];
				a.closePath=sheet[8];
				a.path=sheet[9];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_fishgrouppath",key);
			}
		}

		conf.cfg_fishgrouppath=Laya.cfg_fishgrouppath=cfg_fishgrouppath;	

		class cfg_fishshoal{
			constructor (){
				//this.id=0;
				//this.scene=0;
				//this.fish=0;
				//this.rule_3d_c=null;
			}
			static init (sheet){
				var a=new cfg_fishshoal();
				a.id=sheet[0];
				a.scene=sheet[1];
				a.fish=sheet[2];
				a.rule_3d_c=sheet[3];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_fishshoal",key);
			}
		}

		conf.cfg_fishshoal=Laya.cfg_fishshoal=cfg_fishshoal;	

		class cfg_global{
			constructor (){
				//this.id=0;
				//this.bomb_collision_count=0;
				//this.bomb_scale_width=NaN;
				//this.bomb_scale_height=NaN;
				//this.award_effect_time=NaN;
				//this.award_effect_scale_min=NaN;
				//this.gold_stay_time=NaN;
				//this.gold_sound1_value=0;
				//this.gold_sound_play_interval=NaN;
				//this.bullet_interval=NaN;
				//this.normalFishTime=NaN;
				//this.bezierRate=NaN;
				//this.bezierRateTime=NaN;
				//this.server_model=null;
				//this.form_interval=0;
				//this.clear_up_time=0;
				//this.form_born_inverval=NaN;
				//this.form_end_born=NaN;
				//this.sta_data_time=null;
				//this.db_max=0;
				//this.db_buff=null;
				//this.db_num=0;
				//this.award_group=0;
				//this.max_bullet_num=0;
				//this.max_call_num=0;
				//this.boss_delay_form_born=0;
				//this.click_sound=null;
				//this.get_coin_sound=null;
				//this.hit_sound=null;
				//this.battery_unlock_sound=null;
				//this.shoot_sound=null;
				//this.level_up_sound=null;
				//this.tide_sound=null;
				//this.bingo_sound=null;
				//this.extra_drop_sound=null;
				//this.get_sound=null;
				//this.cost_coin_max=0;
				//this.min_level=0;
				//this.min_battery=0;
				//this.mini_battery=0;
				//this.camera_shot=null;
				//this.double_coin_battery=0;
				//this.double_chance_battery=0;
				//this.maxWatchADTimes=0;
				//this.watchAdRewardIds=null;
				//this.watchAdRewardNums=null;
				//this.route_of_entry_reward_ids=null;
				//this.route_of_entry_reward_nums=null;
				//this.sign_days=0;
				//this.rech_days=0;
				//this.upgrade_days=0;
				//this.raffle_config=null;
			}
			static init (sheet){
				var a=new cfg_global();
				a.id=sheet[0];
				a.bomb_collision_count=sheet[1];
				a.bomb_scale_width=sheet[2];
				a.bomb_scale_height=sheet[3];
				a.award_effect_time=sheet[4];
				a.award_effect_scale_min=sheet[5];
				a.gold_stay_time=sheet[6];
				a.gold_sound1_value=sheet[7];
				a.gold_sound_play_interval=sheet[8];
				a.bullet_interval=sheet[9];
				a.normalFishTime=sheet[10];
				a.bezierRate=sheet[11];
				a.bezierRateTime=sheet[12];
				a.server_model=sheet[13];
				a.form_interval=sheet[14];
				a.clear_up_time=sheet[15];
				a.form_born_inverval=sheet[16];
				a.form_end_born=sheet[17];
				a.sta_data_time=sheet[18];
				a.db_max=sheet[19];
				a.db_buff=sheet[20];
				a.db_num=sheet[21];
				a.award_group=sheet[22];
				a.max_bullet_num=sheet[23];
				a.max_call_num=sheet[24];
				a.boss_delay_form_born=sheet[25];
				a.click_sound=sheet[26];
				a.get_coin_sound=sheet[27];
				a.hit_sound=sheet[28];
				a.battery_unlock_sound=sheet[29];
				a.shoot_sound=sheet[30];
				a.level_up_sound=sheet[31];
				a.tide_sound=sheet[32];
				a.bingo_sound=sheet[33];
				a.extra_drop_sound=sheet[34];
				a.get_sound=sheet[35];
				a.cost_coin_max=sheet[36];
				a.min_level=sheet[37];
				a.min_battery=sheet[38];
				a.mini_battery=sheet[39];
				a.camera_shot=sheet[40];
				a.double_coin_battery=sheet[41];
				a.double_chance_battery=sheet[42];
				a.maxWatchADTimes
				=sheet[43];
				a.watchAdRewardIds
				=sheet[44];
				a.watchAdRewardNums
				=sheet[45];
				a.route_of_entry_reward_ids=sheet[46];
				a.route_of_entry_reward_nums=sheet[47];
				a.sign_days=sheet[48];
				a.rech_days=sheet[49];
				a.upgrade_days=sheet[50];
				a.raffle_config=sheet[51];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_global",key);
			}
		}

		conf.cfg_global=Laya.cfg_global=cfg_global;	

		class cfg_goods{
			constructor (){
				//this.id=0;
				//this.name=null;
				//this.icon=null;
				//this.replace_res=null;
				//this.type=0;
				//this.typeID=0;
				//this.waceIcon=null;
				//this.replace_reward_id=0;
				//this.replace_reward_count=0;
				//this.packed=0;
				//this.pack_index=0;
				//this.can_use=0;
				//this.use_param=0;
				//this.is_gift=0;
				//this.is_alive=0;
				//this.desc=null;
			}
			static init (sheet){
				var a=new cfg_goods();
				a.id=sheet[0];
				a.name=sheet[1];
				a.icon=sheet[2];
				a.replace_res=sheet[3];
				a.type=sheet[4];
				a.typeID=sheet[5];
				a.waceIcon=sheet[6];
				a.replace_reward_id=sheet[7];
				a.replace_reward_count=sheet[8];
				a.packed=sheet[9];
				a.pack_index=sheet[10];
				a.can_use=sheet[11];
				a.use_param=sheet[12];
				a.is_gift=sheet[13];
				a.is_alive=sheet[14];
				a.desc=sheet[15];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_goods",key);
			}
		}

		conf.cfg_goods=Laya.cfg_goods=cfg_goods;	

		class cfg_hId{
			constructor (){
				//this.id=0;
				//this.txtColor=null;
				//this.txtContent=null;
				//this.txtType=0;
			}
			static init (sheet){
				var a=new cfg_hId();
				a.id=sheet[0];
				a.txtColor=sheet[1];
				a.txtContent=sheet[2];
				a.txtType=sheet[3];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_hId",key);
			}
		}

		conf.cfg_hId=Laya.cfg_hId=cfg_hId;	

		class cfg_hourse{
			constructor (){
				//this.id=0;
				//this.txt1=0;
				//this.txt2=0;
				//this.txt3=0;
				//this.txt4=0;
				//this.txt5=0;
				//this.txt6=0;
				//this.txt7=0;
				//this.delay=0;
			}
			static init (sheet){
				var a=new cfg_hourse();
				a.id=sheet[0];
				a.txt1=sheet[1];
				a.txt2=sheet[2];
				a.txt3=sheet[3];
				a.txt4=sheet[4];
				a.txt5=sheet[5];
				a.txt6=sheet[6];
				a.txt7=sheet[7];
				a.delay=sheet[8];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_hourse",key);
			}
		}

		conf.cfg_hourse=Laya.cfg_hourse=cfg_hourse;	

		class cfg_level{
			constructor (){
				//this.id=0;
				//this.name=null;
				//this.exp=0;
				//this.awardId=null;
				//this.awardCount=null;
			}
			static init (sheet){
				var a=new cfg_level();
				a.id=sheet[0];
				a.name=sheet[1];
				a.exp=sheet[2];
				a.awardId=sheet[3];
				a.awardCount=sheet[4];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_level",key);
			}
		}

		conf.cfg_level=Laya.cfg_level=cfg_level;	

		class cfg_loadtip{
			constructor (){
				//this.id=0;
				//this.txtContent=null;
			}
			static init (sheet){
				var a=new cfg_loadtip();
				a.id=sheet[0];
				a.txtContent=sheet[1];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_loadtip",key);
			}
		}

		conf.cfg_loadtip=Laya.cfg_loadtip=cfg_loadtip;	

		class cfg_loadtip_weixin{
			constructor (){
				//this.id=0;
				//this.txtContent=null;
			}
			static init (sheet){
				var a=new cfg_loadtip_weixin();
				a.id=sheet[0];
				a.txtContent=sheet[1];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_loadtip_weixin",key);
			}
		}

		conf.cfg_loadtip_weixin=Laya.cfg_loadtip_weixin=cfg_loadtip_weixin;	

		class cfg_novice_guide{
			constructor (){
				//this.id=0;
				//this.type=null;
				//this.click_name=null;
				//this.click_event=null;
				//this.step_box_name=null;
				//this.step_list_name=null;
				//this.effect_name1=null;
			}
			static init (sheet){
				var a=new cfg_novice_guide();
				a.id=sheet[0];
				a.type=sheet[1];
				a.click_name=sheet[2];
				a.click_event=sheet[3];
				a.step_box_name=sheet[4];
				a.step_list_name=sheet[5];
				a.effect_name1=sheet[6];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_novice_guide",key);
			}
		}

		conf.cfg_novice_guide=Laya.cfg_novice_guide=cfg_novice_guide;	

		class cfg_onLine{
			constructor (){
				//this.id=0;
				//this.rewardID=0;
				//this.receiveTime=0;
				//this.rewardCount=0;
				//this.vipRank=0;
				//this.vipTimes=null;
			}
			static init (sheet){
				var a=new cfg_onLine();
				a.id=sheet[0];
				a.rewardID=sheet[1];
				a.receiveTime=sheet[2];
				a.rewardCount=sheet[3];
				a.vipRank=sheet[4];
				a.vipTimes=sheet[5];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_onLine",key);
			}
		}

		conf.cfg_onLine=Laya.cfg_onLine=cfg_onLine;	

		class cfg_pearl{
			constructor (){
				//this.id=0;
			}
			static init (sheet){
				var a=new cfg_pearl();
				a.id=sheet[0];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_pearl",key);
			}
		}

		conf.cfg_pearl=Laya.cfg_pearl=cfg_pearl;	

		class cfg_raffle{
			constructor (){
				//this.id=0;
			}
			static init (sheet){
				var a=new cfg_raffle();
				a.id=sheet[0];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_raffle",key);
			}
		}

		conf.cfg_raffle=Laya.cfg_raffle=cfg_raffle;	

		class cfg_rech_award{
			constructor (){
				//this.id=0;
				//this.title=null;
				//this.rechSum=0;
				//this.reward_ids=null;
				//this.reward_nums=null;
				//this.remark=null;
			}
			static init (sheet){
				var a=new cfg_rech_award();
				a.id=sheet[0];
				a.title=sheet[1];
				a.rechSum=sheet[2];
				a.reward_ids=sheet[3];
				a.reward_nums=sheet[4];
				a.remark=sheet[5];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_rech_award",key);
			}
		}

		conf.cfg_rech_award=Laya.cfg_rech_award=cfg_rech_award;	

		class cfg_register{
			constructor (){
				//this.id=0;
				//this.weekName=null;
				//this.rewardID=0;
				//this.rewardCount=0;
				//this.replace_reward_id=0;
				//this.replace_reward_count=0;
				//this.db_vip=0;
			}
			static init (sheet){
				var a=new cfg_register();
				a.id=sheet[0];
				a.weekName=sheet[1];
				a.rewardID=sheet[2];
				a.rewardCount=sheet[3];
				a.replace_reward_id=sheet[4];
				a.replace_reward_count=sheet[5];
				a.db_vip=sheet[6];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_register",key);
			}
		}

		conf.cfg_register=Laya.cfg_register=cfg_register;	

		class cfg_rewardDetails{
			constructor (){
				//this.id=0;
				//this.rewardName=null;
				//this.award=null;
				//this.rewardUrl=null;
				//this.weight=0;
				//this.goodId=0;
				//this.red_pack_activity_Name=null;
				//this.red_pack_activity_award=null;
				//this.red_pack_activity_rewardUrl=null;
				//this.red_pack_activity_weight=0;
				//this.red_pack_activity_goodId=0;
				//this.com_fish_coin=0;
				//this.condition=null;
				//this.re_rewardName=null;
				//this.re_award=null;
				//this.re_rewardUrl=null;
				//this.reward_type=null;
			}
			static init (sheet){
				var a=new cfg_rewardDetails();
				a.id=sheet[0];
				a.rewardName=sheet[1];
				a.award=sheet[2];
				a.rewardUrl=sheet[3];
				a.weight=sheet[4];
				a.goodId=sheet[5];
				a.red_pack_activity_Name=sheet[6];
				a.red_pack_activity_award=sheet[7];
				a.red_pack_activity_rewardUrl=sheet[8];
				a.red_pack_activity_weight=sheet[9];
				a.red_pack_activity_goodId=sheet[10];
				a.com_fish_coin=sheet[11];
				a.condition=sheet[12];
				a.re_rewardName=sheet[13];
				a.re_award=sheet[14];
				a.re_rewardUrl=sheet[15];
				a.reward_type=sheet[16];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_rewardDetails",key);
			}
		}

		conf.cfg_rewardDetails=Laya.cfg_rewardDetails=cfg_rewardDetails;	

		class cfg_rewardType{
			constructor (){
				//this.id=null;
				//this.firstId=null;
				//this.secondId=null;
				//this.threeId=null;
				//this.fourId=null;
				//this.fiveId=null;
				//this.sixId=null;
			}
			static init (sheet){
				var a=new cfg_rewardType();
				a.id=sheet[0];
				a.firstId=sheet[1];
				a.secondId=sheet[2];
				a.threeId=sheet[3];
				a.fourId=sheet[4];
				a.fiveId=sheet[5];
				a.sixId=sheet[6];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_rewardType",key);
			}
		}

		conf.cfg_rewardType=Laya.cfg_rewardType=cfg_rewardType;	

		class cfg_robot{
			constructor (){
				//this.id=0;
			}
			static init (sheet){
				var a=new cfg_robot();
				a.id=sheet[0];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_robot",key);
			}
		}

		conf.cfg_robot=Laya.cfg_robot=cfg_robot;	

		class cfg_robotname{
			constructor (){
				//this.id=0;
			}
			static init (sheet){
				var a=new cfg_robotname();
				a.id=sheet[0];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_robotname",key);
			}
		}

		conf.cfg_robotname=Laya.cfg_robotname=cfg_robotname;	

		class cfg_scene{
			constructor (){
				//this.id=0;
				//this.play_id=0;
				//this.robot_time=null;
				//this.type=0;
				//this.fish_arr=null;
				//this.skills=null;
				//this.smallfish_arr=null;
				//this.bigfish_arr=null;
				//this.unlock=0;
				//this.robot_mag=null;
				//this.max_mag=0;
				//this.min_mag=0;
				//this.pri=0;
				//this.is_basic=0;
				//this.form=0;
				//this.form_arr=null;
				//this.form_arr_down=null;
				//this.play_group=0;
				//this.nextArea=0;
				//this.img=null;
				//this.sceneBgImg=null;
				//this.sceneBgImg_down=null;
				//this.backMusic=null;
				//this.levelname=null;
				//this.imageurl=null;
				//this.sceneType=0;
				//this.msgTip=null;
				//this.unlockImage=null;
				//this.web=NaN;
				//this.range=0;
				//this.msg_tip_id=0;
				//this.spine_name=null;
				//this.spine_name_down=null;
				//this.resource=0;
				//this.description=null;
				//this.show_ani=0;
				//this.hidden_battery_level=0;
				//this.doubleRate=null;
			}
			static init (sheet){
				var a=new cfg_scene();
				a.id=sheet[0];
				a.play_id=sheet[1];
				a.robot_time=sheet[2];
				a.type=sheet[3];
				a.fish_arr=sheet[4];
				a.skills=sheet[5];
				a.smallfish_arr=sheet[6];
				a.bigfish_arr=sheet[7];
				a.unlock=sheet[8];
				a.robot_mag=sheet[9];
				a.max_mag=sheet[10];
				a.min_mag=sheet[11];
				a.pri=sheet[12];
				a.is_basic=sheet[13];
				a.form=sheet[14];
				a.form_arr=sheet[15];
				a.form_arr_down=sheet[16];
				a.play_group=sheet[17];
				a.nextArea=sheet[18];
				a.img=sheet[19];
				a.sceneBgImg=sheet[20];
				a.sceneBgImg_down=sheet[21];
				a.backMusic=sheet[22];
				a.levelname=sheet[23];
				a.imageurl=sheet[24];
				a.sceneType=sheet[25];
				a.msgTip=sheet[26];
				a.unlockImage=sheet[27];
				a.web=sheet[28];
				a.range=sheet[29];
				a.msg_tip_id=sheet[30];
				a.spine_name=sheet[31];
				a.spine_name_down=sheet[32];
				a.resource=sheet[33];
				a.description=sheet[34];
				a.show_ani=sheet[35];
				a.hidden_battery_level=sheet[36];
				a.doubleRate=sheet[37];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_scene",key);
			}
		}

		conf.cfg_scene=Laya.cfg_scene=cfg_scene;	

		class cfg_share{
			constructor (){
				//this.id=0;
				//this.txt=null;
				//this.image=null;
			}
			static init (sheet){
				var a=new cfg_share();
				a.id=sheet[0];
				a.txt=sheet[1];
				a.image=sheet[2];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_share",key);
			}
		}

		conf.cfg_share=Laya.cfg_share=cfg_share;	

		class cfg_shareLottery{
			constructor (){
				//this.id=0;
				//this.rewardId=0;
				//this.rewardCount=0;
				//this.weight=0;
				//this.rewardId_Junior=0;
				//this.rewardCount_Junior=0;
				//this.rewardId_Medium=0;
				//this.rewardCount_Medium=0;
				//this.activity_rewardId=0;
				//this.activity_rewardCount=0;
				//this.activity_weight=0;
				//this.probability_junior=null;
				//this.description_junior=null;
				//this.probability_medium=null;
				//this.description_medium=null;
			}
			static init (sheet){
				var a=new cfg_shareLottery();
				a.id=sheet[0];
				a.rewardId=sheet[1];
				a.rewardCount=sheet[2];
				a.weight=sheet[3];
				a.rewardId_Junior=sheet[4];
				a.rewardCount_Junior=sheet[5];
				a.rewardId_Medium=sheet[6];
				a.rewardCount_Medium=sheet[7];
				a.activity_rewardId=sheet[8];
				a.activity_rewardCount=sheet[9];
				a.activity_weight=sheet[10];
				a.probability_junior=sheet[11];
				a.description_junior=sheet[12];
				a.probability_medium=sheet[13];
				a.description_medium=sheet[14];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_shareLottery",key);
			}
		}

		conf.cfg_shareLottery=Laya.cfg_shareLottery=cfg_shareLottery;	

		class cfg_shareLottery_rule{
			constructor (){
				//this.id=0;
				//this.rewardId=0;
				//this.lottry_goods=null;
				//this.lottry_probability=null;
				//this.lottry_description=null;
				//this.lottry_id=0;
			}
			static init (sheet){
				var a=new cfg_shareLottery_rule();
				a.id=sheet[0];
				a.rewardId=sheet[1];
				a.lottry_goods=sheet[2];
				a.lottry_probability=sheet[3];
				a.lottry_description=sheet[4];
				a.lottry_id=sheet[5];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_shareLottery_rule",key);
			}
		}

		conf.cfg_shareLottery_rule=Laya.cfg_shareLottery_rule=cfg_shareLottery_rule;	

		class cfg_shieldWord{
			constructor (){
				//this.id=0;
				//this.sensitiveword=null;
			}
			static init (sheet){
				var a=new cfg_shieldWord();
				a.id=sheet[0];
				a.sensitiveword=sheet[1];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_shieldWord",key);
			}
		}

		conf.cfg_shieldWord=Laya.cfg_shieldWord=cfg_shieldWord;	

		class cfg_skill{
			constructor (){
				//this.id=0;
				//this.name=null;
				//this.icon=null;
				//this.skill_type=0;
				//this.cd=0;
				//this.lasttime=0;
				//this.coin_range=null;
				//this.need_prop=0;
				//this.firing_rate=NaN;
				//this.speed_rate=NaN;
				//this.sound=null;
				//this.show=null;
				//this.income=0;
			}
			static init (sheet){
				var a=new cfg_skill();
				a.id=sheet[0];
				a.name=sheet[1];
				a.icon=sheet[2];
				a.skill_type=sheet[3];
				a.cd=sheet[4];
				a.lasttime=sheet[5];
				a.coin_range=sheet[6];
				a.need_prop=sheet[7];
				a.firing_rate=sheet[8];
				a.speed_rate=sheet[9];
				a.sound=sheet[10];
				a.show=sheet[11];
				a.income=sheet[12];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_skill",key);
			}
		}

		conf.cfg_skill=Laya.cfg_skill=cfg_skill;	

		class cfg_task{
			constructor (){
				//this.id=0;
				//this.task_type=0;
				//this.next_task=0;
				//this.task_name=null;
				//this.task_name_down=null;
				//this.task_value_n=0;
				//this.task_value_f=0;
				//this.reward_item_ids=null;
				//this.reward_item_nums=null;
				//this.img_url=null;
				//this.img_url_down=null;
				//this.scene_id=0;
				//this.activity_item_ids=null;
				//this.activity_item_nums=null;
				//this.worldcup_item_ids=null;
				//this.worldcup_item_nums=null;
			}
			static init (sheet){
				var a=new cfg_task();
				a.id=sheet[0];
				a.task_type=sheet[1];
				a.next_task=sheet[2];
				a.task_name=sheet[3];
				a.task_name_down=sheet[4];
				a.task_value_n=sheet[5];
				a.task_value_f=sheet[6];
				a.reward_item_ids=sheet[7];
				a.reward_item_nums=sheet[8];
				a.img_url=sheet[9];
				a.img_url_down=sheet[10];
				a.scene_id=sheet[11];
				a.activity_item_ids=sheet[12];
				a.activity_item_nums=sheet[13];
				a.worldcup_item_ids=sheet[14];
				a.worldcup_item_nums=sheet[15];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_task",key);
			}
		}

		conf.cfg_task=Laya.cfg_task=cfg_task;	

		class cfg_task_daily{
			constructor (){
				//this.id=0;
			}
			static init (sheet){
				var a=new cfg_task_daily();
				a.id=sheet[0];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_task_daily",key);
			}
		}

		conf.cfg_task_daily=Laya.cfg_task_daily=cfg_task_daily;	

		class cfg_task_new{
			constructor (){
				//this.id=0;
				//this.title=null;
				//this.task_ids=null;
				//this.reward_item_ids=null;
				//this.reward_item_nums=null;
			}
			static init (sheet){
				var a=new cfg_task_new();
				a.id=sheet[0];
				a.title=sheet[1];
				a.task_ids=sheet[2];
				a.reward_item_ids=sheet[3];
				a.reward_item_nums=sheet[4];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_task_new",key);
			}
		}

		conf.cfg_task_new=Laya.cfg_task_new=cfg_task_new;	

		class cfg_task_red_reward{
			constructor (){
				//this.id=0;
				//this.taskNum=0;
				//this.reward_money_1=NaN;
				//this.reward_money_2=NaN;
				//this.reward_money_3=NaN;
				//this.reward_ratio_1=NaN;
				//this.reward_ratio_2=NaN;
				//this.reward_ratio_3=NaN;
			}
			static init (sheet){
				var a=new cfg_task_red_reward();
				a.id=sheet[0];
				a.taskNum=sheet[1];
				a.reward_money_1=sheet[2];
				a.reward_money_2=sheet[3];
				a.reward_money_3=sheet[4];
				a.reward_ratio_1=sheet[5];
				a.reward_ratio_2=sheet[6];
				a.reward_ratio_3=sheet[7];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_task_red_reward",key);
			}
		}

		conf.cfg_task_red_reward=Laya.cfg_task_red_reward=cfg_task_red_reward;	

		class cfg_task_vitality{
			constructor (){
				//this.id=0;
				//this.need_vitality=0;
				//this.reward_item_ids=null;
				//this.reward_item_nums=null;
			}
			static init (sheet){
				var a=new cfg_task_vitality();
				a.id=sheet[0];
				a.need_vitality=sheet[1];
				a.reward_item_ids=sheet[2];
				a.reward_item_nums=sheet[3];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_task_vitality",key);
			}
		}

		conf.cfg_task_vitality=Laya.cfg_task_vitality=cfg_task_vitality;	

		class cfg_tip{
			constructor (){
				//this.id=0;
				//this.txtContent=null;
			}
			static init (sheet){
				var a=new cfg_tip();
				a.id=sheet[0];
				a.txtContent=sheet[1];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_tip",key);
			}
		}

		conf.cfg_tip=Laya.cfg_tip=cfg_tip;	

		class cfg_upgradeRed{
			constructor (){
				//this.id=0;
				//this.title=null;
				//this.level=0;
				//this.reward_ids=null;
				//this.reward_nums=null;
				//this.remark=null;
			}
			static init (sheet){
				var a=new cfg_upgradeRed();
				a.id=sheet[0];
				a.title=sheet[1];
				a.level=sheet[2];
				a.reward_ids=sheet[3];
				a.reward_nums=sheet[4];
				a.remark=sheet[5];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_upgradeRed",key);
			}
		}

		conf.cfg_upgradeRed=Laya.cfg_upgradeRed=cfg_upgradeRed;	

		class cfg_wheel{
			constructor (){
				//this.id=0;
				//this.txt_share_title=null;
				//this.txt_share_content=null;
				//this.txt_rule_title=null;
				//this.txt_rule1=null;
			}
			static init (sheet){
				var a=new cfg_wheel();
				a.id=sheet[0];
				a.txt_share_title=sheet[1];
				a.txt_share_content=sheet[2];
				a.txt_rule_title=sheet[3];
				a.txt_rule1=sheet[4];
				return a;
			}
			static instance (key){
				return ConfigManager.getConfObject("cfg_wheel",key);
			}
		}

		conf.cfg_wheel=Laya.cfg_wheel=cfg_wheel;	

		class manifest{
			constructor(){}
		}

		conf.manifest=Laya.manifest=manifest;
		Laya.static(manifest,
		['cfg_names',function(){return this.cfg_names={
				"cfg_anicollision":cfg_anicollision,
				"cfg_bullet":cfg_bullet,
				"cfg_bulletmodel":cfg_bulletmodel,
				"cfg_actsign":cfg_actsign,
				"cfg_battery":cfg_battery,
				"cfg_battery_skin":cfg_battery_skin,
				"cfg_code":cfg_code,
				"cfg_commodity":cfg_commodity,
				"cfg_first_charge":cfg_first_charge,
				"cfg_fish":cfg_fish,
				"cfg_fishform":cfg_fishform,
				"cfg_fishgroup":cfg_fishgroup,
				"cfg_fishgrouppath":cfg_fishgrouppath,
				"cfg_fishshoal":cfg_fishshoal,
				"cfg_global":cfg_global,
				"cfg_goods":cfg_goods,
				"cfg_hId":cfg_hId,
				"cfg_hourse":cfg_hourse,
				"cfg_level":cfg_level,
				"cfg_loadtip":cfg_loadtip,
				"cfg_loadtip_weixin":cfg_loadtip_weixin,
				"cfg_novice_guide":cfg_novice_guide,
				"cfg_onLine":cfg_onLine,
				"cfg_pearl":cfg_pearl,
				"cfg_raffle":cfg_raffle,
				"cfg_rech_award":cfg_rech_award,
				"cfg_register":cfg_register,
				"cfg_robot":cfg_robot,
				"cfg_robotname":cfg_robotname,
				"cfg_scene":cfg_scene,
				"cfg_share":cfg_share,
				"cfg_shareLottery":cfg_shareLottery,
				"cfg_shareLottery_rule":cfg_shareLottery_rule,
				"cfg_shieldWord":cfg_shieldWord,
				"cfg_skill":cfg_skill,
				"cfg_task":cfg_task,
				"cfg_task_daily":cfg_task_daily,
				"cfg_task_new":cfg_task_new,
				"cfg_task_vitality":cfg_task_vitality,
				"cfg_tip":cfg_tip,
				"cfg_upgradeRed":cfg_upgradeRed,
				"cfg_wheel":cfg_wheel,
				"cfg_content":cfg_content,
				"cfg_rewardDetails":cfg_rewardDetails,
				"cfg_rewardType":cfg_rewardType,
		};}

		]);	window.control={};

		class ActivityC{
			constructor (){
				//this.is_reward=NaN;
				//this.teams=null;
				//this.worldcup_info=null;
				GameEventDispatch.instance.on(String(32000),this,this.syncActivityData);
				GameEventDispatch.instance.on(String(32001),this,this.syncActivityStatus);
				GameEventDispatch.instance.on(String(36001),this,this.endWorldAcceptBattery);
				GameEventDispatch.instance.on(String(36004),this,this.syncWorldcupCoin);
				GameEventDispatch.instance.on(String(36009),this,this.bettingSuccess);
				GameEventDispatch.instance.on(String(36012),this,this.endAcceptReward);
				GameEventDispatch.instance.on(String(36016),this,this.endSyncJackpotInfo);
				GameEventDispatch.instance.on(String(36007),this,this.endWorldCupExchange);
				GameEventDispatch.instance.on(String(40006),this,this.actRegister);
				GameEventDispatch.instance.on(String(40008),this,this.registerState);
				GameEventDispatch.instance.on(String(40009),this,this.exchangeTime);
				GameEventDispatch.instance.on(String(32003),this,this.actCurrency);
				GameEventDispatch.instance.on(String(40011),this,this.exchangeReturn);
				GameEventDispatch.instance.on(String(40012),this,this.giftData);
				GameEventDispatch.instance.on(String(40014),this,this.giftReturn);
				GameEventDispatch.instance.on(String(40015),this,this.synAirBalloonRankData);
				GameEventDispatch.instance.on(String(40019),this,this.synAirBalloonAccountData);
				GameEventDispatch.instance.on(String(40017),this,this.synAirBalloonGameData);
				GameEventDispatch.instance.on(String(40020),this,this.synAirBalloonGameState);
				GameEventDispatch.instance.on(String(40023),this,this.updFesDailyGiftInfo);
				GameEventDispatch.instance.on(String(40022),this,this.syncExchangeTime);
			}
			// Laya.timer.loop(10000,this,loopSyncActivity);
			syncExchangeTime(){
				WebSocketManager.instance.send(40021,{});
				}loopSyncActivity(){
				this.loopSyncActivityByName('worldcup2');
				}loopSyncActivityByName(activity){
				var extraTime=ActivityM.instance.getActivityExtraTime(activity);
				var now=(new Date().getTime())/ 1000;
				console.log("extraTime:"+extraTime);
				console.log("now:"+now);
				if (ActivityM.instance.activityIsExtraTime(activity)){
					if (now > extraTime){
						if (!ActivityM.instance.activityIsDown(activity)){
							console.log("sendSync");
							WebSocketManager.instance.send(32002,{});
						}
					}
				}
				}endWorldCupExchange(re){
				if (0==re.code){
					GameEventDispatch.instance.event("OnEndWorldCupExchange");
					}else if (1==re.code){
					GameEventDispatch.instance.event("MsgTipContent","兑换未开启");
					}else if (2==re.code){
					GameEventDispatch.instance.event("MsgTipContent","足球不足");
					}else if (3==re.code){
					GameEventDispatch.instance.event("MsgTipContent","兑换超过限额");
					}else if (10==re.code){
					GameEventDispatch.instance.event("MsgTipContent","您已经拥有大力神炮");
					}else{
					GameTools.dealCode(re.code);
				}
				}syncWorldcupCoin(data){
				console.log("syncWorldcupCoin");
				console.log(data);
				RoleInfoM.instance.worldcup_coin=data['worldcup_coin'];
				GameEventDispatch.instance.event("EndSyncWorldCupCoin");
				}endWorldAcceptBattery(data){
				if (0==data.code){
					RoleInfoM.instance.worldcup_battery_accepted=1;
					GameEventDispatch.instance.event("MsgTipContent","领取成功");
					GameEventDispatch.instance.event("EndAcceptWorldCup");
					}else if (1==data.code){
					GameEventDispatch.instance.event("MsgTipContent","无法领取");
					}else if (2==data.code){
					GameEventDispatch.instance.event("MsgTipContent","已经领取");
					}else if (3==data.code){
					GameEventDispatch.instance.event("MsgTipContent","需要月卡");
					}else{
					GameTools.dealCode(data.code);
				}
				}syncActivityData(result){
				ActivityM.instance.activity_data=result ["list"];
				ActivityM.instance.setCommonImage();
				GameEventDispatch.instance.event("SyncActivityData");
				}syncActivityStatus(result){
				ActivityM.instance.activity_status=result["activity_status"];
				ActivityM.instance.sub_activity_status=result["sub_activity_status"];
				GameEventDispatch.instance.event("SyncActivityStatus");
			}
			//4-11
			bettingSuccess(re){
				if (0==re.code){
					GameEventDispatch.instance.event("MsgTipContent","下注成功");
					GameEventDispatch.instance.event("stcBettingSuccess");
					}else{
				}
			}
			// TODO:处理其他错误情况
			actRegister(re){
				ActivityM.instance.actRegister_data=re ["data"];
				ActivityM.instance.actRegister_time=re ["day"];
				GameEventDispatch.instance.event("ActRegister");
				}exchangeReturn(data){
				if (0==data.code){
					GameEventDispatch.instance.event("MsgTipContent","兑换成功");
					this.refreshExchangeInterval();
					Laya.timer.loop(1000,this,this.refreshExchangeInterval);
					}else if (1==data.code){
					GameEventDispatch.instance.event("MsgTipContent","活动未开启或无效");
					}else if (2==data.code){
					GameEventDispatch.instance.event("MsgTipContent","活动币不足");
					}else if (3==data.code){
					GameEventDispatch.instance.event("MsgTipContent","兑换剩余次数不足");
					}else if (4==data.code){
					GameEventDispatch.instance.event("MsgTipContent","活动已关闭");
					}else if (5==data.code){
					GameEventDispatch.instance.event("MsgTipContent","参数错误");
					}else if (6==data.code){
					GameEventDispatch.instance.event("MsgTipContent","30s内不能再次购买");
					}else if (100==data.code){
					GameEventDispatch.instance.event("MsgTipContent",data.msg);
					}else{
					GameTools.dealCode(data.code);
				}
				}refreshExchangeInterval(){
				if (ActivityM.instance.exchangeInterval <=0){
					ActivityM.instance.exchangeInterval=30;
					}else{
					ActivityM.instance.exchangeInterval-=1;
				}
				if (ActivityM.instance.exchangeInterval <=0){
					Laya.timer.clear(this,this.refreshExchangeInterval);
				}
				GameEventDispatch.instance.event("ExchangeInterval");
				}giftReturn(data){
				if (0==data.code){
					GameEventDispatch.instance.event("MsgTipContent","兑换成功");
					}else if (1==data.code){
					GameEventDispatch.instance.event("MsgTipContent","活动已关闭");
					}else if (2==data.code){
					GameEventDispatch.instance.event("MsgTipContent","已兑换");
					}else if (3==data.code){
					GameEventDispatch.instance.event("MsgTipContent","无活动数据");
					}else if (4==data.code){
					GameEventDispatch.instance.event("MsgTipContent","活动币不足");
					}else if (5==data.code){
					GameEventDispatch.instance.event("MsgTipContent","兑换错误");
					}else{
					GameTools.dealCode(data.code);
				}
				}actCurrency(data){
				ActivityM.instance.actCurrency_data=data ["user_at_coin"];
				GameEventDispatch.instance.event("ActCurrency");
				}exchangeTime(data){
				ActivityM.instance.exchange_times=data ["exchange_times"];
				GameEventDispatch.instance.event("ExchangeTime");
				}giftData(data){
				ActivityM.instance.is_exchange=data ["is_exchange"];
				ActivityM.instance.cdkeys_id=data ["cdkeys"];
				GameEventDispatch.instance.event("ActCdk");
				}registerState(data){
				if (0==data.code){
					GameEventDispatch.instance.event("MsgTipContent","签到成功");
					}else if (1==data.code){
					GameEventDispatch.instance.event("MsgTipContent","请勿重复签到");
					}else if (2==data.code){
					GameEventDispatch.instance.event("MsgTipContent","签到状态错误");
					}else{
					GameTools.dealCode(data.code);
				}
				}endAcceptReward(re){
				if (0==re.code){
					WebSocketManager.instance.send(36014,{});
					}else if (1==re.code){
					GameEventDispatch.instance.event("MsgTipContent","活动未开启");
					}else if (3==re.code){
					GameEventDispatch.instance.event("MsgTipContent","已领奖或未中奖");
					}else if (4==re.code){
					GameEventDispatch.instance.event("MsgTipContent","活动未结束");
					}else if (2==re.code){
					GameEventDispatch.instance.event("MsgTipContent","无人中奖");
					}else{
					GameTools.dealCode(re.code);
				}
				}endSyncJackpotInfo(re){
				ActivityM.instance.is_reward=re['is_reward'];
				ActivityM.instance.bet_teams=re['teams'];
				ActivityM.instance.worldcup_info=re['worldcup_info'];
				ActivityM.instance.is_receive=re['is_receive'];
				GameEventDispatch.instance.event("OnSyncBetData");
				}synAirBalloonRankData(res){
				ActivityM.instance.airBalloonRank=res;
				}synAirBalloonAccountData(res){
				if (res.code==0){
					GameEventDispatch.instance.event("CloseAccount",res);
					}else if (res.code==1){
					GameEventDispatch.instance.event("MsgTipContent","结算分错误");
					}else if (res.code==2){
					GameEventDispatch.instance.event("MsgTipContent","有未结算的分");
					}else if (res.code==3){
					GameEventDispatch.instance.event("MsgTipContent","有未结算的分");
					}else if (res.code==10){
					GameEventDispatch.instance.event("MsgTipContent","其他错误");
					}else{
					GameTools.dealCode(res.code);
				}
				}synAirBalloonGameData(res){
				if (res.code==0){
					}else if (res.code==1){
					GameEventDispatch.instance.event("MsgTipContent","只能扎6个");
					}else if (res.code==2){
					GameEventDispatch.instance.event("MsgTipContent","活动数据错误");
					}else if (res.code==3){
					GameEventDispatch.instance.event("MsgTipContent","活动已结束");
					}else if (res.code==4){
					GameEventDispatch.instance.event("MsgTipContent","活动币不足");
					}else if (res.code==10){
					GameEventDispatch.instance.event("MsgTipContent","参数错误");
					}else{
					GameTools.dealCode(res.code);
				}
				}synAirBalloonGameState(res){
				ActivityM.instance.setHitBalloonArr(res);
				}updFesDailyGiftInfo(res){
				ActivityM.instance.updFesDailyGiftInfo(res);
				GameEventDispatch.instance.event("UpdFesDailyGift");
			}
			static get instance (){
				return ActivityC._instance || (ActivityC._instance=new ActivityC());
			}
		}

		control.ActivityC=Laya.ActivityC=ActivityC;
		ActivityC._instance=null;	

		class AdC{
			constructor (){
				GameEventDispatch.instance.on("ShowAd",this,this.showAd);
			}
			showAd(){
				if (ENV.isShowBannerAndAD()){
					if (WxC.isInMiniGame()){
						WxC.instance.showVideoAD();
					}
				}
			}
			static get instance (){
				return AdC._instance || (AdC._instance=new AdC());
			}
		}

		control.AdC=Laya.AdC=AdC;
		AdC._instance=null;	

		class AiqiyiC{
			constructor (){}
			DataSendMessge(){
				if(StartParam.instance.getParam("platform")=="aiqiyi"){
					if(GameTools.getUrlParamValue('is_new')==1){
						var objRole={
							type:'dataCount',
							msg :'role'
						};
						this.postData(objRole);
					};
					var objSer={
						type:'dataCount',
						msg :'server'
					};
					this.postData(objSer);
					var objStart={
						type:'dataCount',
						msg :'start'
					};
					this.postData(objStart);
				}
				}postData(obj){
				var win=window;
				var arr=[
				"http://togame.pps.tv",
				"http://togame.iqiyi.com",
				"http://playgame.pps.tv",
				"http://playgame.iqiyi.com",
				"http://playgame2.iqiyi.com"];
				for (var i=0;i < 5;i++){
					var url=arr[i];
					win.top.postMessage(obj,url);
				}
			}
			static get instance (){
				return AiqiyiC._instance || (AiqiyiC._instance=new AiqiyiC());
			}
		}

		control.AiqiyiC=Laya.AiqiyiC=AiqiyiC;
		AiqiyiC._instance=null;	

		class BankC{
			constructor (){
				this.times=0;
				GameEventDispatch.instance.on(String(33003),this,this.end_deposit_in);
				GameEventDispatch.instance.on(String(33005),this,this.end_take_out);
				GameEventDispatch.instance.on(String(33006),this,this.syncBankInfo);
				GameEventDispatch.instance.on(String(33013),this,this.sync_bank_info);
				GameEventDispatch.instance.on(String(33015),this,this.receive_sms_code);
				GameEventDispatch.instance.on(String(33021),this,this.end_bind_tel);
				GameEventDispatch.instance.on(String(10028),this,this.synConfigOnOff);
			}
			synConfigOnOff(res){
				if (res['bank_max_barbette']){
					LoginInfoM.instance.openBankBatteryLevel=res['bank_max_barbette'];
				}
				if (res['certification_switch'] || Number(res['certification_switch'])==0){
					var certification=LoginM.instance.isCompleteCertification;
					LoginInfoM.instance.openCertification=res['certification_switch'];
					this.times++;
					if (res['certification_switch']==1 && this.times > 1 && certification==0){
						if (CertificationM.instance.isOpenCertification()){
							var certInfo=new CertificationInfo();
							certInfo.openFrom="login";
							CertificationM.instance.info=certInfo;
							CertificationM.instance.OpenCertification();
						}
					}
				}
				if (res["name_filter"]){
					LoginInfoM.instance.nameFilter=res["name_filter"];
					GameEventDispatch.instance.event("UpdateProfile");
				}
				if (res["redpack_cfg"]){
					if (res["redpack_cfg"]["wx"]){
						ExchangeM.instance.wx_wxExchangeOpen=res["redpack_cfg"]["wx"]["wx_open"];
						ExchangeM.instance.wx_alipayExchangeOpen=res["redpack_cfg"]["wx"]["ali_open"];
					}
					if (res["redpack_cfg"]["h5"]){
						ExchangeM.instance.h5_wxExchangeOpen=res["redpack_cfg"]["h5"]["wx_open"];
						ExchangeM.instance.h5_alipayExchangeOpen=res["redpack_cfg"]["h5"]["ali_open"];
					}
				}
				if (res['friend_limit_num']){
					FriendM.instance.friendLimit=res['friend_limit_num'];
				}
				if (res['contest_open'] || Number(res['contest_open'])==0){
					MatchM.instance.contestOpen=res['contest_open'];
				}
				}receive_sms_code(data){
				if (0==data.code){
					GameTools.showTip("发送验证码成功");
					}else{
					GameTools.showTip("发送验证码失败");
				}
				}sync_bank_info(data){
				if (data.code==0){
					RoleInfoM.instance.is_bind_tel=data['is_bind_bank'];
					RoleInfoM.instance.isQuickRegister=data['is_quick_reg'];
					if (data['is_bind_bank']==1){
						RoleInfoM.instance.tel=data['tel'];
						RoleInfoM.instance.bank_gold=data['bank_gold'];
						RoleInfoM.instance.jjhNumber=data['jjhaccounts'];
						RoleInfoM.instance.jjhId=data['jjhuserid'];
						StartParam.instance.parseParam({
							jjhid:data['jjhuserid']
						});
						GameEventDispatch.instance.event("SyncBankCoin");
						if (CertificationM.instance.info){
							UiManager.instance.loadView("Certification",null,"SMALL_TO_BIG");
						}
						}else{
						if (CertificationM.instance.info){
							UiManager.instance.loadView("Certification",null,"SMALL_TO_BIG");
						}
					}
					}else if ("E1"==data.code){
					if (ENV.openQuickRegister && data.is_show_tip==1 && data.data.is_quick_reg==1){
						RoleInfoM.instance.jjhNumber=data.data['jjhaccounts'];
						RoleInfoM.instance.jjhId=data.data['jjhuserid'];
						UiManager.instance.loadView("QuickRegister");
						GameEventDispatch.instance.event("MsgTipContent",data.tips);
					}
					}else if ("custom_err"==data.code){
					if (data.is_show_tip==1){
						GameEventDispatch.instance.event("MsgTipContent",data.tips);
					}
					}else{
					if (CertificationM.instance.info && CertificationM.instance.info.openFrom=="login"){
						GameEventDispatch.instance.event("Regic");
					}
					if (data.is_show_tip==1){
						GameEventDispatch.instance.event("MsgTipContent","绑定信息获取失败");
					}
				}
				}end_bind_tel(data){
				if (0==data.code){
					RoleInfoM.instance.is_bind_tel=1;
					RoleInfoM.instance.tel=data['tel'];
					RoleInfoM.instance.bank_gold=data['bank_gold'];
					RoleInfoM.instance.jjhNumber=data['account'];
					StartParam.instance.parseParam({
						jjhid:data['jjhuserid']
					});
					GameEventDispatch.instance.event("SyncBankCoin");
					GameEventDispatch.instance.event("SynBankBindSuccess");
					GameTools.showTip("绑定成功");
					}else if (1==data.code){
					GameTools.showTip("未知错误");
					}else if (2==data.code){
					GameTools.showTip("此账号已被绑定");
					}else if (3==data.code){
					GameTools.showTip("此账号或ID不存在");
					}else if (4==data.code){
					GameTools.showTip("此帐号手机号不匹配");
					}else if (5==data.code){
					GameTools.showTip("此帐号登录密码有误");
					}else if (6==data.code){
					GameTools.showTip("对不起，此帐号已被禁用");
					}else if (7==data.code){
					GameTools.showTip("验证码错误");
					}else if ("custom_err"==data.code){
					GameEventDispatch.instance.event("MsgTipContent",data.tips);
					}else{
					GameTools.dealCode(data.code);
				}
				}end_deposit_in(data){
				if (0==data.code){
					GameEventDispatch.instance.event("EndBankDeposit");
					GameEventDispatch.instance.event("MsgTipContent","存入成功");
					}else if (1==data.code){
					GameEventDispatch.instance.event("MsgTipContent","未绑定银行");
					}else if (3==data.code){
					GameEventDispatch.instance.event("MsgTipContent","存取失败");
					}else if (4==data.code){
					GameEventDispatch.instance.event("MsgTipContent","每次最少存入5万金币");
					}else if (5==data.code){
					GameEventDispatch.instance.event("MsgTipContent","当日存入金额已经超出上限，请降低金额或者明天再试");
					}else if (6==data.code){
					GameEventDispatch.instance.event("MsgTipContent","存取失败");
					}else if (10==data.code){
					GameEventDispatch.instance.event("MsgTipContent","请退出渔场再试");
					}else if (11==data.code){
					GameEventDispatch.instance.event("MsgTipContent","需要月卡才可使用");
					}else if ("custom_err"==data.code){
					GameEventDispatch.instance.event("MsgTipContent",data.tips);
				}
				else{
					GameTools.dealCode(data.code);
				}
				}end_take_out(data){
				if (0==data.code){
					GameEventDispatch.instance.event("EndBankTake");
					GameEventDispatch.instance.event("MsgTipContent","取出成功");
					}else if (1==data.code){
					GameEventDispatch.instance.event("MsgTipContent","未绑定银行");
					}else if (2==data.code){
					GameEventDispatch.instance.event("MsgTipContent","每次最少取出5万金币");
					}else if (3==data.code){
					GameEventDispatch.instance.event("MsgTipContent","当日取出金额已经超出上限，请降低金额或者明天再试");
					}else if (4==data.code){
					GameEventDispatch.instance.event("MsgTipContent","存取失败");
					}else if (5==data.code){
					GameEventDispatch.instance.event("MsgTipContent","存取失败");
					}else if (10==data.code){
					GameEventDispatch.instance.event("MsgTipContent","请退出渔场再试");
					}else if ("custom_err"==data.code){
					GameEventDispatch.instance.event("MsgTipContent",data.tips);
					}else{
					GameTools.dealCode(data.code);
				}
				}syncBankInfo(data){
				RoleInfoM.instance.setCoin(data['gold']);
				RoleInfoM.instance.bank_gold=data['bank_gold'];
				GameEventDispatch.instance.event("BankUpdate");
				GameEventDispatch.instance.event("UpdateProfile");
			}
			static get instance (){
				return BankC._instance || (BankC._instance=new BankC());
			}
		}

		control.BankC=Laya.BankC=BankC;
		BankC._instance=null;	

		class BatteryC{
			constructor (){
				GameEventDispatch.instance.on(String(13004),this,this.onFinishChangeSkin);
				GameEventDispatch.instance.on(String(13008),this,this.onDoubleChange);
				GameEventDispatch.instance.on(String(13010),this,this.onEndBuyDouble);
			}
			onEndBuyDouble(data){
				if (0==data.code){
					}else if (1==data.code){
					GameEventDispatch.instance.event("MsgTipContent","钻石不足");
				}
				}onDoubleChange(data){
				if (0==data.code){
					RoleInfoM.instance.coin_rate=data['coin_rate'];
					RoleInfoM.instance.chance_rate=data['chance_rate'];
					RoleInfoM.instance.coin_rate_buy=data['coin_rate_buy'];
					RoleInfoM.instance.chance_rate_buy=data['chance_rate_buy'];
					GameEventDispatch.instance.event("BatteryRateChagne");
					}else{
					GameTools.dealCode(data.code);
				}
				}onFinishChangeSkin(data){
				RoleInfoM.instance.setCurSkin(data['cskin']);
				GameEventDispatch.instance.event("FinishChangeSkin",[]);
			}
			static get instance (){
				return BatteryC._instance || (BatteryC._instance=new BatteryC());
			}
		}

		control.BatteryC=Laya.BatteryC=BatteryC;
		BatteryC._instance=null;	

		class CocosC{
			constructor (){}
			static init (){
				console.log("cocos init");
				CocosC.cocosGameSdk.setOnInitCB(function(param){
					console.log("cocoscb2");
					console.log(param["nickName"]);
					control.CocosC.loginParam=param;
					GameEventDispatch.instance.event("CocosLoginComplete");
				});
				GameSDK.init(CocosC.gameId);
			}
			static pay (param){
				CocosC.cocosGameSdk.pay(param["orderId"],param["goodsName"],param["goodsDesc"],param["orderAmount"],param["extension"],param["notifyURL"]);
			}
		}

		control.CocosC=Laya.CocosC=CocosC;
		CocosC.gameId=652541363;
		CocosC.loginParam=null;
		Laya.static(CocosC,
		['cocosGameSdk',function(){return this.cocosGameSdk=GameSDK;}
		]);	

		class CompenC{
			constructor (){
				GameEventDispatch.instance.on("OpenMakeUp",this,this.openMakeUp);
				GameEventDispatch.instance.on(String(10022),this,this.startMake);
			}
			//GameEventDispatch.instance.on(GameEvent.TestCom,this,startMake);
			startMake(data){
				if (data.from && data.from > 0){
					CompenM.instance.rewardFrom=data.from;
				}
				CompenM.instance.compenArr=data.show;
				!ENV.isShowDied()&& UiManager.instance.loadView("Compenstate",null,"SMALL_TO_BIG");
			}
			//}
			openMakeUp(data){
				if (CompenM.instance.currentTimes <=CompenM.instance.totalTimes){
					!ENV.isShowDied()&& UiManager.instance.loadView("Compenstate",null,"SMALL_TO_BIG");
				}
			}
			static get instance (){
				return CompenC._instance || (CompenC._instance=new CompenC());
			}
		}

		control.CompenC=Laya.CompenC=CompenC;
		CompenC._instance=null;	

		class FightC{
			constructor (){
				GameEventDispatch.instance.on(String(12002),this,this.roomGetInRet);
				GameEventDispatch.instance.on(String(12052),this,this.roomGetInRet);
				GameEventDispatch.instance.on(String(12013),this,this.fightGetIn);
				GameEventDispatch.instance.on(String(12015),this,this.multiShootBulletRet);
				GameEventDispatch.instance.on(String(12050),this,this.addAwardScore);
				GameEventDispatch.instance.on(String(12018),this,this.exitFight);
				GameEventDispatch.instance.on(String(12021),this,this.fightGetOut);
				GameEventDispatch.instance.on(String(12022),this,this.syncOtherPlayers);
				GameEventDispatch.instance.on(String(12019),this,this.syncPlayerCoin);
				GameEventDispatch.instance.on(String(12049),this,this.fightEatCoinRet);
				GameEventDispatch.instance.on(String(12027),this,this.seatConfigChange);
				GameEventDispatch.instance.on(String(12026),this,this.roomGetIn);
				GameEventDispatch.instance.on(String(12030),this,this.syncViolent);
				GameEventDispatch.instance.on(String(12033),this,this.syncLock);
				GameEventDispatch.instance.on(String(12034),this,this.syncLevel);
				GameEventDispatch.instance.on(String(13002),this,this.buyBattery);
				GameEventDispatch.instance.on(String(17003),this,this.syncSkills);
				GameEventDispatch.instance.on(String(17002),this,this.useSkillRet);
				GameEventDispatch.instance.on(String(12041),this,this.useSkill);
				GameEventDispatch.instance.on(String(12042),this,this.callSkillReqFail);
				GameEventDispatch.instance.on(String(12046),this,this.dayComsumeTooMuch);
				GameEventDispatch.instance.on(String(12048),this,this.syncAutoShootTime);
				GameEventDispatch.instance.on(String(12055),this,this.contestStart);
				GameEventDispatch.instance.on(String(12056),this,this.exitNewPlayerScene);
				GameEventDispatch.instance.on(String(30000),this,this.getGoldPoolAward);
				GameEventDispatch.instance.on(String(30001),this,this.gold_pool_all_value_update);
				GameEventDispatch.instance.on(String(30004),this,this.syncGoldPoolAward);
				GameEventDispatch.instance.on(String(60008),this,this.deleteCompleteHandle);
				GameEventDispatch.instance.on("UseGoodsConfirmAndJumpToShop",this,this.useGoodsConfirmAndJumpToShop);
				GameEventDispatch.instance.on("ScreenShare",this,this.screenShare);
				Laya.timer.frameLoop(1,this,this.onLoop);
			}
			deleteCompleteHandle(res){
				if (res.code==0){
					if (WxC.isInMiniGame()){
						WxC.refreshGame();
						}else{
						window.document.location.reload();
					}
					}else if (res.code==1){
					GameEventDispatch.instance.event("MsgTipContent","每个账号30天内限制3次,已超过注销次数");
					}else if (res.code==2){
					GameEventDispatch.instance.event("MsgTipContent","未知错误");
					}else if (res.code==999){
					GameEventDispatch.instance.event("MsgTipContent","网络错误");
				}
				}screenShare(){
				if (WxC.isInMiniGame()){
					if (NoviceC.instance.isInGuide){
						return;
					}
				}
			}
			//UiManager.instance.loadView("BossShare");//wx:BossShare
			startContestMatch(data){
				var tmpInfo=new QuitTipInfo();
				tmpInfo.isHaveTime=true;
				tmpInfo.autoCloseTime=50;
				tmpInfo.state=1;
				tmpInfo.content="xxx";
				GameEventDispatch.instance.event("QuitTip",tmpInfo);
				}exitNewPlayerScene(){
				GameEventDispatch.instance.event("MsgTp",70);
				}contestStart(data){
				if (FightM.instance.isMatchingGame()){
					MatchM.instance.isMatchSart=1;
					FightM.instance.setContestEndTime(data.end_time);
					GameEventDispatch.instance.event("MatchingGameSynState");
					}else{
					UiManager.instance.closePanel("Mate",false);
					FightM.instance.setContestEndTime(data.end_time);
					GameEventDispatch.instance.event("ContestFightStart",null);
				}
				}syncAutoShootTime(data){
				FightM.instance.setAutoTime(data.time);
				}dayComsumeTooMuch(data){
				GameEventDispatch.instance.event("MsgTp",32);
				GameEventDispatch.instance.event("ExitLoginView",null);
			}
			//通知前端有奖金可领
			syncGoldPoolAward(data){
				RoleInfoM.instance.setAwardValue(data.value);
				var goldPoolAwardMsg=new C2s_30002();
				goldPoolAwardMsg.value=RoleInfoM.instance.getAwardValue();
				WebSocketManager.instance.send(30002,goldPoolAwardMsg);
			}
			//获得奖金
			getGoldPoolAward(data){
				RoleInfoM.instance.setAwardScore(0);
				if (data.value > 0){
					GameEventDispatch.instance.event("GetGoldPoolAward",data);
				}
				GameEventDispatch.instance.event("UpdateProfile");
			}
			//总的奖金
			gold_pool_all_value_update(data){
				FightM.instance.setGoldPoolTotalValue(data.value);
				GameEventDispatch.instance.event("UpdateGoldPoolInfo");
				}useGoodsConfirmAndJumpToShop(data){
				WebSocketManager.instance.send(10012,null);
				GameEventDispatch.instance.event("QuitTip",data);
				}onLoop(){
				FightM.instance.agentGetInfoUpdate(Laya.timer.delta / 1000);
				}syncLevel(data){
				FightM.instance.setLevel(data.seat_id,data.level);
				GameEventDispatch.instance.event("FightPlayerUpdate");
			}
			//更新锁定技能
			syncLock(data){
				var protoData=data;
				var seatInfo=FightM.instance.getSeatInfo(protoData.seat_id);
				if (seatInfo){
					seatInfo.lock_et=protoData.lock_et;
					seatInfo.lock_sid=protoData.lock_sid;
					seatInfo.lock_uid=protoData.lock_uid;
					if (protoData.seat_id==FightM.instance.seatId){
						GameEventDispatch.instance.event("lockStart");
						FightM.instance._lockUid=protoData.lock_uid;
					}
				}
			}
			//更新狂暴信息
			syncViolent(data){
				var protoData=data;
				var seatInfo=FightM.instance.getSeatInfo(protoData.seat_id);
				if (seatInfo){
					seatInfo.lvet=protoData.lvet;
					seatInfo.vsid=protoData.sid;
					GameEventDispatch.instance.event("ViolentUpdate");
				}
				}syncSkills(data){
				var protoData=data;
				for (var i=0;i < protoData.info.length;i++){
					FightM.instance.updateSkillCdLeftTime(protoData.info[i]);
				}
				GameEventDispatch.instance.event("SkillUpdate");
				}callSkillReqFail(data){
				GameEventDispatch.instance.event("MsgTp",23);
				}useSkill(data){
				var musicPath=ConfigManager.getConfValue("cfg_skill",data.skill,"sound");
				if (musicPath.length > 0){
					GameSoundManager.playSound(musicPath);
				}
				}useSkillRet(data){
				var protoData=data;
				if (0==protoData.code){
					var skillInfo=new Object;
					skillInfo.id=protoData.id;
					skillInfo.cd=ConfigManager.getConfValue("cfg_skill",protoData.id,"cd");
					var skillType=ConfigManager.getConfValue("cfg_skill",protoData.id,"skill_type");
					if (skillType==2){
						FightM.instance._lockUid=0;
					}
					FightM.instance.updateSkillCdLeftTime(skillInfo);
					GameEventDispatch.instance.event("SkillUpdate");
					}else if (1==protoData.code){
					GameEventDispatch.instance.event("MsgTp",1);
					}else if (2==protoData.code){
					}else if (10==protoData.code){
					}else if (5==protoData.code){
					if (protoData.code==5){
						var tmpType=ConfigManager.getConfValue("cfg_skill",protoData.id,"skill_type");
						if (tmpType==5){
							GameEventDispatch.instance.event("MsgTp",2);
							}else{
							var info=new QuitTipInfo();
							var diamondNum=SkillM.instance.skillDiamondCount(protoData.id);
							info.state=1;
							info.content="道具不足，是否花费"+diamondNum+"钻石释放该技能";
							info.confirmMsg="ConfirmUseSkill";
							info.conFirmArgs=protoData.id;
							info.autoCloseTime=10;
							GameEventDispatch.instance.event("QuitTip",info);
						}
					}
					}else{
					GameEventDispatch.instance.event("Shop","tab_diamond");
				}
				}buyBattery(data){
				var protoData=data;
				if (0==protoData.code){
					RoleInfoM.instance.setBattery(protoData.battery);
					GameEventDispatch.instance.event("BatteryBuyRet",data);
					var soundPath=ConfigManager.getConfValue("cfg_global",1,"battery_unlock_sound");
					GameSoundManager.playSound(soundPath);
					}else if (1==protoData.code){
					GameEventDispatch.instance.event("Shop","tab_diamond");
				}
				}addAwardScore(data){
				RoleInfoM.instance.setAwardScore(data.score);
				FightM.instance.goldPoolTotalValueAdd(data.prize);
				GameEventDispatch.instance.event("UpdateGoldPoolInfo");
				GameEventDispatch.instance.event("UpdateProfile");
				}multiShootBulletRet(data){
				var ret=data;
				if (ret.code===0){
					if (!FightM.instance.coinShootScene()){
						RoleInfoM.instance.setContestCoin(ret.ccoin);
						}else{
						RoleInfoM.instance.setCoin(ret.coin);
						RoleInfoM.instance.setBindCoin(ret.bcoin);
					}
					GameEventDispatch.instance.event("UpdateProfile");
					}else if (5==ret.code){
					}else{
					if (1==ret.ac){
						}else if (2==ret.ac){
						GameEventDispatch.instance.event("MsgTp",3);
						GameEventDispatch.instance.event("Shop","tab_coin");
					}
					GameEventDispatch.instance.event("ShootError",null);
				}
				}roomGetIn(data){
				var protoData=data;
				if (protoData){
					FightM.instance.seatId=protoData.seat_id;
					FightM.instance.setSceneId(protoData.scene_id);
					if (!FightM.instance.coinShootScene()){
						RoleInfoM.instance.setContestCoin(protoData.ccoin);
						RoleInfoM.instance.setContestScore(protoData.cscore);
						FightM.instance.setContestEndTime(protoData.end_time);
					}
					GameEventDispatch.instance.event("ParseFishData",FightM.instance.sceneId);
					GameEventDispatch.instance.event("FightStart");
					if (FightM.instance.getSceneId()==6){
						if (!protoData.closeRoom)
							UiManager.instance.loadView("Mate");
					}
					UiManager.instance.loadView("Fish");
					if (protoData.scene_id==1){
						YylyC.EnterFirstScene();
					}
					GameEventDispatch.instance.event("UpdateProfile");
				}
				}roomGetInRet(data){
				var getIn=data;
				if (getIn.code==0){
					LoadTipM.instance.getInRoomFailCount=0;
					UiManager.instance.closePanel("MainPage",false);
					UiManager.instance.closePanel("Load",false);
					}else{
					LoginM.instance.roomId=-1;
					GameEventDispatch.instance.event("MsgTp",getIn.code+52);
					LoadTipM.instance.getInRoomFailCount=LoadTipM.instance.getInRoomFailCount+1;
					UiManager.instance.closePanel("Load",false);
				}
				}exitFight(data){
				GameEventDispatch.instance.event("FightStop");
				UiManager.instance.loadView("MainPage");
				if (LoginM.instance.sceneId==7){
					UiManager.instance.loadView("NewMatch",{},"Normal");
				}
				if (data.type && data.type==1){
					var info=new QuitTipInfo();
					info.state=2;
					info.content="由于您长时间没参加比赛，已经被强制退出比赛。";
					GameEventDispatch.instance.event("QuitTip",info);
					}else{
					var value=data['pearl_num'];
					if (value && value > 0){
						UiManager.instance.loadView("CiFu",{num:value},"SMALL_TO_BIG");
					}
				}
				}fightGetIn(data){
				var seatInfo=data;
				FightM.instance.inSeatInfo(seatInfo.seat_id,seatInfo);
				GameEventDispatch.instance.event("FightPlayerUpdate");
				}fightGetOut(data){
				var seatInfo=data;
				if (FightM.instance.isMatchingGame()){
					if (data.type && data.type==1){
						MatchM.instance.setOffLineSeatIndex(seatInfo.seat_id);
					}
				}
				FightM.instance.outSeatInfo(seatInfo.seat_id,seatInfo);
				GameEventDispatch.instance.event("FightPlayerUpdate");
				GameEventDispatch.instance.event("ViolentUpdate");
				}syncOtherPlayers(data){
				var arr=data ["players"];
				var bUid=data ["buid"];
				var seatInfo;
				if (arr){
					for (var i=0;i < arr.length;i++){
						seatInfo=arr [i];
						FightM.instance.inSeatInfo(seatInfo.seat_id,seatInfo);
					}
				}
				FightM.instance.setBulletUidInfo(bUid);
				GameEventDispatch.instance.event("FightPlayerUpdate");
				}syncPlayerCoin(data){
				var info=data;
				FightM.instance.seatAddCoin(info.seat_id,info.agent,info.coin);
				GameEventDispatch.instance.event("FightCoinUpdate",info);
				}fightEatCoinRet(data){
				var info=data;
				if (!FightM.instance.coinShootScene()){
					FightM.instance.seatAddContestCoin(info.seat_id,info.agent,info.coin);
					RoleInfoM.instance.setContestCoin(RoleInfoM.instance.getContestCoin()+info.coin);
					}else{
					FightM.instance.seatAddCoin(info.seat_id,info.agent,info.coin);
				}
				GameEventDispatch.instance.event("FightCoinUpdate",info);
				}seatConfigChange(data){
				var protoData=data;
				FightM.instance.seatConfigChange(protoData);
				GameEventDispatch.instance.event("FightPlayerUpdate",null);
			}
			static get instance (){
				return FightC._instance || (FightC._instance=new FightC());
			}
		}

		control.FightC=Laya.FightC=FightC;
		FightC._instance=null;	

		class FishTypeC{
			constructor (){
				GameEventDispatch.instance.on("FishTypeC",this,this.FishTip);
			}
			FishTip(data){
				FishTypeM.instance.setInfo();
				UiManager.instance.loadView("FishType",null,"SMALL_TO_BIG");
			}
			static get instance (){
				return FishTypeC._instance || (FishTypeC._instance=new FishTypeC());
			}
		}

		control.FishTypeC=Laya.FishTypeC=FishTypeC;
		FishTypeC._instance=null;	

		class FriendC{
			constructor (){
				GameEventDispatch.instance.on(String(70000),this,this.intoGameSynAllFriendInfo);
				GameEventDispatch.instance.on(String(70001),this,this.synFriendInfo);
				GameEventDispatch.instance.on(String(70002),this,this.synApplyFriendList);
			}
			intoGameSynAllFriendInfo(data){
				if (data['friends_list']){
					FriendM.instance.friendArr=data['friends_list'];
					if (data['friend_remark']){
						FriendM.instance.signatureStr=data['friend_remark'];
					}
					GameEventDispatch.instance.event("refreshFriendList");
				}
				}synFriendInfo(data){
				if (data['delta_friends_list']){
					FriendM.instance.deltaFriendArr=data['delta_friends_list'];
					FriendM.instance.updateFriendArr();
					if (data['friend_remark']){
						FriendM.instance.signatureStr=data['friend_remark'];
					}
					GameEventDispatch.instance.event("refreshFriendList");
				}
				}synApplyFriendList(data){
				if (data['list']){
					FriendM.instance.applyFriendArr=data['list'];
					GameEventDispatch.instance.event("refreshApplyFriendList");
				}
			}
			static get instance (){
				return FriendC._instance || (FriendC._instance=new FriendC())
			}
		}

		control.FriendC=Laya.FriendC=FriendC;
		FriendC._instance=null;	

		class HeartbeatC{
			constructor (){
				//this.unreceiveTime=NaN;
				//多长时间未接收到心跳包
				//this.unreceiveMaxTime=NaN;
				//多长时间未接收到心跳包算断线
				//this.unsendTime=NaN;
				//多长时间未发送心跳包
				//this.sendTime=NaN;
				//心跳包发送间隔
				//this.handshake=false;
				//接收到心跳包
				this.maxReconnectCount=3;
				//最大重连次数
				//this.reconnectCount=0;
				//当前重连次数
				//this.reconnectInterval=NaN;
				//重连间隔
				this.reconnectType=0;
				//断线类型
				this.reconnectContent="";
				this.unreceiveTime=0;
				this.unsendTime=0;
				this.unreceiveMaxTime=15;
				this.sendTime=3;
				this.handshake=false;
				GameEventDispatch.instance.on(String(10000),this,this.receiveHandshake);
				GameEventDispatch.instance.on(String(11002),this,this.receiveHeartbeat);
				GameEventDispatch.instance.on(String(10010),this,this.accountReplace);
				GameEventDispatch.instance.on(String(10014),this,this.server_error);
				GameEventDispatch.instance.on(String(10016),this,this.user_check_error);
				GameEventDispatch.instance.on(String(10017),this,this.network_error);
				GameEventDispatch.instance.on(String(10018),this,this.kicked);
				GameEventDispatch.instance.on("WsClose",this,this.wsClose);
				GameEventDispatch.instance.on("WsError",this,this.wsError);
				Laya.timer.loop(1000,this,this.timeTick);
			}
			//被踢下线
			kicked(data){
				this.reconnectType=7;
				this.handshake=false;
				this.reconnectContent=data["reason"];
				WebSocketManager.instance.close();
			}
			//网络异常
			network_error(){
				this.reconnectType=6;
				this.handshake=false;
				WebSocketManager.instance.close();
			}
			//用户验证是吧
			user_check_error(){
				this.reconnectType=5;
				this.handshake=false;
				WebSocketManager.instance.close();
			}
			//服务器异常
			server_error(){
				this.reconnectType=4;
				this.handshake=false;
				WebSocketManager.instance.close();
			}
			//账号顶替
			accountReplace(){
				this.reconnectType=1;
				this.handshake=false;
				WebSocketManager.instance.close();
				}handleSocketClose(){
				this.handshake=false;
				this.unsendTime=0;
				this.reconnectInterval=0;
				this.reconnectCount=0;
				GameEventDispatch.instance.event("SystemReset");{
					UiManager.instance.loadView("BrokePage");
				}
				}wsClose(){
				this.handleSocketClose();
				}wsError(){
				this.handleSocketClose();
				}timeTick(){
				if (WebSocketManager.instance.isConnect()){
					this.unreceiveTime+=1;
					this.unsendTime+=1;
					if (this.unreceiveTime > this.unreceiveMaxTime){
						WebSocketManager.instance.close();
						this.unsendTime=0;
					}
					if (this.unsendTime > this.sendTime){
						this.unsendTime=0;
						WebSocketManager.instance.send(11001,null);
					}
				}
				ActivityM.instance.countDownLoop();
				}receiveHeartbeat(data){
				RuleM.instance.setTime(data.time);
				this.unreceiveTime=0;
				}receiveHandshake(data){
				this.unreceiveTime=0;
				this.unsendTime=0;
				this.reconnectInterval=0;
				this.reconnectCount=0;
				this.reconnectType=0;
				this.handshake=true;
				}isHandshakeReceive(){
				return this.handshake;
			}
			static get instance (){
				return HeartbeatC._instance || (HeartbeatC._instance=new HeartbeatC());
			}
		}

		control.HeartbeatC=Laya.HeartbeatC=HeartbeatC;
		HeartbeatC._instance=null;	

		class HourseC{
			constructor (){
				GameEventDispatch.instance.on(String(21000),this,this.syncHorseTip);
				GameEventDispatch.instance.on(String(21001),this,this.syncIsOpenNotice);
			}
			syncIsOpenNotice(data){
				if (data.code==1){
					HorseM.instance.isOpenNotice=true;
					}else{
					HorseM.instance.isOpenNotice=false;
				}
				}loopNotice(){
				Laya.timer.once(HorseM.instance.noticeTime,this,this.showNotice);
				if (HorseM.instance.oneTimesNotice){
					Laya.timer.once(HorseM.instance.oneTimes,this,this.loopRankHorseTips);
				}
				}loopRankHorseTips(){
				if (LevelM.instance.rankDoubleReward){
					HorseM.instance.oneTimesNotice=false;
					cfg_hId.instance(cfg_hourse.instance("7").txt1).txtContent=LevelM.instance.loopMsg();
					var data={
						id:7,
						agent:true
					};
					HorseM.instance.addHorseTipItem(data);
					if (HorseM.instance.isIn==false){
						!ENV.isShowDied()&& UiManager.instance.loadView("HorseTip");
					}
					HorseM.instance.setInfo();
					GameEventDispatch.instance.event("HorseTipUpdate");
				}
				}showNotice(){
				if (HorseM.instance.isOpenNotice){
					var data={
						id:6,
						agent:true
					};
					HorseM.instance.addHorseTipItem(data);
					if (HorseM.instance.isIn==false){
						!ENV.isShowDied()&& UiManager.instance.loadView("HorseTip");
					}
					HorseM.instance.setInfo();
					GameEventDispatch.instance.event("HorseTipUpdate");
				}
				this.loopNotice();
				}syncHorseTip(data){
				HorseM.instance.addHorseTipItem(data);
				if (HorseM.instance.isIn==false){
					!ENV.isShowDied()&& UiManager.instance.loadView("HorseTip");
				}
				HorseM.instance.setInfo();
				GameEventDispatch.instance.event("HorseTipUpdate");
			}
			static get instance (){
				return HourseC._instance || (HourseC._instance=new HourseC());
			}
		}

		control.HourseC=Laya.HourseC=HourseC;
		HourseC._instance=null;	

		class LevelC{
			constructor (){
				GameEventDispatch.instance.on(String(42000),this,this.isHaveRankReward);
				GameEventDispatch.instance.on(String(42002),this,this.onGetReward);
				GameEventDispatch.instance.on(String(42005),this,this.fishGoldBoxIsShow);
				GameEventDispatch.instance.on("LevelC",this,this.LevelTip);
				GameEventDispatch.instance.on("OpenSubscibe",this,this.onOpenSubscibe);
			}
			onOpenSubscibe(){
				WxC.subscribeInfo([1]);
				}fishGoldBoxIsShow(res){
				if (res){
					LoginInfoM.instance.isShowRankAniBox=res.show;
					GameEventDispatch.instance.event("RankAniRefesh");
				}
				}onGetReward(res){
				if (res.code==0){
					GameEventDispatch.instance.event("MsgTipContent","领取成功");
					if (WxC.isInMiniGame()&& RoleInfoM.instance.subsState(1)==false){
						if (RoleInfoM.instance.subscribeState(1)==0){
							var info=new QuitTipInfo();
							info.state=5;
							info.content="";
							info.middleTxt="订阅";
							info.commonMsg="OpenSubscibe";
							info.isHaveTime=false;
							GameEventDispatch.instance.event("QuitTip",info);
							}else{
							GameEventDispatch.instance.event("OpenSubscibe");
						}
					}
					}else if (res.code==1){
					GameEventDispatch.instance.event("MsgTipContent","领取成功");
					}else{
					GameTools.dealCode(res.code);
				}
				}isHaveRankReward(res){
				if (res){
					LevelM.instance.isCanReward=res.can_reward;
					if (res.data['1']){
						LevelM.instance.coinRankLv=res.data['1'].ranking;
						if (Array.isArray(res.data['1'].reward)){
							LevelM.instance.coinReward=res.data['1'].reward;
							}else{
							LevelM.instance.coinReward=[];
						}
						}else{
						LevelM.instance.coinRankLv=-1;
					}
					if (res.data['2']){
						LevelM.instance.strengthRankLv=res.data['2'].ranking;
						if (Array.isArray(res.data['2'].reward)){
							LevelM.instance.strengthReward=res.data['2'].reward;
							}else{
							LevelM.instance.strengthReward=[];
						}
						}else{
						LevelM.instance.strengthRankLv=-1;
					}
					GameEventDispatch.instance.event("SynRankReward");
				}
				}LevelTip(data){
				LevelM.instance.setInfo(data);
				!ENV.isShowDied()&& UiManager.instance.loadView("Level");
			}
			static get instance (){
				return LevelC._instance || (LevelC._instance=new LevelC());
			}
		}

		control.LevelC=Laya.LevelC=LevelC;
		LevelC._instance=null;	

		class LoginC{
			constructor (){
				GameEventDispatch.instance.on("StartLoad",this,this.startLoad);
				GameEventDispatch.instance.on("RestInRoom",this,this.resetRoom);
				GameEventDispatch.instance.on("ExitsGame",this,this.start);
				GameEventDispatch.instance.on("AndroidReturnKey",this,this.gameReturn);
				this.returnMain();
				GameEventDispatch.instance.on(String(60000),this,this.syncCertificationEnd);
				GameEventDispatch.instance.on(String(60002),this,this.syncCertificationSuccess);
				GameEventDispatch.instance.on(String(60006),this,this.syncNovicePlayer);
			}
			syncNovicePlayer(res){
				if (res){
					LoginM.instance.isNovicePlayer=res.new_player;
				}
				}syncCertificationEnd(res){
				if (res){
					LoginM.instance.popupCertificationTimes=res.popup_times;
					LoginM.instance.isCompleteCertification=res.certification;
					if (JSON.stringify(res.ageType)){
						LoginInfoM.instance.ageType=res.ageType;
					}
					GameEventDispatch.instance.event("SyncCertificationInfo");
				}
				}syncCertificationSuccess(res){
				if (res.code==0){
					if (res.is_quick_reg==1){
						var aInfo=res.jjhaccount;
						if (aInfo){
							RoleInfoM.instance.jjhNumber=aInfo.jjhaccounts;
							RoleInfoM.instance.jjhId=aInfo.jjhuserid;
							RoleInfoM.instance.jjhPass=aInfo.logonpass;
							RoleInfoM.instance.bankPass=aInfo.bankpass;
							RoleInfoM.instance.tel=aInfo.phone;
						}
						RoleInfoM.instance.reenter=res.reenter;
						GameEventDispatch.instance.event("UpdateJJHAcInfo");
						}else{
						GameEventDispatch.instance.event("MsgTipContent","身份认证成功");
					}
					}else if (res.code==1){
					GameEventDispatch.instance.event("MsgTipContent","真实姓名或身份证输入错误");
					}else if (res.code==2){
					GameEventDispatch.instance.event("MsgTipContent","重复认证");
					}else if (res.code==3){
					GameEventDispatch.instance.event("MsgTipContent","身份证号不符合规范");
					}else if (res.code==4){
					GameEventDispatch.instance.event("MsgTipContent","姓名不符合规范");
					}else if (res.code==5){
					GameEventDispatch.instance.event("MsgTipContent","系统错误，请重试");
					}else if (res.code==6){
					GameEventDispatch.instance.event("MsgTipContent","网络错误，请重试");
					}else if (res.code=="custom_err"){
					GameEventDispatch.instance.event("MsgTipContent",res.tips);
					}else{
					GameTools.dealCode(res.code);
				}
				}gameReturn(){
				if (LoginM.instance.pageId=="fish_page"){
					this.tip();
					}else if (LoginM.instance.pageId=="main_page"){
					this.tipTwo();
				}
				}start(){
				if (WxC.isInMiniGame()){
					WxC.exitGame();
				}
				else if (LoginInfoM.instance.fromAndroid()){
					AndroidInterface.exitApp();
				}
				else{
					Browser.window.top.postMessage("close","*");
				}
				}resetRoom(){
				if (LoginM.instance.getContestId()> 0){
					if (LoginM.instance.sceneId==7 && LoginM.instance.roomId > 0){
						WebSocketManager.instance.send(12051,{roomNumber:LoginM.instance.roomId});
						}else{
						WebSocketManager.instance.send(12051,MatchM.instance.storageData);
					}
				}
				else{
					var c2s=new C2s_12001();
					c2s.scene_id=LoginM.instance.sceneId;
					WebSocketManager.instance.send(12001,c2s);
				}
				}returnMain(){
				var _$this=this;
				if (!WxC.isInMiniGame()){
					Browser.window.addEventListener('message',function(event){
						if (event.data=='exit_game'){
							if (control.LoginC.isCanExit){
								_$this.gameReturn();
							}
							control.LoginC.isCanExit=true;
						}
					});
				}
				}tip(){
				var info=new QuitTipInfo();
				info.state=1;
				info.content="是否退出房间？";
				info.confirmMsg="ReturnConfirm";
				info.autoCloseTime=10;
				GameEventDispatch.instance.event("QuitTip",info);
				}tipTwo(){
				var info=new QuitTipInfo();
				info.state=1;
				info.content="真的要退出游戏吗";
				info.confirmMsg="ExitsGame";
				info.autoCloseTime=10;
				GameEventDispatch.instance.event("QuitTip",info);
				}startLoad(data){
				if (data==0){
					LoginM.instance.resArr=LoadResM.instance.firstArr;
					LoginM.instance.loginState=0;
					LoginM.instance.spineArr=LoadResM.instance.firstSpineArr;
					}else if (data==1){
					LoginM.instance.loginState=1;
					if (LoginM.instance.sceneId==1){
						LoginM.instance.resArr=LoadResM.instance.firstSceneArr;
						LoginM.instance.spineArr=LoadResM.instance.firstSceneSpineArr;
						}else if (LoginM.instance.sceneId==2){
						LoginM.instance.resArr=LoadResM.instance.secondScene;
						LoginM.instance.spineArr=LoadResM.instance.secondScnenSpineArr;
						}else if (LoginM.instance.sceneId==3){
						LoginM.instance.resArr=LoadResM.instance.threeScnen;
						LoginM.instance.spineArr=LoadResM.instance.threeSceneSpineArr;
						}else if (LoginM.instance.sceneId==4){
						LoginM.instance.resArr=LoadResM.instance.fourScene;
						LoginM.instance.spineArr=LoadResM.instance.fourSceneSpineArr;
						}else if (LoginM.instance.sceneId==5){
						LoginM.instance.resArr=LoadResM.instance.fiveScene;
						LoginM.instance.spineArr=LoadResM.instance.fiveSceneSpineArr;
						}else if (LoginM.instance.sceneId==6){
						LoginM.instance.resArr=LoadResM.instance.sixScene;
						LoginM.instance.spineArr=LoadResM.instance.sixSceneSpineArr;
						}else if (LoginM.instance.sceneId==7){
						LoginM.instance.resArr=LoadResM.instance.sevenScene;
						LoginM.instance.spineArr=LoadResM.instance.sevenSceneSpineArr;
						}else if (LoginM.instance.sceneId==8){
						LoginM.instance.resArr=LoadResM.instance.eightScene;
						LoginM.instance.spineArr=LoadResM.instance.eightSceneSpineArr;
					}
				}
				UiManager.instance.loadView("Load");
			}
			static get instance (){
				return LoginC._instance || (LoginC._instance=new LoginC());
			}
		}

		control.LoginC=Laya.LoginC=LoginC;
		LoginC._instance=null;
		LoginC.isCanExit=true;	

		class LoginInfoC{
			constructor (){
				this._firstEnterLogin=false;
				GameEventDispatch.instance.on(String(10000),this,this.handshaker);
				GameEventDispatch.instance.on(String(10002),this,this.roleCreateRet);
			}
			roleCreateRet(data){
				var protoData=data;
				if (protoData.code===0){
					WebSocketManager.instance.send(10003,null);
					WebSocketManager.instance.send(12024,null);
				}
				}handshaker(data){
				var handshake=data;
				FightManager.instance;
				LoginInfoM.instance.code=handshake.code;
				LoginInfoM.instance.uid=handshake.uid;
				LoginInfoM.instance.setShopRate(handshake.shop_rate);
				GameEventDispatch.instance.event("ReceiveHandshake",data);{
					var goldPoolAwardMsg=new C2s_30002();
					RuleM.instance.setTime(handshake.time);
					FightM.instance.setGoldPoolTotalValue(handshake.gold_pool_value);
					goldPoolAwardMsg.value=handshake.gold_pool_value;
					RoleInfoM.instance.setAwardValue(handshake.gold_pool_value);
					WebSocketManager.instance.send(22002,null);
					WebSocketManager.instance.send(20000,null);
					WebSocketManager.instance.send(33012,{});
					if (0==handshake.in_fight){
						if (this._firstEnterLogin && (0==handshake.enter_main)){
							WebSocketManager.instance.send(12024,null);
						}
						else{
							GameEventDispatch.instance.event("ExitLoginView",null);
							GameEventDispatch.instance.event("FightStop");
							HourseC.instance.loopNotice();
							UiManager.instance.loadView("MainPage");
						}
					}
					if (handshake.gold_pool_value > 0){
						WebSocketManager.instance.send(30002,goldPoolAwardMsg);
					}
					this._firstEnterLogin=false;
				}
				if (WxC.isInMiniGame()){
					ShopC.instance.sendSyncMiniBalance();
				}
			}
			static get instance (){
				return LoginInfoC._instance || (LoginInfoC._instance=new LoginInfoC());
			}
		}

		control.LoginInfoC=Laya.LoginInfoC=LoginInfoC;
		LoginInfoC._instance=null;	

		class MatchC{
			constructor (){
				GameEventDispatch.instance.on(String(12052),this,this.end_daily_sign);
				GameEventDispatch.instance.on(String(12053),this,this.end_snatch_sign);
				GameEventDispatch.instance.on(String(35000),this,this.daily_match_settle);
				GameEventDispatch.instance.on(String(35001),this,this.challenge_match_settle);
				GameEventDispatch.instance.on(String(35004),this,this.end_accept_match_reward);
				GameEventDispatch.instance.on(String(35006),this,this.end_accept_daily_match_reward);
				GameEventDispatch.instance.on(String(12102),this,this.synRoomPrepareState);
				GameEventDispatch.instance.on(String(12108),this,this.synMatchGameRoomNum);
				GameEventDispatch.instance.on(String(12109),this,this.synMatchGameRuseltMsg);
				GameEventDispatch.instance.on(String(12113),this,this.synMatchGameAgainMsg);
				GameEventDispatch.instance.on(String(12115),this,this.matchDataSync);
				GameEventDispatch.instance.on(String(12111),this,this.findMatchGameDataFromRoomNum);
			}
			matchDataSync(value){
				MatchM.instance.matchData=value;
				GameEventDispatch.instance.event("RefreshMatchData");
				}findMatchGameDataFromRoomNum(res){
				if (res.code==0){
					GameEventDispatch.instance.event("GetIntoMatchRoom");
					}else if (res.code==1){
					GameEventDispatch.instance.event("MsgTipContent","比赛不存在");
					}else if (res.code==2){
					GameEventDispatch.instance.event("MsgTipContent","比赛已开始");
					}else if (res.code==3){
					GameEventDispatch.instance.event("MsgTipContent","人数已满");
					}else if (res.code==4){
					GameEventDispatch.instance.event("MsgTipContent","报名费不足");
				}
				}synMatchGameAgainMsg(res){
				if (res.code==0){
					GameEventDispatch.instance.event("MatchingGameAgainStart");
					}else if (res.code==1){
					GameEventDispatch.instance.event("MsgTipContent","没有此类型比赛");
					}else if (res.code==2){
					GameEventDispatch.instance.event("MsgTipContent","没有比赛信息");
					}else if (res.code==3){
					GameEventDispatch.instance.event("MsgTipContent","不在比赛时间内");
					}else if (res.code==4){
					GameEventDispatch.instance.event("MsgTipContent","道具不足");
					}else{
					GameTools.dealCode(res.code);
				}
				}synMatchGameRuseltMsg(res){
				if (res.data){
					MatchM.instance.isMatchSart=0;
					MatchM.instance.resultMsg=res;
					GameEventDispatch.instance.event("MatchingSynRusultMsg");
				}
				}synMatchGameRoomNum(res){
				if (res.playerNum){
					MatchM.instance.theRoomNumber=res.playerNum;
					GameEventDispatch.instance.event("MatchingGameSynState");
				}
				}synRoomPrepareState(res){
				if (res.prepare_status){
					MatchM.instance.setPrepareState(res.prepare_status);
					GameEventDispatch.instance.event("MatchingGameSynState");
				}
				}end_snatch_sign(data){
				if (0==data.code){
					GameEventDispatch.instance.event("EndSnatchMatchSign");
				}
				}end_accept_daily_match_reward(data){
				if (0==data.code){
					console.log("end_accept_match_reward");
					console.log(data);
					GameEventDispatch.instance.event("RewardTip",[data.reward_item_ids,data.reward_item_nums]);
					GameEventDispatch.instance.event("EndAcceptDailyMatchReward");
					}else{
					console.log("领取比赛错误");
					console.log(data);
				}
				}end_accept_match_reward(data){
				if (0==data.code){
					console.log("end_accept_match_reward");
					console.log(data);
					var reward_item_ids=[];
					var reward_item_nums=[];
					for (var i=0;i < data.award.length;i=i+2){
						reward_item_ids.push(data.award[i]);
						reward_item_nums.push(data.award[i+1]);
					}
					GameEventDispatch.instance.event("RewardTip",[reward_item_ids,reward_item_nums]);
					GameEventDispatch.instance.event("EndAcceptMatchReward");
					}else{
					GameTools.dealCode(data.code);
				}
				}daily_match_settle(data){
				data['type']='daily';
				UiManager.instance.loadView("MatchSettle",data);
				}challenge_match_settle(data){
				data['type']='challenge';
				UiManager.instance.loadView("MatchSettle",data);
				}end_daily_sign(data){
				if (0==data.code){
					if (data.homeowner){
						MatchM.instance.roomName=data.homeowner;
						MatchM.instance.roomTime=data.time;
						MatchM.instance.contestFee=data.contest_fee;
						GameEventDispatch.instance.event("MatchingSynRoomData");
					}
					GameEventDispatch.instance.event("EndDailyMatchSign");
					}else if (data.code==21){
					GameEventDispatch.instance.event("MsgTipContent","房间进入失败");
					}else if (data.code==22){
					GameEventDispatch.instance.event("MsgTipContent","房间进入失败");
					}else if (data.code==23){
					GameEventDispatch.instance.event("MsgTipContent","房间进入失败");
					}else{
					GameTools.dealCode(data.code);
				}
			}
			static get instance (){
				return MatchC._instance || (MatchC._instance=new MatchC());
			}
		}

		control.MatchC=Laya.MatchC=MatchC;
		MatchC._instance=null;	

		class MsgC{
			constructor (){
				GameEventDispatch.instance.on("MsgTp",this,this.MsgTip);
				GameEventDispatch.instance.on("MsgTipContent",this,this.MsgTipContent);
			}
			MsgTipContent(data){
				if (MsgM.instance.content==null){
					UiManager.instance.loadView("GoldTip");
					}else{
				}
				if (data["time"]){
					MsgM.instance.setContentInfo(data["str"],data["time"]);
				}
				else{
					MsgM.instance.setContentInfo(data);
				}
				}MsgTip(data){
				if (MsgM.instance.content==null){
					UiManager.instance.loadView("GoldTip");
					}else{
				}
				MsgM.instance.setContentInfo(ConfigManager.getConfValue("cfg_tip",data,"txtContent"));
			}
			static get instance (){
				return MsgC._instance || (MsgC._instance=new MsgC());
			}
		}

		control.MsgC=Laya.MsgC=MsgC;
		MsgC._instance=null;	

		class NoviceC{
			constructor (){
				//this.curData=null;
				this.curIndex=0;
				this.shootCost=0;
				this.isInGuide=false;
				// 是否在引导中
				this.stepArr=[];
				//新手流程数据
				this.stepName="";
				//新手流程名称
				this.stepPosData={};
				GameEventDispatch.instance.on("StartNoviceGuide",this,this.startNoviceGuide);
				GameEventDispatch.instance.on("FinishGuide",this,this.doFinishGuide);
				GameEventDispatch.instance.on("NoviceGuideShoot",this,this.shootCostUpdate);
				GameEventDispatch.instance.on("SystemReset",this,this.closeNoviceGuide);
				GameEventDispatch.instance.on("CloseNovice",this,this.closeNoviceGuide);
				GameEventDispatch.instance.on("37001",this,this.endFinishNovice);
				GameEventDispatch.instance.on("NoviceListFinish",this,this.endScrollList);
			}
			// }
			endScrollList(){
				if (this.curData.click_event=='view_drag'){
					this.doFinishGuide();
				}
				}endFinishNovice(data){
				if (0==data.code){
					RoleInfoM.instance.guide_status=data['guide_status'];
					}else{
					GameTools.dealCode(data.code);
				}
				}closeNoviceGuide(){
				if (this.stepName=='steps1'){
					WebSocketManager.instance.send(37000,{"is_finish":0,"step_id":'step1'});
					}else if (this.stepName=='steps2'){
					WebSocketManager.instance.send(37000,{"is_finish":0,"step_id":'step2'});
					}else if (this.stepName=='steps3'){
					WebSocketManager.instance.send(37000,{"is_finish":0,"step_id":'step3'});
				}
				UiManager.instance.closePanel("NoviceGuide",true);
				this.isInGuide=false;
				}shootCostUpdate(){
				if (this.curData){
					if (this.curData.type=="shoot"){
						this.shootCost+=cfg_battery.instance(RoleInfoM.instance.getBattery()).comsume;
						if (this.shootCost > 10){
							this.doFinishGuide();
						}
					}
				}
				}doFinishGuide(){
				if (this.curData.type=="click"){
					if (StartParam.instance.getParam("is_display_public_no_subscribe")==1){
						if (this.curData.step_box_name=='step_follow' && this.curData.step_list_name=='step1'){
							this.nextGuide();
						}
					}
					}else if (this.curData.type=="fight"){
					LoginM.instance.sceneId=1;
					GameEventDispatch.instance.event("StartLoad",[1]);
					}else if (this.curData.type=="slider"){
					GameEventDispatch.instance.event("NoviceGuideClickBar");
				}
				else if (this.curData.type=="new"){
					UiManager.instance.loadView('TaskNew');
					}else if (this.curData.type=="acceptNew"){
					GameEventDispatch.instance.event("NoviceGuideAcceptTaskNew");
					}else if (this.curData.type=="quitNew"){
					UiManager.instance.closePanel('TaskNew',false);
					}else if (this.curData.type=="daily"){
					UiManager.instance.loadView("TaskDaily",null,"SMALL_TO_BIG");
					}else if (this.curData.type=="quitDaily"){
					UiManager.instance.closePanel('TaskDaily',false);
				}
				else if (this.curData.type=="dailyGo"){
					UiManager.instance.closePanel('TaskDaily',false);
					GameEventDispatch.instance.event("ShowGuide",cfg_task.instance(42));
				}
				else if (this.curData.type=="dailyUseProp"){
					FightManager.instance.useSkill(1);
				}
				else if (this.curData.type=="acceptDaily"){
					var a=new C2s_19000();
					a.task_id=42;
					a.is_daily=true;
					WebSocketManager.instance.send(19000,a);
				}
				else if (this.curData.type=="unlockBattery"){
					GameEventDispatch.instance.event("NoviceGuideUnlockBattery");
					}else if (this.curData.type=="changeBattery"){
					GameEventDispatch.instance.event("NoviceGuideChangeBattery");
				}
				else if (this.curData.type=="slider_to_contest"){
					GameEventDispatch.instance.event("NoviceSliderContest");
					}else if (this.curData.type=="open_contest_icon"){
					GameEventDispatch.instance.event("NoviceOpenContest");
					}else if (this.curData.type=="sign_contest"){
					GameEventDispatch.instance.event("NoviceSignContest");
					}else if (this.curData.type=="sign_contest_confirm"){
					UiManager.instance.closePanel("QuitTip",false);
					GameEventDispatch.instance.event("NoviceSignContestConfirm");
					}else if (this.curData.type=="rank"){
					UiManager.instance.loadView("Rank");
					}else if (this.curData.type=="rankQuit"){
					if (StartParam.instance.getParam("is_display_public_no_subscribe")==1){
						UiManager.instance.closePanel("Rank",false);
						}else{
						this.nextGuide();
					}
				}
				else if (this.curData.type=="openFollow"){
					if (StartParam.instance.getParam("is_display_public_no_subscribe")==1){
						UiManager.instance.loadView("Subscription",null,"SMALL_TO_BIG");
						}else{
						this.nextGuide();
					}
				}
				else if (this.curData.type=="quitFight"){
					WebSocketManager.instance.send(12003,null);
				}
				this.nextGuide();
				}nextGuide(){
				if (this.isEnd()){
					if (this.stepName=='steps1'){
						WebSocketManager.instance.send(37000,{"is_finish":1,"step_id":"step1"});
						}else if (this.stepName=='steps2'){
						WebSocketManager.instance.send(37000,{"is_finish":1,"step_id":"step2"});
						}else if (this.stepName=='steps3'){
						WebSocketManager.instance.send(37000,{"is_finish":1,"step_id":"step3"});
					}
					UiManager.instance.closePanel("NoviceGuide",true);
					this.isInGuide=false;
					}else{
					this.curIndex++;
					this.curData=this.stepArr[this.curIndex];
					GameEventDispatch.instance.event("NoviceGuideRefresh");
				}
				}isEnd(){
				var isEnd=this.stepArr.length <=this.curIndex+1;
				return isEnd
				}endUpgradeBattery(data){
				if (RoleInfoM.instance.getBattery()==8){
					WebSocketManager.instance.send(12003,null);
					this.startNoviceGuide('steps2');
				}
				}startNoviceGuide(step){
				var _$this=this;
				this.isInGuide=true;
				this.stepName=step;
				this.curIndex=0;
				this.stepArr=ConfigManager.filter("cfg_novice_guide",function(cfg){
					return cfg.step_list_name==_$this.stepName
					},function(a,b){
					return a.id-b.id
				});
				this.curData=this.stepArr[0];
				UiManager.instance.loadView('NoviceGuide');
			}
			static get instance (){
				return NoviceC._instance || (NoviceC._instance=new NoviceC());
			}
		}

		control.NoviceC=Laya.NoviceC=NoviceC;
		NoviceC._instance=null;	

		class OnLineC{
			constructor (){
				GameEventDispatch.instance.on(String(22001),this,this.get_online_award);
				GameEventDispatch.instance.on(String(22003),this,this.get_online_award_info);
				GameEventDispatch.instance.on(String(22004),this,this.sync_online_award_info);
				GameEventDispatch.instance.on("SystemReset",this,this.reset);
				Laya.timer.frameLoop(1,this,this.onLoop);
			}
			reset(){
				UiManager.instance.closePanel("OnLineReward",true);
				}onLoop(){
				OnLineM.instance.timeTick(Laya.timer.delta / 1000);
				}get_online_award(data){
				var protoData=data;
				if (protoData.code==0){
					OnLineM.instance.RewardIndex=protoData.id;
					OnLineM.instance.setLeftTime(protoData.lt);
					OnLineM.instance.setAwardId(protoData.id);
					GameEventDispatch.instance.event("OnlineAwardUpdate",protoData);
					GameEventDispatch.instance.event("RewardTip",[[1],[protoData.awardNum]]);
				}
				else if (4==protoData.code){
					GameEventDispatch.instance.event("MsgTp",42);
				}
				else{
					GameTools.dealCode(protoData.code);
				}
				}get_online_award_info(data){
				var protoData=data;
				OnLineM.instance.setLeftTime(protoData.lt);
				OnLineM.instance.setAwardId(protoData.id);
				OnLineM.instance.RewardIndex=protoData.id;
				GameEventDispatch.instance.event("OnlineAwardUpdate");
				}sync_online_award_info(data){
				var protoData=data;
				OnLineM.instance.RewardIndex=protoData.id;
				OnLineM.instance.setLeftTime(protoData.lt);
				OnLineM.instance.setAwardId(protoData.id);
				OnLineM.instance.RewardIndex=protoData.id;
				GameEventDispatch.instance.event("OnlineAwardUpdate");
			}
			static get instance (){
				return OnLineC._instance || (OnLineC._instance=new OnLineC());
			}
		}

		control.OnLineC=Laya.OnLineC=OnLineC;
		OnLineC._instance=null;	

		class QuitC{
			constructor (){
				GameEventDispatch.instance.on("QuitTip",this,this.QuitTip);
			}
			QuitTip(data){
				QuitM.instance.setTipInfo(data);
				UiManager.instance.loadView("QuitTip",null,"SMALL_TO_BIG");
			}
			static get instance (){
				return QuitC._instance || (QuitC._instance=new QuitC());
			}
		}

		control.QuitC=Laya.QuitC=QuitC;
		QuitC._instance=null;	

		class RedpointC{
			constructor (){}
			addSpinePointToIcon(target,x,y,click_once=false){
				var spineRoot=new Sprite();
				var spine=new SpineTemplet(RedpointC.spine_rank_point_name);
				spineRoot.name=RedpointC.spine_rank_point_name;
				spineRoot.zOrder=1;
				spineRoot.x=target.width *x;
				spineRoot.y=y;
				spineRoot.addChild(spine);
				this.removeSpinePoint(target);
				target.addChild(spineRoot);
				if (!spine.isPlaying()){
					spine.play("animation",true);
				}
				if (click_once){
					target.once(Event.CLICK,target,this.removeRedPoint,[target]);
				}
				}removeSpinePoint(target){
				target.removeChildByName(RedpointC.spine_rank_point_name);
				}addRedPointToIcon(target,x,y,skin="",depth=1,click_once=false){
				var img=new Image();
				img.name=RedpointC.red_point_name;
				if (skin.length > 0){
					img.skin=skin;
					}else{
					img.skin="ui/common_ex/red_point.png";
				}
				img.zOrder=depth;
				img.x=target.width *x;
				img.y=y;
				this.removeRedPoint(target);
				target.addChild(img);
				if (click_once){
					target.once(Event.CLICK,target,this.removeRedPoint,[target]);
				}
				}removeRedPoint(target){
				target.removeChildByName(RedpointC.red_point_name);
				}addActivityPointToIcon(target,x,y,click_once=false){
				if (ActivityM.instance.activityPictureConfig[4]){
					var img=new Image();
					img.name=RedpointC.activity_point_name;
					img.skin=ActivityM.instance.activityPictureConfig[4];
					img.zOrder=0;
					img.x=target.width *x;
					img.y=y;
					this.removeActivityPoint(target);
					target.addChild(img);
					if (click_once){
						target.once(Event.CLICK,target,this.removeRedPoint,[target]);
					}
				}
				}removeActivityPoint(target){
				if (!ActivityM.instance.activityTicketContinueTime || ActivityM.instance.activityPictureConfig[4]){
					target.removeChildByName(RedpointC.activity_point_name);
				}
				}addDoubleRewardPointToIcon(target,x,y,click_once=false){
				var img=new Image();
				img.name=RedpointC.activity_point_name;
				img.skin="ui/common_ex/img_fanbei.png";
				img.zOrder=2;
				img.x=target.width *x;
				img.y=y;
				this.removeDoubleRewardPoint(target);
				target.addChild(img);
				if (click_once){
					target.once(Event.CLICK,target,this.removeRedPoint,[target]);
				}
				}removeDoubleRewardPoint(target){
				if (target.getChildByName(RedpointC.activity_point_name)){
					target.removeChildByName(RedpointC.activity_point_name);
				}
			}
			static get instance (){
				return RedpointC._instance || (RedpointC._instance=new RedpointC());
			}
		}

		control.RedpointC=Laya.RedpointC=RedpointC;
		RedpointC._instance=null;
		RedpointC.red_point_name="name_of_red_point_uid";
		RedpointC.activity_point_name="name_of_activity_point_uid";
		RedpointC.spine_rank_point_name="tishi";	

		class RegiC{
			constructor (){
				this.on_off=0;
				GameEventDispatch.instance.on("SignInUpdate",this,this.signUpdate);
				GameEventDispatch.instance.on("Regic",this,this.startRegic);
			}
			startRegic(){
				if (!LoginM.instance.isCompleteCertification && this.on_off==0){
					if (CertificationM.instance.isOpenCertification()){
						var certInfo=new CertificationInfo();
						certInfo.openFrom="login";
						CertificationM.instance.info=certInfo;
						CertificationM.instance.OpenCertification();
					}
					this.on_off+=1;
					}else{
					if (RegiM.instance.isRegic){
						RegiM.instance.isToday=true;
						if (RegiM.instance.isGet){
							ActivityM.instance.loginNew=true;
							UiManager.instance.loadView("Register",null,"SMALL_TO_BIG");
							}else{
							if (LevelM.instance.isPopupRankPage==1){
								UiManager.instance.loadView("Rank",null,"SMALL_TO_BIG");
								}else{
								if (ActivityM.instance.loginNew && ActivityM.instance.activityIsProceed('multi_at')){
									if (!ActivityM.instance.loginShowActivityPannel){
										ActivityM.instance.loginNew=false;
										ActivityM.instance.loginShowActivityPannel=true;
										UiManager.instance.loadView("UseTicket",null,"SMALL_TO_BIG");
									}
								}
							}
						}
					}
				}
				}signUpdate(){
				RegiM.instance.isRegic=true;
				if (RegiM.instance.isToday){
					if (RegiM.instance.isGet){
						UiManager.instance.loadView("Register",null,"SMALL_TO_BIG");
					}
				}
				}startSign(){
				if (RegiM.instance.isGet){
					UiManager.instance.loadView("Register",null,"SMALL_TO_BIG");
				}
			}
			//startSign();
			static get instance (){
				return RegiC._instance || (RegiC._instance=new RegiC());
			}
		}

		control.RegiC=Laya.RegiC=RegiC;
		RegiC._instance=null;	

		class RewardC{
			constructor (){
				this.isCLose=false;
				GameEventDispatch.instance.on(String(15005),this,this.updateRecord);
				GameEventDispatch.instance.on("RewardFish",this,this.rewardTip);
				GameEventDispatch.instance.on("SystemReset",this,this.closePanel);
				GameEventDispatch.instance.on(String(39002),this,this.isCollectReward);
				GameEventDispatch.instance.on(String(39004),this,this.isCollectReturn);
			}
			updateRecord(data){
				if (data !=null){
					RewardM.instance.currentList=data.list;
					GameEventDispatch.instance.event("RefreshLotteryRecord");
				}
				}closePanel(){
				if (this.isCLose){
					UiManager.instance.closePanel("RewardPage",true);
				}
				}rewardTip(data){
				this.isCLose=true;
				RewardM.instance.setInfo();
				UiManager.instance.loadView("RewardPage",null,"SMALL_TO_BIG");
				}isCollectReward(data){
				RewardM.instance._isCollect=data["is_receive"];
				RewardM.instance._isFristCollect=data["is_collect"];
				GameEventDispatch.instance.event("isCollect");
				}isCollectReturn(data){
				if (data.code==1){
					GameEventDispatch.instance.event("MsgTipContent","今天已经领取过");
				}
			}
			static get instance (){
				return RewardC._instance || (RewardC._instance=new RewardC());
			}
		}

		control.RewardC=Laya.RewardC=RewardC;
		RewardC._instance=null;	

		class RoleInfoC{
			constructor (){
				GameEventDispatch.instance.on(String(10004),this,this.updateProfile);
				GameEventDispatch.instance.on(String(10007),this,this.syncCurrency);
				GameEventDispatch.instance.on(String(10008),this,this.syncRes);
				GameEventDispatch.instance.on(String(10009),this,this.levelUp);
				GameEventDispatch.instance.on(String(14001),this,this.syncBuyData);
				GameEventDispatch.instance.on(String(16001),this,this.buffSync);
				GameEventDispatch.instance.on(String(18001),this,this.updateGoodsItem);
				GameEventDispatch.instance.on(String(20001),this,this.updateSignIn);
				GameEventDispatch.instance.on(String(20003),this,this.signInGetAward);
				GameEventDispatch.instance.on(String(10011),this,this.skillResTipConfirm);
				GameEventDispatch.instance.on(String(15002),this,this.getReward);
				GameEventDispatch.instance.on(String(10021),this,this.resetAwardScore);
				GameEventDispatch.instance.on(String(31001),this,this.syncCoin);
				GameEventDispatch.instance.on(String(12047),this,this.syncCostCoin);
				GameEventDispatch.instance.on(String(41004),this,this.ifSubscription);
				GameEventDispatch.instance.on(String(19015),this,this.syncBindCode);
				GameEventDispatch.instance.on(String(10025),this,this.syncShortRoleState);
				GameEventDispatch.instance.on(String(50002),this,this.syncShortData);
				GameEventDispatch.instance.on(String(50004),this,this.drawReturn);
				GameEventDispatch.instance.on(String(50006),this,this.drawReturn);
				GameEventDispatch.instance.on(String(50008),this,this.drawReturn);
			}
			syncShortRoleState(data){
				RoleInfoM.instance.short_pf=data.short_pf;
				}syncBuyData(data){
				if (data.code==0){
					WebSocketManager.instance.send(50001,{});
				}
				}drawReturn(re){
				if (re){
					if (re.code==1){
						GameEventDispatch.instance.event("MsgTipContent","奖励已领取，请勿重复领取");
						}else if (re.code==2){
						GameEventDispatch.instance.event("MsgTipContent","不合法的ID");
						}else if (re.code==3){
						GameEventDispatch.instance.event("MsgTipContent","未满足领取条件");
						}else if (re.code==10){
						GameEventDispatch.instance.event("MsgTipContent","用户身份错误");
					}
				}
				}syncShortData(re){
				if (re.code==0){
					var data=re.short_info;
					RoleInfoM.instance.curDay=data.curday;
					RoleInfoM.instance.total=data.short_charge_total;
					RoleInfoM.instance.receive=data.sign_accept_ids;
					RoleInfoM.instance.pay_accept_ids=data.pay_accept_ids;
					RoleInfoM.instance.level_accept_ids=data.level_accept_ids;
					RoleInfoM.instance.pay_expire=data.pay_expire;
					RoleInfoM.instance.grade_expire=data.grade_expire;
				}
				GameEventDispatch.instance.event("syncShortData");
				}syncBindCode(data){
				if (data){
					if (data.wx){
						ExchangeM.instance.wxBindTicket=data.wx.bind_ticket;
						ExchangeM.instance.wxExpiredTime=data.wx.expired_time;
						ExchangeM.instance.wxIsBind=data.wx.is_bind;
					}
					if (data.ali){
						ExchangeM.instance.alipayBindTicket=data.ali.bind_ticket;
						ExchangeM.instance.alipayExpiredTime=data.ali.expired_time;
						ExchangeM.instance.alipayIsBind=data.ali.is_bind;
					}
					GameEventDispatch.instance.event("SynBindCode");
				}
				}ifSubscription(data){
				if (data.show==0 || StartParam.instance.getParam("is_display_public_no_subscribe")==0){
					RoleInfoM.instance.setFirstSubscription(false);
					GameEventDispatch.instance.event("SyncSubscriptionIco");
					GameEventDispatch.instance.event("Closesubpanel");
				}
				else if (data.show==1){
					RoleInfoM.instance.setFirstSubscription(true);
				}
			}
			//显示
			syncCostCoin(data){
				RoleInfoM.instance.setCostCoin(data.cost_coin);
				}syncCoin(data){
				RoleInfoM.instance.setCoin(data.coin);
				GameEventDispatch.instance.event("UpdateProfile");
				}resetAwardScore(data){
				RoleInfoM.instance.setAwardScore(0);
				GameEventDispatch.instance.event("UpdateProfile");
				}getReward(data){
				if (0==data.code){
					RoleInfoM.instance.setFcoin(data.fish_coin);
					RoleInfoM.instance.setFcount(0);
					GameEventDispatch.instance.event("UpdateProfile");
				}
				}skillResTipConfirm(data){
				RoleInfoM.instance.setSkillResTip(1);
				}updateSignIn(data){
				var protoData=new S2c_20001();
				protoData.award_get=data['award_get'];
				protoData.day=data['day'];
				RoleInfoM.instance.updateSignInData(protoData.day,protoData.award_get);
				if (data['pop_rank']==0 || data['pop_rank']==1){
					LevelM.instance.isPopupRankPage=data['pop_rank'];
				}
				GameEventDispatch.instance.event("SignInUpdate");
				}signInGetAward(data){
				var protoData=data;
				if (0==protoData.code){
					RoleInfoM.instance.updateSignInData(protoData.day,protoData.award_get);
					GameEventDispatch.instance.event("SignInUpdate");
				}
				}updateGoodsItem(data){
				var protoData=data;
				RoleInfoM.instance.updateGoodsItem(protoData.goods,protoData.num);
				GameEventDispatch.instance.event("GoodsUpdate");
				}buffSync(data){
				var protoData=data;
				GameEventDispatch.instance.event("BuffUpdate");
			}
			//发消息
			levelUp(data){
				var levelInfo=data;
				RoleInfoM.instance.setLevel(levelInfo.level);
				var soundPath=ConfigManager.getConfValue("cfg_global",1,"level_up_sound");
				GameSoundManager.playSound(soundPath);
				var countArr=LevelM.instance.getCountArr(levelInfo.level);
				var goodsArr=LevelM.instance.getGoodsArr(levelInfo.level);
				GameEventDispatch.instance.event("UpgradeC",[goodsArr,countArr]);
				GameEventDispatch.instance.event("UpdateFirstCharge");
				YylyC.RoleLevelUp(levelInfo.level);
				}syncRes(data){
				var res=data;
				RoleInfoM.instance.setCoin(res.coin);
				RoleInfoM.instance.setExp(res.exp);
				RoleInfoM.instance.setFcoin(res.fcoin);
				RoleInfoM.instance.setFcount(res.fcount);
				RoleInfoM.instance.setDiamond(res.diamond);
				RoleInfoM.instance.setBindCoin(res.bcoin);
				RoleInfoM.instance.setContestScore(res.cscore);
				GameEventDispatch.instance.event("UpdateProfile");
				}syncCurrency(data){
				var currency=data;
				if (1==currency.type){
					RoleInfoM.instance.setCoin(currency.num);
				}
				if (4==currency.type){
					RoleInfoM.instance.setDiamond(currency.num);
				}
				if (10==currency.type){
					RoleInfoM.instance.setBindCoin(currency.num);
				}
				GameEventDispatch.instance.event("UpdateProfile");
				}updateProfile(data){
				data=data["a"];
				var mapDic=[
				"name",
				"level",
				"vip",
				"vip_exp",
				"exp",
				"fish_coin",
				"battery",
				"coin",
				"skins",
				"cskin",
				"diamond",
				"goods",
				"purchased_items",
				"vip_buy",
				"task_new",
				"task_daily",
				"create_time",
				"task_daily_ids",
				"charge_total",
				"charge_times",
				"first_charge_reward_accepted",
				"skill_res_tip",
				"login_days",
				"award_score",
				"avatar",
				"red_points",
				"day_index",
				"month_card",
				"puuid",
				"exchange",
				"bcoin",
				"at_coin",
				"wxmini_balance",
				'is_set_bank_password',
				'bank_gold',
				'worldcup_battery_accepted',
				"worldcup_coin",
				"is_bind_tel",
				"tel",
				"guide_status"];
				RoleInfoM.instance.init_time_skins(data[40]);
				RoleInfoM.instance.coin_rate=data[41];
				RoleInfoM.instance.chance_rate=data[42];
				RoleInfoM.instance.coin_rate_buy=data[43];
				RoleInfoM.instance.chance_rate_buy=data[44];
				ExchangeM.instance._platform=data[45];
				var obj={};
				data=data;
				for (var i=0;i < data.length;i++){
					obj[mapDic[i]]=data[i];
				};
				var profileData=obj;
				RoleInfoM.instance.setProfileInfo(profileData);
				RoleInfoM.instance.puuid=obj["puuid"];
				var is360=StartParam.instance.getParam("platform")=="360h5";
				if (is360){
					if (GameTools.getUrlParamValue('is_new')==1){
						T360C.initNickname();
					}
				}
				GameEventDispatch.instance.event("UpdateProfile");
			}
			static get instance (){
				return RoleInfoC._instance || (RoleInfoC._instance=new RoleInfoC());
			}
		}

		control.RoleInfoC=Laya.RoleInfoC=RoleInfoC;
		RoleInfoC._instance=null;	

		class RTipC{
			constructor (){
				GameEventDispatch.instance.on("RewardTip",this,this.RewardTip);
			}
			RewardTip(dataOne,dataTwo,isShow){
				RTipM.instance.setInfo(dataOne,dataTwo,isShow);
				UiManager.instance.loadView("RewardTip");
			}
			static get instance (){
				return RTipC._instance || (RTipC._instance=new RTipC());
			}
		}

		control.RTipC=Laya.RTipC=RTipC;
		RTipC._instance=null;	

		class RuleC{
			constructor (){
				GameEventDispatch.instance.on("GetGoldPoolAward",this,this.getGoldPoolAward);
			}
			getGoldPoolAward(data){
				RuleM.instance.coinCount=data.value;
				RuleM.instance.goodsId=1;
				RuleM.instance.activityID=data.reward_item_ids;
				RuleM.instance.activityNum=data.reward_item_nums;
				!ENV.isShowDied()&& UiManager.instance.loadView("Prize",null,"SMALL_TO_BIG");
			}
			static get instance (){
				return RuleC._instance || (RuleC._instance=new RuleC());
			}
		}

		control.RuleC=Laya.RuleC=RuleC;
		RuleC._instance=null;	

		class ShopC{
			constructor (){
				this.appPayCheckCount=0;
				this.appPayOrder="";
				GameEventDispatch.instance.on("Shop",this,this.openShop);
				GameEventDispatch.instance.on("ChangeSkin",this,this.changeSkin);
				GameEventDispatch.instance.on("AppPaySuccess",this,this.appPaySuccess);
				GameEventDispatch.instance.on("ShopBuy",this,this.buy);
				GameEventDispatch.instance.on(String(13005),this,this.updateSkins);
				GameEventDispatch.instance.on(String(14007),this,this.finishAcceptMonthCardReward);
				GameEventDispatch.instance.on(String(14009),this,this.finishAcceptMonthCardReward);
				GameEventDispatch.instance.on(String(14010),this,this.buyJump);
				GameEventDispatch.instance.on(String(14011),this,this.buySuccess);
				GameEventDispatch.instance.on(String(14003),this,this.endChargeReward);
				GameEventDispatch.instance.on(String(14015),this,this.endExchange);
				GameEventDispatch.instance.on(String(14016),this,this.syncExchange);
				GameEventDispatch.instance.on(String(14023),this,this.syncMiniBalance);
				GameEventDispatch.instance.on(String(14021),this,this.syncActivityTicket);
				GameEventDispatch.instance.on(String(14018),this,this.endGift);
				GameEventDispatch.instance.on(String(14020),this,this.endConfirmGift);
				GameEventDispatch.instance.on(String(14030),this,this.showRewardTip);
				GameEventDispatch.instance.on(String(14029),this,this.endUseMonthCard);
				GameEventDispatch.instance.on(String(14032),this,this.appOrderCheckRet);
				GameEventDispatch.instance.on(String(14061),this,this.endSync360UserInfo);
			}
			// }
			endSync360UserInfo(){
				GameEventDispatch.instance.event("UpdateProfile");
				}showRewardTip(data){
				GameEventDispatch.instance.event("RewardTip",[data.reward_item_ids,data.reward_item_nums]);
				}endUseMonthCard(data){
				if (0==data.code){
					GameEventDispatch.instance.event("MsgTipContent","使用成功");
					GameEventDispatch.instance.event("EndUseMonthCard");
					}else if (1==data.code){
					GameEventDispatch.instance.event("MsgTipContent","参数错误");
					}else if (2==data.code){
					GameEventDispatch.instance.event("MsgTipContent","该道具不可使用");
					}else if (3==data.code){
					GameEventDispatch.instance.event("MsgTipContent","该道具不可使用");
					}else if (4==data.code){
					GameEventDispatch.instance.event("MsgTipContent","月卡道具不足");
					}else{
					GameTools.dealCode(data.code);
				}
				}endConfirmGift(data){
				if (0==data.code){
					if (data.reward_item_ids){
						GameEventDispatch.instance.event("RewardTip",[data.reward_item_ids,data.reward_item_nums]);
					}
					GameEventDispatch.instance.event("GiftConfirmFinish",data);
					}else if (1==data.code){
					GameEventDispatch.instance.event("MsgTipContent","重复领取");
					}else if (2==data.code){
					GameEventDispatch.instance.event("MsgTipContent","操作失败");
					}else{
					GameTools.dealCode(data.code);
				}
				}endGift(data){
				if (0==data.code){
					GameEventDispatch.instance.event("MsgTipContent","赠送成功");
					GameEventDispatch.instance.event("GiftFinish",data);
					}else if (1==data.code){
					GameEventDispatch.instance.event("MsgTipContent","道具不足");
					}else if (2==data.code){
					GameEventDispatch.instance.event("MsgTipContent","不能赠送给自己");
					}else if (3==data.code){
					GameEventDispatch.instance.event("MsgTipContent","该道具不能赠送");
					}else if (5==data.code){
					GameEventDispatch.instance.event("MsgTp",46);
					}else if (6==data.code){
					GameEventDispatch.instance.event("MsgTipContent","激活月卡，开放赠送功能");
					}else if (7==data.code){
					GameEventDispatch.instance.event("MsgTipContent","解锁炮台，开放赠送功能");
					}else{
					GameTools.dealCode(data.code);
				}
				}endExchange(data){
				if (0==data.code){
					if (data['result']){
						var type=data.result["data"].type;
						if (type=="red_pack"){
							if (ExchangeM.instance.curSelect==1){
								GameEventDispatch.instance.event("MsgTipContent",{
									str:"兑换成功,请前往《集结号捕鱼H5》公众号,领取福袋",
									time:1500
								});
								}else if (ExchangeM.instance.curSelect==2){
								GameEventDispatch.instance.event("MsgTipContent",{
									str:"兑换成功,请前往《集结号福袋》小程序,领取福袋",
									time:1500
								});
							}
							}else if (type=="pf_score"){
							var commodityNum=parseInt(data.result["data"].item_num);
							var curNum=parseInt(data.result["data"].new_pf_score);
							GameEventDispatch.instance.event("MsgTipContent",{
								str:commodityNum+"积分兑换成功，当前剩余总积分"+curNum,
								time:1500
							});
							GameEventDispatch.instance.event("ExchangeFinish",null);
							}else{
							if (data.is_show){
								GameEventDispatch.instance.event("RewardTip",[data.reward_item_ids,data.reward_item_nums]);
							}
							GameEventDispatch.instance.event("ExchangeFinish",data);
						}
						}else{
						GameEventDispatch.instance.event("ExchangeFinish",data);
					}
					}else if (1==data.code){
					GameEventDispatch.instance.event("MsgTipContent","珍珠不足");
					}else if (2==data.code){
					GameEventDispatch.instance.event("MsgTipContent","库存不足");
					}else if (3==data.code){
					GameEventDispatch.instance.event("MsgTipContent","金币不足");
					}else if (4==data.code){
					GameEventDispatch.instance.event("MsgTipContent","参数错误");
					}else if (5==data.code){
					GameEventDispatch.instance.event("MsgTipContent","商品兑换时间已结束");
					}else if (6==data.code){
					GameEventDispatch.instance.event("MsgTipContent","更新库存失败");
					}else if (8==data.code){
					GameEventDispatch.instance.event("MsgTipContent","用户数据错误");
					}else if (9==data.code){
					GameEventDispatch.instance.event("MsgTipContent","珍珠兑换失败,请稍后重试");
					}else if (10==data.code){
					GameEventDispatch.instance.event("MsgTipContent","兑换超过限制");
					}else if (11==data.code){
					GameEventDispatch.instance.event("MsgTipContent","珍珠兑换失败,请稍后重试");
					}else if (13==data.code){
					GameEventDispatch.instance.event("MsgTipContent","该账号存在风险，已被微信拦截");
					}else if (14==data.code){
					GameEventDispatch.instance.event("MsgTipContent","您已达到上限");
					}else if (15==data.code){
					GameEventDispatch.instance.event("MsgTipContent","请先关注《集结号捕鱼H5》公众号");
					}else if (20==data.code){
					GameEventDispatch.instance.event("MsgTipContent","系统错误");
					}else if (30==data.code){
					GameEventDispatch.instance.event("MsgTipContent","账号未绑定");
					}else if (31==data.code){
					GameEventDispatch.instance.event("MsgTipContent","该渠道兑换已关闭");
					}else if (32==data.code){
					GameEventDispatch.instance.event("MsgTipContent","兑换红包参数错误");
				}
				else if (100==data.code){
					GameEventDispatch.instance.event("MsgTipContent","福利转转转活动已结束");
					}else if (101==data.code){
					GameEventDispatch.instance.event("MsgTipContent","皮肤已经拥有");
					}else if (102==data.code){
					GameEventDispatch.instance.event("MsgTipContent","您已经兑换过该皮肤");
					}else{
					GameTools.dealCode(data.code);
				}
				GameEventDispatch.instance.event("UpdateExchangeBtn");
				}syncActivityTicket(data){
				var num=data["num"];
				RoleInfoM.instance.activity_ticket=num;
				GameEventDispatch.instance.event("UpdateActivityTicket",num);
				}syncPreferencesPayType(data){
				if (data){
					ExchangeM.instance.payType=data.redpack_type;
				}
				}syncExchange(data){
				var exchange=data["exchange"];
				RoleInfoM.instance.setExchange(exchange);
				GameEventDispatch.instance.event("UpdateExchange",exchange);
				}sendSyncMiniBalance(){
				WebSocketManager.instance.send(14022,{});
				}syncGoldExchange(data){
				GameEventDispatch.instance.event("UpdateGoldExchange");
				}syncMiniBalance(data){
				if (0==data.code){
					var balance=data["balance"];
					if (data["charge_times"]){
						var chargeTime=data["charge_times"];
						RoleInfoM.instance.setChargeTimes(chargeTime);
					}
					RoleInfoM.instance.mini_balance=balance;
					GameEventDispatch.instance.event("UpdateMiniBalance",balance);
					GameEventDispatch.instance.event("UpdateFirstCharge");
					}else{
				}
				}endChargeReward(data){
				if (0==data.code){
					RoleInfoM.instance.setFirstChargeRewardAccepted(1);
					var index=data.reward_item_ids.indexOf(23);
					if (index >-1){
						data.reward_item_ids.splice(index,1);
						data.reward_item_nums.splice(index,1);
					}
					GameEventDispatch.instance.event("RewardTip",[data.reward_item_ids,data.reward_item_nums]);
					GameEventDispatch.instance.event("UpdateFirstCharge");
					}else{
					console.log("重复领取");
				}
			}
			/**
			*是否显示首冲按钮
			*@return
			*/
			isShowFirstIcon(){
				if (RoleInfoM.instance.getFirstChargeRewardAccepted()){
					return false
					}else{
					if (RoleInfoM.instance.getLevel()>=cfg_first_charge.instance("1").level){
						return true
					}
					if (RoleInfoM.instance.getChargeTimes()> 0){
						return true
					}
					return false
				}
				}appOrderCheckRet(data){
				if (data.code==0){
					GameEventDispatch.instance.event("AppOrderCheckOk",null);
					Laya.timer.clear(this,this.appPayCheck);
				}
				}appPayCheck(){
				this.appPayCheckCount++;
				if (this.appPayCheckCount < 6 && this.appPayOrder.length > 0){
					var p=new C2s_14031();
					p.order_no=this.appPayOrder;
					WebSocketManager.instance.send(14031,p);
					Laya.timer.once(2000,this,this.appPayCheck);
				}
				}appPaySuccess(order_no){
				this.appPayOrder=order_no;
				GameEventDispatch.instance.event("OpenWait");
				this.appPayCheckCount=0;
				Laya.timer.once(1000,this,this.appPayCheck);
			}
			//支付跳转
			buyJump(data){
				if (data.code=="success"){
					if (StartParam.instance.getParam("platform")=="app"){
						var appPayStr=JSON.stringify(data.data);
						AndroidInterface.onWXPay(appPayStr);
						}else if (StartParam.instance.getParam("platform")=="360"){
						var appPayStr=JSON.stringify(data.data);
						AndroidInterface.on360Pay(appPayStr);
						}else if (StartParam.instance.getParam("platform")=="meizu"){
						var appPayStr=JSON.stringify(data.data);
						AndroidInterface.onMZPay(appPayStr);
						}else if (StartParam.instance.getParam("platform")=="baidu"){
						var appPayStr=JSON.stringify(data.data);
						AndroidInterface.onBaiduPay(appPayStr);
						}else if (StartParam.instance.getParam("platform")=="huawei"){
						var appPayStr=JSON.stringify(data.data);
						AndroidInterface.onHuaweiPay(appPayStr);
						}else if (StartParam.instance.getParam("platform")=="yyb"){
						var appPayStr=JSON.stringify(data.data);
						AndroidInterface.onYingyongbaoPay(appPayStr);
						}else if (StartParam.instance.getParam("platform")=="xiaomi"){
						var appPayStr=JSON.stringify(data.data);
						AndroidInterface.onXiaomiPay(appPayStr);
						}else if (StartParam.instance.getParam("platform")=="ali"){
						var appPayStr=JSON.stringify(data.data);
						AndroidInterface.onAliPay(appPayStr);
						}else if (StartParam.instance.getParam("platform")=="quick"){
						var appPayStr=JSON.stringify(data.data);
						AndroidInterface.onQuickPay(appPayStr);
						}else if (StartParam.instance.getParam("platform")=="yyly"){
						YylyC.pay(data);
						}else if (StartParam.instance.getParam("platform")=="360h5"){
						T360C.pay(data.data);
						}else if (StartParam.instance.getParam("platform")=="yawy"){
						YawyC.pay(data.data);
						}else if (StartParam.instance.getParam("platform")=="aiqiyi"){
						var win=window;
						var arr=[
						"http://togame.pps.tv",
						"http://togame.iqiyi.com",
						"http://playgame.pps.tv",
						"http://playgame.iqiyi.com",
						"http://playgame2.iqiyi.com"];
						for (var i=0;i < 5;i++){
							var url=arr[i];
							Browser.window.top.postMessage(data.data,url);
						}
						}else if (StartParam.instance.getParam("platform")=="cocos"){
						CocosC.pay(data.data);
						}else{
						var url=data.data.url;
						window.top.location.href=url;
					}
					}else if (data.code=="payment_limit"){
					GameEventDispatch.instance.event("MsgTp",37);
					}else if (data.code=="month_payment_limit"){
					GameEventDispatch.instance.event("MsgTipContent",data.msg);
				}
			}
			//发放礼物后的信息同步
			buySuccess(data){
				if (0==data.code){
					if (!data.tab){
						GameEventDispatch.instance.event("MsgTp",6);
						}else{
						if (data.skins){
							RoleInfoM.instance.setSkins(data.skins);
						}
						if (data.purchased_items){
							RoleInfoM.instance.setPurchasedItems(data.purchased_items);
						}
						if (data.charge_times){
							RoleInfoM.instance.setChargeTimes(data.charge_times);
						}
						if (data.charge_total){
							RoleInfoM.instance.setChargeTotal(data.charge_total);
						}
						if (data.vip_exp){
							RoleInfoM.instance.setVipExp(data.vip_exp);
						}
						if (data.vip){
							RoleInfoM.instance.setVip(data.vip);
						}
						if (data.month_card){
							RoleInfoM.instance.setMonthCard(data.month_card);
						}
						WebSocketManager.instance.send(50001,{});
						GameEventDispatch.instance.event("MonthCardUpdate");
						GameEventDispatch.instance.event("UpdateFirstCharge");
						GameEventDispatch.instance.event("ShopRefresh",data.tab);
						if (Object.keys(data.reward_item_ids).length!==0){
							GameEventDispatch.instance.event("RewardTip",[data.reward_item_ids,data.reward_item_nums]);
						}
					}
					}else if (1==data.code){
					GameEventDispatch.instance.event("MsgTp",7);
					}else if (2==data.code){
					GameEventDispatch.instance.event("MsgTp",8);
					}else if (3==data.code){
					GameEventDispatch.instance.event("MsgTp",9);
					}else if (4==data.code){
					GameEventDispatch.instance.event("MsgTp",10);
					}else if (200==data.code){
					GameEventDispatch.instance.event("MsgTipContent","活动已结束");
				}
				}openShop(tab_name){
				if (WxC.isHideShop()){
					if (tab_name=="tab_skin"){
						GameEventDispatch.instance.event("MsgTipContent","功能未开放");
						}else if (tab_name=="tab_coin"){
						GameEventDispatch.instance.event("MsgTipContent","金币不足");
						}else if (tab_name=="tab_package"){
						GameEventDispatch.instance.event("MsgTipContent","功能未开放");
						}else if (tab_name=="tab_diamond"){
						GameEventDispatch.instance.event("MsgTipContent","钻石不足");
						}else if (tab_name=="tab_mini"){
						GameEventDispatch.instance.event("MsgTipContent","功能未开放");
						}else{
						GameEventDispatch.instance.event("MsgTipContent","功能未开放");
					}
					}else{
					UiManager.instance.loadView("Shop",tab_name,"SMALL_TO_BIG");
					GameEventDispatch.instance.event("ShopRefresh",tab_name);
				}
				}changeSkin(skin_id){
				var p=new C2s_13003();
				p.skin=skin_id;
				p.battery=0;
				WebSocketManager.instance.send(13003,p);
				}updateSkins(data){
				if (data.skins){
					RoleInfoM.instance.setSkins(data.skins);
					GameEventDispatch.instance.event("ShopRefresh","tab_skin");
				}
				}finishAcceptMonthCardReward(data){
				if (data.month_card){
					RoleInfoM.instance.setMonthCard(data.month_card);
				}
				if (data.reward_item_ids){
					GameEventDispatch.instance.event("RewardTip",[data.reward_item_ids,data.reward_item_nums]);
				}
				GameEventDispatch.instance.event("MonthCardUpdate");
				}buy(commodity){
				if (WxC.isInMiniGame()){
					if (commodity.tab=="tab_mini"){
						WxC.wx_requestPayment(commodity);
						}else{
						if (RoleInfoM.instance.mini_balance >=commodity.mini_currency_amount){
							WebSocketManager.instance.send(14024,{id:commodity.id});
							}else{
							WxC.wx_requestPayment(commodity);
						}
					}
					}else{
					var a=new C2s_14000();
					a.id=commodity.id;
					a.platform=StartParam.instance.getParam("platform");
					WebSocketManager.instance.send(14000,a);
				}
			}
			static get instance (){
				return ShopC._instance || (ShopC._instance=new ShopC());
			}
		}

		control.ShopC=Laya.ShopC=ShopC;
		ShopC._instance=null;	

		class SmallGameHeartbeatC{
			constructor (){
				//this.unreceiveTime=NaN;
				//多长时间未接收到心跳包
				//this.unreceiveMaxTime=NaN;
				//多长时间未接收到心跳包算断线
				//this.unsendTime=NaN;
				//多长时间未发送心跳包
				//this.sendTime=NaN;
				//心跳包发送间隔
				//this.handshake=false;
				//接收到心跳包
				this.maxReconnectCount=3;
				//最大重连次数
				//this.reconnectCount=0;
				//当前重连次数
				//this.reconnectInterval=NaN;
				//重连间隔
				this.reconnectType=0;
				//断线类型
				this.reconnectContent="";
				this._reconnectLock=false;
				this.unreceiveTime=0;
				this.unsendTime=0;
				this.unreceiveMaxTime=15;
				this.sendTime=3;
				this.handshake=false;
				GameEventDispatch.instance.on(String(27000),this,this.receiveHandshake);
				GameEventDispatch.instance.on(String(27010),this,this.accountReplace);
				GameEventDispatch.instance.on(String(27014),this,this.server_error);
				GameEventDispatch.instance.on(String(27016),this,this.user_check_error);
				GameEventDispatch.instance.on(String(27017),this,this.network_error);
				GameEventDispatch.instance.on(String(27021),this,this.kicked);
				GameEventDispatch.instance.on(String(27020),this,this.receiveHeartbeat);
				GameEventDispatch.instance.on("SGWsClose",this,this.wsClose);
				GameEventDispatch.instance.on("SGWsError",this,this.wsError);
				Laya.timer.loop(1000,this,this.timeTick);
			}
			//被踢下线
			kicked(data){
				this.reconnectType=7;
				this.handshake=false;
				this.reconnectContent=data["reason"];
				WebSocketSmallGameManager.instance.close();
			}
			//网络异常
			network_error(){
				this.reconnectType=6;
				this.handshake=false;
				WebSocketSmallGameManager.instance.close();
			}
			//用户验证失败
			user_check_error(){
				this.reconnectType=5;
				this.handshake=false;
				WebSocketSmallGameManager.instance.close();
			}
			//服务器异常
			server_error(){
				this.reconnectType=4;
				this.handshake=false;
				WebSocketSmallGameManager.instance.close();
			}
			//账号顶替
			accountReplace(){
				this.reconnectType=1;
				this.handshake=false;
				WebSocketSmallGameManager.instance.close();
				}handleSocketClose(){
				SmallM.instance.isReceive=false;
				this.handshake=false;
				this.unsendTime=0;
				this.reconnectInterval=0;
				this.reconnectCount=0;
				var reqData=new Object();
				reqData.in_small_game=false;
				GameEventDispatch.instance.event(GameEvent.SmallGameUiExist,reqData);
				if (reqData.in_small_game && !this._reconnectLock){
					UiManager.instance.loadView("SgBrokePage");
				}
				}wsClose(){
				this.handleSocketClose();
				}wsError(){
				this.handleSocketClose();
				}timeTick(){
				if (WebSocketSmallGameManager.instance.isConnect()){
					this.unreceiveTime+=1;
					this.unsendTime+=1;
					if (this.unreceiveTime > this.unreceiveMaxTime){
						WebSocketSmallGameManager.instance.close();
						this.unsendTime=0;
					}
					if (this.unsendTime > this.sendTime){
						this.unsendTime=0;
						WebSocketSmallGameManager.instance.send(27019,null);
					}
				}
				}receiveHeartbeat(){
				this.unreceiveTime=0;
				}receiveHandshake(data){
				SmallM.instance.isReceive=true;
				this.unreceiveTime=0;
				this.unsendTime=0;
				this.reconnectInterval=0;
				this.reconnectCount=0;
				this.reconnectType=0;
				GameEventDispatch.instance.event("ReceiveSGHandshake",data);
				if (GameConst.in_fight_sg !=data.in_fight){
					UiManager.instance.closePanel("SmallGame",false);
					SettleM.instance.clearData();
					if (!LoginInfoM.instance.mainPageShow){
						WebSocketSmallGameManager.instance.close();
						WebSocketManager.instance.send(12024,null);
					}
				}
			}
			static get instance (){
				return SmallGameHeartbeatC._instance || (SmallGameHeartbeatC._instance=new SmallGameHeartbeatC());
			}
		}

		control.SmallGameHeartbeatC=Laya.SmallGameHeartbeatC=SmallGameHeartbeatC;
		SmallGameHeartbeatC._instance=null;	

		/**
		*...
		*@author ...
		*/
		class SubscriptionC{
			constructor (){
				//this.mainpagedisBtn=false;
				//this.ifgetListArr=false;
				GameEventDispatch.instance.on(String(41001),this,this.checkSubscribe);
				GameEventDispatch.instance.on(String(39001),this,this.giftCodeInfoRturn);
			}
			//礼包码旧接口
			giftCodeInfoRturn(re){
				if (re.code==0){
					}else if (1==re.code){
					GameEventDispatch.instance.event("MsgTipContent","礼包码错误");
					}else if (2==re.code){
					GameEventDispatch.instance.event("MsgTipContent","礼包码错误");
					}else if (3==re.code){
					GameEventDispatch.instance.event("MsgTipContent","礼包码错误");
					}else if (4==re.code){
					GameEventDispatch.instance.event("MsgTipContent","礼包码错误");
					}else if (5==re.code){
					GameEventDispatch.instance.event("MsgTipContent","该礼包码已过期");
					}else if (6==re.code){
					GameEventDispatch.instance.event("MsgTipContent","该礼包码不可使用");
					}else if (7==re.code){
					GameEventDispatch.instance.event("MsgTipContent","该礼包码不可使用");
					}else if (8==re.code){
					GameEventDispatch.instance.event("MsgTipContent","该礼包码不可使用");
					}else if (9==re.code){
					GameEventDispatch.instance.event("MsgTipContent","已经领取完该礼包");
					}else if (10==re.code){
					GameEventDispatch.instance.event("MsgTipContent","已经使用过该礼包码");
					}else if (11==re.code){
					GameEventDispatch.instance.event("MsgTipContent","该礼包码不可使用");
					}else if (12==re.code){
					GameEventDispatch.instance.event("MsgTipContent","服务器繁忙，请稍后重试");
					}else if (13==re.code){
					GameEventDispatch.instance.event("MsgTipContent","该礼包码不可使用");
					}else{
					GameTools.dealCode(re.code);
				}
				}checkSubscribe(res){
				if (res.code==0){}
					else if (res.code==1){}
				else if (res.code==2){
					GameEventDispatch.instance.event("ResetSubBtn",[true]);
				}
				else if (res.code==3){}
				else{
					GameEventDispatch.instance.event("MsgTipContent","网络请求失败,请重试");
				}
				if (!this.ifgetListArr){
					this.ifgetListArr=true;
					GameEventDispatch.instance.event("UpdateGiftlist",[res.reward]);
				}
				}checkgetGift(){
				if (!this.mainpagedisBtn){
					this.mainpagedisBtn=true;
					RoleInfoM.instance.setFirstSubscription(false);
					GameEventDispatch.instance.event("SyncSubscriptionIco");
				}
			}
			//关闭主页ico
			getFirstSubscribe(res){
				if (res.code==0){}
					else if (res.code==1){
					GameEventDispatch.instance.event("MsgTipContent","重复领奖");
				}
				else if (res.code==2){
					GameEventDispatch.instance.event("MsgTipContent","网络请求失败,请重试");
				}
			}
			static get instance (){
				return SubscriptionC._instance || (SubscriptionC._instance=new SubscriptionC());
			}
		}

		control.SubscriptionC=Laya.SubscriptionC=SubscriptionC;
		SubscriptionC._instance=null;	

		class T360C{
			constructor (){}
			static endGet360Info (user){
				var qid=GameTools.getUrlParamValue('360_qid');
				if (user.nickname){
					RoleInfoM.instance.setName(user.nickname);
				}
				if (user.img_url){
					RoleInfoM.instance.avatar=user.img_url;
				}
				WebSocketManager.instance.send(14060,{qid:qid,nickname:user.nickname,img_url:user.img_url});
			}
			static initNickname (){
				var qid=GameTools.getUrlParamValue('360_qid');
				var win=window;
				var H5_GAME_360=win.H5_GAME_360;
				if (!T360C.buyer){
					T360C.buyer=new H5_GAME_360();
				};
				var CONST=H5_GAME_360.CONST;
				T360C.buyer.emit(CONST.EVENT.USER.INFO,{qid:qid},T360C.endGet360Info);
			}
			static pay (data){
				var win=window;
				var H5_GAME_360=win.H5_GAME_360;
				if (!T360C.buyer){
					T360C.buyer=new H5_GAME_360();
				};
				var CONST=H5_GAME_360.CONST;
				T360C.buyer.emit(CONST.EVENT.BUY.START,data);
			}
			static is360Game (){
				if (StartParam.instance.getParam("platform")=="360h5" || StartParam.instance.getParam("platform")=="360"){
					return true;
				}
				return false;
			}
		}

		control.T360C=Laya.T360C=T360C;
		T360C.buyer=null;	

		class TaskC{
			constructor (){
				this.is_bind=false;
				GameEventDispatch.instance.on("10004",this,this.init);
				GameEventDispatch.instance.on("19006",this,this.syncRedPoint);
				GameEventDispatch.instance.on("ClearRedPoint",this,this.clearRedPoint);
			}
			init(){
				if (!this.is_bind){
					GameEventDispatch.instance.on("19001",this,this.finishTask);
					GameEventDispatch.instance.on("19003",this,this.sync);
					GameEventDispatch.instance.on("19005",this,this.finishTaskNewDay);
					this.is_bind=true;
				}
				}clearRedPoint(point_value){
				var a=new C2s_19007();
				a.point_value=point_value;
				WebSocketManager.instance.send(19007,a);
				}syncRedPoint(data){
				var red_points=data["red_points"];
				RoleInfoM.instance.setRedPoints(red_points);
				GameEventDispatch.instance.event("ShowRedPoint");
			}
			//领取当天的奖励
			finishTaskNewDay(data){
				if (0==data["code"]){
					var day_index=data["day_index"];
					var cfg=cfg_task_new.instance(day_index+"");
					GameEventDispatch.instance.event("RewardTip",[cfg.reward_item_ids,cfg.reward_item_nums]);
					this.sync(data);
				}
				}finishTask(data){
				var code=data["code"];
				if (0==code){
					var task=cfg_task.instance(data["finish_task_id"]+"");
					if (ActivityM.instance.activityIsActive('bonus')){
						GameEventDispatch.instance.event("RewardTip",[task.activity_item_ids,task.activity_item_nums]);
					}
					else{
						GameEventDispatch.instance.event("RewardTip",[task.reward_item_ids,task.reward_item_nums]);
					}
					this.sync(data);
					}else if (1==code){
					GameEventDispatch.instance.event("MsgTipContent","无法领取任务奖励");
					}else if (2==code){
					GameEventDispatch.instance.event("MsgTipContent","重复领取任务奖励");
					}else if (3==code){
					GameEventDispatch.instance.event("MsgTipContent","无法领取任务奖励");
					}else{
					GameTools.dealCode(code);
				}
				}sync(data){
				if (!data){
					return;
				}
				if (data['task_new']){
					RoleInfoM.instance.updateTaskNew(data['task_new']);
					GameEventDispatch.instance.event("RefreshTaskNew");
				}
				if (data['task_daily']){
					RoleInfoM.instance.updateTaskDaily(data['task_daily']);
					GameEventDispatch.instance.event("RefreshTaskDaily");
				}
				if (data['day_index']){
					if (data['day_index'] > RoleInfoM.instance.getDayIndex()){
						RoleInfoM.instance.setDayIndex(data['day_index']);
						GameEventDispatch.instance.event("RefreshTaskNew");
					}
				}
				if (data["task_daily_ids"]){
					RoleInfoM.instance.setTaskDailyIds(data['task_daily_ids']);
					GameEventDispatch.instance.event("RefreshTaskDailyTotal");
				}
				}new_task_override(day_index){
				var taskDatas=RoleInfoM.instance.getTaskNew();
				var taskData=taskDatas[day_index-1];
				var task_ids=cfg_task_new.instance(day_index+"").task_ids;
				var cfgs=ConfigManager.filter("cfg_task",function(item){
					return task_ids.indexOf(item.id)>-1
				});
				var is_all_accepted=taskData.rec_ids.length-1==task_ids.length;
				var have_can_accept=false;
				var is_all_finished=true;
				for (var i=0;i < cfgs.length;i++){
					var cfg=cfgs[i];
					var is_accept=taskData.rec_ids.indexOf(cfg.id)>-1;
					var percent=control.TaskC.instance.taskPercent(taskData,cfg);
					var is_finish=percent==1;
					if (!is_finish){
						is_all_finished=false;
					}
					if (is_finish && !is_accept){
						have_can_accept=true;
					}
				}
				return {
					is_all_accepted:is_all_accepted,
					is_all_finished:is_all_finished,
					have_can_accept:have_can_accept
				}
				}getCurTaskValue(taskData,taskConfig){
				var value=0;
				switch (taskConfig.task_type){
					case 1:
						if (taskConfig.task_value_f==0){
							value=taskData.f["total"];
							}else{
							value=taskData.f[taskConfig.task_value_f+""] || 0;
						}
						break ;
					case 2:
						value=taskData.l;
						break ;
					case 3:
						value=taskData.lg;
						break ;
					case 4:;
						var useNum=taskData.goods[taskConfig.task_value_f];
						if (!useNum){
							value=0;
							}else{
							value=useNum;
						}
						break ;
					case 5:
						value=taskData.b;
						break ;
					case 6:
						value=taskData.lv;
						break ;
					case 7:
						value=taskData.g;
						break ;
					case 8:
						value=taskData.rec_ids.length-1;
					}
				return value
				}taskPercent(taskData,taskConfig){
				var percent=0;
				switch (taskConfig.task_type){
					case 1:;
						var value=0;
						if (taskConfig.task_value_f==0){
							value=taskData.f["total"];
							}else{
							value=taskData.f[taskConfig.task_value_f+""] || 0;
						}
						percent=value / taskConfig.task_value_n > 1 ? 1 :value / taskConfig.task_value_n;
						break ;
					case 2:
						percent=taskData.l / taskConfig.task_value_n > 1 ? 1 :taskData.l / taskConfig.task_value_n;
						break ;
					case 3:
						percent=taskData.lg / taskConfig.task_value_n > 1 ? 1 :taskData.lg / taskConfig.task_value_n;
						break ;
					case 4:;
						var useNum=taskData.goods[taskConfig.task_value_f+""];
						if (!useNum){
							percent=0;
							}else{
							percent=useNum / taskConfig.task_value_n > 1 ? 1 :useNum / taskConfig.task_value_n;
						}
						break ;
					case 5:
						percent=taskData.b / taskConfig.task_value_n > 1 ? 1 :taskData.b / taskConfig.task_value_n;
						break ;
					case 6:
						percent=taskData.lv / taskConfig.task_value_n > 1 ? 1 :taskData.lv / taskConfig.task_value_n;
						break ;
					case 7:
						percent=taskData.g / taskConfig.task_value_n > 1 ? 1 :taskData.g / taskConfig.task_value_n;
						break ;
					case 8:
						percent=(taskData.rec_ids.length-1)/ taskConfig.task_value_n > 1 ? 1 :(taskData.rec_ids.length-1)/ taskConfig.task_value_n;
						break ;
					}
				return percent
			}
			static get instance (){
				return TaskC._instance || (TaskC._instance=new TaskC());
			}
		}

		control.TaskC=Laya.TaskC=TaskC;
		TaskC._instance=null;	

		class UpgradeC{
			constructor (){
				GameEventDispatch.instance.on("UpgradeC",this,this.gradeC);
			}
			gradeC(dataOne,isShow){
				UpgradeM.instance.setInfo(dataOne,isShow);
				!ENV.isShowDied()&& UiManager.instance.loadView("Levelup");
			}
			static get instance (){
				return UpgradeC._instance || (UpgradeC._instance=new UpgradeC());
			}
		}

		control.UpgradeC=Laya.UpgradeC=UpgradeC;
		UpgradeC._instance=null;	

		/**
		*...
		*@author ...
		*/
		class WheelC{
			constructor (){
				GameEventDispatch.instance.on(String(40001),this,this.wheeldate);
				GameEventDispatch.instance.on(String(40003),this,this.wheelturn);
				GameEventDispatch.instance.on(String(13006),this,this.sycnwheelSkin);
				GameEventDispatch.instance.on(String(40004),this,this.sycnmonthCard);
				GameEventDispatch.instance.on(String(14070),this,this.usethreeDayCard);
				GameEventDispatch.instance.on(String(14009),this,this.sycnmonthCardMsg);
				GameEventDispatch.instance.on(String(40005),this,this.sycnMidAutumnMsg);
			}
			sycnCoinAndDiamond(res){
				RoleInfoM.instance.setCoin(res.coin);
				RoleInfoM.instance.setDiamond(res.diamond);
				GameEventDispatch.instance.event("UpdateProfile");
				}sycnwheelSkin(res){
				RoleInfoM.instance.init_time_skins(res.skins_duration);
				}usethreeDayCard(){
			}sycnmonthCard(){}
			//[id,time]
			sycnmonthCardMsg(res){}
			//card_duration=0//持续时间
			wheeldate(res){
				if (res.code==0){
					WheelM.instance.setIct(res.ict);
					WheelM.instance.setTimes(res.lottery_times);
					WheelM.instance.setwheelScore(res.lottery_score_total);
					WheelM.instance.setcostScore(res.lottery_consume_total);
					WheelM.instance.isExchange=res.is_exchange;
					WheelM.instance.cdKey=res.cdkey;
					WheelM.instance.midAutumnScore=res.mid_autumn_score;
					var _arr=WheelM.instance.getwheelScore();
					var _playerscore=0;
					for (var i=0,max=_arr.length;i < max;i++){
						_playerscore+=_arr[i];
					}
					WheelM.instance.setPlayerScore(_playerscore);
					GameEventDispatch.instance.event("WheeltipsUpdate");
					GameEventDispatch.instance.event("WheelscoreUpdate");
				}
				else if (res.code==1){
					GameEventDispatch.instance.event("MsgTipContent","活动已下线");
				}
				else if (res.code==2){
					GameEventDispatch.instance.event("MsgTipContent","请求错误,请重试");
				}
				else if (res.code==999){
					GameEventDispatch.instance.event("MsgTipContent","网络错误,请重试");
				}
				}wheelturn(res){
				if (res.code==0){
					GameEventDispatch.instance.event("WheelStart",[res.t,res.r,res.c]);
					WheelM.instance.setIct(res.ict);
					WheelM.instance.setTimes(res.lottery_times);
					WheelM.instance.setwheelScore(res.lottery_score_total);
					WheelM.instance.setcostScore(res.lottery_consume_total);
				}
				else if (res.code==1){
					GameEventDispatch.instance.event("MsgTipContent","不在活动内");
				}
				else if (res.code==2){
					GameEventDispatch.instance.event("MsgTipContent","不满足转盘条件");
				}
				else if (res.code==3){
					GameEventDispatch.instance.event("MsgTipContent","超过次数");
				}
				else{
					GameTools.dealCode(res.code);
				}
				}sycnMidAutumnMsg(res){
				if (res.code==0){
					WheelM.instance.isExchange=1;
					WheelM.instance.cdKey=res.cdkey;
					GameEventDispatch.instance.event("UpdataWheelMidAutumn");
					}else if (res.code==1){
					GameEventDispatch.instance.event("MsgTipContent","积分不足");
					}else if (res.code==2){
					GameEventDispatch.instance.event("MsgTipContent","重复兑换");
					}else if (res.code==10){
					GameEventDispatch.instance.event("MsgTipContent","其它兑换错误");
					}else{
					GameTools.dealCode(res.code);
				}
			}
			static get instance (){
				return WheelC._instance || (WheelC._instance=new WheelC());
			}
		}

		control.WheelC=Laya.WheelC=WheelC;
		WheelC._instance=null;	

		class WxC{
			constructor (){
				this.adUnitId="adunit-031e940c617a38c8";
				this.isLoaded=false;
				this.bannerAdUitId="adunit-f9d1a25a078f30ba";
				this.winInfo={};
				GameEventDispatch.instance.on(String(19032),this,this.syncAdInfo);
				GameEventDispatch.instance.on(String(19031),this,this.onEndWatchAd);
				this.initAdVideo();
				this.initAdBanner();
			}
			initAdBanner(){
				if (WxC.isInMiniGame()&& control.WxC.compareVersion(control.WxC.wxSDKVersion,"2.0.6")>=0){
					this.bannerAd=wx.createBannerAd({
						adUnitId:this.bannerAdUitId,
						style:{
							left:220,
							top:270,
							width:300
						}
					});
					AdM.instance.bannerHeight=87;
					this.bannerAd.onError(this.onBannerADError);
					this.bannerAd.onResize(this.onBannerResize);
					this.bannerAd.onLoad(this.onBannerLoaded);
				}
				}getWinInfo(){
				if (WxC.isInMiniGame()){
					if (this.winInfo && this.winInfo.windowHeight < this.winInfo.windowWidth){
						return this.winInfo
						}else{
						return wx.getSystemInfoSync()
					}
				}
				return null
				}resetBannerStyle(){
				if (WxC.isInMiniGame()&& this.bannerAd){
					var win=this.getWinInfo();
					if (win && win.windowHeight < win.windowWidth){
						this.bannerAd.style.left=(win.windowWidth-300)/ 2;
						this.bannerAd.style.top=win.windowHeight-AdM.instance.bannerHeight;
					}
				}
			}
			//播放广告
			hideBannerAD(){
				if (WxC.isInMiniGame()&& this.bannerAd){
					this.bannerAd.hide();
					this.bannerAd.offError(this.onBannerADError);
					this.bannerAd.offResize(this.onBannerResize);
					this.bannerAd.offLoad(this.onBannerLoaded);
					this.bannerAd.destroy();
					this.initAdBanner();
				}
			}
			//播放广告
			showBannerAD(){
				if (WxC.isInMiniGame()){
					this.resetBannerStyle();
					if (this.bannerAd){
						this.bannerAd.show().catch(this.catchShowBannerError);
					}
					}else{
					if (ENV.isLoginView){
						this.adReward();
					}
				}
			}
			//重新拉去并播放
			catchShowBannerError(){}
			// trace("catchShowBannerError")
			onBannerLoaded(){
				console.log('banner加载完成');
				}onBannerResize(res){
				AdM.instance.bannerHeight=res.height;
			}
			//拉取banner广告失败
			onBannerADError(err){
				console.log("onBannerADError",err);
				var errCode=err.errCode;
				var errMsg=err.errMsg;
				}syncAdInfo(data){
				AdM.instance.total_times=data["total_times"];
				AdM.instance.watch_times=data["watch_times"];
				GameEventDispatch.instance.event("OnSyncAdWatchRemainTimes");
				}onEndWatchAd(data){
				console.log("onEndWatchAd");
				var code=data.code;
				if (0==code){
					WebSocketManager.instance.send(19030,{});
					}else if (1==code){
				}
				}initAdVideo(){
				if (WxC.isInMiniGame()&& control.WxC.compareVersion(control.WxC.wxSDKVersion,"2.0.6")>=0){
					if (!this.videoAd1){
						this.videoAd1=wx.createRewardedVideoAd({adUnitId:this.adUnitId});
						this.videoAd1.onError(this.onVideoADError);
						this.videoAd1.onClose(this.onCloseAD);
						this.videoAd1.onLoad(this.onLoaded);
					}
				}
				}onLoaded(){
				this.isLoaded=true;
				console.log('视频加载完成');
				}onCloseAD(res){
				console.log("onCloseAD",res);
				console.log("res.isEnded",res.isEnded);
				if (res===undefined || res.isEnded){
					WebSocketManager.instance.send(19030,{});
					console.log("激励视频完整播放后关闭");
					}else{
					console.log("激励视频中途被关闭");
				}
				control.WxC.instance.loadVideoAD();
			}
			//拉取广告或者播放视频失败
			onVideoADError(err){
				console.log("onVideoADError",err);
				var errCode=err.errCode;
				var errMsg=err.errMsg;
				if (errCode !=0){
					control.WxC.instance.loadVideoAD();
					control.WxC.instance.showVideoAD();
				}
			}
			//播放广告
			showVideoAD(){
				if (WxC.isInMiniGame()&& this.videoAd1){
					this.videoAd1.show().catch(this.catchShowError);
					}else{
					if (ENV.isLoginView){
						this.adReward();
					}
				}
				}adReward(){
				WebSocketManager.instance.send(19030,{});
			}
			//重新拉去并播放
			catchShowError(){
				console.log("catchShowError",this.catchShowError);
				control.WxC.instance.loadVideoAD();
				control.WxC.instance.showVideoAD();
				}loadVideoAD(){
				this.isLoaded=false;
				if (this.videoAd1)
					this.videoAd1.load();
				}MiniStartObj(){
				if (WxC.isInMiniGame()){
					WxM.instance._backScene=wx.getLaunchOptionsSync().scene;
					return wx.getLaunchOptionsSync()
				}
				return null
				}createUserInfoButton(page){
				var _$this=this;
				if (WxC.isInMiniGame()&& !WxC.button){
					var win=wx.getSystemInfoSync();
					WxC.button=wx.createUserInfoButton({
						type:'text',
						text:'',
						style:{
							left:win.windowWidth / 4,
							top:win.windowHeight / 4,
							width:win.windowWidth / 2,
							height:win.windowHeight / 2,
							lineHeight:win.windowHeight / 2,
							backgroundColor:'#00ff0000',
							color:'#ffffff',
							textAlign:'center',
						}
					});
					WxC.button.onTap(function(res){
						UiManager.instance.closePanel(page,false);
						if (res.errMsg=="getUserInfo:ok"){
							if (res.userInfo){
								control.WxC.get_user_info_success(res);
								var token=StartParam.instance.getParam("access_token");
								ApiManager.instance.saveUserInfo(token,WxC.wxminiName,WxC.wxminiAvatar,Handler.create(this,_$this.successHandle),Handler.create(this,_$this.errorHandle));
							}
							WxC.author=1;
						}
						GameEventDispatch.instance.event("WxMiniLoginComplete",null);
						if (control.WxC.button){
							control.WxC.button.destroy();
							control.WxC.button=null;
						}
					});
				}
				}successHandle(res){
				if (res.code=="success"){
					RoleInfoM.instance.setName(res.data.nickname);
					RoleInfoM.instance.avatar=res.data.avatar;
					GameEventDispatch.instance.event("UpdateProfile",null);
				}
				}errorHandle(){
				}wx_showLoading(){
				if (WxC.isInMiniGame()){
				}
			}
			static get instance (){
				return WxC._instance || (WxC._instance=new WxC());
			}
			static compareVersion (v1,v2){
				v1=v1.split('.');
				v2=v2.split('.');
				var len=Math.max(v1.length,v2.length);
				while (v1.length < len){
					v1.push('0');
				}
				while (v2.length < len){
					v2.push('0');
				}
				for (var i=0;i < len;i++){
					var num1=parseInt(v1[i]);
					var num2=parseInt(v2[i]);
					if (num1 > num2){
						return 1
						}else if (num1 < num2){
						return -1
					}
				}
				return 0
			}
			static isHideShop (){
				return Browser.onIOS && WxC.isInMiniGame()
			}
			static isInMiniGame (){
				var wx=window.wx;
				if (wx){
					return true
					}else{
					return false
				}
			}
			static isMiniLayout (){
				return control.WxC.isInMiniGame()
			}
			static onHideCallback (){
				WxC.isRequest=false;
				if ((WxC.isError || !WebSocketManager.instance.isConnect())&& !WxC.onAppShare){
					WxC.exitGame();
				}
			}
			static onShowCallback (res){
				WxC.wxUpdate();
				if (WxC.isInMiniGame()){
					var c=res.query;
					if (c.channel){
						WxC.wxminiAD_channel=c.channel;
					}
					if (c.gdt_vid){
						WxC.wxminiAD_gdt_vid=c.gdt_vid;
					};
					var weixinadinfo=c.weixinadinfo;
					if (weixinadinfo){
						var weixinadinfoArr=weixinadinfo.split(".");
						if (weixinadinfoArr.length > 0)
							WxC.wxminiAD_aid=weixinadinfoArr[0];
					};
					var userId=c["key1"];
					console.log("1",res.scene);
					WxM.instance._backScene=res.scene;
					WxC.uID=userId;
					if (userId !=null){
						var acesn=control.WxC.accessToken;
						if (acesn !=null){
							WxC.isRequest=true;
							ApiManager.instance.getShareInfo(acesn,userId,Handler.create(WxC,WxC.share),null);
							}else{
						}
					}
				}
			}
			static wxRequest (){
				if (WxC.isInMiniGame()){
					if (WxC.isRequest==false && WxC.uID !=null){
						ApiManager.instance.getShareInfo(control.WxC.accessToken,WxC.uID,Handler.create(WxC,WxC.share),null);
					}
				}
			}
			static wx_lancuch (){
				if (WxC.isInMiniGame()){
				}
			}
			static getLaunchChannel (){
				if (WxC.isInMiniGame()){
					var obj=wx.getLaunchOptionsSync();
					obj.query={test1:"2",test2:"1"};
					if (obj && obj.query){
						return obj.query
					}
					return "000";
				}
				return "000";
			}
			static getLaunchADInfo (){
				if (WxC.isInMiniGame()){
					var obj=wx.getLaunchOptionsSync();
					if (obj && obj.query){
						if (obj.query["channel"]){
							WxC.wxminiAD_channel=obj.query["channel"];
						}
						if (obj.query["gdt_vid"]){
							WxC.wxminiAD_gdt_vid=obj.query["gdt_vid"];
						};
						var weixinadinfo=obj.query["weixinadinfo"];
						if (weixinadinfo){
							var weixinadinfoArr=weixinadinfo.split(".");
							if (weixinadinfoArr.length > 0)
								WxC.wxminiAD_aid=weixinadinfoArr[0];
						}
					}
				}
			}
			static share (msg){
				console.log(JSON.stringify(msg)+"分享获取的结果");
			}
			static wx_onHide (){
				if (WxC.isInMiniGame()){
					wx.onHide(WxC.onHideCallback);
				}
			}
			static wx_onShow (){
				if (WxC.isInMiniGame()){
					wx.onShow(WxC.onShowCallback);
				}
			}
			static wx_netWork (){
				if (WxC.isInMiniGame()){
					wx.onNetworkStatusChange(WxC.onNetCallback);
				}
			}
			static onNetCallback (isConnected,networkType){
				console.log("网络状态");
			}
			static authorize_success (){
				console.log("authorize_success");
				WxC.author=1;
			}
			static authorize_fail (){
				console.log("authorize_fail");
				WxC.author=2;
			}
			static authorize_complete (){
				console.log("authorize_complete");
			}
			static authorize (){
				var params=new Object();
				params.scope="scope.userInfo";
				params.success=WxC.authorize_success;
				params.fail=WxC.authorize_fail;
				params.complete=WxC.authorize_complete;
				wx.authorize(params);
			}
			static getSetting (){
				var params=new Object();
				params.complete=WxC.get_setting_complete;
				wx.getSetting(params);
			}
			static get_setting_complete (data){
				if (data.errMsg=="getSetting:ok"){
					var a=data.authSetting;
					console.log("get_setting_complete3",a["scope.userInfo"]);
					if (a["scope.userInfo"]){
						var isGetInfo=a["scope.userInfo"];
						if (isGetInfo==true){
							WxC.author=1;
							}else{
							WxC.author=2;
						}
						}else{
						WxC.author=2;
					}
				}
			}
			static checkSession (){
				var checkSession=wx.checkSession;
				checkSession({
					success:function (res){
						console.log("check_session_success:",res);
						WxC.wxminiCode=wx.getStorageSync("wxminiCode");
						WxC.wxminiName=wx.getStorageSync("wxminiName");
						WxC.wxminiAvatar=wx.getStorageSync("wxminiAvatar");
						GameEventDispatch.instance.event("WxMiniLoginComplete",null);
					},
					fail:function (res){
						console.log("check_session_fail:",res);
						var login=wx.login;
						login({
							success:function (res){
								if (res.errMsg=="login:ok"){
									WxC.wxminiCode=res.code;
									console.log("login_success:",res);
									WxC.get_user_info();
								}
							},
							fail:function (){}
						});
					},
					complete:function (){}
				});
			}
			static exitGame (){
				if (WxC.isInMiniGame()){
					wx.exitMiniProgram();
				}
			}
			static refreshGame (){
				if (WxC.isInMiniGame()){
					WebSocketManager.instance.closeNoEvent();
					GameTools.closeAllPanel();
					UiManager.instance.reset();
					FightManager.dispose();
					RewriteManager.rewriteFunc();
					ResourceVersion.enable("version.json",Handler.create(WxC,WxC.versionComplete),ResourceVersion.FILENAME_VERSION);
				}
			}
			static downloadFile (type){
				var urlStr="";
				if (type==1){
					urlStr="https://cdn-byh5.jjhgame.com/privacy.pdf";
					}else if (type==2){
					urlStr="https://cdn-byh5.jjhgame.com/user.pdf";
				}
				wx.downloadFile({
					url:urlStr,
					success:function (res){
						var filePath=res.tempFilePath;
						console.log("下载成功");
						Laya.timer.once(2000,this,WxC.openDocumentFunc,[filePath]);
					},
					fail:function (res){
						console.log("下载失败",res);
						},complete:function (res){
						console.log("下载",res);
					}
				});
			}
			static openDocumentFunc (filePath){
				wx.openDocument({
					filePath:filePath,
					fileType:"pdf",
					success:function (res){
						console.log('打开文档成功');
					},
					fail:function (res){
						console.log("打开失败",res);
						},complete:function (res){
						console.log("打开",res);
					}
				});
			}
			static versionComplete (){
				LoadPageUI.uiView=WxLoadPageUI.uiView;
				LoginM.instance.resArr=LoadResM.instance.firstArr;
				LoginM.instance.loginState=0;
				LoginM.instance.spineArr=LoadResM.instance.firstSpineArr;
				UiManager.instance.loadView("Load");
			}
			static get_user_info_success (data){
				WxC.author=1;
				WxC.wxminiName=data.userInfo.nickName;
				WxC.wxminiAvatar=data.userInfo.avatarUrl;
				wx.setStorageSync("wxminiName",WxC.wxminiName);
				wx.setStorageSync("wxminiAvatar",WxC.wxminiAvatar);
				wx.setStorageSync("wxminiCode",WxC.wxminiCode);
				GameEventDispatch.instance.event("WxMiniLoginComplete",null);
			}
			static get_user_info_fail (){
				GameEventDispatch.instance.event("WxMiniLoginComplete",null);
			}
			static get_user_info_complete (){
				console.log("get_user_info_complete");
				WxC.author=2;
				WxC.getSetting();
			}
			static get_user_info (){
				var params=new Object();
				params.success=WxC.get_user_info_success;
				params.fail=WxC.get_user_info_fail;
				params.complete=WxC.get_user_info_complete;
				wx.getUserInfo(params);
			}
			static login_success (data){
				if (data.errMsg=="login:ok"){
					WxC.wxminiCode=data.code;
				}
				WxC.get_user_info();
			}
			static getNetWrokState (){
				var parms=new Object();
				parms.success=WxC.networkSucess;
			}
			static networkSucess (){}
			static url (){
				var tempFilePath=wx.createCanvas().toTempFilePathSync({
					x:10,
					y:10,
					width:200,
					height:150,
					destWidth:400,
					destHeight:300
				});
				return tempFilePath;
			}
			static shareUrl (){
				var htmlC=Laya.stage.drawToCanvas(Laya.stage.width,Laya.stage.height,0,0);
				wx.setStorageSync("htmlCanvas",htmlC);
				var url=wx.wx.getStorageSync("htmlCanvas");
				return url;
			}
			static wx_share (){
				if (WxC.isInMiniGame()){
					var shareCotent=WxM.instance.shareInfo;
					var uid=LoginInfoM.instance.uid+"";
					var a="key1="+uid+"&key2="+34;
					var params=new Object();
					params.title=shareCotent.txt;
					params.query=a;
					params.imageUrl=shareCotent.image;
					if (ENV.channelType==3){
						params.imageUrl="https://cdn-byh5.jjhgame.com/wxminiby/appljbyshare.jpg";
					}
					params.success=WxC.shareSucess;
					params.fail=WxC.sharefail;
					params.complete=WxC.complete;
					wx.shareAppMessage(params);
				}
			}
			static shareImg (){
				var htmlC=Laya.stage.drawToCanvas(Laya.stage.width,Laya.stage.height,0,0);
				var canvans=htmlC.getCanvas();
				return canvans.toDataURL("image/png");
			}
			static area_share (){
				if (WxC.isInMiniGame()){
					var shareCotent=WxM.instance.shareInfo;
					var params=new Object();
					params.title=shareCotent.txt;
					params.imageUrl=shareCotent.image;
					if (ENV.channelType==3){
						params.imageUrl="https://cdn-byh5.jjhgame.com/wxminiby/appljbyshare.jpg";
					}
					params.success=WxC.areaShareSucess;
					params.fail=WxC.areaShareFail;
					params.complete=WxC.areaShareComplete;
					wx.shareAppMessage(params);
				}
			}
			static areaShareComplete (){}
			static areaShareFail (){}
			static areaShareSucess (){
				GameEventDispatch.instance.event("AreaShareSucess");
			}
			static shareInfo (tick){
				if (WxC.isInMiniGame()){
					var params=new Object();
					params.shareTicket=tick;
					params.sucess=WxC.getInfoSucess;
					params.fail=WxC.getInfoFail;
					params.complete=WxC.getInfoComplete;
				}
			}
			static getInfoComplete (){}
			static getInfoSucess (){}
			static getInfoFail (){}
			static shareSucess (res){
				console.log("shareTickets:"+res.shareTickets);
			}
			static sharefail (){}
			static complete (){}
			static login_fail (){
				GameEventDispatch.instance.event("WxMiniLoginComplete",null);
			}
			static login_complete (){
				console.log("login_complete");
			}
			static wx_login (){
				var params=new Object();
				params.success=WxC.login_success;
				params.fail=WxC.login_fail;
				params.complete=WxC.login_complete;
				wx.login(params);
			}
			static refreshlogin_success (data){
				if (data.errMsg=="login:ok"){
					WxC.wxminiCode=data.code;
				}
				WxC.get_user_info();
			}
			static refreshlogin_fail (){}
			static refreshlogin_complete (){}
			static requestPayment_success (data){
				console.log("requestPayment_success");
				console.log(JSON.stringify(data));
				var commodity=control.WxC.cur_commodity;
				if (commodity.tab=="tab_mini"){
					ShopC.instance.sendSyncMiniBalance();
					}else{
					WebSocketManager.instance.send(14024,{id:commodity.id});
				}
				ApiManager.instance.paymentOrder(StartParam.instance.getParam("access_token"),WxC.payment_amount,"","",Handler.create(WxC,function(){
				}),null);
			}
			static requestPayment_fail (data){
				console.log("requestPayment_fail");
				console.log(JSON.stringify(data));
			}
			static requestPayment_complete (data){
				console.log("requestPayment_complete");
				console.log(JSON.stringify(data));
			}
			static getMiniPayAmount (commodity){
				var wxAmountArr=[1,3,6,8,12,18,25,30,40,45,50,60,68,73,78,88,98,108,118,128,148,168,188,198,328,648];
				var index=0;
				while (wxAmountArr[index]+RoleInfoM.instance.mini_balance < commodity.mini_currency_amount){
					index++;
				}
				return wxAmountArr[index]
			}
			static wx_requestPayment (commodity){
				ApiManager.instance.getPaymentIslimit(StartParam.instance.getParam("access_token"),Handler.create(WxC,function(res){
					var data=res.data;
					var is_limit=data["is_limit"];
					if (is_limit==0){
						if (commodity.tab=="tab_mini"){
							WxC.payment_amount=commodity.mini_currency_amount;
							}else{
							WxC.payment_amount=WxC.getMiniPayAmount(commodity);
						}
						control.WxC.cur_commodity=commodity;
						var params=new Object();
						params.mode="game";
						params.env=0;
						if (ENV.channelType==1){
							params.offerId="1450014612";
							}else if (ENV.channelType==2){
							console.log("error: pay channel wait open");
							return;
							}else if (ENV.channelType==3){
							params.offerId="1450015215";
							}else{
							console.log("error: no pay channel");
							return;
						}
						params.currencyType="CNY";
						params.platform="android";
						params.buyQuantity=WxC.payment_amount;
						params.zoneId="1";
						params.success=WxC.requestPayment_success;
						params.fail=WxC.requestPayment_fail;
						params.complete=WxC.requestPayment_complete;
						if (WxC.isInMiniGame()){
							wx.requestMidasPayment(params);
						}
						}else{
						GameEventDispatch.instance.event("MsgTp",37);
					}
				}),null);
			}
			static get_system_info_success (data){
				WxC.client_platform=data.platform;
				WxC.model=data.model;
				WxC.wxSDKVersion=data.SDKVersion;
				console.log(JSON.stringify(data));
			}
			static get_system_info_fail (data){
				console.log("get_system_info_fail");
			}
			static get_system_info_complete (data){
				console.log("get_system_info_complete");
			}
			static wx_get_system_info (){
				if (WxC.isInMiniGame()){
					var params=new Object();
					params.success=WxC.get_system_info_success;
					params.fail=WxC.get_system_info_fail;
					params.complete=WxC.get_system_info_complete;
					wx.getSystemInfo(params);
				}
			}
			static on_window_resize_callback (data){}
			static wx_on_window_resize (){
				if (WxC.isInMiniGame()){
					wx.onWindowResize(WxC.on_window_resize_callback);
				}
			}
			static wx_on_window_error (){
				if (WxC.isInMiniGame()){
					wx.onError(WxC.onerror);
				}
			}
			static onerror (){
				WxC.isError=true;
			}
			static start_compass_success (){
				console.log("start_compass_success");
			}
			static start_compass_fail (){
				console.log("start_compass_fail");
			}
			static start_compass_complete (){
				console.log("start_compass_complete");
			}
			static wx_start_compass (){
				if (WxC.isInMiniGame()){
				}
			}
			static on_compass_change_callback (direction){
				WxC.compassTraceTick=WxC.compassTraceTick+1;
				if (WxC.compassTraceTick > 10){
					WxC.compassTraceTick=0;
				}
			}
			static wx_on_compass_change (){
				if (WxC.isInMiniGame()){
					wx.onCompassChange(WxC.on_compass_change_callback);
				}
			}
			static start_accelerometer_success (){}
			static start_accelerometer_fail (){}
			static start_accelerometer_complete (){}
			static wx_start_accelerometer (){
				if (WxC.isInMiniGame()){
					var params=new Object();
					params.success=WxC.start_compass_success;
					params.fail=WxC.start_compass_fail;
					params.complete=WxC.start_compass_complete;
					wx.startAccelerometer(params);
				}
			}
			static on_accelerometer_change_callback (data){
				WxC.accelerData=data;
			}
			static get_notch (){
				if (null !=WxC.accelerData){
					if (WxC.accelerData.x > 0 && WxC.accelerData.y > 0 && WxC.accelerData.z < 0){
						return "right";
					}
					if (WxC.accelerData.x < 0 && WxC.accelerData.y > 0 && WxC.accelerData.z < 0){
						return "left";
					}
				}
				return "normal";
			}
			static wx_on_accelerometer_change (){
				if (WxC.isInMiniGame()){
					wx.onAccelerometerChange(WxC.on_accelerometer_change_callback);
				}
			}
			static save_file_list_success (data){
				console.log(JSON.stringify(data));
			}
			static save_file_list_fail (data){}
			static save_file_list_complete (data){}
			static wx_file_manager_trace (){
				if (WxC.isInMiniGame()){
					var fileManager=wx.getFileSystemManager();
					var params=new Object();
					console.log("wx_file_manager_trace start");
					console.log(wx.env.USER_DATA_PATH);
					console.log(fileManager.accessSync("spine/wannianjue/H5_wannianjue.sk"));
					params.success=WxC.save_file_list_success;
					params.fail=WxC.save_file_list_fail;
					params.complete=WxC.save_file_list_complete;
					fileManager.getSavedFileList(
					params);
				}
			}
			static timerSub (){
				Laya.timer.loop(10,WxC,function(){
					WxC.subscriberTime+=0.01;
				});
			}
			static subscribeInfo (type){
				if (WxC.isInMiniGame()){
					var version=wx.getSystemInfoSync().SDKVersion;
					if (WxC.compareVersion(version,'2.8.2')>=0){
						WxC.timerSub();
						WxC.wxSubscribeMessage(type);
						}else{
						wx.showModal({
							title:'提示',
							content:'当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。'
						});
					}
				}
			}
			static wxSubscribeMessage (type){
				var tpl=RoleInfoM.instance.subscribe_tpl;
				var arr=[];
				for (var i=0;i < type.length;i++){
					for (var j=0;j < tpl.length;j++){
						if (tpl[j].id==type[i]){
							arr.push(tpl[j].tpl_id);
						}
					}
				};
				var params=new Object();
				params.tmplIds=arr;
				params.success=WxC.get_sub_info_success;
				params.fail=WxC.get_sub_info_fail;
				params.complete=WxC.get_sub_info_complet;
				wx.requestSubscribeMessage(params);
				console.log("wxSubscribeMessage",params);
			}
			static get_sub_info_success (res){
				var token=StartParam.instance.getParam("access_token");
				var param=[];
				if (res.errMsg=="requestSubscribeMessage:ok"){
					Laya.timer.clearAll(WxC);
					for (var key in res){
						if (WxC.conDate(key)){
							param.push({
								id:WxC.conDate(key),
								status:res[key],
								time:WxC.subscriberTime.toFixed(2)
							});
						}
					}
					WxC.subscriberTime=0;
					var str=JSON.stringify(param);
					ApiManager.instance.userSubscribe(token,str,Handler.create(WxC,function(res){
						var data=res.data;
						if (res.code && res.code=="success"){
							RoleInfoM.instance.subscribe_tpl=data.tpl;
							console.log("userSubscribe",res);
						}
						}),Handler.create(WxC,function(re){
						console.log("arrow",re.msg);
					}));
				}
			}
			static conDate (str){
				var tpl=RoleInfoM.instance.subscribe_tpl;
				for (var i in tpl){
					if (tpl[i].tpl_id==str){
						return tpl[i].id;
					}
				}
				return null;
			}
			static get_sub_info_fail (res){
				console.log("errCode",res);
			}
			static get_sub_info_complet (res){
				console.log("get_sub_info_complet",res);
			}
			static wxUpdate (){
				if (WxC.isInMiniGame()&& wx.getUpdateManager){
					var updateManager=wx.getUpdateManager();
					updateManager.onCheckForUpdate(function(res){
						if (res.hasUpdate){
							wx.showLoading({
								title:'升级中',
								mask:true
							});
						}
						console.log("版本信息的回调:"+JSON.stringify(res));
					});
					updateManager.onUpdateReady(function(){
						wx.hideLoading();
						wx.showModal({
							title:'升级提示',
							content:'新版本已经准备好，是否重启应用？',
							success:function (res){
								if (res.confirm){
									updateManager.applyUpdate();
								}
							}
						});
					});
					updateManager.onUpdateFailed(function(){
						wx.hideLoading();
						wx.showModal({
							title:'升级失败',
							content:'新版本下载失败，请检查网络！',
							showCancel:false
						});
					});
				}
			}
			static wx_screen_state (){
				if (WxC.isInMiniGame()){
					var params=new Object();
					params.keepScreenOn=true;
					wx.setKeepScreenOn(params);
				}
			}
			static on_share_app_message_success (){}
			static on_share_app_message_fail (){}
			static on_share_app_message_complete (){
				WxC.onAppShare=false;
			}
			static on_share_app_message_callback (data){
				WxC.onAppShare=true;
				if (ENV.channelType==3){
					return {
						imageUrl:"https://cdn-byh5.jjhgame.com/wxminiby/appljbyshare.jpg",
						success:WxC.on_share_app_message_success,
						fail:WxC.on_share_app_message_fail,
						complete:WxC.on_share_app_message_complete
					}
				}
				return {
					imageUrl:"https://cdn-byh5.jjhgame.com/wxminiby/appshare.png",
					success:WxC.on_share_app_message_success,
					fail:WxC.on_share_app_message_fail,
					complete:WxC.on_share_app_message_complete
				}
			}
			static wx_show_share_menu (){
				if (WxC.isInMiniGame()){
					var params=new Object();
					params.withShareTicket=true;
					wx.showShareMenu(params);
					wx.onShareAppMessage(WxC.on_share_app_message_callback);
				}
			}
			static set_clipboard_data_success (){
				GameEventDispatch.instance.event("MsgTp",48);
			}
			static set_clipboard_data_fail (){
				GameEventDispatch.instance.event("MsgTp",49);
			}
			static wx_set_clipboard_data (content){
				if (WxC.isInMiniGame()){
					var params=new Object();
					params.data=content;
					wx.setClipboardData(params);
				}
			}
			static get_clipboard_data_success (data){
				GameEventDispatch.instance.event("WxGetClipBoard",data.data);
			}
			static get_clipboard_data_fail (data){
				GameEventDispatch.instance.event("WxGetClipBoard",null);
			}
			static wx_get_clipboard_data (){
				if (WxC.isInMiniGame()){
					var params=new Object();
					params.success=WxC.get_clipboard_data_success;
					params.fail=WxC.get_clipboard_data_fail;
					wx.getClipboardData(params);
				}
			}
			static wxSaveShareFile (htmlC){
				if (WxC.isInMiniGame()){
					var canvans=htmlC.getCanvas();
					canvans.toTempFilePath({
						x:10,
						y:10,
						width:Laya.stage.width,
						height:Laya.stage.height,
						destWidth:400,
						destHeight:300,
						success:function (res){
							console.log("wxSaveFile filePath = "+res.tempFilePath);
							GameEventDispatch.instance.event("WxSaveShareFile",res.tempFilePath);
						}
					});
				}
			}
			static wxShare (htmlC){
				if (WxC.isInMiniGame()){
					var canvans=htmlC.getCanvas();
					canvans.toTempFilePath({
						x:10,
						y:10,
						width:Laya.stage.width,
						height:Laya.stage.height,
						destWidth:400,
						destHeight:300,
						success:function (res){
							wx.shareAppMessage({
								imageUrl:res.tempFilePath,
								complete:function (){
									console.log("screen share complete");
									GameEventDispatch.instance.event("ScreenShareComplete",null);
								},
								title:"分享捕鱼"
							});
						}
					});
				}
			}
		}

		control.WxC=Laya.WxC=WxC;
		WxC._instance=null;
		WxC.wxminiLoginCount=0;
		WxC.wxminiCode="";
		WxC.wxminiName="";
		WxC.wxminiAvatar="";
		WxC.accessToken=null;
		WxC.server_domain="";
		WxC.server_name="";
		WxC.mini_server_domain="";
		WxC.mini_server_name="";
		WxC.user_status="";
		WxC.client_platform="";
		WxC.res_version="";
		WxC.isError=false;
		WxC.onAppShare=false;
		WxC.shareId=null;
		WxC.uID=-1;
		WxC.payment_amount=0;
		WxC.isRequest=false;
		WxC.cur_commodity=null;
		WxC.game_version="vjjh_18122101";
		WxC.userInfoBtn=null;
		WxC.wxminiAD_channel="";
		WxC.wxminiAD_gdt_vid="";
		WxC.wxminiAD_aid="";
		WxC.wxSDKVersion="";
		WxC.author=1;
		WxC.subscriberTime=0;
		WxC.button=null;
		WxC.model="none";
		WxC.compassTraceTick=0;
		WxC.accelerometerTraceTick=0;
		WxC.accelerData=null;	

		/**
		*...
		*@author
		*接口文档：http://183.131.147.91:8890/web/#/19
		*/
		class WxShareC{
			constructor (){
				this._adAnis=[];
			}
			getMiniProgram(){
				var _$this=this;
				if (WxC.isInMiniGame()){
					ApiManager.instance.get_game_jump_list(Handler.create(this,function(res){
						if (res.code=="success"){
							WxShareC.miniProgramArr=res.data;
							_$this.loadRes();
						}
					}),null);
				}
				}adAni(){
				return this._adAnis[WxShareC.indexMiniProgram];
				}initAni(){
				if (WxShareC.miniProgramArr.length > 0){
					for (var i=0;i < WxShareC.miniProgramArr.length;i++){
						var adAni=AnimalManger.instance.load(control.WxShareC.miniProgramArr[i].img);
						adAni.visible=true;
						adAni.play(0,true);
						adAni.name="ad_btn";
						this._adAnis.push(adAni);
					}
				}
				}loadRes(){
				var _$this=this;
				if (WxShareC.miniProgramArr.length > 0){
					var arr=[];
					for (var i=0;i < WxShareC.miniProgramArr.length;i++){
						arr.push({url:"res/atlas/ani/"+WxShareC.miniProgramArr[i].img+".atlas",type:Loader.ATLAS});
					}
					Laya.loader.load(arr,Handler.create(this,function(isSuccess){
						if (isSuccess){
							WxShareC.loadResSuccess=true;
							_$this.initAni();
							GameEventDispatch.instance.event("LoadMiniAdRes");
						}
						}),Handler.create(this,function(res){
					},null,false));
				}
			}
			static get instance (){
				return WxShareC._instance || (WxShareC._instance=new WxShareC())
			}
			static getCurMiniPro (){
				if (WxShareC.miniProgramArr && WxShareC.miniProgramArr.length > 0){
					return WxShareC.miniProgramArr[WxShareC.indexMiniProgram]
				}
			}
			static updataIndexMiniPro (){
				WxShareC.indexMiniProgram++;
				if (WxShareC.indexMiniProgram >=WxShareC.miniProgramArr.length){
					WxShareC.indexMiniProgram=0;
				}
			}
			static navigateToMiniProgram (){
				if (WxShareC.isInMiniGame()){
					var obj=WxShareC.getCurMiniPro();
					if (obj){
						var params=new Object();
						params.appId=obj.appid;
						params.path='';
						params.envVersion=obj.envVersion;
						params.extraData={
							from_game:obj.from_game
						};
						params.success=WxShareC.toMiniProgram_success;
						wx.navigateToMiniProgram(params);
					}
				}
			}
			static getFromMiniProgramInfo (){
				if (WxShareC.isInMiniGame()){
					var res=wx.getLaunchOptionsSync();
					if (!res){
						return ""
					};
					var referrerInfo=res.referrerInfo;
					if (!referrerInfo){
						return ""
					};
					var extraData=referrerInfo.extraData;
					if (!extraData){
						return ""
					};
					var from_game=extraData["from_game"];
					if (from_game){
						return from_game
					}
				}
				return "";
			}
			static toMiniProgram_success (res){
				console.log("toMiniProgram_success",res);
			}
			static wxShare (type=1,eventType=1,query=''){
				var shareInfo=WxShareC.initShareInfo(eventType);
				shareInfo.query=query;
				if (type===1){
					WxShareC.updateShareMenu(shareInfo,type);
					}else if (type===2){
					WxShareC.showShareMenu(shareInfo,type);
				}
			}
			static initShareInfo (eventType){
				var shareInfoList=ConfigManager.items('cfg_share');
				if (shareInfoList.length===0){
					return {
						title:'',
						imageUrl:'',
						imageUrlId:'',
						success:WxShareC.shareSuccess
					};
				};
				var shareTypeList=[];
				var shareData;
				for (var i=0;i < shareInfoList.length;i++){
					if (shareInfoList[i].event_type===eventType){
						shareTypeList.push(shareInfoList[i]);
					}
				};
				var randomNum=Math.floor(Math.random()*shareTypeList.length);
				shareData=shareTypeList[randomNum];
				var shareInfo={
					title:shareData.title,
					imageUrl:shareData.image,
					imageUrlId:shareData.imageUrlId,
					success:WxShareC.shareSuccess
				};
				return shareInfo;
			}
			static isInMiniGame (){
				var wx=window.wx;
				if (wx){
					return true
					}else{
					return false
				}
			}
			static showShareMenu (shareInfo,type=1,withShareTicket=true){
				if (WxShareC.isInMiniGame()){
					wx.showShareMenu({
						withShareTicket:withShareTicket,
						success:function (){
							WxShareC.updateShareMenu(shareInfo,type,withShareTicket);
						}
					});
				}
			}
			static updateShareMenu (shareInfo,type=1,withShareTicket=true){
				wx.updateShareMenu({
					withShareTicket:withShareTicket,
					success:function (res){
						if (type===1){
							WxShareC.shareAppMessage(shareInfo);
							}else if (type===2){
							WxShareC.onShareAppMessage(shareInfo);
						}
					},
					fail:function (err){
						console.log(err);
					},
					complete:function (obj){}
				});
			}
			static shareAppMessage (shareInfo){
				wx.shareAppMessage({
					title:shareInfo.title,
					imageUrl:shareInfo.imageUrl,
					query:shareInfo.query,
					imageUrlId:shareInfo.imageUrlId,
					success:shareInfo.success,
					fail:function (err){
						console.log(err);
					}
				});
			}
			static onShareAppMessage (shareInfo){
				wx.onShareAppMessage(function(){
					return {
						title:shareInfo.title,
						imageUrl:shareInfo.imageUrl,
						query:shareInfo.query,
						imageUrlId:shareInfo.imageUrlId,
						success:shareInfo.success,
						fail:function (err){
							console.log(err);
						}
					};
				});
			}
			static shareSuccess (res){
				console.log('分享成功回调');
				if (res.shareTicket){
				}
			}
			static getLaunchOptionsSync (){
				var launchOptions=wx.getLaunchOptionsSync();
				var uid=LoginInfoM.instance.uid;
				if (launchOptions.shareTicket){
					WxShareC.getShareInfo(launchOptions.shareTicket,uid);
					}else if (launchOptions.query.uid){
					WxShareC.shareToUser(uid,launchOptions.query.uid);
				}
				return launchOptions;
			}
			static getShareInfo (shareTicket,uid){
				wx.getShareInfo({
					shareTicket:shareTicket,
					success:function (res){
						var encryptedData=res.encryptedData;
						var iv=res.iv;
						WxShareC.decryptData(uid,encryptedData,iv);
					}
				});
			}
			static decryptData (uid,encryptedData,iv){
				wx.request({
					method:"POST",
					url:'https://'+ENV.FAKE_API_DOMAIN+WxShareC.wxDecryptData,
					data:{
						game_id:ENV.game_key(),
						uid:uid,
						encryptedData:encryptedData,
						iv:iv
					},
					success:function (res){
						var decryptData=JSON.parse(res.data.data);
						WxShareC.shareToGroup(decryptData.openGId);
					}
				});
			}
			static shareToUser (uid,inviteUid){
				wx.request({
					method:"POST",
					url:'https://'+ENV.FAKE_API_DOMAIN+WxShareC.wxUser,
					data:{
						game_id:ENV.game_key(),
						u_uid:uid,
						invite_u_uid:inviteUid
					},
					success:function (res){}
				});
			}
			static shareToGroup (openGId){
				console.log('openGId:'+openGId);
				wx.request({
					method:"POST",
					url:'https://'+ENV.FAKE_API_DOMAIN+WxShareC.wxGroup,
					data:{
						game_id:ENV.game_key(),
						u_uid:LoginInfoM.instance.uid,
						group_info:openGId
					},
					success:function (res){}
				});
			}
			static setUserData (KVDataList){
				wx.setUserCloudStorage({
					KVDataList:KVDataList,
					success:function (res){
						console.log(res.data);
					}
				});
			}
			static getFriendData (keyList){
				wx.getFriendCloudStorage({
					keyList:keyList,
					success:function (res){
						console.log(res);
					},
					fail:function (err){
						console.log(err);
					}
				});
			}
			static getGroupData (shareTicket,keyList){
				wx.getGroupCloudStorage({
					shareTicket:shareTicket,
					keyList:keyList,
					success:function (res){
						console.log(res.data.KVDataList);
					}
				});
			}
		}

		control.WxShareC=Laya.WxShareC=WxShareC;
		WxShareC._instance=null;
		WxShareC.wxLogin='/minilogin';
		WxShareC.wxGroup='/collect/share';
		WxShareC.wxNewUser='';
		WxShareC.wxUser='/collect/invite';
		WxShareC.wxDecryptData='/decrypt';
		WxShareC.miniProgramArr=[];
		WxShareC.indexMiniProgram=0;
		WxShareC.loadResSuccess=false;	

		class YawyC{
			constructor (){}
			static pay (data){
				var win=window;
				win.yawysdk.pay(data);
			}
		}

		control.YawyC=Laya.YawyC=YawyC;	

		class YylyC{
			constructor (){}
			static config (){
				YylyC.yylyEnable=true;
				WanGameH5sdk.config({
					share:{
						success:function (){
							console.log("share success");
						},
						cancel:function (){
							console.log("share fail");
						}
					}
				});
				WanGameH5sdk.login({
					success:function (data){
						YylyC.yy_sid=data.sid;
						GameEventDispatch.instance.event("YylyLoginComplete",null);
					},
					fail:function (data){}
				});
			}
			static ReachCreateRoleScene (){
				WanGameH5sdk.log({
					action:'onscene',
					actionvalue:'createrolescene'
				});
			}
			static CreateRole (id,name){
				YylyC.roleId=id;
				YylyC.roleName=name;
				YylyC.is_new=1;
				WanGameH5sdk.log({
					action:'createrole',
					gser:'001',
					roleid:''+id,
					rolename:''+name
				});
			}
			static EnterGame (){
				if(YylyC.yylyEnable && !YylyC.enterMain){
					WanGameH5sdk.log({
						action:'access',
						gser:'001',
						roleid:''+YylyC.roleId,
						rolename:''+YylyC.roleName,
						rolelevel:''+RoleInfoM.instance.getLevel()
					});
					YylyC.enterMain=true;
				}
			}
			static EnterFirstScene (){
				if(YylyC.yylyEnable && 1==YylyC.is_new){
					YylyC.is_new=0;
					WanGameH5sdk.log({
						action:'onscene',
						actionvalue:'firstscene',
						gser:'001',
						roleid:''+YylyC.roleId,
						rolename:''+YylyC.roleName
					});
				}
			}
			static RoleLevelUp (level){
				if(YylyC.yylyEnable){
					WanGameH5sdk.log({
						action:'levelup',
						actionvalue:''+level,
						gser:'001',
						roleid:''+YylyC.roleId,
						rolename:''+YylyC.roleName
					});
				}
			}
			static pay (data){
				var orderArgs={
					sdkOrderId:data.data.sdkOrderId,
					amount:""+data.data.amount,
					prodId:""+data.data.prodId,
					prodName:data.data.prodName,
					prodDesc:data.data.prodName,
					serverId:"001",
					serverName:"服1",
					roleId:LoginInfoM.instance.uid,
					roleName:RoleInfoM.instance.getName(),
					gameName:"集结号捕鱼h5"
				};
				WanGameH5sdk.placeOrder(orderArgs);
			}
		}

		control.YylyC=Laya.YylyC=YylyC;
		YylyC.yy_sid=null;
		YylyC.yylyLoginCount=0;
		YylyC.is_new=0;
		YylyC.roleId=null;
		YylyC.yylyEnable=false;
		YylyC.roleName=null;
		YylyC.enterMain=false;	window.emurs={};

		class ShowType{
			constructor(){}
		}

		emurs.ShowType=Laya.ShowType=ShowType;
		ShowType.SMALL_TO_BIG="SMALL_TO_BIG";
		ShowType.Normal="Normal";
		ShowType.DRAK_TO_LIGHT="DRAK_TO_LIGHT";	

		class UiType{
			constructor(){}
		}

		emurs.UiType=Laya.UiType=UiType;
		UiType.UI_TYPE_BASE="uitypebase";
		UiType.UI_TYPE_NORMAL="uitypenormal";
		UiType.UI_TYPE_FIGHT="uitypefight";
		UiType.UI_TYPE_FIGHT_PAGE="uitypefightpage";
		UiType.UI_TYPE_DLG="uitypedlg";
		UiType.UI_TYPE_GUIDE="uitypeguide";
		UiType.UI_TYPE_DISCONNECT="uitypedisconnect";
		UiType.UI_TYPE_ERROR_TIP="uitypeerrortip";
		UiType.UI_TYPE_MSG_TIP="uitypemsgtip";	window.engine={};engine.analysis={};

		class BuriedGameId{
			constructor(){}
		}

		engine.analysis.BuriedGameId=Laya.BuriedGameId=BuriedGameId;
		BuriedGameId.buriedTestGameId=0;
		BuriedGameId.buriedH5GameId=1;	

		class BuriedManager{
			constructor (){
				this.buriedArr=[];
				this.uid="";
				this.is_new="";
				this.pf=-1;
				Laya.timer.loop(10000,this,this.sync);
			}
			request(params){
				var request=new HttpRequest();
				var fullUrl="https://collector.12h5.com"+"/common/collector";
				request.send(fullUrl,Browser.window.JSON.stringify(params),"post",'json',["Content-Type","application/json"]);
				}getDeviceType(){
				if (Browser.onIOS){
					return "ios"
					}else if (Browser.onAndroid){
					return "android"
					}else if (Browser.onPC){
					return "pc"
					}else{
					return "unknown"
				}
				}getCommonParams(){
				if (!this.uid || this.uid==""){
					this.uid=StartParam.instance.getParam("uid")+"";
				}
				if (!this.is_new || this.is_new==""){
					this.is_new=StartParam.instance.getParam("is_new")+"";
				}
				if (parseInt(this.pf)< 0 || !this.pf){
					this.pf=StartParam.instance.getParam("provider_id");
					if (typeof(this.pf)=="string"){
						this.pf=parseInt(this.pf);
					}
				}
				return {
					uid:this.uid,
					game_id:ENV.buriedGameId,
					is_new:this.is_new,
					device:this.getDeviceType(),
					pf:this.pf
				}
				}addBuriedData(type,data={}){
				this.buriedArr.push({type:type,data:data});
				}sync(){
				if (this.buriedArr.length > 0){
					this.sendMulti(this.buriedArr);
					this.buriedArr=[];
				}
				}sendMulti(dataArr){
				var params=[this.getCommonParams(),dataArr];
				this.request(params);
			}
			// }
			static get instance (){
				return BuriedManager._instance || (BuriedManager._instance=new BuriedManager());
			}
		}

		engine.analysis.BuriedManager=Laya.BuriedManager=BuriedManager;
		BuriedManager._instance=null;	

		class BuriedTypes{
			constructor(){}
		}

		engine.analysis.BuriedTypes=Laya.BuriedTypes=BuriedTypes;
		BuriedTypes.login_success="ui_login_after";
		BuriedTypes.enter_main="ui_open_main";
		BuriedTypes.receive_game="receive_save_game";
		BuriedTypes.click_buy=1;
		BuriedTypes.click_buy_confirm=2;
		BuriedTypes.click_buy_cancel=3;	engine.tool={};

		class StartParam{
			constructor (){
				this.config={};
				this.params={};
			}
			paramIsValid(param,config){
				if (config["require"]){
					if (!param){
						console.log(config["name"]+" is required");
						return false
					}
				}
				return true
				}setConfig(res){
				this.config=res;
				}isEmpty(obj){
				if (typeof obj=="Boolean"){
					return false;
				}
				if (obj !=null && obj !="undefined"){
					return false
				}
				return true;
				}getParam(name){
				if (!this.isEmpty(this.params[name])){
					return this.params[name]
					}else{
					return null;
				}
				}parseParam(kv,isFirst=false){
				if (isFirst){
					for (var param_key in this.config){
						var conf=this.config[param_key];
						var value=kv[param_key];
						var isValid=this.paramIsValid(value,conf);
						if (isValid){
							if (value=="" || value==null || value=="undefined"){
								kv[param_key]=conf["default"];
							}
							}else{
							console.log("param error");
						}
					}
				}
				for (var i in kv){
					this.params[i]=kv[i];
				}
			}
			//解析HTML参数
			parseHtmlParamString(){
				var kv={};
				if (!WxC.isInMiniGame()){
					var url=window.document.location.href.toString();
					var u=url.split("?");
					if (u[1]){
						u=u[1].split("&");
						for (var i in u){
							var j=u[i].split("=");
							kv[j[0]]=j[1];
						}
					}
				}
				this.parseParam(kv,true);
			}
			static get instance (){
				return StartParam._instance || (StartParam._instance=new StartParam());
			}
		}

		engine.tool.StartParam=Laya.StartParam=StartParam;
		StartParam._instance=null;	engine.ui={};engine.ui.component={};

		class RewriteManager{
			constructor (){}
			static rewriteFunc (){
				LoaderRe.initRewrite();
				SoundManagerRe.initRewrite();
				InputRe.initRewrite();
				StageRe.initRewrite();
				TextInputRe.initRewrite();
			}
		}

		engine.ui.component.RewriteManager=Laya.RewriteManager=RewriteManager;	
		class ENV{
			constructor(){}
			//渠道
			static get channelType (){
				if (WxC.isInMiniGame()){
					return 1
					}else{
					return 2
				}
			}
			static get API_DOMAIN (){
				if (StartParam.instance.getParam("env")=="test"){
					return "https://api-h5.qzygxt.com";
					}else if (StartParam.instance.getParam("env")=="stage"){
					return "https://api-h5.qzygxt.com";
					}else if (StartParam.instance.getParam("env")=="prod"){
					if (WxC.isInMiniGame()){
						return "https://by-api.jjhgame.com";
					}
					else{
						return "  ";
					}
				}
			}
			static get buriedGameId (){
				if (StartParam.instance.getParam("env")=="prod" &&
					StartParam.instance.getParam("server_name").indexOf("prod")>=0){
					return 1;
				}
				return 0;
			}
			//是否打开快速注册功能
			static get openQuickRegister (){
				if (WxC.isInMiniGame()|| ExchangeM.instance._platform==1){
					return false
					}else{
					return true
				}
			}
			//是否打开转盘界面
			static get openSharePage (){
				return false;
			}
			static isShowDied (){
				return StartParam.instance.getParam("game_status")& 0x20;
			}
			static isShowBannerAndAD (){
				if (WxC.isInMiniGame()){
					return StartParam.instance.getParam("game_status")& 0x08;
					}else{
					if (ENV.isLoginView){
						return true
						}else{
						return false
					}
				}
			}
			static isNeedCertification (){
				if (StartParam.instance.getParam("env")=="prod"){
					return true;
					}else{
					if (ENV.isLoginView){
						return true
						}else{
						return false
					}
				}
			}
		}

		Laya.ENV=ENV;
		ENV.buriedWxMiniGameId=10;
		ENV.TEST_ENV="test";
		ENV.STAGE_ENV="stage";
		ENV.PROD_ENV="prod";
		ENV.TEST_ENV_WS_URL="ws://192.168.89.80:8989/local_server/";
		ENV.PROD_ENV_URL="wss//h5wss.jjhgame.com/prod_server?access=6d9aad02f2e9d44154cca44f8f410ff2";
		ENV.MINI_API_URL="https://tby-api.jjhgame.com";
		ENV.ljby_imageUrl="https://cdn-byh5.jjhgame.com/wxminiby/appljbyshare.jpg";
		ENV.imageUrl="https://cdn-byh5.jjhgame.com/wxminiby/appshare.png";
		ENV.closeDialogOnSide=false;
		ENV.showDebugPanel=false;
		ENV.buriedUrl="https://collector.12h5.com";
		ENV.isLoginView=false;
		ENV.game_version="vjjh_20102901";
		ENV.isAlertGlobalError=false;
		ENV.MiniGameAPIDomain="https://by-api.jjhgame.com";
		ENV.MiniGameRemoteUrlBase="https://cdn-byh5.jjhgame.com/byh5client_stage_3d/";
		ENV.MiniGameShraeUrl="https://cdn-byh5.jjhgame.com/wxminiby/appljbyshare.jpg";
		Laya.static(ENV,
		['config',function(){return this.config={
				env:{"require":false,"default":"prod","name":"env"},
				player:{"require":false,"default":"","name":"player"},
				is_debug:{"require":false,"default":0,"name":"is_debug"},
				stopAllSound:{"require":false,"default":1,"name":"stopAllSound"},
				is_open_bank:{"require":false,"default":0,"name":"is_open_bank"},
				openMatchScene:{"require":false,"default":false,"name":"openMatchScene"},
				exchange_rate:{"require":false,"default":100,"name":"exchange_rate","reg":/[\d]$/},
				game_status:{"require":false,"default":3,"name":"game_status"},
				htmlTitle:{"require":false,"default":"QQ Fish","name":"htmlTitle"},
				is_display_public_no_subscribe:{"require":false,"default":0,"name":"is_display_public_no_subscribe"},
				provider_tel:{"require":false,"default":0,"name":"provider_tel"},
				r_p_a:{"require":false,"default":0,"name":"r_p_a"},
				access_token:{"require":false,"default":"","name":"access_token"},
				jjhid:{"require":false,"default":"","name":"jjhid"},
				uid:{"require":false,"default":"","name":"uid"},
				platform:{"require":false,"default":"","name":"platform"},
				is_new:{"require":false,"default":"","name":"is_new"},
				ctime:{"require":false,"default":"","name":"ctime"},
				server_name:{"require":false,"default":"","name":"server_name"},
				provider_id:{"require":false,"default":-1,"name":"provider_id"},
				user_status:{"require":false,"default":"","name":"user_status"},
				api_domain:{"require":false,"default":"gpk.qzygxt.com","name":"api_domain"},
				api_domain_protocal:{"require":false,"default":"https","name":"api_domain_protocal"},
				server_domain:{"require":false,"default":"","name":"server_domain"},
				server_domain_protocal:{"require":false,"default":"wss","name":"server_domain_protocal"},
				mini_server_name:{"require":false,"default":"","name":"server_domain_protocal"},
				mini_server_domain:{"require":false,"default":"","name":"mini_server_domain"},
				version:{"require":false,"default":"version.json","name":"version"},
				config_version:{"require":false,"default":"config.json","name":"config_version"}
		};}

		]);	window.fight={};

		class AgentGetInfo{
			constructor (){
				//this.ag=0;
				//
				//this.t=0;
				//获得的类型
				//this.v=0;
				//获得的数量
				//this.leftTime=NaN;
			}
		}

		fight.AgentGetInfo=Laya.AgentGetInfo=AgentGetInfo;	

		class AwardEffect{
			constructor (value,pos,own,parent,delay){
				//this.numFont=null;
				//this.originX=NaN;
				//this.originY=NaN;
				//this.numActionIndex=NaN;
				//this._delay=NaN;
				this._delayIndex=0;
				this.init(value,pos,own,parent,delay);
			}
			destroy(){
				this.numFont.visible=false;
				AwardEffect._cacheArray.push(this);
				}init(value,pos,own,parent,delay){
				var fontStr="font/font_1.png";
				if (!own){
					fontStr="font/font_2.png";
				}
				if (!this.numFont){
					this.numFont=new FontClip(fontStr,"/.+-0123456789枚万亿");
					parent.addChild(this.numFont);
				}
				this.numFont.skin=fontStr;
				this._delay=delay;
				this._delayIndex=0;
				this.numFont.value="+"+value;
				this.originX=pos.x;
				this.originY=pos.y;
				if (this.originX < 40){
					this.originX=40;
				}
				if (this.originX > Laya.stage.width-40){
					this.originX=Laya.stage.width-40;
				}
				if (this.originY < 50){
					this.originY=50;
				}
				if (this.originY > Laya.stage.height-10){
					this.originY=Laya.stage.height-10;
				}
				this.numActionIndex=0;
				this.numFont.pos(this.originX,this.originY);
				this.numFont.anchorX=0.5;
				this.numFont.anchorY=0.5;
				this.numFont.visible=this._delay <=0;
				this.updateNumberPos();
				}updateNumberPos(){
				if (this.numFont && (this.numActionIndex < AwardEffect.awardNumActionY.length)){
					this.numFont.pos(this.originX,this.originY+AwardEffect.awardNumActionY[this.numActionIndex]);
					this.numFont.scale(AwardEffect.awardNumActiconScale[this.numActionIndex],AwardEffect.awardNumActiconScale[this.numActionIndex]);
					this.numFont.alpha=AwardEffect.awardNumActiconAlpha[this.numActionIndex];
				}
				}isValid(){
				return this.numActionIndex < AwardEffect.awardNumActionY.length;
				}update(delta){
				if (this._delay > 0){
					this._delay-=delta;
					if (this._delay <=0){
						this.numFont.visible=true;
					}
					return;
				}
				this._delayIndex+=1;
				if (this._delayIndex >=3){
					this.numActionIndex+=1;
					this._delayIndex=0;
				}
				this.updateNumberPos();
			}
			static create (value,pos,own,parent,delay,preLoad=false){
				if (!AwardEffect._cacheArray){
					AwardEffect._cacheArray=[];
				}
				if (!AwardEffect._cacheObject){
					AwardEffect._cacheObject=new Object();
				};
				var ret;
				if (!preLoad && AwardEffect._cacheArray.length > 0){
					ret=AwardEffect._cacheArray [0];
					ret.init(value,pos,own,parent,delay);
					AwardEffect._cacheArray.splice(0,1);
				}
				else{
					ret=new AwardEffect(value,pos,own,parent,delay);
				}
				if (own){
					var soundPath=ConfigManager.getConfValue("cfg_global",1,"get_coin_sound");
					GameSoundManager.playSound(soundPath);
				}
				return ret;
			}
		}

		fight.AwardEffect=Laya.AwardEffect=AwardEffect;
		AwardEffect._cacheArray=null;
		AwardEffect._cacheObject=null;
		Laya.static(AwardEffect,
		['awardNumActionY',function(){return this.awardNumActionY=[0,0,0,0,0,0,0,0,0,0,0,-6,-11,-18,-24,-30,-36,-42,-48,-54];},'awardNumActiconScale',function(){return this.awardNumActiconScale=[0.5,0.7,0.9,1.1,1.3,1.5,1.4,1.3,1.2,1.1,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0];},'awardNumActiconAlpha',function(){return this.awardNumActiconAlpha=[1,1,1,1,1,1,1,1,1,1,1,229 / 255,204 / 255,178 / 255,153 / 255,127 / 255,102 / 255,76 / 255,51 / 255,25 / 255];}
		]);	

		class BgImgMove{
			constructor (){
				this.speedBg=0;
				this.speedMBg=0;
				this.speedFBg=0;
				this.bgSpriteL=null;
				this.bgSpriteLChild=null;
				this.bgSpriteR=null;
				this.bgSpriteRChild=null;
				this.mbgSpriteL=null;
				this.mbgSpriteLChild=null;
				this.mbgSpriteR=null;
				this.mbgSpriteRChild=null;
				this.fbgSpriteL=null;
				this.fbgSpriteLChild=null;
				this.fbgSpriteR=null;
				this.fbgSpriteRChild=null;
				this._preLayaStageHeight=0;
			}
			setBgInfo(spriteL,spriteR){
				this.bgSpriteL=spriteL;
				this.bgSpriteR=spriteR;
				this.bgSpriteL.y=-20;
				this.bgSpriteR.y=-20;
				this.bgSpriteLChild=new Sprite();
				this.bgSpriteLChild.loadImage("scene/scene_1_1_2.png");
				this.bgSpriteLChild.x=this.bgSpriteL.x+960 *this.bgSpriteL.scaleX;
				this.bgSpriteLChild.y=-20;
				this.bgSpriteL.parent.addChild(this.bgSpriteLChild);
				this.bgSpriteRChild=new Sprite();
				this.bgSpriteRChild.loadImage("scene/scene_1_1_2.png");
				this.bgSpriteRChild.y=-20;
				this.bgSpriteR.parent.addChild(this.bgSpriteRChild);
				this.bgSpriteRChild.x=this.bgSpriteR.x+960 *this.bgSpriteR.scaleX;
				this.speedBg=4;
				}setMbgInfo(spriteL,spriteR){
				var spine=null;
				this.mbgSpriteL=spriteL;
				this.mbgSpriteR=spriteR;
				this.mbgSpriteL.y=Laya.stage.height-522;
				this.mbgSpriteR.y=Laya.stage.height-522;
				this.speedMBg=3;
				}setFbgInfo(spriteL,spriteR){
				var spine=null;
				this.fbgSpriteL=spriteL;
				this.fbgSpriteR=spriteR;
				this.fbgSpriteL.y=Laya.stage.height-127;
				this.fbgSpriteR.y=Laya.stage.height-127;
				this.speedFBg=2;
				}reset(){
				this.bgSpriteL.x=-450-Math.ceil(200 *Math.random());
				this.bgSpriteR.x=this.bgSpriteL.x+1920 *this.bgSpriteL.scaleX;
				this.mbgSpriteL.x=-450-Math.ceil(200 *Math.random());
				this.mbgSpriteR.x=this.mbgSpriteL.x+1920 *this.mbgSpriteL.scaleX;
				this.fbgSpriteL.x=-450-Math.ceil(200 *Math.random());
				this.fbgSpriteR.x=this.fbgSpriteL.x+1920 *this.fbgSpriteL.scaleX;
				this.bgSpriteLChild.x=this.bgSpriteL.x+960 *this.bgSpriteL.scaleX;
				this.bgSpriteRChild.x=this.bgSpriteR.x+960 *this.bgSpriteR.scaleX;
				this.mbgSpriteL.y=Laya.stage.height-this.mbgSpriteL.scaleY *522;
				this.mbgSpriteR.y=Laya.stage.height-this.mbgSpriteR.scaleY *522;
				this.fbgSpriteL.y=Laya.stage.height-this.fbgSpriteL.scaleY *127;
				this.fbgSpriteR.y=Laya.stage.height-this.fbgSpriteR.scaleY *127;
				this.bgSpriteL.visible=true;
				this.bgSpriteLChild.visible=true;
				this.bgSpriteR.visible=true;
				this.bgSpriteRChild.visible=true;
				this.mbgSpriteL.visible=true;
				this.mbgSpriteR.visible=true;
				this.fbgSpriteL.visible=true;
				this.fbgSpriteR.visible=true;
				this.update(0);
				}screenResize(){
				if(this._preLayaStageHeight==Laya.stage.height){
					return;
				}
				this._preLayaStageHeight=Laya.stage.height;
				var scale=(Laya.stage.height+40)/ 720;
				this.bgSpriteL.scale(scale,scale,true);
				this.bgSpriteLChild.scale(scale,scale,true);
				this.bgSpriteR.scale(scale,scale,true);
				this.bgSpriteRChild.scale(scale,scale,true);
				this.mbgSpriteL.scale(scale,scale,true);
				this.mbgSpriteR.scale(scale,scale,true);
				this.fbgSpriteL.scale(scale,scale,true);
				this.fbgSpriteR.scale(scale,scale,true);
				if (FightM.instance.seatId > 0){
					this.reset();
				}
				}hide(){
				this.bgSpriteL.visible=false;
				this.bgSpriteLChild.visible=false;
				this.bgSpriteR.visible=false;
				this.bgSpriteRChild.visible=false;
				this.mbgSpriteL.visible=false;
				this.mbgSpriteR.visible=false;
				this.fbgSpriteL.visible=false;
				this.fbgSpriteR.visible=false;
			}
			// fbgSpriteRChild.visible=false;
			updateVisible(tmpSprite){
				if (tmpSprite.x > Laya.stage.width){
					tmpSprite.visible=false;
				}
				else if (tmpSprite.x <-960 *this.bgSpriteL.scaleX){
					tmpSprite.visible=false;
				}
				else{
					tmpSprite.visible=true;
				}
			}
			// tmpSprite.visible=false;
			update(delta){
				var tmp=null;
				this.bgSpriteL.x=this.bgSpriteL.x-delta *this.speedBg;
				this.bgSpriteR.x=this.bgSpriteR.x-delta *this.speedBg;
				if (this.bgSpriteL.x <-1920 *this.bgSpriteL.scaleX){
					this.bgSpriteL.x=this.bgSpriteL.x+1920 *2 *this.bgSpriteL.scaleX;
					tmp=this.bgSpriteL;
					this.bgSpriteL=this.bgSpriteR;
					this.bgSpriteR=tmp;
				}
				this.mbgSpriteL.x=this.mbgSpriteL.x-delta *this.speedMBg;
				this.mbgSpriteR.x=this.mbgSpriteR.x-delta *this.speedMBg;
				if (this.mbgSpriteL.x <-1920 *this.mbgSpriteL.scaleX){
					this.mbgSpriteL.x=this.mbgSpriteL.x+1920 *2 *this.mbgSpriteL.scaleX;
					tmp=this.mbgSpriteL;
					this.mbgSpriteL=this.mbgSpriteR;
					this.mbgSpriteR=tmp;
				}
				this.fbgSpriteL.x=this.fbgSpriteL.x-delta *this.speedFBg;
				this.fbgSpriteR.x=this.fbgSpriteR.x-delta *this.speedFBg;
				if (this.fbgSpriteL.x <-1920 *this.fbgSpriteL.scaleX){
					this.fbgSpriteL.x=this.fbgSpriteL.x+1920 *2 *this.fbgSpriteL.scaleX;
					tmp=this.fbgSpriteL;
					this.fbgSpriteL=this.fbgSpriteR;
					this.fbgSpriteR=tmp;
				}
				this.bgSpriteLChild.x=this.bgSpriteL.x+960 *this.bgSpriteL.scaleX;
				this.bgSpriteRChild.x=this.bgSpriteR.x+960 *this.bgSpriteR.scaleX;
				this.updateVisible(this.bgSpriteL);
				this.updateVisible(this.bgSpriteLChild);
				this.updateVisible(this.bgSpriteR);
				this.updateVisible(this.bgSpriteRChild);
			}
		}

		fight.BgImgMove=Laya.BgImgMove=BgImgMove;	

		class BoomEffect{
			constructor (skillId,aniName,startPos,endPos,startParent,endParent){
				//this._startSprite=null;
				//this._endAni=null;
				this._startEnd=false;
				this._runTime=0;
				this._deltaX=0;
				this._deltaY=0;
				this._speed=1000;
				this._angle=0;
				this._startSprite=new Sprite();
				startParent.addChild(this._startSprite);
				this._endAni=new SpineTemplet(aniName);
				endParent.addChild(this._endAni);
				this._endAni.visible=false;
			}
			destroy(){
				this._startSprite.visible=false;
				this._endAni.visible=false;
				this._endAni.stop();
				BoomEffect._cacheArray.push(this);
				}getRunTime(){
				return this._runTime;
				}getAngle(){
				return this._angle;
				}init(skillId,startPos,endPos,startParent,endParent){
				var len=GameTools.CalPointLen(startPos,endPos);
				this._runTime=len / this._speed;
				this._angle=GameTools.CalLineAngle(startPos,endPos);
				this._startSprite.rotation=GameTools.CalLineAngle(startPos,endPos)+90;
				this._startSprite.pivotX=42;
				this._startSprite.pivotY=42;
				this._startSprite.pos(startPos.x,startPos.y);
				this._startSprite.loadImage(ConfigManager.getConfValue("cfg_skill",skillId,"show"));
				this._startSprite.visible=true;
				this._endAni.pos(endPos.x,endPos.y);
				this._endAni.stop();
				this._endAni.visible=false;
				var radian=this._angle *Math.PI / 180;
				this._deltaX=Math.cos(radian);
				this._deltaY=Math.sin(radian);
				}isValid(){
				return !this._endAni.visible || this._endAni.isPlaying();
				}update(delta){
				if (this._runTime > 0){
					this._runTime-=delta;
					this._startSprite.x=this._startSprite.x+delta *this._deltaX *this._speed;
					this._startSprite.y=this._startSprite.y+delta *this._deltaY *this._speed;
					if (this._runTime <=0){
						this._startSprite.visible=false;
						this._endAni.visible=true;
						this._endAni.play(0,false);
					}
				}
				else{
				}
			}
			static create (skillId,aniName,startPos,endPos,startParent,endParent){
				if (!BoomEffect._cacheArray){
					BoomEffect._cacheArray=[];
				}
				if (!BoomEffect._cacheObject){
					BoomEffect._cacheObject=new Object();
				};
				var ret;
				if (BoomEffect._cacheArray.length > 0){
					ret=BoomEffect._cacheArray [0];
					BoomEffect._cacheArray.splice(0,1);
				}
				else{
					ret=new BoomEffect(skillId,aniName,startPos,endPos,startParent,endParent);
				}
				ret.init(skillId,startPos,endPos,startParent,endParent);
				return ret;
			}
		}

		fight.BoomEffect=Laya.BoomEffect=BoomEffect;
		BoomEffect._cacheArray=null;
		BoomEffect._cacheObject=null;	

		class Bullet{
			constructor (info,parent){
				//this._uniId=0;
				//this._isValid=false;
				//this._isLifeOver=false;
				//this._radius=NaN;
				//this._showTime=NaN;
				//this._offsetX=NaN;
				//this._offsetY=NaN;
				//this._width=NaN;
				//this._height=NaN;
				//this._scrWidth=NaN;
				//this._scrHeight=NaN;
				//this._bombScaleWidth=NaN;
				//this._bombScaleHeight=NaN;
				//this._speed=NaN;
				//this._hitTarget=false;
				//this._bullet=null;
				//this._lineTest=null;
				//this._catchMainTarget=false;
				//this._bombCollisionCount=0;
				//this._bombCurCollisionCount=0;
				//this._deltaX=NaN;
				//this._deltaY=NaN;
				//this._frameDeltaX=NaN;
				//this._frameDeltaY=NaN;
				//this._angleP1=NaN;
				//this._angleP2=NaN;
				//this._collisionCenterBulletPosAngle=NaN;
				//this._collisionCenterBulletPosLength=NaN;
				//this._hurt=0;
				//this._parent=null;
				//this._updateTime=NaN;
				//this._fuid=0;
				//this._hitEffectArray=null;
				//this._shootSeatId=0;
				//this._sk=0;
				this._isCollision=false;
				this._useTotalTime=0;
				this._lockReach=false;
				this._endX=0;
				this._endY=0;
				//this._collisionFishInfo=null;
				this._hitCount=0;
				this._runTick=0;
				this._startTick=0;
				this._agent=0;
				//this._delayCollision=null;
				this._updateFailNum=0;
				this._designPosX=0;
				this._designPosY=0;
				this._p1=new Point();
				this._p2=new Point();
				this._p3=new Point();
				this._p4=new Point();
				this._collisionCenter=new Point();
				this._catchMainTarget=false;
				this.init(info,parent);
			}
			getUniId(){
				return this._uniId;
				}destroy(){
				this._bullet.visible=false;
				var hitEffect;
				for (var i=0;i < this._hitEffectArray.length;i++){
					hitEffect=this._hitEffectArray [i];
					hitEffect.visible=false;
					hitEffect.stop();
				}
				if (!Bullet._cacheObject[String(this._sk)]){
					Bullet._cacheObject[String(this._sk)]=[];
				};
				var tmpArray=Bullet._cacheObject [String(this._sk)];
				tmpArray.push(this);
				}dataInit(info){
				this._useTotalTime=0;
				this._updateTime=0;
				this._uniId=info.uniId;
				this._fuid=info.fuid;
				this._shootSeatId=info.index;
				this._showTime=info.showDelay;
				this._collisionFishInfo=new Object();
				this._hitTarget=false;
				this._isLifeOver=false;
				this._bullet.visible=true;
				this._hitCount=info.count;
				this._agent=info.agent;
				this._startTick=info.tick;
				this._runTick=0;
				this._updateFailNum=0;
				this._delayCollision=[];
				this._bullet.play(0,true);
				this._speed=(ConfigManager.getConfValue("cfg_battery_skin",info.sk,"speed"));
				var startX=FightM.instance.getMirrorPosXByOwnSeat(info.startX);
				var endX=FightM.instance.getMirrorPosXByOwnSeat(info.endX);
				var startY=FightM.instance.getMirrorPosYByOwnSeat(info.startY);
				var endY=FightM.instance.getMirrorPosYByOwnSeat(info.endY);
				if (this._fuid && this._fuid > 0){
					var refPoint=FightManager.instance.getFishPosition(this._fuid);
					if (refPoint){
						endX=refPoint.x;
						endY=refPoint.y;
					}
				}
				this._endX=endX;
				this._endY=endY;
				this._designPosX=startX;
				this._designPosY=startY;
				this._bullet.pos(GameTools.designPosXMapScreenPosX(this._designPosX),GameTools.designPosYMapScreenPosY(this._designPosY));
				var angle=GameTools.CalLineAngle(new Point(startX,startY),new Point(endX,endY));
				this._bullet.rotation=angle;
				this._deltaX=Math.cos(angle *Math.PI / 180);
				this._deltaY=Math.sin(angle *Math.PI / 180);
				this._frameDeltaX=GameConst.fixed_update_time *this._speed *this._deltaX;
				this._frameDeltaY=GameConst.fixed_update_time *this._speed *this._deltaY;
				this._lockReach=false;
				}init(info,parent){
				var bulletName=ConfigManager.getConfValue("cfg_battery_skin",info.sk,"name");
				this._sk=info.sk;
				this._hitEffectArray=[];
				this._parent=parent;
				this._offsetX=ConfigManager.getConfValue("cfg_anicollision",bulletName,"colliOffsetX1");
				this._offsetY=ConfigManager.getConfValue("cfg_anicollision",bulletName,"colliOffsetY1");
				this._width=ConfigManager.getConfValue("cfg_anicollision",bulletName,"colliWidth1");
				this._height=ConfigManager.getConfValue("cfg_anicollision",bulletName,"colliHeight1");
				this._bombScaleWidth=ConfigManager.getConfValue("cfg_bulletmodel",bulletName,"bulletBombWidthScale");
				this._bombScaleHeight=ConfigManager.getConfValue("cfg_bulletmodel",bulletName,"bulletBombHeightScale");
				this._bullet=AnimalManger.instance.load(bulletName);
				this._collisionCenterBulletPosAngle=GameTools.CalLineAngle(new Point(),new Point(this._offsetX,this._offsetY));
				this._collisionCenterBulletPosLength=GameTools.CalPointLen(new Point(),new Point(this._offsetX,this._offsetY));
				this._bullet.pivot(ConfigManager.getConfValue("cfg_anicollision",bulletName,"pivotX"),
				ConfigManager.getConfValue("cfg_anicollision",bulletName,"pivotY"));
				parent.addChild(this._bullet);
				if (GameConst.draw_collision_rect){
					var sprite=new Sprite();
					parent.addChild(sprite);
					sprite.graphics.drawRect(Laya.stage.width / 2-2,Laya.stage.height / 2-2,4,4,"#ff0000");
					this._lineTest=new Sprite();
					parent.addChild(this._lineTest);
				}
				this.dataInit(info);
				this._scrWidth=this._width;
				this._scrHeight=this._height;
				this._radius=Math.sqrt(this._width *this._width+this._height *this._height);
				this._angleP1=-Math.cos(this._width / this._radius)/ Math.PI *180;
				this._angleP2=-this._angleP1;
				this.calCollisionInfo();
				}lockUpdate(delta){
				if (this._fuid && this._fuid > 0){
					var scrX=this._designPosX;
					var scrY=this._designPosY;
					var refPoint=FightManager.instance.getFishPosition(this._fuid);
					if (refPoint){
						refPoint.x=GameTools.screenPosXMapDesignPosX(refPoint.x);
						refPoint.y=GameTools.screenPosYMapDesignPosY(refPoint.y);
						var startX=this._designPosX;
						var startY=this._designPosY;
						this._endX=refPoint.x;
						this._endY=refPoint.y;
						var angle=GameTools.CalLineAngle(new Point(startX,startY),new Point(this._endX,this._endY));
						this._bullet.rotation=angle;
						this._deltaX=Math.cos(angle *Math.PI / 180);
						this._deltaY=Math.sin(angle *Math.PI / 180);
						this._frameDeltaX=GameConst.fixed_update_time *this._speed *this._deltaX;
						this._frameDeltaY=GameConst.fixed_update_time *this._speed *this._deltaY;
					}
					else{
						this._lockReach=true;
						this._bullet.visible=false;
					};
					var desX=scrX+this._frameDeltaX;
					var desY=scrY+this._frameDeltaY;
					if ((desX-scrX)*(this._endX-desX)>=0 &&
						(desY-scrY)*(this._endY-desY)>=0){
						this._designPosX=desX;
						this._designPosY=desY;
						this._bullet.pos(GameTools.designPosXMapScreenPosX(this._designPosX),GameTools.designPosYMapScreenPosY(this._designPosY));
					}
					else{
						this._lockReach=true;
						this._bullet.visible=false;
					}
				}
				}getDelayCollision(){
				if (this._delayCollision.length > 0){
					var tmpCollision=this._delayCollision;
					this._delayCollision=[];
					return this._delayCollision;
				}
				return null;
				}addDelayCollision(fuid){
				this._delayCollision.push(fuid);
				}isUncollisionFish(fuid){
				if (this._collisionFishInfo[""+fuid]){
					return false;
				}
				return true;
				}addCollisionFishInfo(fuid){
				this._collisionFishInfo[""+fuid]=1;
				}uncollisionFish(fuid){
				this._collisionFishInfo[""+fuid]=null;
				}isAlive(){
				return !this._hitTarget;
				}getAgent(){
				return this._agent;
				}clientHitTarget(fuid){
				if (this._hitTarget){
					return;
				}
				this._hitCount--;
				var webName=ConfigManager.getConfValue("cfg_battery_skin",this._sk,"web");
				var action=ConfigManager.getConfValue("cfg_battery_skin",this._sk,"action");
				var follow=ConfigManager.getConfValue("cfg_battery_skin",this._sk,"follow");
				var x=this._bullet.x;
				var y=this._bullet.y;
				if (this._hitCount <=0){
					this._catchMainTarget=true;
					this._hitTarget=true;
					this._bullet.stop();
					this._bullet.visible=false;
				};
				var hitEffect=null;
				for (var i=0;i < this._hitEffectArray.length;i++){
					var effect=this._hitEffectArray [i];
					if (!effect.visible){
						hitEffect=effect;
					}
				}
				if (!hitEffect){
					hitEffect=new SpineTemplet(webName);
					this._hitEffectArray.push(hitEffect);
					this._parent.addChild(hitEffect);
					hitEffect.pivot(ConfigManager.getConfValue("cfg_anicollision",webName,"pivotX"),
					ConfigManager.getConfValue("cfg_anicollision",webName,"pivotY"));
				}
				hitEffect.visible=true;
				hitEffect.play(0,false);
				var is_own=(this._agent==FightM.instance.getOwnAgent());
				FightManager.instance.fishHitStart(fuid,!is_own);
				hitEffect.pos(x,y);
				hitEffect.scale(FightManager.instance.getWebScale(),FightManager.instance.getWebScale(),true);
				if (1==follow){
					hitEffect.rotation=this._bullet.rotation+90;
				}
				if (this._agent==FightM.instance.getOwnAgent()){
				}
			}
			// GameSoundManager.playSound(soundPath);
			onlineHitTarget(hitInfo){
				if (this._hitTarget){
					return;
				}
				if (hitInfo.getLc()>=this._hitCount){
					return;
				}
				this._hitCount=hitInfo.getLc();
				var webName=ConfigManager.getConfValue("cfg_battery_skin",this._sk,"web");
				var action=ConfigManager.getConfValue("cfg_battery_skin",this._sk,"action");
				var follow=ConfigManager.getConfValue("cfg_battery_skin",this._sk,"follow");
				var x=this._bullet.x;
				var y=this._bullet.y;
				if (hitInfo.getLc()<=0){
					this._catchMainTarget=true;
					this._hitTarget=true;
					this._bullet.stop();
					this._bullet.visible=false;
				};
				var hitEffect=null;
				for (var i=0;i < this._hitEffectArray.length;i++){
					var effect=this._hitEffectArray [i];
					if (!effect.visible){
						hitEffect=effect;
					}
				}
				if (!hitEffect){
					hitEffect=new SpineTemplet(webName);
					this._hitEffectArray.push(hitEffect);
					this._parent.addChild(hitEffect);
					hitEffect.pivot(ConfigManager.getConfValue("cfg_anicollision",webName,"pivotX"),
					ConfigManager.getConfValue("cfg_anicollision",webName,"pivotY"));
				}
				hitEffect.visible=true;
				hitEffect.play(0,false);
				var cx=FightM.instance.getMirrorPosXByOwnSeat(hitInfo.getCx());
				var cy=FightM.instance.getMirrorPosYByOwnSeat(hitInfo.getCy());
				var is_own=(this._agent==FightM.instance.getOwnAgent());
				FightManager.instance.fishHitStart(hitInfo.getFishUid(),!is_own);
				hitEffect.scale(FightManager.instance.getWebScale(),FightManager.instance.getWebScale(),true);
				hitEffect.pos(x,y);
				if (1==follow){
					hitEffect.rotation=this._bullet.rotation+90;
				}
				if (this._agent==FightM.instance.getOwnAgent()){
				}
			}
			// }
			lockFish(){
				return this._fuid > 0;
				}getFuid(){
				return this._fuid;
				}canCatchFish(){
				if (this._hitTarget){
					return false;
				}
				if (this._fuid > 0){
					return this._lockReach;
				}
				return true;
				}isBulletValid(){
				var effectAllUnVisible=true;
				for (var i=0;i < this._hitEffectArray.length;i++){
					var effect=this._hitEffectArray [i];
					if (effect.visible){
						effectAllUnVisible=false;
						break ;
					}
				}
				return !(this._hitTarget && effectAllUnVisible);
				}calCollisionInfo(){
				var collisionRef;
				var color;
				collisionRef=GameTools.CalRotatePos(this._bullet.rotation+this._collisionCenterBulletPosAngle,this._collisionCenterBulletPosLength);
				this._collisionCenter.x=this._bullet.x+collisionRef.x;
				this._collisionCenter.y=this._bullet.y+collisionRef.y;
				GameTools.CalRotatePos4(this._collisionCenter,this._p1,this._p3,this._bullet.rotation+this._angleP1,this._radius);
				GameTools.CalRotatePos4(this._collisionCenter,this._p2,this._p4,this._bullet.rotation+this._angleP2,this._radius);
				if (GameConst.draw_collision_rect){
					if (this._isCollision){
						color="#ff0000";
					}
					else{
						color="#ffffff";
					}
					this._lineTest.graphics.clear();
					this._lineTest.graphics.drawLine(this._p1.x,this._p1.y,this._p2.x,this._p2.y,"#ffffff",4);
					this._lineTest.graphics.drawLine(this._p2.x,this._p2.y,this._p3.x,this._p3.y,"#ffffff",4);
					this._lineTest.graphics.drawLine(this._p3.x,this._p3.y,this._p4.x,this._p4.y,"#ffffff",4);
					this._lineTest.graphics.drawLine(this._p4.x,this._p4.y,this._p1.x,this._p1.y,"#ffffff",4);
				}
				}hideHitEffect(){
				var invalidEffect=[];
				for (var i=0;i < this._hitEffectArray.length;i++){
					var aEffect=this._hitEffectArray [i];
					if (!aEffect.isPlaying()){
						aEffect.stop();
						aEffect.visible=false;
					}
				}
				}pointInTriangle(ax,ay,bx,by,cx,cy,px,py){
				var ret=false;
				var crossOne=(bx-ax)*(py-ay)-(by-ay)*(px-ax);
				var crossTwo=(cx-bx)*(py-by)-(cy-by)*(px-bx);
				var crossThree=(ax-cx)*(py-cy)-(ay-cy)*(px-cx);
				if (crossOne > 0 && crossTwo > 0 && crossThree > 0){
					return true;
				}
				if (crossOne < 0 && crossTwo < 0 && crossThree < 0){
					return true;
				}
				return ret;
			}
			//4个角度反射
			reflect(angle){
				var len=50;
				var refAngle=0;
				var doReflect=false;
				if (this._designPosX > 0 && this._designPosX <=len){
					if (this._designPosY <=len){
						if (this.pointInTriangle(0,0,0,len,len,0,this._designPosX,this._designPosY)){
							if (angle > 135 && angle <=225){
								angle=45+225-angle;
								doReflect=true;
							}
							else if (angle > 225 && angle < 315){
								angle=45-(angle-225);
								if (angle < 0){
									angle+=360;
								}
								doReflect=true;
							}
						}
					}
					if (this._designPosY >=(720-len)){
						if (this.pointInTriangle(0,720,len,720,0,720-len,this._designPosX,this._designPosY)){
							if (angle > 45 && angle <=135){
								angle=315+135-angle;
								if (angle > 360){
									angle=angle-360;
								}
								doReflect=true;
							}
							else if (angle > 135 && angle < 225){
								angle=315-(angle-135);
								doReflect=true;
							}
						}
					}
				}
				else if (this._designPosX >=(1280-len)&& this._designPosX < 1280){
					if (this._designPosY <=len){
						if (this.pointInTriangle(1280-len,0,1280,len,1280,0,this._designPosX,this._designPosY)){
							if (angle >=315){
								angle=135-(angle-315);
							}
							if (angle < 45){
								angle=45+(45-angle);
							}
							if (angle > 225 && angle < 315){
								angle=135+(315-angle);
							}
							doReflect=true;
						}
					}
					if (this._designPosY >=(720-len)){
						if (this.pointInTriangle(1280-len,720,1280,720,1280,
							720-len,this._designPosX,this._designPosY)){
							if (angle > 315){
								angle=225+(360-angle+45);
							}
							if (angle < 45){
								angle=225+(45-angle);
							}
							if (angle >=45 && angle < 135){
								angle=135+(135-angle);
							}
							doReflect=true;
						}
					}
				}
				if (doReflect){
					this._deltaX=Math.cos(angle *Math.PI / 180);
					this._deltaY=Math.sin(angle *Math.PI / 180);
					this._frameDeltaY=GameConst.fixed_update_time *this._speed *this._deltaY;
					this._frameDeltaX=GameConst.fixed_update_time *this._speed *this._deltaX;
					this._bullet.rotation=angle;
				}
			}
			// }
			fixUpdate(delta){
				this.hideHitEffect();
				if (this._hitTarget){
					return;
				}
				this._useTotalTime+=delta;
				if (this._useTotalTime > 30){
				}
				if (this._showTime > 0){
					this._showTime-=delta;
				}
				if (this._fuid && this._fuid > 0){
					this.lockUpdate(delta);
				}
				else{
					var scrX=this._designPosX;
					var scrY=this._designPosY;
					this._designPosX=scrX+this._frameDeltaX;
					this._designPosY=scrY+this._frameDeltaY;
					this._bullet.pos(GameTools.designPosXMapScreenPosX(this._designPosX),GameTools.designPosYMapScreenPosY(this._designPosY));
					var change=false;
					if (this._designPosX <=0){
						this._deltaX=-this._deltaX;
						this._frameDeltaX=GameConst.fixed_update_time *this._speed *this._deltaX;
						if (this._deltaY > 0){
							this._bullet.rotation=180-this._bullet.rotation;
						}
						else{
							this._bullet.rotation=360-(this._bullet.rotation-180);
						}
						change=true;
					}
					else if (this._designPosX >=1280){
						this._deltaX=-this._deltaX;
						this._frameDeltaX=GameConst.fixed_update_time *this._speed *this._deltaX;
						if (this._deltaY > 0){
							this._bullet.rotation=180-this._bullet.rotation;
						}
						else{
							this._bullet.rotation=180+(360-this._bullet.rotation);
						}
						change=true;
					}
					if (this._designPosY <=0){
						this._deltaY=-this._deltaY;
						this._frameDeltaY=GameConst.fixed_update_time *this._speed *this._deltaY;
						if (this._deltaX > 0){
							this._bullet.rotation=360-this._bullet.rotation;
						}
						else{
							this._bullet.rotation=180-(this._bullet.rotation-180);
						}
						change=true;
					}
					else if (this._designPosY >=720){
						this._deltaY=-this._deltaY;
						this._frameDeltaY=GameConst.fixed_update_time *this._speed *this._deltaY;
						change=true;
						if (this._deltaX > 0){
							this._bullet.rotation=360-this._bullet.rotation;
						}
						else{
							this._bullet.rotation=180+(180-this._bullet.rotation);
						}
					}
					this.reflect(this._bullet.rotation);
				}
				}update(delta,start=false){
				var fightTick=FightManager.instance.getCurTick();
				var maxTick=FightManager.instance.getMaxTick();
				this.fixUpdate(GameConst.fixed_update_time);
			}
			// }
			isBulletLifeOver(){
				return this._isLifeOver;
				}getP1(){
				return this._p1;
				}getP2(){
				return this._p2;
				}getP3(){
				return this._p3;
				}getP4(){
				return this._p4;
				}getRadius(){
				return this._radius;
				}getCenter(){
				return this._collisionCenter;
				}getPosX(){
				return this._designPosX
				}getPosY(){
				return this._designPosY;
				}getHurt(){
				return this._hurt;
				}getSeatId(){
				return this._shootSeatId;
			}drawCollisionRect(){}
			static create (info,parent,useCache=true){
				if (!Bullet._cacheObject){
					Bullet._cacheObject=new Object();
				};
				var ret=null;
				if (useCache && Bullet._cacheObject[String(info.sk)]){
					var tmpArray=Bullet._cacheObject [String(info.sk)];
					if (tmpArray.length > 0){
						ret=tmpArray [0];
						ret.dataInit(info);
						tmpArray.splice(0,1);
					}
				}
				if (!ret){
					ret=new Bullet(info,parent);
				};
				var fightTick=FightManager.instance.getCurTick();
				ret.update(GameConst.fixed_update_time,true);
				return ret;
			}
		}

		fight.Bullet=Laya.Bullet=Bullet;
		Bullet._cacheObject=null;	

		class BulletInfo{
			constructor (){
				//this.startX=NaN;
				//this.startY=NaN;
				//this.endX=NaN;
				//this.endY=NaN;
				// public var bt:int;//子弹id
				//this.sk=0;
				//皮肤
				//this.showDelay=NaN;
				//this.uniId=NaN;
				//this.sr=NaN;
				//速度倍率
				//this.fuid=0;
				//this.index=0;
				//发射子弹的位置
				//this.count=0;
				//碰撞次数
				//this.agent=0;
				//发射子弹的用户id
				//this.tick=0;
			}
		}

		fight.BulletInfo=Laya.BulletInfo=BulletInfo;	

		class CatchShowEffect{
			constructor (showType,value,pos,parent,aniName,aniActionName,seatInfo,preLoad){
				//this._numFont=null;
				this._showTime=3;
				this._showType=0;
				//this._spineAniRoot=null;
				//this._spineAni=null;
				this._deviationX=0;
				this._deviationY=0;
				//this._create_pos=null;
				//this._seat_info=null;
				//this._spineName=null;
				//this._actionName=null;
				this.besideAniNames=["H5_zhuanpan"];
				this._catchBoss=false;
				this._catchShowEffectEndPosData=new Object;
				this._deviationX=ConfigManager.getConfValue("cfg_anicollision",aniName,"deviationX");
				this._deviationY=ConfigManager.getConfValue("cfg_anicollision",aniName,"deviationY");
				this._spineAni=new SpineTemplet(aniName);
				this._spineAniRoot=new Sprite();
				this._numFont=new FontClip("font/font_1.png","/.+-0123456789枚万亿");
				this._numFont.anchorX=0.5;
				this._numFont.anchorY=0.5;
				this._numFont.scaleX=1.6 / 2;
				this._numFont.scaleY=1.6 / 2;
				this._spineAniRoot.addChild(this._spineAni);
				parent.addChild(this._spineAniRoot);
				parent.addChild(this._numFont);
				this.init(showType,value,pos,parent,aniName,aniActionName,seatInfo,preLoad);
			}
			init(showType,value,pos,parent,aniName,actionName,seatInfo,preLoad){
				this._catchBoss=false;
				this._showType=showType;
				this._showTime=1.5;
				this._spineAniRoot.visible=true;
				this._numFont.visible=true;
				this._numFont.value="+"+value;
				this._spineAni.play(actionName,false);
				this._spineAniRoot.pos(GameTools.designPosXMapScreenPosX(pos.x),GameTools.designPosYMapScreenPosY(pos.y));
				this._spineAniRoot.zOrder=1;
				this._numFont.pos(GameTools.designPosXMapScreenPosX(pos.x)+this._deviationX,GameTools.designPosYMapScreenPosY(pos.y)+this._deviationY);
				this._numFont.zOrder=1;
				this._create_pos=pos;
				this._seat_info=seatInfo;
				this._spineName=aniName;
				this._actionName=actionName;
				if (!preLoad){
					var soundPath=ConfigManager.getConfValue("cfg_global",1,"bingo_sound");
					GameSoundManager.playSound(soundPath);
				}
				}setBossCatch(catchBoss){
				this._catchBoss=catchBoss;
				}destroy(){
				this._numFont.visible=false;
				this._spineAniRoot.visible=false;
				this._spineAni.stop();
				if (!CatchShowEffect._cacheObject[String(this._showType)]){
					CatchShowEffect._cacheObject[String(this._showType)]=[];
				};
				var arr=CatchShowEffect._cacheObject [String(this._showType)];
				arr.push(this);
				var cfg=cfg_anicollision.instance(this._spineName);
				if (this.besideAniNames.indexOf(this._spineName)< 0){
					this._spineAni.setScale(cfg.scale,cfg.scale);
				}
				this._numFont.scale(1.6 / 2,1.6 / 2);
				}isValid(){
				return this._showTime > 0;
				}screenResize(){
				if (!(this.besideAniNames.indexOf(this._spineName)< 0 && this._showTime < 0.5)){
					this._spineAniRoot.pos(GameTools.designPosXMapScreenPosX(this._create_pos.x),GameTools.designPosYMapScreenPosY(this._create_pos.y));
					this._numFont.pos(GameTools.designPosXMapScreenPosX(this._create_pos.x)+this._deviationX,GameTools.designPosYMapScreenPosY(this._create_pos.y)+this._deviationY);
				}
				}getPosBySeatId(seat_id){
				if (seat_id==1){
					return new Point(40,700)
					}else if (seat_id==2){
					return new Point(1140,700)
					}else if (seat_id==3){
					return new Point(1140,20)
					}else if (seat_id==4){
					return new Point(75,20)
				}
				return new Point(75,20);
				}update(delta){
				this._showTime-=delta;
				if (this.besideAniNames.indexOf(this._spineName)< 0){
					if (this._showTime < 0.5){
						if (this._catchBoss){
							this._catchBoss=false;
							GameEventDispatch.instance.event("ScreenShare",null);
						};
						var startX=GameTools.designPosXMapScreenPosX(this._create_pos.x);
						var startY=GameTools.designPosYMapScreenPosY(this._create_pos.y);
						this._catchShowEffectEndPosData.getPos=false;
						this._catchShowEffectEndPosData.seat_id=FightM.instance.getShowSeatId(this._seat_info.seat_id);
						GameEventDispatch.instance.event("GetCatchShowEffectEndPos",this._catchShowEffectEndPosData);
						if (this._catchShowEffectEndPosData.getPos){
							var endX=this._catchShowEffectEndPosData.x;
							var endY=this._catchShowEffectEndPosData.y;
							var scale_time=0.5;
							var percent_distance=(scale_time-this._showTime)/ scale_time;
							var scale=this._showTime / 0.5;
							this._spineAni.setScale(this._spineAni.scaleX *scale,this._spineAni.scaleY *scale);
							this._spineAniRoot.pos(startX-(startX-endX)*percent_distance,startY-(startY-endY)*percent_distance);
							this._numFont.scale(scale / 2,scale / 2);
							this._numFont.x=startX+this._deviationX-(startX+this._deviationX-endX)*percent_distance;
							this._numFont.y=startY+this._deviationY-(startY+this._deviationY-endY)*percent_distance;
						}
						else{
							this._showTime=0;
						}
					}
				}
			}
			static create (showType,value,pos,parent,aniName,actionName,seatInfo,preLoad=false){
				if (!CatchShowEffect._cacheObject){
					CatchShowEffect._cacheObject={};
				};
				var ret=null;
				if (!preLoad && CatchShowEffect._cacheObject[String(showType)]){
					var tmpArray=CatchShowEffect._cacheObject [String(showType)];
					if (tmpArray.length > 0){
						ret=tmpArray [0];
						ret.init(showType,value,pos,parent,aniName,actionName,seatInfo,preLoad);
						tmpArray.splice(0,1);
					}
				}
				if (!ret){
					ret=new CatchShowEffect(showType,value,pos,parent,aniName,actionName,seatInfo,preLoad);
				}
				return ret;
			}
		}

		fight.CatchShowEffect=Laya.CatchShowEffect=CatchShowEffect;
		CatchShowEffect._cacheObject=null;	

		class FightManager{
			constructor (){
				//this._boomAniArray=null;
				//this._boomEffectArray=null;
				//this._layers=null;
				//this._fish_up_layers=null;
				//this._fishArray=null;
				//this._bulletArray=null;
				//this._awardArray=null;
				//this._catchShowEffect=null;
				//this._smallGroupFishBornRatio=null;
				//this._smallGroupFishIds=null;
				//this._fishBornRatio=null;
				//this._fishBornIds=null;
				//this._middleFishBornRatio=null;
				//this._middleFishIds=null;
				//this._bigFishBornRatio=null;
				//this._bigFishIds=null;
				//this._bossFishBornRatio=null;
				//this._bossFishIds=null;
				//this._lockLineArray=null;
				//this._waitFishSwimOut=false;
				//this._fishRunTime=NaN;
				//this._fishGroupRunTime=NaN;
				//this._isFishGroup=false;
				//this._groupFishBornType=0;
				//this._fishTideSwimSpeed=NaN;
				//this._fishTideRunTime=NaN;
				//this._playTypeRatio=null;
				//this._playTypes=null;
				//this._bossBornLeftTime=NaN;
				//this._fitFishLeftTime=NaN;
				//this._smallConfigGroupFishLeftTime=NaN;
				//this._bossMinInterval=NaN;
				//this._bossMaxInterval=NaN;
				//this._fitFishMinLeftTime=NaN;
				//this._fitFishMaxLeftTime=NaN;
				//this._smallConfigGroupFishMinLeftTime=NaN;
				//this._smallConfigGroupFishMaxLeftTime=NaN;
				//this._smallFishBornRate=NaN;
				//this._middleFishBornRate=NaN;
				//this._bigFishBornRate=NaN;
				//this._fishBornWaitTime=NaN;
				//this._curFishGroupArray=null;
				//this._curAreaId=0;
				//this._fishTime=NaN;
				//this._playTypeNum=0;
				//this._fishGroupTime=NaN;
				//this._bossNum=0;
				//this._groupFishIdNum=0;
				//this._fishIdNum=0;
				//this._middleFishIdNum=0;
				//this._bigFishIdNum=0;
				//this._bgSprite=null;
				//this._bgSpriteR=null;
				//this._bgSpriteM=null;
				//this._bgSpriteMR=null;
				//this._bgSpriteF=null;
				//this._bgSpriteFR=null;
				//this._freezeSprite=null;
				this._freezeLeftTime=0;
				this._freezeStartTick=0;
				//this._updateTime=NaN;
				//this._fightRoot=null;
				this._tideFishIndex=0;
				this._tideName="test4";
				this._tideSpeed=100;
				this._tideSwimLength=0;
				this._clearUpAni=null;
				this._clearUpParticles=null;
				this._clearUpDir=1;
				this._clearUpTotalTime=0;
				this._clearUpCastTime=0;
				this._skillBoomSelectFlag=false;
				this._skillBoomId=0;
				this._lockShootInterval=0;
				this._bulletMaxTip=false;
				this._lockCoinTip=false;
				this._extraDrop=false;
				this._curTick=0;
				this._maxTick=0;
				this._syncTick=0;
				this._syncTickTime=0;
				this._syncTickInterval=2000;
				//毫秒
				this._syncTickStartTime=0;
				this._fightUiUpLayer=null;
				this._bgImgMove=null;
				this._jellyEffect=null;
				this._boomMaskLayer=null;
				this._sceneWebScale=1;
				this._sceneWebRange=1;
				this._lockLinePosArray=[429,687,851,687,851,33,429,33];
				//this._ani=null;
				this._shakeTimes=0;
				this._shakeAx=0;
				this._shakeAy=0;
				this._shakeTime=0;
				this._shakeCastTime=0;
				this._multiGetCoinArrayX=[0,-20,20,-40,40];
				this._multiGetCoinArrayY=[0,-20,20,-40,40];
				this._scenePlayType=2;
				this._protoBulletInfo=new ProtoBulletInfo();
				this._bulletInfo=new BulletInfo();
				this._c2s_12031=new C2s_12031();
				this._c2s_bulletShoot=new C2s_shootBullet();
				this._c2s_17001=new C2s_17001();
				this._c2s_12043=new C2s_12043();
				this._blackFishP1=new Point();
				this._blackFishP2=new Point();
				this._blackFishP3=new Point();
				this._blackFishP4=new Point();
				this._c2s_12035=new C2s_12035();
				this._calInfo=new Object();
				this._protoBulletHitInfo=new ProtoBulletHitInfo();
				this._protoFishInfo=new ProtoFishInfo();
				this._protoCatchAward=new ProtoCatchAward();
				this._protoCatchFish=new ProtoCatchFish();
				this._getCoinInfo=new ShowGetCoinInfo();
				this._s2c_shootBullet=new S2c_shootBullet();
				var layerNode;
				var i=0;
				this._layers=[];
				this._fish_up_layers=[];
				this._fishArray=[];
				this._awardArray=[];
				this._catchShowEffect=[];
				this._boomAniArray=[];
				this._boomEffectArray=[];
				this._lockLineArray=[];
				this._bulletArray=[];
				this._clearUpAni=null;
				var fightBaseDepth=UiManager.instance.getFightBaseDepth();
				var fightUiBaseDepth=UiManager.instance.getFightUiBaseDepth();
				this._bgSprite=new Sprite();
				this._bgSpriteM=new myShaderSprite();
				this._bgSpriteF=new myShaderSprite();
				this._bgSpriteR=new Sprite();
				this._bgSpriteMR=new myShaderSprite();
				this._bgSpriteFR=new myShaderSprite();
				this._freezeSprite=new Sprite();
				this._bgImgMove=new BgImgMove();
				this._bgSprite.loadImage("scene/scene_1_1_1.png");
				this._bgSpriteR.loadImage("scene/scene_1_1_1.png");
				this._bgSpriteM.loadImage("scene/scene_1_2.png");
				this._bgSpriteMR.loadImage("scene/scene_1_2.png");
				this._bgSpriteF.loadImage("scene/scene_1_3.png");
				this._bgSpriteFR.loadImage("scene/scene_1_3.png");
				var range=0.002;
				var yrate=4.0;
				var xrate=1.0;
				range=0.002;
				yrate=2.0;
				xrate=1.0;
				this._freezeSprite.loadImage("scene/freeze.png");
				this._freezeSprite.visible=false;
				fightBaseDepth+=1;
				this._fightRoot=new Sprite();
				this._fightUiUpLayer=new Sprite();
				Laya.stage.addChild(this._fightRoot);
				Laya.stage.addChild(this._fightUiUpLayer);
				this._fightRoot.zOrder=fightBaseDepth;
				this._fightUiUpLayer.zOrder=fightUiBaseDepth+1;
				this._fightRoot.addChild(this._bgSprite);
				this._fightRoot.addChild(this._bgSpriteR);
				this._bgImgMove.setBgInfo(this._bgSprite,this._bgSpriteR);
				for (i=0;i < 40;i++){
					layerNode=new Sprite();
					this._fightRoot.addChild(layerNode);
					this._layers.push(layerNode);
					if (i > 3){
						layerNode.visible=false;
					}
				}
				this._jellyEffect=new JellyEffect(this._layers[0]);
				this._fightRoot.addChild(this._bgSpriteM);
				this._fightRoot.addChild(this._bgSpriteMR);
				this._bgImgMove.setMbgInfo(this._bgSpriteM,this._bgSpriteMR);
				for (i=0;i < 40;i++){
					layerNode=new Sprite();
					this._fightRoot.addChild(layerNode);
					this._layers.push(layerNode);
				}
				this._boomMaskLayer=new Sprite();
				this._boomMaskLayer.loadImage("ui/common_ex/jl_bg.png");
				this._boomMaskLayer.scale(40,30);
				this._boomMaskLayer.pos(-50,-50);
				this._boomMaskLayer.alpha=0.7;
				layerNode=this._layers[GameConst.boom_mask_layer_index];
				layerNode.addChild(this._boomMaskLayer);
				this._boomMaskLayer.visible=false;
				this._fightRoot.addChild(this._bgSpriteF);
				this._fightRoot.addChild(this._bgSpriteFR);
				this._bgImgMove.setFbgInfo(this._bgSpriteF,this._bgSpriteFR);
				layerNode=new Sprite();
				this._fightRoot.addChild(layerNode);
				this._layers.push(layerNode);
				for (i=0;i < 6;i++){
					layerNode=new Sprite();
					this._fightRoot.addChild(layerNode);
					this._fish_up_layers.push(layerNode);
				}
				this._fightRoot.addChild(this._freezeSprite);
				var rect;
				var length=0;
				var lineScaleArray=[0.48,0.52,0.56,0.6,0.64,0.68,0.72,0.76,0.8,0.84,0.88,0.92,0.96,1,1,1,1,1,1,1,1,1,1,1,1,1,1];
				for (i=0;i < 4;i++){
					var tmpLineArray=[];
					length=0;
					this._lockLineArray.push(tmpLineArray);
					var lineRootSprit;
					var tmpLine=new Sprite();
					lineRootSprit=tmpLine;
					tmpLine.pos(this._lockLinePosArray[i *2],this._lockLinePosArray[i *2+1]);
					this._fish_up_layers[0].addChild(tmpLine);
					tmpLineArray.push(tmpLine);
					for (var j=0;j < 24;j++){
						tmpLine=new Sprite();
						tmpLine.loadImage("ui/common_ex/lock_circle.png");
						rect=tmpLine.getBounds();
						tmpLine.pivot(rect.width / 2,rect.height / 2);
						lineRootSprit.addChild(tmpLine);
						tmpLine.visible=false;
						tmpLine.x=length;
						tmpLine.scale(lineScaleArray[j],lineScaleArray[j]);
						tmpLineArray.push(tmpLine);
						length+=70;
					}
				}
				GameEventDispatch.instance.on("FightStart",this,this.start);
				GameEventDispatch.instance.on("FightStop",this,this.stop);
				GameEventDispatch.instance.on("SystemReset",this,this.SystemReset);
				GameEventDispatch.instance.on("ParseFishData",this,this.parseFishData);
				GameEventDispatch.instance.on("NewBullet",this,this.newBullet);
				GameEventDispatch.instance.on("ConfirmUseSkill",this,this.confirmUseSkill);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on(String(12016),this,this.onlineNewBullet);
				GameEventDispatch.instance.on(String(12017),this,this.onlineDataSync);
				GameEventDispatch.instance.on(String(12023),this,this.swimOut);
				GameEventDispatch.instance.on(String(12028),this,this.freezeSkill);
				GameEventDispatch.instance.on(String(12029),this,this.boomSkill);
				GameEventDispatch.instance.on(String(12040),this,this.syncTick);
				GameEventDispatch.instance.on(String(12045),this,this.blackHoleAbsorbFish);
				GameEventDispatch.instance.on(String(12059),this,this.syncSkipCoin);
				this._bgImgMove.hide();
				this.screenResize();
			}
			useSkill(skillId,rp=0){
				var skillType=ConfigManager.getConfValue("cfg_skill",skillId,"skill_type");
				if (skillType==3){
					var maxCallFishNum=ConfigManager.getConfValue("cfg_global",1,"max_call_num");
					var curCallFishNum=this.getCallFishNum();
					if (curCallFishNum >=maxCallFishNum){
						GameEventDispatch.instance.event("MsgTp",18);
						return;
					}
				};
				var msg=this._c2s_17001;
				msg.id=skillId;
				msg.rp=rp;
				msg.callreq=1;
				WebSocketManager.instance.send(17001,msg);
				}confirmUseSkill(skillId){
				this.useSkill(skillId,1);
				}getProduceNum(arr){
				return (Math.ceil(Math.random()*(arr))|| 1)+50;
				}getLayers(){
				return this._layers;
				}onComplete(){
				}removeInvalidFish(removeAll=false){
				var invalidFish=[];
				for (var i=0;i < this._fishArray.length;i++){
					var fish=this._fishArray [i];
					if (!fish.isValid()|| removeAll){
						invalidFish.push(fish);
					}
				};
				var count=invalidFish.length;
				for (var j=0;j < count;j++){
					var removeFish=invalidFish [j];
					removeFish.destroy();
					for (var k=0;k < this._fishArray.length;k++){
						if (this._fishArray[k]===removeFish){
							this._fishArray.splice(k,1);
							break ;
						}
					}
				}
				}removeInvalidBullet(removeAll=false){
				var invalidBullet=[];
				for (var i=0;i < this._bulletArray.length;i++){
					var bullet=this._bulletArray [i];
					if (!bullet.isBulletValid()|| removeAll){
						invalidBullet.push(bullet);
					}
				};
				var count=invalidBullet.length;
				for (var j=0;j < count;j++){
					var removeBullet=invalidBullet [j];
					removeBullet.destroy();
					for (var k=0;k < this._bulletArray.length;k++){
						if (this._bulletArray[k]==removeBullet){
							this._bulletArray.splice(k,1);
							break ;
						}
					}
				}
				}removeInvalidAwardEffect(removeAll=false){
				var invalidEffect=[];
				for (var i=0;i < this._awardArray.length;i++){
					var aEffect=this._awardArray [i];
					if (!aEffect.isValid()|| removeAll){
						invalidEffect.push(aEffect);
					}
				};
				var count=invalidEffect.length;
				for (var j=0;j < count;j++){
					var removeEffect=invalidEffect [j];
					removeEffect.destroy();
					for (var k=0;k < this._awardArray.length;k++){
						if (this._awardArray[k]==removeEffect){
							this._awardArray.splice(k,1);
							break ;
						}
					}
				}
				}removeInvalidCatchShowEffect(removeAll=false){
				var invalidEffect=[];
				for (var i=0;i < this._catchShowEffect.length;i++){
					var aEffect=this._catchShowEffect [i];
					if (!aEffect.isValid()|| removeAll){
						invalidEffect.push(aEffect);
					}
				};
				var count=invalidEffect.length;
				for (var j=0;j < count;j++){
					var removeEffect=invalidEffect [j];
					removeEffect.destroy();
					for (var k=0;k < this._catchShowEffect.length;k++){
						if (this._catchShowEffect[k]==removeEffect){
							this._catchShowEffect.splice(k,1);
							break ;
						}
					}
				}
				}removeInvalidBoomEffect(removeAll=false){
				var invalidEffect=[];
				for (var i=0;i < this._boomEffectArray.length;i++){
					var bEffect=this._boomEffectArray [i];
					if (!bEffect.isValid()|| removeAll){
						invalidEffect.push(bEffect);
					}
				};
				var count=invalidEffect.length;
				for (var j=0;j < count;j++){
					var removeEffect=invalidEffect [j];
					removeEffect.destroy();
					for (var k=0;k < this._boomEffectArray.length;k++){
						if (this._boomEffectArray[k]==removeEffect){
							this._boomEffectArray.splice(k,1);
							break ;
						}
					}
				}
				}removeBoomAni(removeAll=false){
				var invalidAni=[];
				for (var i=0;i < this._boomAniArray.length;i++){
					var ani=this._boomAniArray [i];
					if (!ani.isPlaying()|| removeAll){
						invalidAni.push(ani);
					}
				};
				var count=invalidAni.length;
				for (var j=0;j < count;j++){
					var removeAni=invalidAni [j];
					for (var k=0;k < this._boomAniArray.length;k++){
						if (this._boomAniArray[k]==removeAni){
							this._boomAniArray.splice(k,1);
							break ;
						}
					}
					removeAni.removeSelf();
				}
				}removeFishGroup(){
				}getBornFishId(sizeType){
				var rnd=Math.random();
				var i=0;
				switch (sizeType){
					case 0:{
							for (i=0;i < this._smallGroupFishIds.length;i++){
								if (rnd <=this._smallGroupFishBornRatio[i]){
									return this._smallGroupFishIds[i];
								}
							}
							break ;
						}
					case 1:{
							for (i=0;i < this._fishBornRatio.length;i++){
								if (rnd <=this._fishBornRatio[i]){
									return this._fishBornIds[i];
								}
							}
							break ;
						}
					case 2:{
							for (i=0;i < this._middleFishBornRatio.length;i++){
								if (rnd <=this._middleFishBornRatio[i]){
									return this._middleFishIds[i];
								}
							}
							break ;
						}
					case 3:{
							for (i=0;i < this._bigFishBornRatio.length;i++){
								if (rnd <=this._bigFishBornRatio[i]){
									return this._bigFishIds[i];
								}
							}
							break ;
						}
					case 4:{
							for (i=0;i < this._bossFishBornRatio.length;i++){
								if (rnd <=this._bossFishBornRatio[i]){
									return this._bossFishIds[i];
								}
							}
							break ;
						}
					}
				return this._fishBornIds[this._fishBornIds.length-1];
				}testGroupBornFish(){
				}fishTideDataInit(){
				this._groupFishBornType=GameTools.getRandomNumber(0,1);
				switch (this._groupFishBornType){
					case 0:{
							break ;
						}
					case 1:{
							break ;
						}
					}
				this._waitFishSwimOut=true;
				this._fishRunTime=0;
				this._fishGroupRunTime=0;
				this._isFishGroup=true;
				this._tideFishIndex=0;
				this._tideSwimLength=0;
				this._tideSpeed=100;
				}getFishIdByTag(tagId){
				}clearTagFishInfo(){
				}groupFishBornLeftToRight(){
				this._fishGroupRunTime=0;
				var swimLen=this._fishTideSwimSpeed *this._fishTideRunTime;
				}groupFishBornPath(){
				}bornConfigSmallGroupFish(){
				}bornNormalConfigSmallGroupFish(fishId,fishNum){
				}bornContinuosConfigSmallGroupFish(smallGroupId){
				}getFitFishId(rndStart,rndRange,index,rndType,fitId,preFishId){
				var ret=preFishId;
				switch (rndType){
					case 1:{
							break ;
						}
					case 0:{
							break ;
						}
					case 3:{
							break ;
						}
					case 2:{
							break ;
						}
					}
				return ret;
				}bornFitFishes(){
				}bornBullet(info){
				var bullet=Bullet.create(info,this._fish_up_layers[2]);
				this._bulletArray.push(bullet);
				}getBulletLayer(){
				return this._fish_up_layers[2];
				}getFishLayer(fisId){
				var layerIndex=ConfigManager.getConfValue("cfg_fish",fisId,"layer");
				return this._layers[layerIndex];
				}fishUpdate(delta){
				var count=this._fishArray.length;
				for (var i=0;i < count;i++){
					var fish=this._fishArray [i];
					fish.update(delta);
				}
				}clearUpAniUpdate(delta){
				var totalTime=this._clearUpTotalTime;
				if (this._clearUpCastTime < totalTime+1){
					this._clearUpCastTime+=delta;
					if (this._clearUpCastTime >=totalTime+1){
						var particle;
						if (this._clearUpParticles){
							for (var i=0;i < this._clearUpParticles.length;i++){
								particle=this._clearUpParticles [i];
								particle.visible=false;
							}
						}
						return;
					}
					if (this._clearUpParticles){
						for (i=0;i < this._clearUpParticles.length;i++){
							particle=this._clearUpParticles [i];
							if (1==this._clearUpDir){
								particle.x=this._clearUpCastTime / this._clearUpTotalTime *Laya.stage.width;
							}
							else{
								particle.x=Laya.stage.width-this._clearUpCastTime / this._clearUpTotalTime *Laya.stage.width;
							}
						}
					}
				}
			}
			// }
			freezeUpdate(delta){
				if (this._freezeLeftTime > 0){
					this._freezeLeftTime-=delta;
					if (this._freezeLeftTime <=0){
						this._freezeSprite.visible=false;
					}
				}
				}bulletUpdate(delta){
				var bullet=null;
				for (var i=0;i < this._bulletArray.length;i++){
					bullet=this._bulletArray[i];
					bullet.update(delta);
				}
				}awardEffectUpdate(delta){
				var aEffect=null;
				for (var i=0;i < this._awardArray.length;i++){
					aEffect=this._awardArray [i];
					aEffect.update(delta);
				}
				}catchShowEffectUpdate(delta){
				var catchShowEffect=null;
				for (var i=0;i < this._catchShowEffect.length;i++){
					catchShowEffect=this._catchShowEffect [i];
					catchShowEffect.update(delta);
				}
				}boomEffectUpdate(delta){
				var bEffect=null;
				for (var i=0;i < this._boomEffectArray.length;i++){
					bEffect=this._boomEffectArray [i];
					bEffect.update(delta);
				}
				}blackHoleAbsorbFish(data){
				var fishes=data.fishes;
				var i=0;
				var j=0;
				var tmpFish=null;
				for (i=0;i < fishes.length;i++){
					for (j=0;j < this._fishArray.length;j++){
						tmpFish=this._fishArray [j];
						if (tmpFish.getUniId()==fishes[i]){
							tmpFish.absorbed(data.x,data.y);
							break ;
						}
					}
				}
				}calBlackHoleAbsorbFish(){
				var blackFish=null;
				var tmpFish=null;
				var i=0;
				var msg=this._c2s_12043;
				msg.fishes=[];
				for (i=0;i < this._fishArray.length;i++){
					tmpFish=this._fishArray [i];
					if (tmpFish.blackHoleActive()){
						blackFish=tmpFish;
						break ;
					}
				}
				if (blackFish){
					var p1=this._blackFishP1;
					var p2=this._blackFishP2;
					var p3=this._blackFishP3;
					var p4=this._blackFishP4;
					var blackPosX=blackFish.getBlackHolePosX();
					var blackPosY=blackFish.getBlackHolePosY();
					var catchRange=blackFish.getBlackHoleRange();
					msg.x=Math.floor(FightM.instance.getMirrorPosXByOwnSeat(blackPosX));
					msg.y=Math.floor(FightM.instance.getMirrorPosYByOwnSeat(blackPosY));
					p1.x=blackPosX-catchRange;
					p1.y=blackPosY-catchRange;
					p2.x=p1.x+catchRange+catchRange;
					p2.y=p1.y;
					p3.x=p2.x;
					p3.y=p2.y+catchRange+catchRange;
					p4.x=p3.x-catchRange-catchRange;
					p4.y=p3.y;
					for (i=0;i < this._fishArray.length;i++){
						tmpFish=this._fishArray [i];
						if (tmpFish !=blackFish && tmpFish.collisionDetect(p1,p2,p3,p4)){
							msg.fishes.push(tmpFish.getUniId());
						}
					}
				}
				if (msg.fishes.length > 0){
					WebSocketManager.instance.send(12043,msg);
				}
			}
			//关卡3子弹碰撞
			blackHoleBulletHurtCal(){
				var count=this._bulletArray.length;
				var bullet=null;
				var p1=this._blackFishP1;
				var p2=this._blackFishP2;
				var p3=this._blackFishP3;
				var p4=this._blackFishP4;
				var center;
				var radius=NaN;
				var j=0;
				var x=NaN;
				var y=NaN;
				var bulletAgent=0;
				var msg=this._c2s_12035;
				var ownAgent=FightM.instance.getOwnAgent();
				var webNum=0;
				var pointCollisionOk=false;
				var webRadius=this._sceneWebRange;
				msg.hit=[];
				if (GameConst.draw_collision_rect){
					for (var k=0;k < this._fishArray.length;k++){
						var tmpFish=this._fishArray [k];
						tmpFish._isCollision=false;
					}
				}
				for (var i=0;i < count;i++){
					bullet=this._bulletArray [i];
					bulletAgent=bullet.getAgent();
					pointCollisionOk=false;
					if (bullet.canCatchFish()){
						var fList=[];
						if (bullet.lockFish()){
							bullet.clientHitTarget(bullet.getFuid());
							if ((bulletAgent==ownAgent || FightM.instance.isOwnBestBulletOwner(bulletAgent))){
								fList.push(bullet.getFuid());
							}
						}
						else{
							x=bullet.getPosX();
							y=bullet.getPosY();
							p1.x=x-webRadius;
							p1.y=y-webRadius;
							p2.x=p1.x+webRadius+webRadius;
							p2.y=p1.y;
							p3.x=p2.x;
							p3.y=p2.y+webRadius+webRadius;
							p4.x=p3.x-webRadius-webRadius;
							p4.y=p3.y;
							for (j=0;j < this._fishArray.length;j++){
								var fish=this._fishArray [j];
								if (fish.isValid()){
									if (pointCollisionOk){
										if (fList.length < 5 && fish.collisionDetect(p1,p2,p3,p4)){
											fight.FightManager.instance.fishHitStart(fish.getUniId(),!(bulletAgent==ownAgent));
											if ((bulletAgent==ownAgent || FightM.instance.isOwnBestBulletOwner(bulletAgent))){
												fList.push(fish.getUniId());
											}
										}
										else{
											bullet.uncollisionFish(fish.getUniId());
											if (!bullet.canCatchFish()){
												break ;
											}
										}
									}
									else{
										if (fish.bulletPointCollisionDetect(x,y)){
											if (bullet.isUncollisionFish(fish.getUniId())){
												bullet.addCollisionFishInfo(fish.getUniId());
												bullet.clientHitTarget(fish.getUniId());
												bullet._isCollision=true;
												pointCollisionOk=true;
												if ((bulletAgent==ownAgent || FightM.instance.isOwnBestBulletOwner(bulletAgent))){
													fList.push(fish.getUniId());
												}
											}
										}
										else{
											bullet.uncollisionFish(fish.getUniId());
										}
									}
								}
							}
						}
						if (fList.length > 0){
							var item=new Object();
							item.b=bullet.getUniId();
							item.f=fList;
							msg.hit.push(item);
						}
					}
				}
				if (msg.hit.length > 0){
					WebSocketManager.instance.send(12035,msg);
				}
			}
			//关卡1，2子弹碰撞
			bulletHurtCal(){
				var count=this._bulletArray.length;
				var bullet=null;
				var center;
				var radius=NaN;
				var j=0;
				var x=NaN;
				var y=NaN;
				var bulletAgent=0;
				var msg=this._c2s_12035;
				var ownAgent=FightM.instance.getOwnAgent();
				var pointCollisionOk=false;
				this._calInfo.hit=0;
				msg.hit=[];
				if (GameConst.draw_collision_rect){
					for (var k=0;k < this._fishArray.length;k++){
						var tmpFish=this._fishArray [k];
						tmpFish._isCollision=false;
					}
				}
				for (var i=0;i < count;i++){
					bullet=this._bulletArray [i];
					bulletAgent=bullet.getAgent();
					if (bullet.canCatchFish()){
						var fList=[];
						bullet._isCollision=false;
						pointCollisionOk=false;
						if (bullet.lockFish()){
							bullet.clientHitTarget(bullet.getFuid());
							if ((bulletAgent==ownAgent || FightM.instance.isOwnBestBulletOwner(bulletAgent))){
								fList.push(bullet.getFuid());
							}
						}
						else{
							x=bullet.getPosX();
							y=bullet.getPosY();
							for (j=0;j < this._fishArray.length;j++){
								var fish=this._fishArray [j];
								if (fish.isValid()){
									if (fish.bulletPointCollisionDetect(x,y,this._calInfo)){
										if (bullet.isUncollisionFish(fish.getUniId())){
											bullet.addCollisionFishInfo(fish.getUniId());
											if (!pointCollisionOk){
												bullet.clientHitTarget(fish.getUniId());
											}
											fish._isCollision=true;
											bullet._isCollision=true;
											pointCollisionOk=true;
											if ((bulletAgent==ownAgent || FightM.instance.isOwnBestBulletOwner(bulletAgent))){
												fList.push(fish.getUniId());
											}
											if (!bullet.canCatchFish()){
												break ;
											}
										}
									}
									else{
										fish._isCollision=false;
										bullet.uncollisionFish(fish.getUniId());
									}
								}
							}
						}
						if (fList.length > 0){
							var item=new Object();
							item.b=bullet.getUniId();
							item.f=fList;
							msg.hit.push(item);
						}
					}
				}
				if (msg.hit.length > 0){
					WebSocketManager.instance.send(12035,msg);
				}
			}
			//trace("cal hit = "+_calInfo.hit,_bulletArray.length,_fishArray.length);
			localBombOp(){
				}screenBombOp(){
				}catchFishByType(){
				}catchFishByPlayType(){
				}exitArea(hideBg){
				if (hideBg){
					this._bgImgMove.hide();
					this._jellyEffect.hide();
				}
				this._freezeLeftTime=0;
				this._freezeSprite.visible=false;
				var lineTmpArray;
				var rootSprite;
				var i=0;
				for (i=0;i < 4;i++){
					lineTmpArray=this._lockLineArray [i];
					rootSprite=lineTmpArray [0];
					rootSprite.visible=false;
				};
				var particle;
				if (this._clearUpParticles){
					for (i=0;i < this._clearUpParticles.length;i++){
						particle=this._clearUpParticles [i];
						particle.stop();
						particle.visible=false;
					}
				}
				this._curAreaId=-1;
				this.removeInvalidFish(true);
				this.removeInvalidBullet(true);
				this.removeInvalidAwardEffect(true);
				this.removeInvalidCatchShowEffect(true);
				this.removeInvalidBoomEffect(true);
				this.removeBoomAni(true);
				this.skillBoomSelectReset();
				FightM.instance.dataReset();
				}initPlayType(areaId){
				this._playTypeNum=0;
				var bornRatioTotal=0;
				var bornRatioTmp=[];
				var i=0;
				this._playTypes=[];
				this._playTypeRatio=[];
				for (i=1;i < 15;i++){
					var key="playType"+i;
					var playType=ConfigManager.getConfValue("cfg_scene",areaId,key);
					key="playType"+i+"Ratio";
					var bornRatio=ConfigManager.getConfValue("cfg_scene",areaId,key);
					if (playType > 0){
						bornRatioTotal+=bornRatio;
						bornRatioTmp.push(bornRatio);
						this._playTypes[this._playTypeNum++]=playType;
					}
				};
				var tmp=0;
				for (i=0;i < this._playTypeNum;i++){
					tmp+=bornRatioTmp[i];
					this._playTypeRatio[i]=tmp / bornRatioTotal;
				}
				}loadTideData(areaId){
				}parseFishesBornData(areaId){
				if (areaId===this._curAreaId){
					return;
				};
				var date=new Date();
				var milli=date.getTime();
				this._updateTime=0;
				this._scenePlayType=ConfigManager.getConfValue("cfg_scene",areaId,"play_id");
				this._sceneWebScale=ConfigManager.getConfValue("cfg_scene",areaId,"web");
				this._sceneWebRange=ConfigManager.getConfValue("cfg_scene",areaId,"range");
				this._smallFishBornRate=ConfigManager.getConfValue("cfg_global",1,"smallFishBornRate");
				this._middleFishBornRate=ConfigManager.getConfValue("cfg_global",1,"middleFishBornRate")+this._smallFishBornRate;
				this._bigFishBornRate=ConfigManager.getConfValue("cfg_global",1,"middleFishBornRate")+this._middleFishBornRate;
				var backSound=ConfigManager.getConfValue("cfg_scene",areaId,"backMusic");
				var backImg=ConfigManager.getConfValue("cfg_scene",areaId,"sceneBgImg");
				this._waitFishSwimOut=false;
				this._fishBornWaitTime=ConfigManager.getConfValue("cfg_global",1,"fishBornDelay");
				this._curFishGroupArray=null;
				this._curAreaId=areaId;
				this._isFishGroup=false;
				this._lockCoinTip=false;
				this._bulletMaxTip=false;
				this._clearUpCastTime=0;
				this._clearUpTotalTime=0;
				this._syncTickTime=milli;
				this._syncTickStartTime=milli;
				this.playComingSpine();
				}playComingSpine(){
				GameEventDispatch.instance.event("WelcomeGetIn");
			}
			// _boomAniArray.push(ani);
			getFishIdByModelName(){
				return 1;
				}seatLockUpdate(showSeatId){
				var seatId=0;
				var seatInfo;
				var fish;
				var fishCenter;
				var i=0;
				seatId=FightM.instance.getSeatIdByShowSeatId(showSeatId);
				seatInfo=FightM.instance.getSeatInfo(seatId);
				var lineTmpArray=this._lockLineArray [showSeatId-1];
				var rootSprite=lineTmpArray [0];
				rootSprite.visible=false;
				if (seatInfo && seatInfo.lock_et > 0){
					if (seatInfo.lock_uid){
						for (i=0;i < this._fishArray.length;i++){
							fish=this._fishArray [i];
							if (fish.getUniId()==seatInfo.lock_uid){
								fish.setLock(this._fish_up_layers[0]);
								rootSprite.visible=true;
								fishCenter=fish.getCenterPosition();
								rootSprite.rotation=GameTools.CalLineAngleP4(rootSprite.x,rootSprite.y,fishCenter.x,fishCenter.y);
								var maxLen=GameTools.CalPointLenP4(rootSprite.x,rootSprite.y,fishCenter.x,fishCenter.y);
								var useLen=0;
								var tmpSprite;
								for (var j=0;j < lineTmpArray.length;j++){
									tmpSprite=lineTmpArray [j];
									if (maxLen < useLen){
										tmpSprite.visible=false;
									}
									else{
										tmpSprite.visible=true;
									}
									useLen+=70;
								}
								break ;
							}
						}
					}
				}
			}
			//当前锁定的目标是否有效
			lockTargetAvailable(uid){
				if (uid > 0){
					var i=0;
					var fish;
					for (i=0;i < this._fishArray.length;i++){
						fish=this._fishArray [i];
						if (fish.canLock()&& fish.getUniId()==uid){
							return true;
						}
					}
				}
				return false;
				}getFishByUid(uid){
				var i=0;
				var fish;
				for (i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					if (fish.isAlive()&& fish.getUniId()==uid){
						return fish;
					}
				}
				return null;
				}getFishPosition(uid){
				var i=0;
				var fish;
				for (i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					if (fish.isAlive()&& fish.getUniId()==uid){
						return fish.getCenterPosition();
					}
				}
				return null;
				}fishHitStart(uid,onlineSync=false){
				var i=0;
				var fish;
				for (i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					if (fish.isAlive()&& fish.getUniId()==uid){
						fish.hitStart(onlineSync);
						return;
					}
				}
				}getLockFish(){
				var i=0;
				var ret=null;
				var fish=null;
				for (i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					if (fish.canLock()){
						if (!ret){
							ret=fish;
						}
						else if (fish.getLockPri()> ret.getLockPri()){
							ret=fish;
						}
					}
				}
				return ret;
			}
			//锁定技能更新
			lockUpdate(delta){
				var i=0;
				var fish;
				this.seatLockUpdate(1);
				this.seatLockUpdate(2);
				this.seatLockUpdate(3);
				this.seatLockUpdate(4);
				for (i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					fish.lockClear();
				};
				var seatInfo=FightM.instance.getSeatInfo(FightM.instance.seatId);
				if (seatInfo && seatInfo.lock_et > 0 && !this.lockTargetAvailable(FightM.instance._lockUid)&& !this.lockTargetAvailable(seatInfo.lock_uid)){
					fish=this.getLockFish();
					if (fish){
						FightM.instance._lockUid=fish.getUniId();
						this._c2s_12031.uid=fish.getUniId();
						WebSocketManager.instance.send(12031,this._c2s_12031);
					}
					this._lockShootInterval=0;
				}
				if (seatInfo && seatInfo.lock_et > 0 && this.lockTargetAvailable(seatInfo.lock_uid)){
					this._lockShootInterval-=delta;
					if (this._lockShootInterval <=0){
						this._lockShootInterval=FightM.instance.getShootInterval();
						if (!this.isBulletReachMaxNum()){
							if (this.getSkillBoomSelectFlag()){
								return;
							};
							var comsume=ConfigManager.getConfValue("cfg_battery",FightM.instance.getOwnUseBattery(),"comsume");
							var catchCount=ConfigManager.getConfValue("cfg_battery_skin",RoleInfoM.instance.getCurSkin(),"catch_count");
							comsume=comsume *catchCount *FightM.instance.getCoinRate()*FightM.instance.getChangeRate();
							var totalCoin=RoleInfoM.instance.getCoin()+RoleInfoM.instance.getBindCoin();
							if (!FightM.instance.coinShootScene()){
								totalCoin=RoleInfoM.instance.getContestCoin();
							}
							if (totalCoin >=comsume){
								fish=this.getFishByUid(seatInfo.lock_uid);
								var refPoint=fish.getCenterPosition();
								var lineTmpArray=this._lockLineArray [FightM.instance.getShowSeatId(FightM.instance.seatId)-1];
								var rootSprite=lineTmpArray [0];
								this._c2s_bulletShoot.fuid=seatInfo.lock_uid;
								this._c2s_bulletShoot.startX=GameTools.screenPosXMapDesignPosX(rootSprite.x);
								this._c2s_bulletShoot.startY=GameTools.screenPosYMapDesignPosY(rootSprite.y);
								this._c2s_bulletShoot.endX=GameTools.screenPosXMapDesignPosX(refPoint.x);
								this._c2s_bulletShoot.endY=GameTools.screenPosYMapDesignPosY(refPoint.y);
								this._c2s_bulletShoot.startX=FightM.instance.getMirrorPosXByOwnSeat(Math.floor(this._c2s_bulletShoot.startX));
								this._c2s_bulletShoot.endX=FightM.instance.getMirrorPosXByOwnSeat(Math.floor(this._c2s_bulletShoot.endX));
								this._c2s_bulletShoot.startY=FightM.instance.getMirrorPosYByOwnSeat(Math.floor(this._c2s_bulletShoot.startY));
								this._c2s_bulletShoot.endY=FightM.instance.getMirrorPosYByOwnSeat(Math.floor(this._c2s_bulletShoot.endY));
								this._c2s_bulletShoot.bt=FightM.instance.getOwnUseBattery();
								this._c2s_bulletShoot.sk=RoleInfoM.instance.getCurSkin();
								this._c2s_bulletShoot.sr=1;
								this._c2s_bulletShoot.index=FightM.instance.seatId;
								this._c2s_bulletShoot.lock=1;
								this._c2s_bulletShoot.tick=this._curTick;
								this._c2s_bulletShoot.m=1;
								this._bulletMaxTip=false;
								this._lockCoinTip=false;
								this._bulletInfo.sr=this._c2s_bulletShoot.sr;
								this._bulletInfo.endX=this._c2s_bulletShoot.endX;
								this._bulletInfo.endY=this._c2s_bulletShoot.endY;
								this._bulletInfo.startX=this._c2s_bulletShoot.startX;
								this._bulletInfo.startY=this._c2s_bulletShoot.startY;
								this._bulletInfo.sk=this._c2s_bulletShoot.sk;
								this._bulletInfo.uniId=this._c2s_bulletShoot.uid;
								this._bulletInfo.fuid=this._c2s_bulletShoot.fuid;
								this._bulletInfo.index=this._c2s_bulletShoot.index;
								this._bulletInfo.tick=this._curTick;
								this._bulletInfo.agent=FightM.instance.getOwnAgent();
								this._bulletInfo.count=ConfigManager.getConfValue("cfg_battery_skin",this._bulletInfo.sk,"catch_count");
								this._bulletInfo.showDelay=0;
								if (this._bulletInfo.startX >=0 && this._bulletInfo.startX <=Laya.stage.width && this._bulletInfo.startY >=0 && this._bulletInfo.startY <=Laya.stage.height){
									this._c2s_bulletShoot.uid=FightM.instance.getBulletUid();
									this._bulletInfo.uniId=this._c2s_bulletShoot.uid;
									GameEventDispatch.instance.event("NewBullet",this._bulletInfo);
									GameEventDispatch.instance.event("OnlineBullet",this._bulletInfo);
									WebSocketManager.instance.send(12014,this._c2s_bulletShoot);
								}
								else{
								}
							}
							else{
								if (!this._lockCoinTip){
									this._lockCoinTip=true;
									if (FightM.instance.coinShootScene()){
										GameEventDispatch.instance.event("MsgTp",3);
										GameEventDispatch.instance.event("Shop","tab_coin");
									}
									else{
									}
								}
							}
						}
						else{
							if (!this._bulletMaxTip){
								GameEventDispatch.instance.event("MsgTp",19);
								this._bulletMaxTip=true;
							}
						}
					}
				}
				else{
					this._lockCoinTip=false;
				}
				}onlineUpdate(){
				this.clearUpAniUpdate(GameConst.fixed_update_time);
				this.freezeUpdate(GameConst.fixed_update_time);
				this.fishUpdate(GameConst.fixed_update_time);
				if (this._scenePlayType==3){
					this.calBlackHoleAbsorbFish();
				}
				this.bulletUpdate(GameConst.fixed_update_time);
				this.awardEffectUpdate(GameConst.fixed_update_time);
				this.catchShowEffectUpdate(GameConst.fixed_update_time);
				this.boomEffectUpdate(GameConst.fixed_update_time);
				this.lockUpdate(GameConst.fixed_update_time);
				this.bulletHurtCal();
				this._bgImgMove.update(GameConst.fixed_update_time);
				this._jellyEffect.update(GameConst.fixed_update_time);
				this.removeInvalidFish();
				this.removeInvalidBullet();
				this.removeInvalidAwardEffect();
				this.removeInvalidCatchShowEffect();
				this.removeInvalidBoomEffect();
				this.removeBoomAni();
			}
			//
			update(delta){
				var date=new Date();
				var milli=date.getTime();
				if (this._curAreaId > 0){
					this._curTick=this._syncTick+Math.floor((milli-this._syncTickTime)/ (1000 *GameConst.fixed_update_time));
					if (this._curTick > this._maxTick){
						this._curTick=Math.floor(this._curTick % this._maxTick);
					}
					this._updateTime+=delta;
					while (this._updateTime >=GameConst.fixed_update_time){
						this.onlineUpdate();
						this._updateTime-=GameConst.fixed_update_time;
					}
					if (this._syncTickStartTime <=this._syncTickTime && (milli-this._syncTickTime)>=this._syncTickInterval){
						WebSocketManager.instance.send(12039,null);
						this._syncTickStartTime=milli;
					}
				}
			}
			//检查是否有炸弹目标
			checkBoomSelectFlag(){
				if (this._skillBoomSelectFlag){
					var fish;
					var boomFishExit=false;
					for (var i=0;i < this._fishArray.length;i++){
						fish=this._fishArray [i];
						if (fish.getSkillBoomSelectBoomFlag()){
							boomFishExit=true;
						}
					}
					if (!boomFishExit){
						this.skillBoomSelectReset();
						GameEventDispatch.instance.event("MsgTp",22);
					}
				}
			}
			//设置选中鱼
			setSkillBoomSelectFlag(skillId){
				var fish;
				var boomFishExit=false;
				this._skillBoomSelectFlag=!this._skillBoomSelectFlag;
				this._skillBoomId=skillId;
				for (var i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					fish.setSkillBoomSelectBoomFlag(this._skillBoomSelectFlag);
					if (fish.getSkillBoomSelectBoomFlag()){
						boomFishExit=true;
					}
				}
				if (!boomFishExit && this._skillBoomSelectFlag){
					this._skillBoomSelectFlag=false;
					GameEventDispatch.instance.event("MsgTp",22);
				}
				this._boomMaskLayer.visible=this._skillBoomSelectFlag;
				GameEventDispatch.instance.event("BoomSelectUpdate");
				}getSkillBoomId(){
				return this._skillBoomId
				}skillBoomSelectReset(){
				this._skillBoomSelectFlag=false;
				this._boomMaskLayer.visible=this._skillBoomSelectFlag;
				GameEventDispatch.instance.event("BoomSelectUpdate");
				}getSkillBoomSelectFlag(){
				return this._skillBoomSelectFlag;
				}boomSkillSelectFish(x,y){
				var fish;
				var ret=null;
				for (var i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					if (fish.getSkillBoomSelectBoomFlag()&& fish.pointCollisionDetect(x,y)){
						if (!ret){
							ret=fish;
						}
						else{
							if (ret.getFishLayer()<=fish.getFishLayer()){
								ret=fish;
							}
						}
					}
				}
				return ret;
				}lockSkillSelectFish(x,y){
				var fish;
				var ret=null;
				for (var i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					if (fish.pointCollisionDetect(x,y)){
						if (!ret){
							ret=fish;
						}
						else{
							if (fish.getLockPri()> ret.getLockPri()){
								ret=fish;
							}
						}
					}
				}
				return ret;
			}
			//是否已经处理过
			touchHandle(x,y){
				var fish;
				x=GameTools.screenPosXMapDesignPosX(x);
				y=GameTools.screenPosYMapDesignPosY(y);
				if (this._skillBoomSelectFlag){
					fish=this.boomSkillSelectFish(x,y);
					if (fish){
						var point=fish.getDesignPos();
						var msg=this._c2s_17001;
						msg.id=this._skillBoomId;
						msg.uid=fish.getUniId();
						point.x=FightM.instance.getMirrorPosXByOwnSeat(point.x);
						point.y=FightM.instance.getMirrorPosYByOwnSeat(point.y);
						msg.x=Math.ceil(point.x);
						msg.y=Math.ceil(point.y);
						msg.index=FightM.instance.seatId;
						WebSocketManager.instance.send(17001,msg);
					}
					else{
					}
					return true;
				};
				var seatInfo=FightM.instance.getSeatInfo(FightM.instance.seatId);
				if (seatInfo && seatInfo.lock_et > 0){
					fish=this.lockSkillSelectFish(x,y);
					if (fish && (fish.getUniId()!=seatInfo.lock_uid)){
						FightM.instance._lockUid=fish.getUniId();
						this._c2s_12031.uid=fish.getUniId();
						WebSocketManager.instance.send(12031,this._c2s_12031);
					}
					this._lockShootInterval=0;
					return true;
				}
				return false;
				}fightShake(ax,ay,duration,times){
				if (this._shakeTimes <=0){
					this._shakeTimes=times;
					this._shakeAx=ax;
					this._shakeAy=ay;
					this._shakeTime=duration;
					this._shakeCastTime=0;
				}
				}shakeUpdate(){
				if (this._shakeTimes > 0){
					this._shakeCastTime+=Laya.timer.delta / 1000;
					if (this._shakeCastTime >=this._shakeTime){
						this._shakeTimes-=1;
						this._shakeCastTime=0;
						this._fightRoot.pos(0,0);
					}
					else{
						var percent=this._shakeCastTime / this._shakeTime;
						this._fightRoot.pos(this._shakeAx *Math.sin(percent *2 *Math.PI),this._shakeAy *Math.cos(percent *2 *Math.PI));
					}
				}
			}bgShaderUpdate(){}
			// _bgSpriteMR.update();
			onLoop(){
				this.update(Laya.timer.delta / 1000);
				this.checkBoomSelectFlag();
				this.shakeUpdate();
				FightM.instance.update(Laya.timer.delta / 1000);
				this.bgShaderUpdate();
				}start(){
				this._bgImgMove.reset();
				this._jellyEffect.reset();
				Laya.timer.frameLoop(1,this,this.onLoop);
				}stop(){
				this.exitArea(true);
				Laya.timer.clear(this,this.onLoop);
				}reset(){
				this.exitArea(false);
				Laya.timer.clear(this,this.onLoop);
				}parseFishData(data){
				this.parseFishesBornData(data);
				}newBullet(data){
				if (this._curAreaId > 0){
					this.bornBullet(data);
				}
				}syncBulletHit(bulletArray){
				var bullet;
				for (var i=0;i < bulletArray.length;i++){
					this._protoBulletHitInfo.p=bulletArray[i];
					for (var j=0;j < this._bulletArray.length;j++){
						bullet=this._bulletArray [j];
						if (bullet.getUniId()==this._protoBulletHitInfo.getUniId()){
							bullet.onlineHitTarget(this._protoBulletHitInfo);
							break ;
						}
					}
				}
				}syncFish(fishArray){
				var findFish=false;
				var fish;
				for (var i=0;i < fishArray.length;i++){
					this._protoFishInfo.p=fishArray [i];
					findFish=false;
					for (var j=0;j < this._fishArray.length;j++){
						fish=this._fishArray [j];
						if (fish.getUniId()===this._protoFishInfo.getUniId()){
							fish.syncOnlineData(this._protoFishInfo);
							findFish=true;
							break ;
						}
					}
					if (!findFish){
						var layerIndex=ConfigManager.getConfValue("cfg_fish",this._protoFishInfo.getFishId(),"layer");
						var tmp=Fish.create(this._protoFishInfo.getFishId(),this._layers[layerIndex]);
						tmp.setSkillBoomSelectBoomFlag(this._skillBoomSelectFlag);{
							if (this._clearUpCastTime < this._clearUpTotalTime){
								tmp.clearUp(this._clearUpDir,this._clearUpTotalTime,this._clearUpCastTime);
							}
						};
						var syncOk=tmp.syncOnlineData(this._protoFishInfo);
						if (syncOk){
							this.playCallEffect(tmp);
							this.playBossComeIn(tmp);
							this._fishArray.push(tmp);
						}
						else{
							tmp.destroy();
						}
					}
				}
			}
			//private var _agentGetInfo:AgentGetInfo=new AgentGetInfo();
			showNormalFishCoinGetEffect(fish,getCoinInfo,seat_id,delayShow,refPos,coinNum,agent,boomShow=false){
				var isOwnGet=(seat_id==FightM.instance.seatId);
				if (fish.getCatchShow()<=0 || fish.isAlive()|| boomShow){
					var aEffect=AwardEffect.create(coinNum,refPos,isOwnGet,this._fish_up_layers[3],delayShow);
					this._awardArray.push(aEffect);
				}
				if (!FightM.instance.coinShootScene()){
					return;
				};
				var randArray=[];
				var coinFly=ConfigManager.getConfValue("cfg_fish",fish.getFishId(),"coin_fly");
				var count=Math.floor(coinFly.length / 3);
				var j=0;
				for (j=0;j < 8;j++){
					randArray.push(Math.random());
				}
				getCoinInfo.useTime=0;
				getCoinInfo.seat_id=FightM.instance.getShowSeatId(seat_id);
				getCoinInfo.goodId=1;
				getCoinInfo.delay=delayShow;
				getCoinInfo.isOwn=(seat_id==FightM.instance.seatId);
				getCoinInfo.rnd=randArray;
				for (j=0;j < count;j++){
					getCoinInfo.pos_x=refPos.x+coinFly[j *3];
					getCoinInfo.pos_y=refPos.y+coinFly[j *3+1];
					getCoinInfo.delay=delayShow+coinFly[j *3+2];
					GameEventDispatch.instance.event("ShowGetCoinEffect",getCoinInfo);
				};
				var agentGetInfo=new AgentGetInfo();
				agentGetInfo.t=1;
				agentGetInfo.v=coinNum;
				agentGetInfo.leftTime=getCoinInfo.useTime;
				agentGetInfo.ag=agent;
				FightM.instance.addAgentGetInfo(agentGetInfo);
				}showNormalFishGoodsGetEffect(fish,getCoinInfo,catchInfo){
				var refPos;
				var award=this._protoCatchAward;
				var coinGet=0;
				var delayShow=0;
				var agentGetInfo;
				var isOwnGet=false;
				var aw;
				coinGet=0;
				refPos=fish.getCenterPosition();
				isOwnGet=false;
				var seatInfo=FightM.instance.getSeatInfoByAgent(catchInfo.getAg());
				if (!seatInfo){
					seatInfo=catchInfo.seat_info;
				}
				if (seatInfo){
					isOwnGet=seatInfo.seat_id==FightM.instance.seatId;
				}
				else{
				}
				delayShow=0;
				aw=catchInfo.getAw();
				for (var i=0;i < aw.length;i++){
					award.p=aw[i];
					if (1==award.getT()|| 201==award.getT()){
						coinGet=award.getV();
						this.showNormalFishCoinGetEffect(fish,getCoinInfo,seatInfo.seat_id,delayShow,refPos,award.getV(),catchInfo.getAg());
						delayShow+=0.2;
					}
					if (2==award.getT()){
						if (isOwnGet){
							GameEventDispatch.instance.event("ShowFishCoin",award.getV());
						}
					};
					var showCount=1;
					if (4==award.getT()){
						showCount=award.getV();
					}
					if (seatInfo){
						if (3 !=award.getT()&& 2 !=award.getT()&&
							1 !=award.getT()){
							this._extraDrop=true;
							getCoinInfo.useTime=0;
							getCoinInfo.seat_id=FightM.instance.getShowSeatId(seatInfo.seat_id);
							getCoinInfo.pos_x=refPos.x;
							getCoinInfo.pos_y=refPos.y;
							getCoinInfo.goodId=award.getT();
							getCoinInfo.delay=delayShow;
							getCoinInfo.isOwn=isOwnGet;
							for (var l=0;l < showCount;l++){
								getCoinInfo.delay=delayShow;
								GameEventDispatch.instance.event("ShowGetCoinEffect",getCoinInfo);
								agentGetInfo=new AgentGetInfo();
								agentGetInfo.t=award.getT();
								agentGetInfo.v=award.getV()/ showCount;
								agentGetInfo.leftTime=getCoinInfo.useTime;
								agentGetInfo.ag=catchInfo.getAg();
								FightM.instance.addAgentGetInfo(agentGetInfo);
								delayShow+=0.2;
							}
						}
					}
				}
				return coinGet;
				}showBagFishGoodsGetEffect(fish,getCoinInfo,catchInfo){
				var refPos;
				var award=this._protoCatchAward;
				var coinGet=0;
				var delayShow=0;
				var agentGetInfo;
				var isOwnGet=false;
				var aw;
				coinGet=0;
				refPos=fish.getMoneyBagPosition();
				fish.playMoneyBagBomb();
				isOwnGet=false;
				var seatInfo=FightM.instance.getSeatInfoByAgent(catchInfo.getAg());
				if (!seatInfo){
					seatInfo=catchInfo.seat_info;
				}
				if (seatInfo){
					isOwnGet=seatInfo.seat_id==FightM.instance.seatId;
				}
				delayShow=fish.getMoneyBagDelay();
				aw=catchInfo.getAw();
				for (var k=0;k < aw.length;k++){
					award.p=aw[k];
					if (1==award.getT()|| 201==award.getT()){
						coinGet=award.getV();
						var aEffect=AwardEffect.create(award.getV(),refPos,isOwnGet,this._fish_up_layers[3],delayShow);
						this._awardArray.push(aEffect);
					}
					if (2==award.getT()){
						if (isOwnGet){
							GameEventDispatch.instance.event("ShowFishCoin",award.getV());
						}
					};
					var showCount=1;
					if (4==award.getT()){
						showCount=award.getV();
					}
					if (seatInfo && 3 !=award.getT()){
						getCoinInfo.useTime=0;
						getCoinInfo.seat_id=FightM.instance.getShowSeatId(seatInfo.seat_id);
						getCoinInfo.goodId=award.getT();
						getCoinInfo.delay=delayShow;
						getCoinInfo.isOwn=isOwnGet;
						for (var x=0;x < this._multiGetCoinArrayX.length;x++){
							for (var y=0;y < this._multiGetCoinArrayY.length;y++){
								getCoinInfo.pos_x=refPos.x+this._multiGetCoinArrayX[x];
								getCoinInfo.pos_y=refPos.y+this._multiGetCoinArrayY[y];
								GameEventDispatch.instance.event("ShowGetCoinEffect",getCoinInfo);
							}
						}
						agentGetInfo=new AgentGetInfo();
						agentGetInfo.t=award.getT();
						agentGetInfo.v=award.getV();
						agentGetInfo.leftTime=getCoinInfo.useTime;
						agentGetInfo.ag=catchInfo.getAg();
						FightM.instance.addAgentGetInfo(agentGetInfo);
					}
				}
				return coinGet;
			}
			//播放震动
			playShake(arr){
				if (arr[0]==0 && arr[1]==0 && arr[2]==0 && arr[3]==0){
					}else{
					this.fightShake(arr[0],arr[1],arr[2],arr[3]);
				}
				}showFishDieCatchInfo(fish,cInfo,delayShowSeatInfo){
				var cinfoArray=[];
				var fishArray=[];
				cinfoArray.push(cInfo);
				fishArray.push(fish);
				this.syncCatchInfo(cinfoArray,fishArray,true,delayShowSeatInfo);
				}syncCatchInfo(cInfoArray,fishArray=null,fishDieCall=false,delayShowSeatInfo=null){
				var needShake=false;
				var catchInfo=this._protoCatchFish;
				var fish;
				var playSound=false;
				var coinGet=0;
				var getCoinInfo=this._getCoinInfo;
				this._extraDrop=false;
				if (!fishArray){
					fishArray=this._fishArray;
				}
				for (var i=0;i < cInfoArray.length;i++){
					catchInfo.p=cInfoArray[i];
					for (var j=0;j < fishArray.length;j++){
						fish=fishArray [j];
						if (fish.getUniId()===catchInfo.getU()){
							var seatInfo=FightM.instance.getSeatInfoByAgent(catchInfo.getAg());
							catchInfo.seat_info=delayShowSeatInfo;
							if (fish.getCatchType()==3 && !fishDieCall){
								fish.setDieCatchInfo(cInfoArray[i],seatInfo);
								break ;
							}
							if (!seatInfo){
								seatInfo=catchInfo.seat_info;
							}
							if (!seatInfo){
								break ;
							}
							if (fish.isCoinBoss()){
								coinGet=this.showBagFishGoodsGetEffect(fish,getCoinInfo,catchInfo);
							}
							else{
								coinGet=this.showNormalFishGoodsGetEffect(fish,getCoinInfo,catchInfo);
							}
							if (1==catchInfo.getB()&& fish.getCatchShow()> 0 && coinGet > 0 && !fish.isAlive()){
								var catchShowType=fish.getCatchShow();
								var aniName=fish.getCatchShowAniName();
								var shakeArr=fish.shakeArr;
								var aniActionName=fish.getCatchShowAniActionName();
								var catchShowPos=fish.getCatchShowPos(FightM.instance.getShowSeatId(seatInfo.seat_id));
								var shareScreen=false;
								if (!ENV.isShowDied()){
									if (seatInfo.seat_id==FightM.instance.seatId && FightM.instance.coinShootScene()){
										var eff=FullScreenCoinEffect.create();
										eff.play(this._fightUiUpLayer);
										shareScreen=true;
									}
								}
								this.playShake(shakeArr);
								if (!ENV.isShowDied()){
									var catchShowEffect=CatchShowEffect.create(catchShowType,coinGet,
									catchShowPos,this._fightUiUpLayer,aniName,aniActionName,seatInfo);
									catchShowEffect.setBossCatch(shareScreen);
									this._catchShowEffect.push(catchShowEffect);
								}
							}
							if (fish.playCatchSound()){
								playSound=true;
							}
							if (fish.isBoss()){
								needShake=false;
							}
							break ;
						}
					}
				}
				if (needShake==true){
					this.fightShake(4,14,0.15,4);
				};
				var soundPath;
				if (playSound){
					soundPath=ConfigManager.getConfValue("cfg_global",1,"get_coin_sound");
					GameSoundManager.playSound(soundPath);
				}
				if (this._extraDrop){
					soundPath=ConfigManager.getConfValue("cfg_global",1,"extra_drop_sound");
					GameSoundManager.playSound(soundPath);
				}
			}
			//GameEventDispatch.instance.event(GameEvent.FightCoinUpdate,null);
			switchState(type){
				switch (type){
					case 1:{
							break ;
						}
					case 2:{
							break ;
						}
					default :{
							break ;
						}
					}
				}syncBullet(bulletArray){
				var bullet;
				var find=false;
				var bInfo;
				for (var i=0;i < bulletArray.length;i++){
					this._protoBulletInfo.p=bulletArray[i];
					find=false;
					for (var j=0;j < this._bulletArray.length;j++){
						bullet=this._bulletArray [j];
						if (bullet.getUniId()==this._protoBulletInfo.getUniId()){
							find=true;
							break ;
						}
					}
					if (!find){
						this._bulletInfo.endX=this._protoBulletInfo.getEndX();
						this._bulletInfo.endY=this._protoBulletInfo.getEndY();
						this._bulletInfo.startX=this._protoBulletInfo.getStartX();
						this._bulletInfo.startY=this._protoBulletInfo.getStartY();
						this._bulletInfo.count=this._protoBulletInfo.getCount();
						this._bulletInfo.sk=this._protoBulletInfo.getSk();
						this._bulletInfo.sr=this._protoBulletInfo.getSr();
						this._bulletInfo.uniId=this._protoBulletInfo.getUniId();
						this._bulletInfo.fuid=this._protoBulletInfo.getFuid();
						this._bulletInfo.index=this._protoBulletInfo.getIndex();
						this._bulletInfo.showDelay=0;
						this._bulletInfo.tick=this._protoBulletInfo.getTick();
						this._bulletInfo.agent=this._protoBulletInfo.getAgent();
						this.bornBullet(this._bulletInfo);
					}
				}
				}onlineDataSync(data){
				var fish;
				var syncInfo=data;
				if (syncInfo.maxTick){
					this._curTick=syncInfo.tick;
					this._syncTick=syncInfo.tick;
					this._maxTick=syncInfo.maxTick;
				}
				if (syncInfo.bulletH){
					this.syncBulletHit(syncInfo.bulletH);
				}
				if (syncInfo.bullet){
					this.syncBullet(syncInfo.bullet);
				}
				if (syncInfo.fish){
					this.syncFish(syncInfo.fish);
				}
				if (syncInfo.cInfo){
					this.syncCatchInfo(syncInfo.cInfo);
				}
				for (var j=0;j < this._fishArray.length;j++){
					fish=this._fishArray [j];
					if (fish.isCoinBoss()){
						fish.setMoneyBagSize(syncInfo.bac);
						break ;
					}
				}
				if (syncInfo.cut){
					var useTime=syncInfo.cuut / 100;
					if (useTime < syncInfo.cut){
						this.clearUpFish(useTime,syncInfo.cut,syncInfo.cud);
					}
				}
				}getCallFishNum(){
				var ret=0;
				var fish;
				for (var i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					if (fish.isCallFish()){
						ret+=1;
					}
				}
				return ret;
				}boomSkill(data){
				var protoData=data;
				var fish;
				var i=0;
				for (i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					if (fish.getUniId()==protoData.uid){
						fish.kill();
						break ;
					}
					fish=null;
				};
				var fishDieDelay=0;
				var layer=this._fish_up_layers [1];
				protoData.x=FightM.instance.getMirrorPosXByOwnSeat(protoData.x);
				protoData.y=FightM.instance.getMirrorPosYByOwnSeat(protoData.y);
				protoData.x=GameTools.designPosXMapScreenPosX(protoData.x);
				protoData.y=GameTools.designPosYMapScreenPosY(protoData.y);
				var posData=new Object();
				posData.getPos=false;
				posData.seat_id=FightM.instance.getShowSeatId(protoData.seat_id);
				GameEventDispatch.instance.event("GetPaoPos",posData);
				if (posData.getPos){
					var paoRotationData=new Object();
					var bEffect=BoomEffect.create(protoData.sid,"baozha2",new Point(posData.x,posData.y),
					new Point(protoData.x,protoData.y),this._fightUiUpLayer,layer);
					this._boomEffectArray.push(bEffect);
					fishDieDelay=bEffect.getRunTime()+0.2;
					paoRotationData.seat_id=posData.seat_id;
					paoRotationData.angle=bEffect.getAngle();
					GameEventDispatch.instance.event("SetPaoRotation",paoRotationData);
				}
				if (fish){
					fish.addDieRunTime(fishDieDelay);
					this.showNormalFishCoinGetEffect(fish,this._getCoinInfo,protoData.seat_id,fishDieDelay,fish.getCenterPosition(),protoData.coin,protoData.agent,true);
				}
				if (protoData.seat_id==FightM.instance.seatId){
					this._skillBoomSelectFlag=false;
					this._skillBoomId=0;
					for (i=0;i < this._fishArray.length;i++){
						fish=this._fishArray [i];
						fish.setSkillBoomSelectBoomFlag(this._skillBoomSelectFlag);
					}
					this.skillBoomSelectReset();
				}
				}syncTick(data){
				if (this.onlineFight()){
					if (data && data.tick){
						var date=new Date();
						var milli=date.getTime();
						var delayTick=Math.floor((milli-this._syncTickStartTime)/ (1000 *GameConst.fixed_update_time));
						this._syncTickTime=milli;
						this._curTick=data.tick+delayTick;
						if (this._curTick > this._maxTick){
							this._curTick=Math.floor(this._curTick % this._maxTick);
						}
						this._syncTick=this._curTick;
					}
				}
				}getCurTick(){
				return this._curTick;
				}getMaxTick(){
				return this._maxTick;
				}isBulletReachMaxNum(){
				var num=0;
				var bullet;
				var tmpNum=0;
				for (var i=0;i < this._bulletArray.length;i++){
					bullet=this._bulletArray [i];
					if (bullet.getSeatId()==FightM.instance.seatId){
						if (bullet.isAlive()){
							num++;
						}
					}
				};
				var maxBulletNum=ConfigManager.getConfValue("cfg_global",1,"max_bullet_num");
				return num >=maxBulletNum;
			}
			//播放招呼特效
			playCallEffect(fish){
				if (fish.isCall()){
					var ani=new SpineTemplet("zhaohuan");
					var refPoint=fish.getCenterPosition();
					var layer=this._fish_up_layers [1];
					ani.pos(refPoint.x,refPoint.y);
					layer.addChild(ani);
					ani.play(0,false);
					this._boomAniArray.push(ani);
				}
			}
			//播放鱼的死亡动画
			playFishDeadAni(aniName,pos){
				if (aniName.length > 0){
					var ani=new SpineTemplet(aniName);
					var layer=this._fish_up_layers [1];
					ani.pos(pos.x,pos.y);
					layer.addChild(ani);
					ani.play(0,false);
					this._boomAniArray.push(ani);
				}
			}
			//播放boss来了特效
			playBossComeIn(fish){
				if (fish.isBossComeIn()){
					GameEventDispatch.instance.event("PlayBossComeIn",fish.getFishId());
				}
			}
			//播放黑洞动画
			playBlackHoleEffect(aniName,startTime,x,y){
				var ani=new SpineTemplet(aniName);
				var layer=this._layers [40];
				ani.pos(x,y);
				layer.addChild(ani);
				ani.play(0,false);
				this._boomAniArray.push(ani);
				}playFishFormEffect(){
				GameEventDispatch.instance.event("FishComing");
			}
			// _boomAniArray.push(ani);
			showFreezeEffect(leftTime){
				this._freezeSprite.visible=leftTime > 0;
				this._freezeLeftTime=leftTime;
				}getRunTick(startTick){
				var ret=0;
				if (startTick > this._curTick){
					if (startTick > this._maxTick / 2 && this._curTick < this._maxTick / 2){
						ret=this._maxTick-startTick+this._curTick;
					}
					else{
						return 1;
					}
				}
				else{
					ret=this._curTick-startTick;
					if (ret > (startTick+(this._maxTick-this._curTick))){
						ret=(startTick+(this._maxTick-this._curTick));
					}
				}
				return ret;
				}freezeSkill(data){
				var protoData=data;
				var fish;
				this._freezeLeftTime=protoData.time-(this.getRunTick(data.tick)*GameConst.fixed_update_time);
				if (!this._freezeSprite.visible){
					this._freezeSprite.visible=true;
				}
				for (var i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					fish.setFreeze(this._freezeLeftTime);
				}
				}clearUpFish(useTime,totalTime,dir){
				var fish;
				var i=0;
				var particle;
				this._clearUpCastTime=useTime;
				this._clearUpTotalTime=totalTime;
				this._clearUpDir=dir;
				if (FightM.instance.seatId==2 ||
					FightM.instance.seatId==3){
					if (1==this._clearUpDir){
						this._clearUpDir=2;
					}
					else{
						this._clearUpDir=1;
					}
				}
				for (i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					fish.clearUp(this._clearUpDir,totalTime,useTime);
				}
				if (!this._clearUpParticles){
					this._clearUpParticles=[];
					for (i=0;i < 25;i++){
						particle=new GameParticle("abbey/H5_loading1.part");
						particle.rotation=-10;
						this._clearUpParticles.push(particle);
						this._fightRoot.addChild(particle);
						particle.zOrder=40;
						particle.y=i *50+30;
						particle.rotation=-60;
					}
				};
				var scaleX=1;
				var roate=-60;
				var posX=0;
				if (2==this._clearUpDir){
					roate=60;
					scaleX=-1;
					posX=Laya.stage.width;
				}
				for (i=0;i < this._clearUpParticles.length;i++){
					particle=this._clearUpParticles [i];
					particle.rotation=roate;
					particle.scaleX=scaleX;
					particle.x=posX;
					particle.visible=true;
					particle.replay();
				}
				if (useTime <=0){
					this.playFishFormEffect();
				}
				this.clearUpAniUpdate(0);
				var soundPath=ConfigManager.getConfValue("cfg_global",1,"tide_sound");
				GameSoundManager.playSound(soundPath);
				}swimOut(data){
				var protoData=data;
				this.clearUpFish(0,protoData.t,protoData.d);
				}wsClose(data){
				if (this._curAreaId > 0 && FightM.instance.seatId > 0){
					this.removeInvalidFish(true);
					this.removeInvalidBullet(true);
					this.removeInvalidAwardEffect(true);
					this.removeInvalidCatchShowEffect(true);
					this.removeInvalidBoomEffect(true);
				}
				}wsError(data){
				if (this._curAreaId > 0 && FightM.instance.seatId > 0){
					this.removeInvalidFish(true);
					this.removeInvalidBullet(true);
					this.removeInvalidAwardEffect(true);
					this.removeInvalidCatchShowEffect(true);
					this.removeInvalidBoomEffect(true);
				}
				}setLockLinePosArray(posArray){
				var sprite;
				var tmpArray;
				this._lockLinePosArray=posArray;
				for (var i=0;i < 4;i++){
					tmpArray=this._lockLineArray [i];
					sprite=tmpArray [0];
					sprite.pos(this._lockLinePosArray[i *2],this._lockLinePosArray[i *2+1]);
				}
				}screenResize(){
				var fish;
				var scale=Laya.stage.width / 1280;
				var scaleRefX=true;
				var i=0;
				if (Laya.stage.height / 720 > scale){
					scale=Laya.stage.height / 720;
					scaleRefX=false;
				}
				for (i=0;i < this._fishArray.length;i++){
					fish=this._fishArray [i];
					fish.screenResize();
				}
				this._bgImgMove.screenResize();
				this._freezeSprite.scale(scale,scale,true);
				if (scaleRefX){
					this._freezeSprite.pos(0,-(scale *720-720)/ 2);
				}
				else{
					this._freezeSprite.pos(-(scale *1280-1280)/ 2,0);
				};
				var catchShowEffect;
				for (i=0;i < this._catchShowEffect.length;i++){
					catchShowEffect=this._catchShowEffect [i];
					catchShowEffect.screenResize();
				};
				var sprite;
				var lockArray;
				for (i=0;i < 4;i++){
					lockArray=this._lockLineArray [0];
					sprite=lockArray [0];
				}
				}SystemReset(data){
				this.reset();
				}onlineFight(){
				return this._curAreaId > 0 && FightM.instance.seatId > 0;
				}getCurAreaId(){
				return this._curAreaId;
				}getWebScale(){
				return this._sceneWebScale;
				}syncSkipCoin(data){
				FightM.instance.setSkipCoin(FightM.instance.seatId,data.coin);
				GameEventDispatch.instance.event("FightCoinUpdate",null);
				}onlineNewBullet(data){
				if (this.onlineFight()){
					var info=this._s2c_shootBullet;
					info.p=data.p;
					var bInfo=this._bulletInfo;
					bInfo.endX=info.getEndX();
					bInfo.endY=info.getEndY();
					bInfo.startX=info.getStartX();
					bInfo.startY=info.getStartY();
					bInfo.sk=info.getSk();
					bInfo.sr=info.getSr();
					bInfo.uniId=info.getUniId();
					bInfo.fuid=info.getFuid();
					bInfo.index=info.getIndex();
					bInfo.count=info.getHitCount();
					bInfo.agent=info.getAgent();
					bInfo.showDelay=0;
					bInfo.tick=info.getTick();
					if (FightM.instance.seatId !=info.getIndex()){
						this.bornBullet(bInfo);
						if (FightM.instance.isGoldPoolScene()){
							FightM.instance.goldPoolTotalValueAdd(ConfigManager.getConfValue("cfg_battery",info.getBt(),"prize"));
							GameEventDispatch.instance.event("UpdateGoldPoolInfo");
						}
						}{
						if (!FightM.instance.coinShootScene()){
							FightM.instance.seatAddContestCoin(info.getIndex(),info.getAgent(),info.getCoin());
						}
						else{
							FightM.instance.seatAddCoin(info.getIndex(),info.getAgent(),info.getCoin(),true);
						}
					}
					if (1==info.getM()){
						if (FightM.instance.seatId !=info.getIndex()){
							GameEventDispatch.instance.event("OnlineBullet",bInfo);
						}
					}
					GameEventDispatch.instance.event("FightCoinUpdate",info);
				}
				}initSwimPath(){
				var pathSheet=ConfigManager.getConfBySheet("cfg_fishgrouppath");
				for (var pathId in pathSheet){
					Fish.initPathInfo(parseInt(pathId));
				}
				}preLoadAwardEffect(){
				var refPos=new Point(0,0);
				for (var i=0;i < 10;i++){
					var aEffect=AwardEffect.create(1,refPos,false,this._fish_up_layers[3],0);
					aEffect.destroy();
				}
				}preLoadCatchShowEffect(){
				var i=0;
				var catchShowPos=new Point();
				var coinGet=0;
				var aniName=["zhuanpan","facaile","zhuanfanle"];
				var aniActionName=["H5_zhuanpan","facaile","zhuanfanle"];
				for (i=1;i <=3;i++){
					for (var j=0;j < 5;j++){
						var catchShowEffect=CatchShowEffect.create(i,coinGet,
						catchShowPos,this._fightUiUpLayer,aniName[i-1],aniActionName[i-1],null,true);
						catchShowEffect.destroy();
					}
				}
				for (i=0;i < 3;i++){
					var fullScreenCoin=FullScreenCoinEffect.create(true);
					fullScreenCoin.play(this._fightUiUpLayer);
					fullScreenCoin.stop();
				}
				}getFightUiUpLayer(){
				return this._fightUiUpLayer;
			}
			static get instance (){
				return FightManager._instance || (FightManager._instance=new FightManager());
			}
			static dispose (){
				fight.FightManager.instance.stop();
				FightManager._instance=null;
			}
		}

		fight.FightManager=Laya.FightManager=FightManager;
		FightManager._instance=null;	

		class Fish{
			constructor (id,parent){
				//this._fishName=null;
				//this._fish=null;
				//this._pivotX=NaN;
				//this._pivotY=NaN;
				//this._fishMoneyBagParent=null;
				//this._fishMoneyBag=null;
				//this._fishMoneyBagBomb=null;
				//this._fishParent=null;
				//this._goldFishHpRate=NaN;
				//this._isMirror=false;
				//this._hitColorChangeLastTime=NaN;
				//this._hitColorChangeTime=NaN;
				//this._bulletSpeedReduceRadio=NaN;
				//this._bulletSpeedReduceTime=NaN;
				//this._bulletSpeedReduceLastTime=NaN;
				//this._bulletSpeedReducePercent=NaN;
				//this._speed=NaN;
				//this._collisionCount=0;
				//this._collisionOffsetX=null;
				//this._collisionOffsetY=null;
				//this._collisionRadius=null;
				//this._collisionAngleP1=null;
				//this._collisionAngleP2=null;
				//this._collisionCenterFishPosAngle=null;
				//this._collisionCenterFishPosMirrorAngle=null;
				//this._collisionCenterFishPosLength=null;
				//this._collisionIndex=0;
				//this._fishOffsetX=NaN;
				//this._fishOffsetY=NaN;
				//this._fishRadius=NaN;
				//this._fishAngleP1=NaN;
				//this._fishAngleP2=NaN;
				//this._fishCenterFishPosAngle=NaN;
				//this._fishCenterFishPosMirrorAngle=NaN;
				//this._fishCenterFishPosLength=NaN;
				//this._isDeadAniExist=false;
				//this._collisionCenter=null;
				//this._hitValue=NaN;
				//this._hp=NaN;
				//this._multiple=NaN;
				//this._angleSwitchMax=NaN;
				//this._angleSwitchMin=NaN;
				//this._desAngle=NaN;
				//this._desMidAngle=NaN;
				//this._desMaxFromMid=NaN;
				//this._curAngleAsMidRef=false;
				//this._deltaX=NaN;
				//this._deltaY=NaN;
				//this._angleSwitchRate=NaN;
				//this._angleSpeedEffect=NaN;
				//this._isGroupReach=false;
				//this._isCatch=false;
				//this._isGroupFish=false;
				//this._isLineSwim=false;
				//this._isAppeared=false;
				//this._playDeadAni=false;
				//private var _fishLength:Number;
				//this._fishRunTime=NaN;
				//this._fishShowDelay=NaN;
				//this._rectP1=null;
				//=new Point();
				//this._rectP2=null;
				//=new Point();
				//this._rectP3=null;
				//=new Point();
				//this._rectP4=null;
				//=new Point();
				//this._rectQ1=null;
				//=new Point();
				//this._rectQ2=null;
				//=new Point();
				//this._rectQ3=null;
				//=new Point();
				//this._rectQ4=null;
				//=new Point();
				//this._smallGroupFish=false;
				//this._coinComsumption=false;
				//this._bulletHurt=false;
				//this._isGoldFish=false;
				this._fishScale=1;
				//this._isBoss=false;
				//this._fishId=0;
				//this._pathSwimTest=false;
				// private var _bezierNum:int;
				//this._fishSizeType=0;
				//this._fishPlayType=0;
				//this._pathTestFreeSwim=false;
				//this._updateTime=NaN;
				//this._dieAlpha=false;
				//this._dieAlphaRunTime=NaN;
				//this._dieAlphaTime=NaN;
				//this._fadeScale=NaN;
				//this._isCollision=false;
				//this._lineTest=null;
				//this._isOnline=false;
				//this._uniId=0;
				//this._onlineData=null;
				//this._doubleUpdateLeft=0;
				//this._updateCount=0;
				this._updateRate=1;
				this._segNum=0;
				this._pathId=0;
				this._ipath=0;
				this._group=0;
				this._segInit=false;
				this._loop=0;
				this._curT=0;
				this._curSwimLen=0;
				this._tickNum=-1;
				this._preT=0;
				this._runOver=false;
				this._mirror=1;
				//镜像类型 1:x镜像 2:y镜像 3:xy镜像
				this._clearUpDir=1;
				this._clearUpTotalTime=0;
				this._clearUpCastTime=0;
				this._offX=0;
				this._offY=0;
				this._specFlag=0;
				this._catchShow=0;
				this._catchType=0;
				this._catchShowRate=0;
				this._specSprite=null;
				//玩法标志
				this._boomSelectSprite=null;
				//炸弹能选中的鱼
				this._fishSwimPathIdFont=null;
				this._fishFrameNum=1;
				this._fishSwimRefL=1;
				this._fishSwimSpeedBase=1;
				this._fishAniMaxInterval=1;
				this._freezeTime=0;
				this._callDelay=0;
				this._lockSprite=null;
				this._lockFlag=false;
				this._fishAniSpeedChange=false;
				this._calMal=0;
				this._calRect=false;
				this._delayDie=0;
				this._absorbed=false;
				this._absorbedTotalTime=2;
				this._absorbedRunTime=0;
				this._absorbedDeltaX=0;
				this._absorbedDeltaY=0;
				this._absorbedX=0;
				this._absorbedY=0;
				this._absorbedAngleChange=30;
				this._hitActionExist=false;
				this._dieCatchInfo=null;
				this._change_num=0;
				//this._shakeArr=null;
				this._boomCatch=0;
				this._delayShowSeatInfo=null;
				this._curHitTime=0;
				this._curReverseHitTime=0;
				this._totalHitTime=200 / 1000;
				this._reverseHitTime=2000 / 1000;
				this._isReverse=false;
				this._pivotOffsetX=20;
				this._pivotOffsetY=10;
				this._path=new Array;
				this._calRectInfo=new Array;
				this._designPos=new Point();
				this._centerPos=new Point();
				this._getDesignPos=new Point();
				this._bezierPrePos=new Point();
				this.init(id,parent);
			}
			updateParent(parent){
				var layers=FightManager.instance.getLayers();
				var layerIndex=ConfigManager.getConfValue("cfg_fish",this._fishId,"layer");
				if (!parent){
					parent=layers[layerIndex];
				}
				if (this._specSprite && this._change_num <=0){
					parent.addChild(this._specSprite);
				}
				if (this._fish){
					parent.addChild(this._fish);
				}
				if (this._boomSelectSprite){
					parent.addChild(this._boomSelectSprite);
				}
				if (this._fishMoneyBagParent){
					parent.addChild(this._fishMoneyBagParent);
				}
				if (this._fishSwimPathIdFont){
					parent.addChild(this._fishSwimPathIdFont);
				}
				if (this._specSprite && this._change_num > 0){
					parent.addChild(this._specSprite);
				}
				}setDieCatchInfo(catchInfo,seatInfo){
				this._dieCatchInfo=catchInfo;
				this._delayShowSeatInfo=seatInfo;
				}destroy(){
				if (this._dieCatchInfo){
					FightManager.instance.showFishDieCatchInfo(this,this._dieCatchInfo,this._delayShowSeatInfo);
				}
				this._uniId=-1;
				if (this._fish){
					if ((this._fish instanceof manager.SpineTemplet )){
						var spineAni=this._fish;
						spineAni.stop();
					}
					else{
						var aniTmp=this._fish;
						aniTmp.stop();
					}
					this._fish.visible=false;
				}
				if (this._lineTest){
					this._lineTest.visible=false;
				}
				if (this._specSprite){
					this._specSprite.visible=false;
				}
				if (this._fishSwimPathIdFont){
					this._fishSwimPathIdFont.visible=false;
				}
				if (this._boomSelectSprite){
					this._boomSelectSprite.visible=false;
				}
				if (this._lockSprite){
					Tween.clearAll(this._lockSprite);
					this._lockSprite.visible=false;
				}
				if (this._fishMoneyBag){
					this._fishMoneyBag.visible=false;
				}
				if (this._fishMoneyBagBomb){
					this._fishMoneyBagBomb.visible=false;
				}
				if (this._fishMoneyBagParent){
					this._fishMoneyBagParent.visible=false;
				}
				if (!Fish._cacheObject[String(this._fishId)]){
					Fish._cacheObject[String(this._fishId)]=[];
				};
				var tmpArray=Fish._cacheObject [String(this._fishId)];
				tmpArray.push(this);
				}hitJudge(hitValue,powerReduce,bulletHit){
				var isHit=false;
				if (this._isCatch){
					return false;
				}
				if (bulletHit){
					var rnd=Math.random();
					var hitRate=NaN;
					if (this._isGoldFish){
						hitRate=1 / (this._multiple *this._goldFishHpRate);
					}
					else{
						hitRate=1 / this._multiple;
					}
					if (rnd < hitRate){
						isHit=true;
					}
				}
				else{
					isHit=true;
				}
				if (isHit){
					this._isCatch=true;
					this._bulletHurt=bulletHit;
					if (this._isDeadAniExist){
					}
					this._hitValue=hitValue;
					if (!this._coinComsumption && this.isValid()){
						this._coinComsumption=true;
					}
				}
				return isHit;
				}setHitStatus(){
				if (this._isCatch){
					return;
				}
				if (this._isDeadAniExist){
					this._isCatch=true;
				}
			}
			// m_fish->setColor(ccc3(255,255,255));
			dataInit(){
				this._pivotOffsetX=20;
				this._pivotOffsetY=10;
				this._isReverse=false;
				this._playDeadAni=true;
				this._curHitTime=0;
				this._curReverseHitTime=0;
				this._fish.pivotX=this._pivotX;
				this._fish.pivotY=this._pivotY;
				this._fishRunTime=0;
				this._hitValue=0;
				this._fishShowDelay=0;
				this._hitColorChangeLastTime=ConfigManager.getConfValue("cfg_fish",this._fishId,"hit_time");
				this._hitColorChangeTime=ConfigManager.getConfValue("cfg_fish",this._fishId,"hit_time");
				this._clearUpDir=1;
				this._clearUpTotalTime=0;
				this._clearUpCastTime=0;
				this._dieAlpha=false;
				this._dieAlphaRunTime=1;
				this._dieAlphaTime=1;
				this._uniId=-1;
				this._isCatch=false;
				this._isCollision=false;
				this._runOver=false;
				this._fish.visible=true;
				this._calRect=false;
				this._fish.alpha=1;
				this._fish.filters=[];
				this._fish.visible=true;
				if ((this._fish instanceof manager.SpineTemplet )){
					var spineAni=this._fish;
					var parent=this._fish.parent;
					this._fish.removeSelf();
					this._fish=new SpineTemplet(this._fishName);
					parent.addChild(this._fish);
					spineAni.play(0,true);
					spineAni.setScale(1,1);
				}
				else{
					var aniTmp=this._fish;
					aniTmp.play(0,true);
					this._fish.scale(1,1,true);
				}
				if (this._boomSelectSprite){
					this._boomSelectSprite.visible=false;
				}
				if (this._fishParent){
					this._fishParent.visible=true;
				}
				if (this._lineTest){
					this._lineTest.visible=true;
				}
				if (this._specSprite){
					this._specSprite.visible=true;
				}
				if (this._fishSwimPathIdFont){
					this._fishSwimPathIdFont.visible=true;
				}
				if (this._lockSprite){
					this._lockSprite.visible=false;
				}
				if (this._fishMoneyBag){
					this._fishMoneyBag.visible=true;
					this._fishMoneyBag.play("H5_qiandai_youdong",true);
				}
				if (this._fishMoneyBagBomb){
					this._fishMoneyBagBomb.visible=false;
				}
				if (this._fishMoneyBagParent){
					this._fishMoneyBagParent.visible=true;
				}
				this._absorbedRunTime=0;
				this._absorbedDeltaX=0;
				this._absorbedDeltaY=0;
				this._absorbed=false;
				this._dieCatchInfo=null;
				}init(id,parent){
				var i=0;
				var width=0;
				var height=0;
				var tmp=0;
				var configName;
				var maxNum=1;
				this._fishId=id;
				this._collisionOffsetX=[];
				this._collisionOffsetY=[];
				this._collisionRadius=[];
				this._collisionAngleP1=[];
				this._collisionAngleP2=[];
				this._collisionCenterFishPosAngle=[];
				this._collisionCenterFishPosMirrorAngle=[];
				this._collisionCenterFishPosLength=[];
				this._change_num=ConfigManager.getConfValue("cfg_fish",id,"change_num");
				this._shakeArr=ConfigManager.getConfValue("cfg_fish",id,"shock");
				this._boomCatch=ConfigManager.getConfValue("cfg_fish",id,"boom");
				this._fishName=ConfigManager.getConfValue("cfg_fish",id,"aniName");
				this._specFlag=ConfigManager.getConfValue("cfg_fish",id,"spec_flag");
				this._catchShow=ConfigManager.getConfValue("cfg_fish",id,"catch_show");
				this._catchType=ConfigManager.getConfValue("cfg_fish",id,"ctype");
				this._catchShowRate=ConfigManager.getConfValue("cfg_fish",id,"catch_show_rate");
				this._catchType=ConfigManager.getConfValue("cfg_fish",id,"ctype");
				this._hitActionExist=(ConfigManager.getConfValue("cfg_fish",id,"hitAni"))==1;
				this._fishScale=ConfigManager.getConfValue("cfg_fish",id,"scale");
				this._fishFrameNum=ConfigManager.getConfValue("cfg_anicollision",this._fishName,"anilength");
				this._fishSwimRefL=ConfigManager.getConfValue("cfg_anicollision",this._fishName,"refL");
				this._fishSwimSpeedBase=(GameConst.fixed_update_time *1000 *this._fishSwimRefL)/ this._fishFrameNum;
				this._calMal=ConfigManager.getConfValue("cfg_anicollision",this._fishName,"calMax");
				this._fishAniSpeedChange=(ConfigManager.getConfValue("cfg_anicollision",this._fishName,"change"))==1;
				this._fishAniMaxInterval=ConfigManager.getConfValue("cfg_anicollision",this._fishName,"aniSpeed");{
					{
						for (i=0;i < 5;i++){
							tmp=i+1;
							configName="colliWidth"+tmp;
							width=this._fishScale *(ConfigManager.getConfValue("cfg_anicollision",this._fishName,configName));
							if (width > 0){
								configName="colliHeight"+tmp;
								height=this._fishScale *(ConfigManager.getConfValue("cfg_anicollision",this._fishName,configName));
								configName="colliOffsetX"+tmp;
								this._collisionOffsetX[i]=this._fishScale *(ConfigManager.getConfValue("cfg_anicollision",this._fishName,configName));
								configName="colliOffsetY"+tmp;
								this._collisionOffsetY[i]=this._fishScale *(ConfigManager.getConfValue("cfg_anicollision",this._fishName,configName));
								this._collisionRadius[i]=Math.sqrt(width *width+height *height);
								this._collisionAngleP1[i]=-Math.acos(width / this._collisionRadius[i])/ Math.PI *180;
								this._collisionAngleP2[i]=-this._collisionAngleP1[i];
								this._collisionCenterFishPosAngle[i]=GameTools.CalLineAngleP4(0,0,this._collisionOffsetX[i],this._collisionOffsetY[i]);
								this._collisionCenterFishPosMirrorAngle[i]=GameTools.CalLineAngleP4(0,0,-this._collisionOffsetX[i],this._collisionOffsetY[i]);
								this._collisionCenterFishPosLength[i]=GameTools.CalPointLenP4(0,0,this._collisionOffsetX[i],this._collisionOffsetY[i]);
							}
							else{
								break ;
							}
						}
					}
					this._collisionCount=i;
				}
				tmp=6;
				configName="colliWidth"+tmp;
				width=this._fishScale *(ConfigManager.getConfValue("cfg_anicollision",this._fishName,configName));
				if (width > 0){
					configName="colliHeight"+tmp;
					height=this._fishScale *(ConfigManager.getConfValue("cfg_anicollision",this._fishName,configName));
					configName="colliOffsetX"+tmp;
					this._fishOffsetX=this._fishScale *(ConfigManager.getConfValue("cfg_anicollision",this._fishName,configName));
					configName="colliOffsetY"+tmp;
					this._fishOffsetY=this._fishScale *(ConfigManager.getConfValue("cfg_anicollision",this._fishName,configName));
					this._fishRadius=Math.sqrt(width *width+height *height);
					this._fishAngleP1=-Math.acos(width / this._fishRadius)/ Math.PI *180;
					this._fishAngleP2=-this._fishAngleP1;
					this._fishCenterFishPosAngle=GameTools.CalLineAngleP4(0,0,this._fishOffsetX,this._fishOffsetY);
					this._fishCenterFishPosMirrorAngle=GameTools.CalLineAngleP4(0,0,-this._fishOffsetX,this._fishOffsetY);
					this._fishCenterFishPosLength=GameTools.CalPointLenP4(0,0,this._fishOffsetX,this._fishOffsetY);
				}
				else{
				};
				var rect;
				if (this._specFlag > 0){
					this._specSprite=new Sprite();
					this._specSprite.loadImage("ui/fight/flag_"+this._specFlag+".png");
					rect=this._specSprite.getBounds();
					this._specSprite.pivot(rect.width / 2,rect.height / 2);
				}
				if (this._change_num > 0){
					var wagesOffsetX=ConfigManager.getConfValue("cfg_fish",id,"wagesX");
					var wagesOffsetY=ConfigManager.getConfValue("cfg_fish",id,"wagesY");
					var _specParent=new Sprite();
					this._specSprite=new Sprite();
					this._specSprite.loadImage(ConfigManager.getConfValue("cfg_fish",id,"change_img"));
					rect=this._specSprite.getBounds();
					this._specSprite.pivot(rect.width / 2,rect.height / 2);
					_specParent.addChild(this._specSprite);
					this._specSprite.x=wagesOffsetX;
					this._specSprite.y=wagesOffsetY;
					this._specSprite=_specParent;
				}
				if (this._specSprite && this._change_num <=0){
					parent.addChild(this._specSprite);
				};
				var aniType=ConfigManager.getConfValue("cfg_anicollision",this._fishName,"aniType");
				if (aniType==0){
					this._fish=FishAniManager.instance.load(this._fishName);
					this._group=ConfigManager.getConfValue("cfg_fish",id,"group");
					this._fish.pivot(ConfigManager.getConfValue("cfg_anicollision",this._fishName,"pivotX"),
					ConfigManager.getConfValue("cfg_anicollision",this._fishName,"pivotY"));
				}
				else{
					this._fish=new SpineTemplet(this._fishName);
				}
				parent.addChild(this._fish);
				this._fish.scale(this._fishScale,this._fishScale,true);
				if (1==this._boomCatch){
					var ani;
					ani=new SpineTemplet("suoding");
					this._boomSelectSprite=ani;
					this._boomSelectSprite.zOrder=1;
					parent.addChild(this._boomSelectSprite);
				}
				if (2==this._catchType){
					var moneyBagName="qiandaiyoudong";
					this._fishMoneyBagParent=new Sprite();
					this._fishMoneyBag=new SpineTemplet(moneyBagName);
					this._fishMoneyBag.pivot((ConfigManager.getConfValue("cfg_anicollision",moneyBagName,"pivotX")),
					ConfigManager.getConfValue("cfg_anicollision",moneyBagName,"pivotY"));
					this._fishMoneyBagParent.pivot(-250,0);
					this._fishMoneyBagParent.addChild(this._fishMoneyBag);
					this._fishMoneyBagParent.zOrder=1;
					parent.addChild(this._fishMoneyBagParent);
					this._fishMoneyBag.play("H5_qiandai_youdong",true);
				}
				if (GameConst.draw_collision_rect){
					this._lineTest=new Sprite();
					parent.addChild(this._lineTest);
				}
				if (GameConst.show_fish_swim_path_id){
					this._fishSwimPathIdFont=new FontClip("font/font_1.png","/.+-0123456789枚万亿");
					parent.addChild(this._fishSwimPathIdFont);
					this._fishSwimPathIdFont.anchorX=0.5;
					this._fishSwimPathIdFont.anchorY=0.5;
				}
				this._pivotX=this._fish.pivotX;
				this._pivotY=this._fish.pivotY;
				if (this._specSprite && this._change_num > 0){
					parent.addChild(this._specSprite);
				}
				this.dataInit();
				}setFishPosition(pos_x,pos_y){
				this._fish.pos(pos_x,pos_y,true);
				if (this._specSprite){
					this._specSprite.pos(pos_x,pos_y,true);
				}
				if (this._fishMoneyBagParent){
					this._fishMoneyBagParent.pos(pos_x,pos_y,true);
				}
				if (this._boomSelectSprite){
					this._boomSelectSprite.pos(pos_x,pos_y,true);
				}
				if (this._lockSprite){
					this._lockSprite.pos(pos_x,pos_y,true);
				}
				if (this._lineTest){
				}
				if (this._fishSwimPathIdFont){
					this._fishSwimPathIdFont.pos(pos_x,pos_y,true);
				}
			}
			//_fishSwimPathIdFont.zOrder=pos_y+2
			calDeltaXY(){
				}getCenterPosition(){
				this._centerPos.x=this._fish.x;
				this._centerPos.y=this._fish.y;
				return this._centerPos;
				}getDesignPos(){
				this._getDesignPos.x=this._designPos.x;
				this._getDesignPos.y=this._designPos.y;
				return this._getDesignPos;
				}getBlackHolePosX(){
				return this._absorbedX;
				}getBlackHolePosY(){
				return this._absorbedY;
				}getRotation(){
				var angle=0;
				angle=this._fish.rotation;
				return angle;
				}setRotation(angle){
				if (this._fish.scaleX < 0){
					if (angle >=180 && angle <=360){
						angle-=180;
					}
					else if (angle >=0 && angle <=180){
						angle+=180;
					}
				}
				this._fish.rotation=angle;
				if (this._fishMoneyBagParent){
					this._fishMoneyBagParent.rotation=angle;
				}
				if (this._specSprite && this._change_num > 0){
					this._specSprite.rotation=angle;
				}
				}showRedBack(){
				var redMat;
				var redFilter;
				var spine;
				redMat=[
				1,0,0,0,0,
				0,0,0,0,0,
				0,0,0,0,0,
				0,0,0,1,0,];
				redFilter=new ColorFilter(redMat);
				if ((this._fish instanceof manager.GameAnimation )){
					this._fish.filters=[redFilter];
					}else{
					spine=this._fish;
					spine.setFilters([redFilter]);
				}
				}hitUpdate(delta){
				if ((this._fish instanceof manager.SpineTemplet )){
					return;
				}
				if (this._hitColorChangeTime >=(this._totalHitTime+this._reverseHitTime)){
					return;
				}
				if (!this._isReverse){
					this._curHitTime+=delta;
					this._fish.pivotX=Ease.backOut(this._curHitTime,this._pivotX,this._pivotOffsetX,this._totalHitTime,0);
					this._fish.pivotY=Ease.backOut(this._curHitTime,this._pivotY,this._pivotOffsetY,this._totalHitTime,0);
					if (this._curHitTime >=this._totalHitTime){
						this._isReverse=true;
					}
					}else{
					this._curReverseHitTime+=delta;
					this._fish.pivotX=Ease.backOut(this._curReverseHitTime,this._pivotX+this._pivotOffsetX,-this._pivotOffsetX,this._reverseHitTime,0);
					this._fish.pivotY=Ease.backOut(this._curReverseHitTime,this._pivotY+this._pivotOffsetY,-this._pivotOffsetY,this._reverseHitTime,0);
					if (this._curReverseHitTime >=this._reverseHitTime){
						this._fish.pivotX=this._pivotX;
						this._fish.pivotY=this._pivotY;
						this._curHitTime=0;
						this._curReverseHitTime=0;
						this._isReverse=false;
					}
				}
				}showHit(){
				if (this._hitColorChangeTime >=this._hitColorChangeLastTime){
					this._hitColorChangeTime=0;
				}
			}
			// Laya.timer.frameLoop(1,this,hitUpdate,[]);
			clearRed(){
				var spine;
				if ((this._fish instanceof manager.GameAnimation )){
					this._fish.filters=[];
				}
				else{
					spine=this._fish;
					spine.setFilters([]);
				}
			}
			//播放骨骼受击动画
			playHitSpine(){
				var _$this=this;
				var spine=this._fish;
				if (this._hitColorChangeTime >=this._hitColorChangeLastTime){
					this._hitColorChangeTime=0;
					spine.play(1,false,new Handler(this,function(){
						spine.play(0,true);
						if (_$this._freezeTime > 0){
							spine.paused();
						}
					}));
				}
				}updateHitState(delta,hitStart,onlineSync){
				if (!this._fish){
					return;
				}
				this._hitColorChangeTime+=delta;
				if ((this._fish instanceof manager.SpineTemplet )){
					if (hitStart){
						this.playHitSpine();
					}
				}
				else{
					if (hitStart){
						this.showHit();
					}
				}
				}getFishSizeType(){
				return this._fishSizeType;
				}udpateMirrorInfo(){
				var pathMirror=ConfigManager.getConfValue("cfg_fishgrouppath",this._pathId,"mirror");
				var pathScaleX=1;
				var seatScaleX=1;
				if (this._fishSwimPathIdFont){
					this._fishSwimPathIdFont.value=String(this._pathId);
				}
				if ((this._mirror==2 ||
					this._mirror==4)){
					if (1==pathMirror){
						pathScaleX=1;
					}
					else{
						pathScaleX=-1;
					}
				}
				else{
					if (1==pathMirror){
						pathScaleX=-1;
					}
					else{
						pathScaleX=1;
					}
				}
				if (FightM.instance.getOwnSeatMirrorType()==2 ||
					FightM.instance.getOwnSeatMirrorType()==4){
					seatScaleX=-1;
				}
				this._fish.scaleX=pathScaleX *seatScaleX;
				if (this._fishMoneyBagParent){
					this._fishMoneyBagParent.scaleX=pathScaleX *seatScaleX;
				}
				if (this._specSprite && this._change_num > 0){
					this._specSprite.scaleX=pathScaleX *seatScaleX;
					var realSprite=this._specSprite.getChildAt(0);
					if (this._specSprite.scaleX < 0){
						realSprite.scaleX=-1;
					}
					else{
						realSprite.scaleX=1;
					}
				}
				}calPrePos(tickNum){
				this._fishRunTime=GameConst.fixed_update_time *tickNum;
				this._segNum=1;
				var segsTime=Fish.pathSegTimes[ this._pathId];
				var segTime=segsTime[this._segNum-1];
				while (this._fishRunTime > segTime.endTime){
					this._segNum++;
					segTime=segsTime[this._segNum-1];
				};
				var path_arr=ConfigManager.getConfValue("cfg_fishgrouppath",this._pathId,"path");
				var segInfo=ConfigManager.getConfValue("cfg_fishgrouppath",this._pathId,"segInfo");
				var t=(this._fishRunTime-segTime.startTime)/ segTime.lastTime;
				var minusT=1-t;
				var pointBegin=(this._segNum-1)*2;
				var bezierPointBegin=(this._segNum-1)*3;
				var scrX=path_arr[pointBegin];
				var scrY=path_arr[pointBegin+1];
				var desX=path_arr[pointBegin+2];
				var desY=path_arr[pointBegin+3];
				var bezierX=segInfo[bezierPointBegin];
				var bezierY=segInfo[bezierPointBegin+1];
				var segLen=segInfo[bezierPointBegin+2];
				var curFishPos=this.getCenterPosition();
				var angle=this.getRotation();
				var powMinusT=minusT *minusT;
				var powT=t *t;
				var tmultiMinus=2 *t *minusT;
				this._bezierPrePos.x=bezierX;
				this._bezierPrePos.y=bezierY;
				this._bezierPrePos.x=powMinusT *scrX+tmultiMinus *bezierX+powT *desX;
				this._bezierPrePos.y=powMinusT *scrY+tmultiMinus *bezierY+powT *desY;
				this._bezierPrePos.x=this._bezierPrePos.x+this._offX;
				this._bezierPrePos.y=this._bezierPrePos.y+this._offY;
				this.getMirrorData(this._bezierPrePos.x,this._bezierPrePos.y,this._bezierPrePos);
				this._designPos.x=this._bezierPrePos.x;
				this._designPos.y=this._bezierPrePos.y;
				this.setFishPosition(GameTools.designPosXMapScreenPosX(this._designPos.x),GameTools.designPosYMapScreenPosY(this._designPos.y));
				}variableSpeedUpdate(delta){
				this._fishRunTime+=delta;
				var segsTime=Fish.pathSegTimes[ this._pathId];
				var segTime=segsTime[this._segNum-1];
				if (this._fishRunTime > segTime.endTime){
					var maxSegNum=ConfigManager.getConfValue("cfg_fishgrouppath",this._pathId,"segNum");
					if (this._segNum >=maxSegNum){
						if (this._ipath < this._path.length){
							this._ipath=this._ipath+1;
							this._pathId=this._path[this._ipath-1];
							this._segNum=1;
							this._loop=ConfigManager.getConfValue("cfg_fishgrouppath",this._pathId,"loop");
							segsTime=Fish.pathSegTimes[ this._pathId];
							segTime=segsTime[this._segNum-1];
							this._fishRunTime=delta;
							this.udpateMirrorInfo();
						}
						else{
							this._runOver=true;
							return;
						}
					}
					else{
						this._segNum=this._segNum+1;
						segTime=segsTime[this._segNum-1];
					}
				};
				var path_arr=ConfigManager.getConfValue("cfg_fishgrouppath",this._pathId,"path");
				var segInfo=ConfigManager.getConfValue("cfg_fishgrouppath",this._pathId,"segInfo");
				var t=(this._fishRunTime-segTime.startTime)/ segTime.lastTime;
				var minusT=1-t;
				var pointBegin=(this._segNum-1)*2;
				var bezierPointBegin=(this._segNum-1)*3;
				var scrX=path_arr[pointBegin];
				var scrY=path_arr[pointBegin+1];
				var desX=path_arr[pointBegin+2];
				var desY=path_arr[pointBegin+3];
				var bezierX=segInfo[bezierPointBegin];
				var bezierY=segInfo[bezierPointBegin+1];
				var segLen=segInfo[bezierPointBegin+2];
				var curFishPos=this.getCenterPosition();
				var angle=this.getRotation();
				var powMinusT=minusT *minusT;
				var powT=t *t;
				var tmultiMinus=2 *t *minusT;
				this._bezierPrePos.x=bezierX;
				this._bezierPrePos.y=bezierY;
				this._bezierPrePos.x=powMinusT *scrX+tmultiMinus *bezierX+powT *desX;
				this._bezierPrePos.y=powMinusT *scrY+tmultiMinus *bezierY+powT *desY;
				this._bezierPrePos.x=this._bezierPrePos.x+this._offX;
				this._bezierPrePos.y=this._bezierPrePos.y+this._offY;
				this.getMirrorData(this._bezierPrePos.x,this._bezierPrePos.y,this._bezierPrePos);
				if (this._fish && this._fishAniSpeedChange){
					var swimLen=GameTools.CalPointLen(this._bezierPrePos,this._designPos);
					if (swimLen > 0){
						var tmpInterval=this._fishSwimSpeedBase / swimLen;
						var tmpAni=this._fish;
						if (tmpInterval > this._fishAniMaxInterval){
							tmpInterval=this._fishAniMaxInterval;
						}
						tmpAni.interval=tmpInterval;
					}
				}
				if (this._bezierPrePos.x !=this._designPos.x || this._bezierPrePos.y !=this._designPos.y){
					angle=GameTools.CalLineAngle(this._designPos,this._bezierPrePos);
				}
				this._designPos.x=this._bezierPrePos.x;
				this._designPos.y=this._bezierPrePos.y;
				this.setRotation(angle);
				this.setFishPosition(GameTools.designPosXMapScreenPosX(this._designPos.x),GameTools.designPosYMapScreenPosY(this._designPos.y));
				this._calRect=false;
				}fixedTimeUpdate(delta){
				if (this._clearUpTotalTime > 0){
					this._clearUpCastTime+=delta;
					if (this._clearUpCastTime >=this._clearUpTotalTime){
						this._runOver=true;
						return;
					}
					else{
						var refPoint=this.getCenterPosition();
						if (1==this._clearUpDir){
							if (refPoint.x <=(this._clearUpCastTime / this._clearUpTotalTime *Laya.stage.width)){
								this._runOver=true;
								return;
							}
						}
						else{
							if (refPoint.x >=(Laya.stage.width-this._clearUpCastTime / this._clearUpTotalTime *Laya.stage.width)){
								this._runOver=true;
								return;
							}
						}
					}
				}
				if (this._runOver){
					return;
				}
				if (this._freezeTime > 0){
					this._freezeTime-=delta;
					if (this._freezeTime <=0){
						if ((this._fish instanceof manager.SpineTemplet )){
							var spineAni=this._fish;
							spineAni.resume();
						}
						else{
							var aniTmp=this._fish;
							aniTmp.play(aniTmp.index,true);
						}
						if (this._fishMoneyBag){
							this._fishMoneyBag.resume();
						}
					}
					return;
				}
				this._tickNum+=1;
				this.variableSpeedUpdate(delta);
				if (this._specSprite && this._change_num <=0){
					this._specSprite.rotation=this._specSprite.rotation+delta *50;
				}
				}getMirrorData(x,y,ret){
				if (this._mirror==2){
					x=1280-x;
				}
				else if (this._mirror==3){
					y=720-y;
				}
				else if (this._mirror==4){
					x=1280-x;
					y=720-y;
				}
				x=FightM.instance.getMirrorPosXByOwnSeat(x);
				y=FightM.instance.getMirrorPosYByOwnSeat(y);
				ret.x=x;
				ret.y=y;
				}innerUpdate(delta){
				this._updateCount+=1;
				this.updateHitState(delta,false,false);
				if (this._absorbed){
					var scaleX=1;
					if (this._fish.scaleX < 0){
						scaleX=-1;
					}
					this._absorbedRunTime+=delta;
					this._fish.x=GameTools.designPosXMapScreenPosX(this._designPos.x+this._absorbedDeltaX *this._absorbedRunTime);
					this._fish.y=GameTools.designPosYMapScreenPosY(this._designPos.y+this._absorbedDeltaY *this._absorbedRunTime);
					this._fish.rotation=this._fish.rotation+delta *this._absorbedAngleChange;
					var scale=(this._absorbedTotalTime-this._absorbedRunTime)/ this._absorbedTotalTime;
					this._fish.scale(scaleX *scale,scale);
					if (this._absorbedRunTime >=this._absorbedTotalTime){
						this._isCatch=true;
						this._dieAlpha=true;
						this._dieAlphaRunTime=-1;
					}
					return;
				}
				if (this._dieAlpha){
					this._dieAlphaRunTime-=delta;
					if (this._dieAlphaRunTime < 0){
						this._fish.alpha=0;
					}
					else{
						this._fish.alpha=this._dieAlphaRunTime / this._dieAlphaTime;
					}
					this._delayDie-=delta;
					return;
				}
				if (this._isCatch || this._runOver){
					return;
					}{
					this.fixedTimeUpdate(GameConst.fixed_update_time);
				}
				if (GameConst.draw_collision_rect){
					this.DrawCollisionRect();
					return;
				}
				}update(delta){
				this.innerUpdate(delta);
				this.hitUpdate(delta);
				}getPathRunTick(pathId){
				var pathInfo=ConfigManager.getConfObject("cfg_fishgrouppath",pathId);
				return pathInfo.maxTick;
				}kill(){
				this._isCatch=true;
				this._playDeadAni=false;
				}addDieRunTime(addTime){
				this._dieAlphaRunTime+=addTime;
				}syncOnlineData(info){
				var i=0;
				var createTick=info.getStartTick();
				var freezeStartTick=info.getFreezeStartTick();
				var runTick=0;
				var freezeTotalTick=500;
				var delayMaxTick=info.getDelayTickNum();
				var callMaxTick=info.getcalldelayTickNum();
				var pathRunTick=0;
				var extraMaxTick=info.getExtraTick();
				runTick=FightManager.instance.getRunTick(createTick);
				this._delayDie=info.getDelayDie();
				this._path=info.getPath();
				this._mirror=info.getMirror();
				this._offX=info.getOffX();
				this._offY=info.getOffY();
				this._uniId=info.getUniId();
				this._freezeTime=0;
				var freezeLeftTick=0;
				if (freezeStartTick > 0){
					freezeLeftTick=freezeTotalTick-FightManager.instance.getRunTick(freezeStartTick);
					this._freezeTime=freezeLeftTick *GameConst.fixed_update_time;
					if (freezeLeftTick < 0){
						freezeLeftTick=0;
					}
				};
				var delayDieUseTick=0;
				this._isCatch=info.isCatch();
				if (this._isCatch){
					var catchSound=ConfigManager.getConfValue("cfg_fish",this._fishId,"CatchSound");
					var deadAni=ConfigManager.getConfValue("cfg_fish",this._fishId,"dead_ani");
					if (catchSound.length > 0){
						GameSoundManager.playSound(catchSound);
					}
					if (this._playDeadAni){
						FightManager.instance.playFishDeadAni(deadAni,this.getCenterPosition());
					}
					if (this._delayDie > 0){
						var totalDelayDie=ConfigManager.getConfValue("cfg_fish",this._fishId,"catch_time");
						var blackHoleEffect=ConfigManager.getConfValue("cfg_fish",this._fishId,"show_ani_name");
						var showRange=ConfigManager.getConfValue("cfg_fish",this._fishId,"show_ani_range");
						this._absorbedX=this._designPos.x;
						this._absorbedY=this._designPos.y;
						if (this._absorbedX < showRange[0]){
							this._absorbedX=showRange[0];
						}
						if (this._absorbedX > showRange[1]){
							this._absorbedX=showRange[1];
						}
						if (this._absorbedY < showRange[2]){
							this._absorbedY=showRange[2];
						}
						if (this._absorbedY > showRange[3]){
							this._absorbedY=showRange[3];
						}
						FightManager.instance.playBlackHoleEffect(blackHoleEffect,totalDelayDie-this._delayDie,GameTools.designPosXMapScreenPosX(this._absorbedX),GameTools.designPosYMapScreenPosY(this._absorbedY));
						delayDieUseTick=Math.ceil((totalDelayDie-this._delayDie)/ GameConst.fixed_update_time);
						this._dieAlphaRunTime=-1;
						if(this._specSprite){
							this._specSprite.visible=false;
						}
					}
				}
				pathRunTick=runTick-extraMaxTick+freezeLeftTick-delayDieUseTick;
				if (pathRunTick <=0){
					pathRunTick=1;
				}
				this._tickNum=-1;
				var pathTotalTick=0;
				for (i=0;i < this._path.length;i++){
					pathTotalTick=this.getPathRunTick(this._path[i]);
					if (pathRunTick > pathTotalTick){
						pathRunTick=pathRunTick-pathTotalTick;
					}
					else{
						this._ipath=i+1;
						this._pathId=this._path[i];
						this._tickNum=pathRunTick;
						break ;
					}
				}
				if (this._tickNum < 0){
					if (this._isCatch){
						this._ipath=this._path.length;
						this._pathId=this._path[this._ipath-1];
						this._tickNum=this.getPathRunTick(this._pathId);
					}
					else{
						return false;
					}
				}
				this.udpateMirrorInfo();
				this.calPrePos(this._tickNum);
				this.variableSpeedUpdate(GameConst.fixed_update_time);
				if (this._freezeTime > 0){
					if ((this._fish instanceof manager.SpineTemplet )){
						var spineAni=this._fish;
						spineAni.paused();
					}
					else{
						var aniTmp=this._fish;
						aniTmp.stop();
					}
					if (this._fishMoneyBag){
						this._fishMoneyBag.paused();
					}
					FightManager.instance.showFreezeEffect(this._freezeTime);
				}
				return true;
			}
			//黑洞是否被激活
			blackHoleActive(){
				if (this._isCatch && this._delayDie > 0){
					var totalDelayDie=ConfigManager.getConfValue("cfg_fish",this._fishId,"catch_time");
					var startTime=ConfigManager.getConfValue("cfg_fish",this._fishId,"start_time");
					var endTime=ConfigManager.getConfValue("cfg_fish",this._fishId,"end_time");
					if (this._delayDie > endTime && this._delayDie < (totalDelayDie-startTime)){
						return true;
					}
				}
				return false;
				}absorbed(x,y){
				if (!this._absorbed){
					this._absorbed=true;
					this._absorbedRunTime=0;
					var rawPoint=new Point();
					var startPoint=this._designPos;
					var endPoint=new Point(FightM.instance.getMirrorPosXByOwnSeat(x),FightM.instance.getMirrorPosYByOwnSeat(y));
					var angle=GameTools.CalLineAngle(startPoint,endPoint);
					var len=GameTools.CalPointLen(startPoint,endPoint);
					var radian=angle *Math.PI / 180;
					this._absorbedDeltaX=Math.cos(radian)*len / this._absorbedTotalTime;
					this._absorbedDeltaY=Math.sin(radian)*len / this._absorbedTotalTime;
				}
				}getBlackHoleRange(){
				return ConfigManager.getConfValue("cfg_fish",this._fishId,"catch_range");
				}hitStart(onlineSync){
				if (this._hitColorChangeTime >=this._hitColorChangeLastTime){
					this.updateHitState(0,true,onlineSync);
					if (!onlineSync){
						var soundPath=ConfigManager.getConfValue("cfg_fish",this._fishId,"hitSound");
						if (soundPath){
							GameSoundManager.playSound(soundPath);
						}
					}
				}
				}getUniId(){
				return this._uniId;
				}points_direction(PI,PJ,PK){
				return (PK.x-PI.x)*(PJ.y-PI.y)-(PK.y-PI.y)*(PJ.x-PI.x);
				}is_line_seg_intersect(P1,P2,Q1,Q2){
				var d1=NaN;
				var d2=NaN;
				d1=this.points_direction(P1,P2,Q1);
				d2=this.points_direction(P1,P2,Q2);
				if (d1 *d2 > 0){
					return false;
				}
				d1=this.points_direction(Q1,Q2,P1);
				d2=this.points_direction(Q1,Q2,P2);
				if (d1 *d2 > 0){
					return false;
				}
				return true;
				}isRectIntersect(){
				var ret=false;
				var contain=true;
				var centerP=new Point((this._rectP1.x+this._rectP3.x)/ 2,(this._rectP1.y+this._rectP3.y)/ 2);
				var centerQ=new Point((this._rectQ1.x+this._rectQ3.x)/ 2,(this._rectQ1.y+this._rectQ3.y)/ 2);
				ret=this.is_line_seg_intersect(centerP,centerQ,this._rectQ1,this._rectQ2);
				if (ret){
					contain=false;
				}
				ret=this.is_line_seg_intersect(centerP,centerQ,this._rectQ2,this._rectQ3);
				if (ret){
					contain=false;
				}
				ret=this.is_line_seg_intersect(centerP,centerQ,this._rectQ3,this._rectQ4);
				if (ret){
					contain=false;
				}
				ret=this.is_line_seg_intersect(centerP,centerQ,this._rectQ4,this._rectQ1);
				if (ret){
					contain=false;
				}
				if (contain){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP1,this._rectP2,this._rectQ1,this._rectQ2);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP2,this._rectP3,this._rectQ1,this._rectQ2);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP3,this._rectP4,this._rectQ1,this._rectQ2);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP4,this._rectP1,this._rectQ1,this._rectQ2);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP1,this._rectP2,this._rectQ2,this._rectQ3);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP2,this._rectP3,this._rectQ2,this._rectQ3);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP3,this._rectP4,this._rectQ2,this._rectQ3);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP4,this._rectP1,this._rectQ2,this._rectQ3);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP1,this._rectP2,this._rectQ3,this._rectQ4);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP2,this._rectP3,this._rectQ3,this._rectQ4);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP3,this._rectP4,this._rectQ3,this._rectQ4);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP4,this._rectP1,this._rectQ3,this._rectQ4);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP1,this._rectP2,this._rectQ4,this._rectQ1);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP2,this._rectP3,this._rectQ4,this._rectQ1);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP3,this._rectP4,this._rectQ4,this._rectQ1);
				if (ret){
					return true;
				}
				ret=this.is_line_seg_intersect(this._rectP4,this._rectP1,this._rectQ4,this._rectQ1);
				if (ret){
					return true;
				}
				return false;
				}isValid(){
				var pathTime=ConfigManager.getConfValue("cfg_fishgrouppath",this._pathId,"time");
				if (this._isCatch){
					var dieComplete=false;
					this._dieAlpha=true;
					if (this._delayDie > 0){
						return true;
					}
					if (this._fishMoneyBagBomb && this._fishMoneyBagBomb.visible){
						return this._dieAlphaRunTime > 0 || this._fishMoneyBagBomb.isPlaying();
					}
					else{
						return this._dieAlphaRunTime > 0;
					}
				}
				if (this._runOver){
					return false;
				}
				return true;
				}getRefPoint(){
				var collisionCenter=this.getCenterPosition();
				var fishRotation=this.getRotation();
				var collisionRef;
				if (this._fish.scaleX < 0){
					collisionRef=GameTools.CalRotatePos(fishRotation+this._fishCenterFishPosMirrorAngle,this._fishCenterFishPosLength);
				}
				else{
					collisionRef=GameTools.CalRotatePos(fishRotation+this._fishCenterFishPosAngle,this._fishCenterFishPosLength);
				}
				collisionCenter.x+=collisionRef.x;
				collisionCenter.y+=collisionRef.y;
				return collisionCenter;
				}isCollisionDetect(id){
				return false;
				}collisionDetect(q1,q2,q3,q4){
				if (this._fishShowDelay > 0){
					return false;
				}
				if (this._isCatch){
					return false;
				}
				if (this._absorbed){
					return false;
				}
				this.calCollisionRect();
				this._rectQ1=q1;
				this._rectQ2=q2;
				this._rectQ3=q3;
				this._rectQ4=q4;
				var i=0;
				for (i=0;i < this._collisionCount;i++){
					this._rectP1=this._calRectInfo[i][0];
					this._rectP2=this._calRectInfo[i][1];
					this._rectP3=this._calRectInfo[i][2];
					this._rectP4=this._calRectInfo[i][3];
					if (this.isRectIntersect()){
						return true;
					}
				}
				return false;
				}calCollisionRect(){
				if (!this._calRect){
					var fishRadius=NaN;
					var angleP1=NaN;
					var angleP2=NaN;
					var collisionCenter=Fish._collisionCenterPos;
					var collisionRef;
					var fishRotation=this.getRotation();
					this._calRect=true;
					for (var i=0;i < this._collisionCount;i++){
						if (!this._calRectInfo[i]){
							this._calRectInfo[i]=[];
							this._calRectInfo[i][0]=new Point();
							this._calRectInfo[i][1]=new Point();
							this._calRectInfo[i][2]=new Point();
							this._calRectInfo[i][3]=new Point();
						}
						fishRadius=this._collisionRadius[i];
						angleP1=this._collisionAngleP1[i];
						angleP2=this._collisionAngleP2[i];
						collisionCenter.x=this._designPos.x;
						collisionCenter.y=this._designPos.y;
						if (this._fish.scaleX < 0){
							collisionRef=GameTools.CalRotatePos(fishRotation+this._collisionCenterFishPosMirrorAngle[i],this._collisionCenterFishPosLength[i]);
						}
						else{
							collisionRef=GameTools.CalRotatePos(fishRotation+this._collisionCenterFishPosAngle[i],this._collisionCenterFishPosLength[i]);
						}
						collisionCenter.x+=collisionRef.x;
						collisionCenter.y+=collisionRef.y;
						GameTools.CalRotatePos4(collisionCenter,this._calRectInfo[i][0],this._calRectInfo[i][2],fishRotation+angleP1,fishRadius);
						GameTools.CalRotatePos4(collisionCenter,this._calRectInfo[i][1],this._calRectInfo[i][3],fishRotation+angleP2,fishRadius);
					}
				}
				}getCross(p1,p2,px,py){
				return (p2.x-p1.x)*(py-p1.y)-(px-p1.x)*(p2.y-p1.y);
			}
			//子弹点碰撞
			bulletPointCollisionDetect(x,y,colInfo=null){
				if (this._fishShowDelay > 0){
					return false;
				}
				if (this._isCatch){
					return false;
				}
				if (this._absorbed){
					return false;
				};
				var collisionCenter=this._designPos;
				if ((x-this._calMal > collisionCenter.x)||
					(x+this._calMal)< collisionCenter.x ||
				(y-this._calMal)> collisionCenter.y ||
				(y+this._calMal)< collisionCenter.y){
					return false;
				}
				if (colInfo){
					colInfo.hit+=1;
				}
				this.calCollisionRect();
				for (var i=0;i < this._collisionCount;i++){
					var calRectInfo=this._calRectInfo[i];
					if (this.getCross(calRectInfo[0],calRectInfo[1],x,y)*this.getCross(calRectInfo[2],calRectInfo[3],x,y)>=0){
						if (this.getCross(calRectInfo[1],calRectInfo[2],x,y)*this.getCross(calRectInfo[3],calRectInfo[0],x,y)>=0){
							return true;
						}
					}
				}
				return false;
			}
			//点是否在鱼上面
			pointCollisionDetect(x,y){
				if (this._fishShowDelay > 0){
					return false;
				}
				if (this._isCatch){
					return false;
				};
				var collisionCenter=this._designPos;
				if ((x-this._calMal > collisionCenter.x)||
					(x+this._calMal)< collisionCenter.x ||
				(y-this._calMal)> collisionCenter.y ||
				(y+this._calMal)< collisionCenter.y){
					return false;
				}
				this.calCollisionRect();
				for (var i=0;i < this._collisionCount;i++){
					var calRectInfo=this._calRectInfo[i];
					if (this.getCross(calRectInfo[0],calRectInfo[1],x,y)*this.getCross(calRectInfo[2],calRectInfo[3],x,y)>=0){
						if (this.getCross(calRectInfo[1],calRectInfo[2],x,y)*this.getCross(calRectInfo[3],calRectInfo[0],x,y)>=0){
							return true;
						}
					}
				}
				return false;
				}DrawCollisionRect(){
				var p1=new Point();
				var p2=new Point();
				var p3=new Point();
				var p4=new Point();
				var angleP1=NaN;
				var angleP2=NaN;
				var collisionCenter;
				var collisionRef;
				var i=0;
				var fishRadius=NaN;
				var color;
				if (this._isCollision){
					color="#ff0000";
				}
				else{
					color="#ffffff";
				}
				color="#ff0000";
				this._lineTest.graphics.clear();
				var fishRotation=this.getRotation();
				if (this._fish.scaleX < 0){
				}
				for (i=0;i < this._collisionCount;i++){
					this._collisionIndex=i;
					fishRadius=this._collisionRadius[i];
					angleP1=this._collisionAngleP1[i];
					angleP2=this._collisionAngleP2[i];
					collisionCenter=this.getCenterPosition();
					if (this._fish.scaleX < 0){
						collisionRef=GameTools.CalRotatePos(fishRotation+this._collisionCenterFishPosMirrorAngle[i],this._collisionCenterFishPosLength[i]);
					}
					else{
						collisionRef=GameTools.CalRotatePos(fishRotation+this._collisionCenterFishPosAngle[i],this._collisionCenterFishPosLength[i]);
					}
					collisionCenter.x+=collisionRef.x;
					collisionCenter.y+=collisionRef.y;
					GameTools.CalRotatePos4(collisionCenter,p1,p3,this._fish.rotation+angleP1,fishRadius);
					GameTools.CalRotatePos4(collisionCenter,p2,p4,this._fish.rotation+angleP2,fishRadius);
					this._lineTest.graphics.drawLine(p1.x,p1.y,p2.x,p2.y,color,4);
					this._lineTest.graphics.drawLine(p2.x,p2.y,p3.x,p3.y,color,4);
					this._lineTest.graphics.drawLine(p3.x,p3.y,p4.x,p4.y,color,4);
					this._lineTest.graphics.drawLine(p4.x,p4.y,p1.x,p1.y,color,4);
				}
				if (this._fish.scaleX < 0){
					collisionRef=GameTools.CalRotatePos(fishRotation+this._fishCenterFishPosMirrorAngle,this._fishCenterFishPosLength);
				}
				else{
					collisionRef=GameTools.CalRotatePos(fishRotation+this._fishCenterFishPosAngle,this._fishCenterFishPosLength);
				}
				collisionCenter=this.getCenterPosition();
				collisionCenter.x+=collisionRef.x;
				collisionCenter.y+=collisionRef.y;
				GameTools.CalRotatePos4(collisionCenter,this._rectP1,this._rectP3,fishRotation+this._fishAngleP1,this._fishRadius);
				GameTools.CalRotatePos4(collisionCenter,this._rectP2,this._rectP4,fishRotation+this._fishAngleP2,this._fishRadius);
				collisionCenter=this.getCenterPosition();
				if (this._fish.scaleX < 0){
				}
				color="#ff0000";
			}
			// _lineTest.graphics.drawLine(_rectP4.x,_rectP4.y,_rectP1.x,_rectP1.y,color,4);
			getFishPosition(){
				return new Point(this._fish.x,this._fish.y);
				}isBoss(){
				return this._isBoss;
				}getCoinRate(){
				return this._multiple;
				}setFreeze(time){
				if (this._callDelay <=0){
					if ((this._fish instanceof manager.SpineTemplet )){
						var spineAni=this._fish;
						spineAni.paused();
					}
					else{
						var aniTmp=this._fish;
						aniTmp.stop();
					}
					if (this._fishMoneyBag){
						this._fishMoneyBag.paused();
					}
					this._freezeTime=time;
				}
				}clearUp(dir,t,c){
				this._clearUpDir=dir;
				this._clearUpTotalTime=t;
				this._clearUpCastTime=c;
				}setPathTestFreeSwim(){
				this._pathTestFreeSwim=true;
			}
			// }
			getSpecFlag(){
				return this._specFlag;
				}getCatchShow(){
				return this._catchShow;
				}getCatchType(){
				return this._catchType;
				}getCatchShowRate(){
				return this._catchShowRate;
				}getCatchShowPos(showSeatId){
				var ret=new Point();
				var arr=ConfigManager.getConfValue("cfg_fish",this._fishId,"catch_show_range");
				var startX=arr[0];
				var endX=arr[1];
				var startY=arr[2];
				var endY=arr[3];
				ret.x=startX+(endX-startX)*Math.random();
				ret.y=startY+(endY-startY)*Math.random();
				if (2==showSeatId){
					ret.x=1280-ret.x;
				}
				else if (3==showSeatId){
					ret.x=1280-ret.x;
					ret.y=720-ret.y;
				}
				else if (4==showSeatId){
					ret.y=720-ret.y;
				}
				return ret;
				}getCatchShowAniName(){
				return ConfigManager.getConfValue("cfg_fish",this._fishId,"ani_name");
				}getCatchShowAniActionName(){
				return ConfigManager.getConfValue("cfg_fish",this._fishId,"action_name");
				}playCatchSound(){
				var tmp=ConfigManager.getConfValue("cfg_fish",this._fishId,"playCatchSound");
				return tmp==1;
				}getFishLayer(){
				return ConfigManager.getConfValue("cfg_fish",this._fishId,"layer");
				}setSkillBoomSelectBoomFlag(isSelect){
				if (this._boomSelectSprite){
					var layers=FightManager.instance.getLayers();
					this._boomSelectSprite.visible=isSelect;
					if (isSelect){
						this.updateParent(layers[GameConst.boom_mask_layer_index+1]);
					}
					else{
						this.updateParent(null);
					}
				}
				}getSkillBoomSelectBoomFlag(){
				if (this._boomSelectSprite){
					return this._boomSelectSprite.visible;
				}
				return false;
				}setLock(parent){
				this._lockFlag=true;
				if (!this._lockSprite){
					var rect;
					this._lockSprite=new Sprite();
					this._lockSprite.loadImage("ui/fight/lock.png");
					rect=this._lockSprite.getBounds();
					this._lockSprite.pivot(rect.width / 2,rect.height / 2);
					this._lockSprite.pos(this._fish.x,this._fish.y,true);
					parent.addChild(this._lockSprite);
					Tween.to(this._lockSprite,{scaleX:0.6,scaleY:0.6},200,null,null);
				}
				else if (!this._lockSprite.visible){
					Tween.clearAll(this._lockSprite);
					this._lockSprite.pos(this._fish.x,this._fish.y,true);
					this._lockSprite.visible=true;
					this._lockSprite.scale(1,1,true);
					Tween.to(this._lockSprite,{scaleX:0.6,scaleY:0.6},200,null,null);
				}
				}lockClear(){
				if (!this._lockFlag && this._lockSprite && this._lockSprite.visible){
					Tween.clearAll(this._lockSprite);
					this._lockSprite.visible=false;
				}
				this._lockFlag=false;
				}isAlive(){
				return !this._isCatch;
				}getLockPri(){
				return ConfigManager.getConfValue("cfg_fish",this._fishId,"lock_pri");
				}isCall(){
				return this._callDelay > 0;
				}isBossComeIn(){
				var ret=false;
				if (this._catchType==2 ||
					this._catchType==1 ||
				this._catchType==3 ||
				this._catchType==4){
					if (this._ipath==1 && this._segNum==1 && this._fishRunTime < 4){
						ret=true;
					}
				}
				return ret;
			}
			//播放出生音效
			playComeSound(){
				var comeSound=ConfigManager.getConfValue("cfg_fish",this._fishId,"comeSound");
				if (comeSound.length > 0){
					GameSoundManager.playSound(comeSound);
				}
				}fishComeInActionName(){
				return ConfigManager.getConfValue("cfg_fish",this._fishId,"come_action_name");
				}isCallFish(){
				var call=ConfigManager.getConfValue("cfg_fish",this._fishId,"call");
				return 1==call;
			}
			//wx:bossShare
			iffishBoss(){
				if (this._catchType==2 ||
					this._catchType==1 ||
				this._catchType==3 ||
				this._catchType==4){
					return true;
				}
				return false;
				}isCoinBoss(){
				return this._catchType==2;
				}canLock(){
				return (!this._isCatch)&& (this._fish.x > 0 && this._fish.x < Laya.stage.width)&& (this._fish.y > 0 && this._fish.y < Laya.stage.height);
				}setMoneyBagSize(money){
				if (this._fishMoneyBag){
					var scale=money / 300000 *0.1+0.5;
					if (scale > 1){
						scale=1;
					}
					if (this._fishMoneyBag.scaleX < 0){
						this._fishMoneyBag.scaleX=-scale;
					}
					else{
						this._fishMoneyBag.scaleX=scale;
					}
					this._fishMoneyBag.scaleY=scale;
				}
				}screenResize(){
				this.setFishPosition(GameTools.designPosXMapScreenPosX(this._designPos.x),GameTools.designPosYMapScreenPosY(this._designPos.y));
				}getMoneyBagPosition(){
				if (this._fishMoneyBagParent){
					var ret=new Point();
					var len=Math.abs(this._fishMoneyBagParent.pivotX);
					var angle=this._fishMoneyBagParent.rotation;
					var radian=angle *Math.PI / 180;
					var deltaX=Math.cos(radian);
					var deltaY=Math.sin(radian);
					deltaX=len *deltaX *this._fishMoneyBagParent.scaleX;
					deltaY=len *deltaY *this._fishMoneyBagParent.scaleX;
					ret.x=this._fish.x+deltaX;
					ret.y=this._fish.y+deltaY;
					return ret;
				}
				return this.getCenterPosition();
				}getFishId(){
				return this._fishId;
				}getMoneyBagDelay(){
				return (17 / 60)/ (ConfigManager.getConfValue("cfg_anicollision","qiandai","aniSpeed"));
				}playMoneyBagBomb(){
				if (this._fishMoneyBag){
					var scaleX=this._fishMoneyBag.scaleX;
					var scaleY=this._fishMoneyBag.scaleY;
					var bombName="qiandai";
					this._fishMoneyBag.visible=false;
					if (!this._fishMoneyBagBomb){
						this._fishMoneyBagBomb=new SpineTemplet(bombName);
						this._fishMoneyBagBomb.pivot((ConfigManager.getConfValue("cfg_anicollision",bombName,"pivotX")),
						ConfigManager.getConfValue("cfg_anicollision",bombName,"pivotY"));
						this._fishMoneyBagParent.addChild(this._fishMoneyBagBomb);
						this._fishMoneyBagBomb.play("H5_qiandai_baozha",false);
					}
					else{
						this._fishMoneyBagBomb.visible=true;
						this._fishMoneyBagBomb.play("H5_qiandai_baozha",false);
					}
				}
			}
			// }
			get shakeArr (){
				return this._shakeArr;
			}
			static create (id,parent,useCache=true){
				if (!Fish._cacheObject){
					Fish._cacheObject=new Object();
				};
				var ret=null;
				if (useCache && Fish._cacheObject[String(id)]){
					var tmpArray=Fish._cacheObject [String(id)];
					if (tmpArray.length > 0){
						ret=tmpArray [0];
						ret.dataInit();
						ret.updateParent(null);
						tmpArray.splice(0,1);
					}
				}
				if (!ret){
					ret=new Fish(id,parent);
					ret.updateParent(null);
				}
				return ret;
			}
			static initPathInfo (pathId){
				var pathInfo=ConfigManager.getConfObject("cfg_fishgrouppath",pathId);
				if (!pathInfo.segTime){
					pathInfo.maxTick=Math.ceil(pathInfo.time / GameConst.fixed_update_time);
					pathInfo.segNum=pathInfo.path.length / 2-1;
					var startTime=0;
					var endTime=0;
					var i=0;
					var tmp=[];
					Fish.pathSegTimes[ pathId]=tmp;
					for (i=0;i < pathInfo.segNum;i++){
						var tmpTime=new Object();
						tmp[i]=tmpTime;
						endTime=pathInfo.segInfo[i *3+2];
						tmpTime.lastTime=endTime-startTime;
						tmpTime.startTime=startTime;
						tmpTime.endTime=endTime;
						startTime=endTime;
					}
				}
			}
		}

		fight.Fish=Laya.Fish=Fish;
		Fish._cacheObject=null;
		Fish.pathSegTimes={};
		Laya.static(Fish,
		['_collisionCenterPos',function(){return this._collisionCenterPos=new Point();}
		]);	

		class FullScreenCoinEffect{
			constructor (){
				this.eff_arr=[];
				this.cur_time=0;
				this.is_play=false;
				// }
				this._scaleXs=[1.2,1.5,1.3,1.5,1.3,0.8,1.1];
				this._points=[0,0,0,0,0,0];
			}
			loop(){
				var isEnd=true;
				this.cur_time+=Laya.timer.delta;
				for (var i=0;i < this.eff_arr.length;i++){
					var effect=this.eff_arr[i];
					if(!effect.is_end){
						effect.update(this.cur_time);
					}
					if(!effect.is_end){
						isEnd=false;
					}
				}
				if(isEnd){
					FullScreenCoinEffect._cache_obj.push(this);
					Laya.timer.clear(this,this.loop);
				}
				}stop(){
				for (var i=0;i < this.eff_arr.length;i++){
					var effect=this.eff_arr[i];
					effect.clear();
				}
				FullScreenCoinEffect._cache_obj.push(this);
				Laya.timer.clear(this,this.loop);
				}getObject(startX,startY,endX,endY,scaleX,scaleY,skewX,skewY,delay,parent){
				return FullScreenCoinEffectSingle.getInstance(startX,startY,endX,endY,scaleX,scaleY,skewX,skewY,delay,parent)
				}play(parent){
				this.cur_time=0;
				var scaleXs=[1.2,1.5,1.3,1.5,1.3,0.8,1.1];
				var points=[250,Laya.stage.width / 2,Laya.stage.width-220,
				Laya.stage.height / 2,Laya.stage.height / 2,Laya.stage.height / 2];
				var tmpIndex=0;
				for (var j=0;j < 3;j++){
					var x=points[j];
					var y=points[j+3];
					for (var i=0;i < 60;i++){
						var sx=x+FullScreenCoinEffect.random(50)*FullScreenCoinEffect.random_pn();
						var ex=Math.random()*Laya.stage.width;
						var sy=y+FullScreenCoinEffect.random(50)*FullScreenCoinEffect.random_pn();
						var ey=Math.random()*Laya.stage.height;
						var scx=scaleXs[FullScreenCoinEffect.random(scaleXs.length)];
						var scy=scx;
						var skx=Math.random()*180;
						var sky=-skx;
						if(this.eff_arr[tmpIndex]){
							this.eff_arr[tmpIndex].init(sx,sy,ex,ey,scx,scy,skx,sky,1,parent);
						}
						else{
							var eff=this.getObject(sx,sy,ex,ey,scx,scy,skx,sky,1,parent);
							this.eff_arr.push(eff);
						}
						tmpIndex++;
					}
				}
				Laya.timer.frameLoop(1,this,this.loop);
			}
			static create (preLoad=false){
				var ret=null;
				if (!preLoad && FullScreenCoinEffect._cache_obj.length > 0){
					ret=FullScreenCoinEffect._cache_obj [0];
					FullScreenCoinEffect._cache_obj.splice(0,1);
				}
				else{
					ret=new FullScreenCoinEffect();
				}
				return ret;
			}
			static random (num){
				return Math.floor(Math.random()*num)
			}
			static random_pn (){
				return Math.random()> 0.5 ? 1 :-1
			}
		}

		fight.FullScreenCoinEffect=Laya.FullScreenCoinEffect=FullScreenCoinEffect;
		FullScreenCoinEffect._cache_obj=[];
		FullScreenCoinEffect._update_obj=[];	

		class FullScreenCoinEffectSingle{
			constructor (startX,startY,endX,endY,scaleX,scaleY,skewX,skewY,delay,parent){
				//this.startX=NaN;
				//this.startY=NaN;
				//this.endX=NaN;
				//this.endY=NaN;
				//this.delay=NaN;
				//this.parent=null;
				this.ani=null;
				//this.ani_play_time=NaN;
				this.is_end=false;
				this.maxNumber=12;
				this.minNumber=6;
				//this._c=NaN;
				this.init(startX,startY,endX,endY,scaleX,scaleY,skewX,skewY,delay,parent);
			}
			init(startX,startY,endX,endY,scaleX,scaleY,skewX,skewY,delay,parent){
				this.startX=startX;
				this.startY=startY;
				this.endX=endX;
				this.endY=endY;
				this.delay=delay;
				this.parent=parent;
				this.ani_play_time=FullScreenCoinEffectSingle.play_time+FullScreenCoinEffectSingle.random(FullScreenCoinEffectSingle.play_time_offset);
				this._c=(Math.random()*(this.maxNumber-this.minNumber)+this.minNumber)/ 10;
				if(!this.ani){
					this.ani=FishAniManager.instance.load("coin1");
					this.ani.pivot(ConfigManager.getConfValue("cfg_anicollision","coin","pivotX"),
					ConfigManager.getConfValue("cfg_anicollision","coin","pivotY"));
				}
				this.ani.x=startX;
				this.ani.y=startY;
				this.ani.scaleX=scaleX;
				this.ani.scaleY=scaleY;
				this.ani.skewX=skewX;
				this.ani.skewY=skewY;
				this.ani.visible=true;
				this.is_end=false;
				this.ani.play(0,true);
				parent.addChild(this.ani);
				}clear(){
				this.ani.alpha=1;
				this.ani.interval=60;
				this.ani.visible=false;
				if(GameConst.unused_remove_self){
					this.ani.removeSelf();
				}
				this.ani.stop();
				this.is_end=true;
				}update(cur_time){
				var distance_percent=Ease.strongOut(cur_time,0,this._c,this.ani_play_time);
				this.ani.x=this.startX+(this.endX-this.startX)*distance_percent;
				this.ani.y=this.startY+(this.endY-this.startY)*distance_percent;
				var speed=-Math.log(cur_time / this.ani_play_time);
				this.ani.interval=(35 / speed)> 60 ? 60 :(35 / speed);
				this.ani.alpha=speed;
				if (cur_time >=this.ani_play_time){
					this.ani.alpha=1;
					this.ani.interval=60;
					this.ani.visible=false;
					if(GameConst.unused_remove_self){
						this.ani.removeSelf();
					}
					this.ani.stop();
					this.is_end=true;
				}
				else{
				}
			}
			static getInstance (startX,startY,endX,endY,scaleX,scaleY,skewX,skewY,delay,parent){
				return new FullScreenCoinEffectSingle(startX,startY,endX,endY,scaleX,scaleY,skewX,skewY,delay,parent)
			}
			static random (num){
				return Math.floor(Math.random()*num)
			}
		}

		fight.FullScreenCoinEffectSingle=Laya.FullScreenCoinEffectSingle=FullScreenCoinEffectSingle;
		FullScreenCoinEffectSingle.play_time=1000;
		FullScreenCoinEffectSingle.play_time_offset=2500;	

		class JellyEffect{
			constructor (parent){
				//this._parent=null;
				//this._aniArray=null;
				//this._bornTimeLeft=NaN;
				this._moveUpSpeed=20;
				this._removeArray=[];
				this._parent=parent;
				this._aniArray=[];
			}
			hide(){
				for (var i=0;i < this._aniArray.length;i++){
					var ani=this._aniArray [i];
					ani.visible=false;
					JellyEffect._cacheArray.push(ani);
				}
				this._aniArray.length=0;;
				}reset(){
				this._bornTimeLeft=0;
				}update(delta){
				var ani;
				if (this._bornTimeLeft >=0){
					this._bornTimeLeft-=delta;
					if (this._bornTimeLeft <=0){
						var scaleNum=this.randRange;
						var aniName="shuimu";
						if(JellyEffect._cacheArray.length <=0){
							ani=FishAniManager.instance.load(aniName);
							ani.pivot(ConfigManager.getConfValue("cfg_anicollision",aniName,"pivotX"),
							ConfigManager.getConfValue("cfg_anicollision",aniName,"pivotY"));
						}
						else{
							ani=JellyEffect._cacheArray.pop();
						}
						ani.visible=true;
						ani.play(0,true);
						ani.y=720;
						ani.x=10+1260 *Math.random();
						ani.scaleX=scaleNum;
						ani.scaleY=scaleNum;
						this._bornTimeLeft=4;
						this._parent.addChild(ani);
						this._aniArray.push(ani);
					}
				};
				var i=0;
				for (i=0;i < this._aniArray.length;i++){
					ani=this._aniArray [i];
					ani.x=ani.x-delta *4;
					ani.y=ani.y-delta *16;
				}
				this._removeArray.length=0;
				for (i=0;i < this._aniArray.length;i++){
					ani=this._aniArray [i];
					if (ani.x <-100 || ani.y <-100){
						this._removeArray.push(ani);
					}
				};
				var count=this._removeArray.length;
				for (var j=0;j < count;j++){
					ani=this._removeArray [j];
					for (var k=0;k < this._aniArray.length;k++){
						if (this._aniArray[k]===ani){
							this._aniArray.splice(k,1);
							break ;
						}
					}
					JellyEffect._cacheArray.push(ani);
				}
			}
			//指定范围的随机数
			get randRange (){
				return Math.random()*0.1+0.6
			}
		}

		fight.JellyEffect=Laya.JellyEffect=JellyEffect;
		JellyEffect._cacheArray=[];	
		/**
		*游戏初始化配置
		*/
		class GameConfig{
			constructor(){}
			static init (){
				var reg=ClassUtils.regClass;
				reg("laya.display.Text",Text);
				reg("laya.html.dom.HTMLDivElement",HTMLDivElement);
				reg("laya.ani.bone.Skeleton",Skeleton);
				reg("engine.ui.component.HSliderRe",HSliderRe);
				reg("view.item.FesDailyGiftItem",FesDailyGiftItem);
				reg("ui.fight.matchInfoBoxUI",matchInfoBoxUI);
				reg("ui.fight.matchResultBoxUI",matchResultBoxUI);
				reg("ui.fight.backBoxUI",backBoxUI);
			}
		}

		Laya.GameConfig=GameConfig;
		GameConfig.width=1280;
		GameConfig.height=720;
		GameConfig.scaleMode="exactfit";
		GameConfig.screenMode="horizontal";
		GameConfig.alignV="middle";
		GameConfig.alignH="center";
		GameConfig.startScene="abbey/LoadPage.scene";
		GameConfig.sceneRoot="";
		GameConfig.debug=false;
		GameConfig.stat=false;
		GameConfig.physicsDebug=false;
		GameConfig.exportSceneToJson=true;
		GameConfig.__init$=function(){
			GameConfig.init();
		};
		
		class Main{
			constructor (){
				RewriteManager.rewriteFunc();
				console.log("WxC.isInMiniGame():"+WxC.isInMiniGame());
				console.log("ENV.channelType:"+ENV.channelType);
				StartParam.instance.setConfig(ENV.config);
				StartParam.instance.parseHtmlParamString();
				if (WxC.isInMiniGame()){
					WxC.wx_on_window_resize();
					WxC.wx_onHide();
					WxC.wx_onShow();
					WxC.wx_get_system_info();
					WxC.wx_start_accelerometer();
					WxC.wx_on_accelerometer_change();
					WxC.wx_on_window_error();
					WxC.wx_screen_state();
					WxC.wx_show_share_menu();
					WxC.instance.initAdVideo();
				}
				Laya.init(GameConfig.width,GameConfig.height,Laya["WebGL"]);
				ScreenAdaptManager.instance.init();
				Laya.stage.scaleMode=GameConfig.scaleMode;
				Laya.stage.screenMode=GameConfig.screenMode;
				Laya.stage.alignV=GameConfig.alignV;
				Laya.stage.alignH=GameConfig.alignH;
				URL.exportSceneToJson=GameConfig.exportSceneToJson;
				UiManager.init();
				if (GameConfig.debug || Utils.getQueryString("debug")=="true")Laya.enableDebugPanel();
				if (GameConfig.physicsDebug && Laya["PhysicsDebugDraw"])Laya["PhysicsDebugDraw"].enable();
				if (GameConfig.stat)Stat.show();
				Laya.alertGlobalError=true;
				GameInit.instance.init();
				MouseManager.multiTouchEnabled=true;
				this.initENV();
				if (ENV.showDebugPanel){
					if (0===0){
						Stat.show();
					}
				}
				Laya.alertGlobalError=ENV.isAlertGlobalError;
				SoundManager.setMusicVolume(0.5);
				SoundManager.setSoundVolume(0.5);
				if (!WxC.isInMiniGame()){
					SoundManager.useAudioMusic=false;
					this.initFont();
				}
				if (WxC.isInMiniGame()){
					LoadPageUI.uiView=WxLoadPageUI.uiView;
					this.onVersionLoaded();
					}else if (StartParam.instance.getParam("platform")&& StartParam.instance.getParam("platform")=="yyly"){
					this.onVersionLoaded();
					}else if (StartParam.instance.getParam("platform")&& StartParam.instance.getParam("platform")=="cocos"){
					URL.basePath="https://cdn-byh5.jjhgame.com/byh5client_stage_3d/";
					this.onVersionLoaded();
				}
				else{
					console.log("h5version",StartParam.instance.getParam("version"));
					ResourceVersion.enable(StartParam.instance.getParam("version"),Handler.create(this,this.onVersionLoaded),ResourceVersion.FILENAME_VERSION);
				}
			}
			onVersionLoaded(){
				UiManager.instance.loadView("Load");
				}initENV(){
				var api=GameTools.getUrlParamValue("api_domain");
				if (api){
					ApiManager.instance.API_URL=api;
					}else{
					ApiManager.instance.API_URL=ENV.API_DOMAIN;
					ApiManager.instance.API_PORT="";
				}
				if (WxC.isInMiniGame()){
					if (StartParam.instance.getParam("env")=="prod"){
						URL.basePath="https://cdn-byh5.jjhgame.com/byh5client_stage_3d/";
					}
					else{
						console.log("微信小游戏env，需要为PROD_ENV");
					}
				}
				}initFont(){
				var fonts=this.getFontArr();
				this.stupidLoadTTF(fonts);
				Text.defaultFont=fonts[0];
				}getFontArr(){
				return ["font_zh_fzcy"]
				}stupidLoadTTF(arr){
				for (var i=0;i < arr.length;i++){
					var font=arr[i];
					var text=new Text();
					text.fontSize=10;
					text.color="#FF00FF";
					text.text="1";
					text.font=font;
					text.pos(-1000,-600);
					Laya.stage.addChild(text);
				}
			}
		}

		Laya.Main=Main;	window.manager={};

		class AnimalManger{
			constructor (){
				//this.animalName=null;
				//this._ani=null;
				//this.data=null;
				//this.fishani=null;
			}
			//通过动画的名字得到动画对应的类
			loadAnimation(name){
				this._ani=new Animation();
				return this._ani.loadAtlas("res/atlas/ani/"+name+".atlas");
				Loader.getAtlas("res/atlas/ani/"+name+".atlas");
				}load(name){
				this.data=ConfigManager.getConfObject("cfg_anicollision",name);
				this._ani=new Animation();
				this.fishani=this._ani.loadImages(this.aniUrls(this.data.anilength));
				this.fishani.interval=this.data.aniSpeed;
				return this.fishani;
				}loadAni(name,pngName,length){
				this._ani=new Animation();
				return this._ani.loadImages(this.aniUrls(length));
				}loadAniFrames(name){
				this.data=ConfigManager.getConfObject("cfg_anicollision",name);
				return Animation.createFrames(this._ani.loadImages(this.aniUrls(this.data.anilength)),null);
				}aniUrls(length){
				var urls=[];
				for (var i=1;i <=length;i++){
					urls.push(this.data.aniPath+i+".png");
				}
				return urls;
			}
			get Res (){
				var arr=[];
				return null;
			}
			static get instance (){
				return AnimalManger._instance || (AnimalManger._instance=new AnimalManger());
			}
		}

		manager.AnimalManger=Laya.AnimalManger=AnimalManger;
		AnimalManger._instance=null;	

		/**
		*...
		*@author peter
		*/
		class ApiManager{
			constructor (){
				//this.API_URL=null;
				//this.API_PORT=null;
				//this._handler=null;
				//this._handlerTwo=null;
			}
			base_request(url,params,method,cb){
				var request=new HttpRequest();
				var FULL_URL="";
				var preStr="";
				if (this.API_URL.substr(0,6)!="https:"){
					preStr="https://";
				}
				if (this.API_PORT && this.API_PORT.length > 0){
					FULL_URL=preStr+this.API_URL+":"+this.API_PORT+url;
					}else{
					FULL_URL=preStr+this.API_URL+url;
				}
				request.send(FULL_URL,params,method,'json');
				request.once(Event.COMPLETE,this,function(data){
					cb(request.data);
				});
				return null;
				}basehttp(url,params,method,handler,handlerTwo){
				this._handler=handler;
				this._handlerTwo=handlerTwo;
				var request=new HttpRequest();
				var FULL_URL="";
				var preStr="";
				if (this.API_URL.substr(0,6)!="https:"){
					preStr="https://";
				}
				if (this.API_PORT && this.API_PORT.length > 0){
					FULL_URL=preStr+this.API_URL+":"+this.API_PORT+url;
					}else{
					FULL_URL=preStr+this.API_URL+url;
				}
				request.send(FULL_URL,params,method,'json');
				request.once(Event.COMPLETE,this,this.complete,[handler]);
				request.once(Event.ERROR,this,this.error);
				}basehttpts(url,params,method,handler,handlerTwo){
				this._handler=handler;
				this._handlerTwo=handlerTwo;
				var request=new HttpRequest();
				var FULL_URL="";
				var preStr="";
				if (ENV.MINI_API_URL.substr(0,6)!="https:"){
					preStr="https://";
				}
				if (this.API_PORT && this.API_PORT.length > 0){
					FULL_URL=preStr+"https://tby-api.jjhgame.com"+":"+this.API_PORT+url;
					}else{
					FULL_URL=preStr+"https://tby-api.jjhgame.com"+url;
				}
				request.send(FULL_URL,params,method,'json');
				request.once(Event.COMPLETE,this,this.complete,[handler]);
				request.once(Event.ERROR,this,this.error);
				}error(msg){
				if (this._handlerTwo !=null){
					this._handlerTwo.runWith(msg);
				}
				}complete(handler,msg){
				handler.runWith(msg);
				}get_rank_list(token,cb){
				var r_url="/collect/top";
				var method="post";
				var params="access_token="+token;
				this.base_request(r_url,params,method,cb);
				return null;
				}get_announce(type,cb,cc=null,server_name=0){
				var r_url="/collect/announce";
				var method="post";
				var params="game_key=2d65b80bdb3f91cf30715258017d8343&type="+type+"&server_name="+server_name+"&provider_id="+StartParam.instance.getParam("provider_id");
				this.basehttp(r_url,params,method,cb,cc);
				return null;
				}readPrivacyAgreement(access_token,cb,cc=null){
				var r_url="/foreign/read_privacy_agreement";
				var method="post";
				var params="access_token="+access_token;
				this.basehttp(r_url,params,method,cb,cc);
				return null;
				}getPrivacyAgreement(h1,h2=null){
				var r_url="/foreign/privacy_agreement";
				var method="get";
				var params="";
				this.basehttpts(r_url,params,method,h1,h2);
				return null;
				}login(params,cb){
				var r_url="/collect/user/third_login";
				var method="post";
				this.base_request(r_url,params,method,cb);
				}wxminiLogin(params,cb,errorCb){
				var r_url="/wxmini_login_v2";
				var method="post";
				this.basehttp(r_url,params,method,cb,errorCb);
				}exchangeList(access_token,coin_type,cb){
				var r_url="/collect/exchange_item?access_token="+access_token+"&coin_type="+coin_type;
				var method="get";
				this.base_request(r_url,{},method,cb);
				}exchange(access_token,item_id,phone,h1,h2){
				var r_url="/collect/exchange";
				var method="post";
				var params="access_token="+access_token+"&item_id="+item_id+"&phone="+phone;
				this.basehttp(r_url,params,method,h1,h2);
				}shareInfo(access_token,h1,h2){
				var params="access_token="+access_token;
				var r_url="/collect/wxmini/shared_info?"+params;
				var method="get";
				this.basehttp(r_url,"",method,h1,h2);
				}getShareInfo(access_token,inviteId,h1,h2){
				var r_url="/collect/wxmini/share_invite";
				var method="post";
				var params="access_token="+access_token+"&invite_user_uid="+inviteId;
				this.basehttp(r_url,params,method,h1,h2);
				}exchangeRecords(access_token,coin_type,h1,h2){
				var r_url="/collect/exchange_record";
				var method="post";
				var params="access_token="+access_token+"&coin_type="+coin_type;
				this.basehttp(r_url,params,method,h1,h2);
				}queryUserName(access_token,uid,h1,h2){
				var r_url="/collect/find_user";
				var method="post";
				var params="access_token="+access_token+"&uid="+uid;
				this.basehttp(r_url,params,method,h1,h2);
				}userSubscribe(access_token,tpls,h1,h2){
				var r_url="/foreign/subscribe/user";
				var method="post";
				var params="access_token="+access_token+"&tpls="+tpls;
				this.basehttp(r_url,params,method,h1,h2);
				}giftList(access_token,page,h1,h2){
				var params="access_token="+access_token+"&page="+page;
				var r_url="/collect/send_list?"+params;
				var method="get";
				this.basehttp(r_url,"",method,h1,h2);
				}get_user_sub(access_token,h1,h2){
				var params="access_token="+access_token;
				var r_url="/foreign/subscribe/user_tpl?"+params;
				var method="get";
				this.basehttp(r_url,"",method,h1,h2);
				}get_boom_top(access_token,activity_id,h1,h2){
				var params="activity_id="+activity_id+"&access_token="+access_token;
				var r_url="/collect/activity/bomb_top?"+params;
				var method="get";
				this.basehttp(r_url,"",method,h1,h2);
				}paymentOrder(access_token,amount,res_code,res_msg,h1,h2){
				var r_url="/collect/wxmini/payment_order";
				var method="post";
				var params="access_token="+access_token+"&amount="+amount+"&res_code="+res_code+"&res_msg="+res_msg;
				this.basehttp(r_url,params,method,h1,h2);
				}getPaymentIslimit(access_token,h1,h2){
				var r_url="/collect/wxmini/payment_limit";
				var method="POST";
				var params="access_token="+access_token;
				this.basehttp(r_url,params,method,h1,h2);
				}getGoldExchangeLimit(access_token,h1,h2){
				var r_url="/collect/exchange_limit";
				var method="POST";
				var params="access_token="+access_token;
				this.basehttp(r_url,params,method,h1,h2);
				}get_match_list(access_token,h1,h2){
				var params="access_token="+access_token;
				var r_url="/contest/get_contest_user?access_token="+access_token;
				var method="get";
				this.basehttp(r_url,params,method,h1,h2);
				}getFeedBack(access_token,content,h1,h2){
				var r_url="/feedback";
				var method="POST";
				var params="access_token="+access_token+"&content="+content;
				this.basehttp(r_url,params,method,h1,h2);
				}get_contest_daily_rank_list(access_token,contest_id,h1,h2){
				var params="access_token="+access_token+"&contest_id="+contest_id;
				var r_url="/contest/daily_top?"+params;
				var method="get";
				this.basehttp(r_url,params,method,h1,h2);
				}get_not_receive_reward(access_token,h1,h2){
				var params="access_token="+access_token;
				var r_url="/contest/get_not_receive_reward?"+params;
				var method="get";
				this.basehttp(r_url,params,method,h1,h2);
				}yylyLogin(params,cb,errorCb){
				var r_url="/yyly_login";
				var method="post";
				this.basehttp(r_url,params,method,cb,errorCb);
				}cocosLogin(params,cb,errorCb){
				var r_url="/foreign/cocos_login";
				var method="post";
				this.basehttp(r_url,params,method,cb,errorCb);
				}get_game_jump_list(h1,h2){
				var r_url="/foreign/game_jump_list";
				var method="get";
				this.basehttp(r_url,"",method,h1,h2);
				}getRedPack(access_token,h1,h2){
				var params="&access_token="+access_token;
				var r_url="/foreign/public_no/red_pack?"+params;
				var method="get";
				this.basehttp(r_url,"",method,h1,h2);
				}saveUserInfo(access_token,nickname,avatar,h1,h2){
				var params="access_token="+access_token+"&nickname="+nickname+"&avatar="+avatar;
				var r_url="/foreign/save_user_info?"+params;
				var method="post";
				this.basehttp(r_url,params,method,h1,h2);
				}getSearchFriend(access_token,to_user_id,h1,h2){
				var params="access_token="+access_token+"&to_user_id="+to_user_id;
				var r_url="/foreign/friend/search_friend?"+params;
				var method="get";
				this.basehttp(r_url,params,method,h1,h2);
				}getAddFriend(access_token,to_user_id,to_msg,h1,h2){
				var params="access_token="+access_token+"&to_user_id="+to_user_id+"&to_msg="+to_msg;
				var r_url="/foreign/friend/add_friend?"+params;
				var method="post";
				this.basehttp(r_url,params,method,h1,h2);
				}deleteFriend(access_token,to_user_id,h1,h2){
				var params="access_token="+access_token+"&to_user_id="+to_user_id;
				var r_url="/foreign/friend/delete_friend?"+params;
				var method="post";
				this.basehttp(r_url,params,method,h1,h2);
				}updateRemark(access_token,remark,h1,h2){
				var params;
				if (remark){
					params="access_token="+access_token+"&remark="+remark;
					}else{
					params="access_token="+access_token;
				};
				var r_url="/foreign/friend/update_remark?"+params;
				var method="post";
				this.basehttp(r_url,params,method,h1,h2);
				}updateFriendRelation(access_token,status,is_all,update_user_id,h1,h2){
				if (update_user_id){
					var params="access_token="+access_token+"&status="+status+"&is_all="+is_all+"&update_user_id="+update_user_id;
					}else{
					var params="access_token="+access_token+"&status="+status+"&is_all="+is_all;
				};
				var r_url="/foreign/friend/update_friend_relation?"+params;
				var method="post";
				this.basehttp(r_url,params,method,h1,h2);
			}
			static get instance (){
				return ApiManager._instance || (ApiManager._instance=new ApiManager());
			}
		}

		manager.ApiManager=Laya.ApiManager=ApiManager;
		ApiManager._instance=null;	

		class BaseView{
			constructor (){
				//this._panel=null;
				//this._caches=null;
				//this._name=null;
				this.isShow=false;
				//this._type=null;
				this._caches=new Object();
			}
			creatPanel(panel,parm,name){
				var arr=panel.prototype.constructor["name"].split('.');
				this._name=arr[arr.length-1];
				var uiShowing=false;
				this._panel=(this._caches[this._name] || new panel());
				this._caches[this._name]=this._panel;
				if (this._panel.parent){
					uiShowing=this._panel.visible;
					this._panel.visible=true;
					}else{
					this._panel.name=name;
					Laya.stage.addChild(this._panel);
				}
				if (!uiShowing){
					this.showEffenct(this.EffectType);
					this._panel.StartGames(parm);
					this._panel.register();
				}
				else{
					GameEventDispatch.instance.event("RightWait");
				}
			}
			//GameEventDispatch.instance.event(GameEvent.CloseWait);
			start(){
				GameEventDispatch.instance.event("CloseWait");
				}showEffenct(type){
				if (this._panel !=null){
					if (type=="SMALL_TO_BIG"){
						this._panel.pivotX=Laya.stage.mouseX;
						this._panel.pivotY=Laya.stage.mouseY;
						this._panel.x=Laya.stage.mouseX;
						this._panel.y=Laya.stage.mouseY;
						this._panel.scaleX=0;
						this._panel.scaleY=0;
						GameEventDispatch.instance.event("CloseWait");
						Tween.to(this._panel,{scaleX:1.05,scaleY:1.05},300,null,Handler.create(this,this.showComplete));
						}else if(type=="Normal"){
						this._panel.pivotX=Laya.stage.mouseX;
						this._panel.pivotY=Laya.stage.mouseY;
						this._panel.x=Laya.stage.mouseX;
						this._panel.y=Laya.stage.mouseY;
						this._panel.scaleX=1;
						this._panel.scaleY=1;
						GameEventDispatch.instance.event("CloseWait");
						}else{
						GameEventDispatch.instance.event("RightWait");
					}
				}
				}showComplete(){
				Tween.to(this._panel,{scaleX:1,scaleY:1},250);
			}
			//隐藏界面
			hide(){
				if (this._panel !=null){
					if (this._panel.visible==true){
						this._panel.visible=false;
						this._panel.unRegister();
					}
				}
				}showUi(){
				if (this._panel !=null){
					Tween.to(this._panel,{scaleX:1,scaleY:1},300);
				}
			}
			//移除界面
			removie(){
				if (this._panel !=null){
					this._panel.removeSelf();
					this._panel.unRegister();
				}
			}
			//调整该界面的层级
			setPanelBaseDepth(depth){
				if (this._panel !=null){
					this._panel.zOrder=depth;
				}
			}
			get EffectType (){
				return this._type;
			}
			set EffectType (type){
				this._type=type;
			}
		}

		manager.BaseView=Laya.BaseView=BaseView;	

		class ConfigManager{
			constructor (){}
			static getConfigPath (){
				if (WxC.isInMiniGame()){
					return StartParam.instance.getParam("config_version");
				}
				return ConfigManager.allConfigPath;
			}
			static getClazzBySheetName (sheetName){
				return manifest.cfg_names[sheetName]
			}
			static getConfBySheet (sheetName){
				return ConfigManager.sheet_cache[sheetName];
			}
			static init (){
				var dicRes;
				if (WxC.isInMiniGame()){
					dicRes=Laya.loader.getRes(StartParam.instance.getParam("config_version"));
				}
				else{
					dicRes=Laya.loader.getRes(ConfigManager.allConfigPath);
				}
				for (var sheetName in manifest.cfg_names){
					var a={};
					var sheetDicRes=dicRes[sheetName];
					var cfg=ConfigManager.getClazzBySheetName(sheetName);
					for (var key in sheetDicRes){
						a[key]=cfg.init(sheetDicRes[key]);
					}
					ConfigManager.sheet_cache[sheetName]=a;
				}
			}
			static getConfObject (sheetName,id){
				return ConfigManager.sheet_cache[sheetName][id];
			}
			static getConfValue (sheetName,id,name){
				return ConfigManager.sheet_cache[sheetName][id][name];
			}
			static items (cfg_name){
				var cfgs=ConfigManager.sheet_cache[cfg_name];
				var arr=[];
				for (var i in cfgs){
					arr.push(cfgs[i]);
				}
				return arr
			}
			static filter (cfg_name,func,func_sort=null){
				var items=manager.ConfigManager.items(cfg_name);
				if (!func){
					return items;
				};
				var arr=[];
				for (var i in items){
					if (func(items[i])){
						arr.push(items[i]);
					}
				}
				if (func_sort){
					arr.sort(func_sort);
				}
				return arr
			}
			static groupby (cfg_name,field){
				var items=manager.ConfigManager.items(cfg_name);
				var d={};
				for (var i in items){
					var item=items[i];
					var value=item[field];
					if (d[value]===undefined){
						d[value]=[];
					}
					d[value].push(item);
				}
				return d;
			}
		}

		manager.ConfigManager=Laya.ConfigManager=ConfigManager;
		ConfigManager.allConfigPath="res/config/config.json";
		ConfigManager.allConfigPathMini="res/config/config.json";
		ConfigManager.sheet_cache={};	

		class FishAniManager{
			constructor (){
				//this.animalName=null;
				//this._ani=null;
				//this.data=null;
				//this.fishani=null;
			}
			//通过动画的名字得到动画对应的类
			loadAnimation(name){
				this._ani=new GameAnimation();
				return this._ani.loadAtlas("res/atlas/ani/"+name+".atlas");
				Loader.getAtlas("res/atlas/ani/"+name+".atlas");
				}load(name){
				this.data=ConfigManager.getConfObject("cfg_anicollision",name);
				this._ani=new GameAnimation();
				this.fishani=this._ani.loadImages(this.aniUrls(this.data.anilength));
				this.fishani.interval=this.data.aniSpeed;
				return this.fishani;
				}loadAni(name,pngName,length){
				this._ani=new GameAnimation();
				return this._ani.loadImages(this.aniUrls(length));
				}loadAniFrames(name){
				this.data=ConfigManager.getConfObject("cfg_anicollision",name);
				return GameAnimation.createFrames(this._ani.loadImages(this.aniUrls(this.data.anilength)),null);
				}aniUrls(length){
				var urls=[];
				for (var i=1;i <=length;i++){
					urls.push(this.data.aniPath+i+".png");
				}
				return urls;
			}
			get Res (){
				var arr=[];
				return null;
			}
			static get instance (){
				return FishAniManager._instance || (FishAniManager._instance=new FishAniManager());
			}
		}

		manager.FishAniManager=Laya.FishAniManager=FishAniManager;
		FishAniManager._instance=null;	

		class GameConst{
			constructor(){}
		}

		manager.GameConst=Laya.GameConst=GameConst;
		GameConst.handshake_ok=200;
		GameConst.handshake_illegal=301;
		GameConst.handshake_new=404;
		GameConst.playercreate_ok=0;
		GameConst.playercreater_ename=1;
		GameConst.fight_get_in_in_room=2;
		GameConst.fight_get_in_fail=1;
		GameConst.fight_get_in_ok=0;
		GameConst.fight_get_in_cost_max=4;
		GameConst.fishmaxlayer=40;
		GameConst.fish_type_size_group=0;
		GameConst.fish_type_size_small=1;
		GameConst.fish_type_size_middle=2;
		GameConst.fish_type_size_big=3;
		GameConst.fish_type_size_boss=4;
		GameConst.fish_group_type_left_to_right=0;
		GameConst.fish_group_type_path=1;
		GameConst.fish_fit_rnd_none=0;
		GameConst.fish_fit_rnd_once=1;
		GameConst.fish_fit_rnd_cfg=2;
		GameConst.fish_fit_rnd_cfg_once=3;
		GameConst.fish_fit_rnd_everyone=4;
		GameConst.fish_play_type_none=0;
		GameConst.fish_play_type_local_bomb=1;
		GameConst.fish_play_type_screen_bomb=2;
		GameConst.fish_play_type_dasanyuan=3;
		GameConst.fish_play_type_fish_type_bomb=4;
		GameConst.fish_play_type_energy=5;
		GameConst.fish_play_type_dasixi=6;
		GameConst.fish_play_type_yiwangdajin=7;
		GameConst.area_play_type_max_num=15;
		GameConst.draw_collision_rect=false;
		GameConst.currency_coin=1;
		GameConst.currency_fish_coin=2;
		GameConst.currency_exp=3;
		GameConst.currency_diamond=4;
		GameConst.currency_rmb=5;
		GameConst.currency_goods=6;
		GameConst.currency_contest_score=201;
		GameConst.currency_exchange=60;
		GameConst.currency_bind_coin=10;
		GameConst.server_mode=0;
		GameConst.main_edit_menu_show=false;
		GameConst.fix_left_down_pos=true;
		GameConst.show_fish_swim_path_id=false;
		GameConst.fish_path_mirror_none=1;
		GameConst.fish_path_mirror_x=2;
		GameConst.fish_path_mirror_y=3;
		GameConst.fish_path_mirror_xy=4;
		GameConst.skill_type_freeze=1;
		GameConst.skill_type_lock=2;
		GameConst.skill_type_call=3;
		GameConst.skill_type_violent=4;
		GameConst.skill_type_boom=5;
		GameConst.skill_type_auto=6;
		GameConst.lock_effect_layer_index=0;
		GameConst.boom_effect_layer_index=1;
		GameConst.bullet_layer_index=2;
		GameConst.award_effect_layer_index=3;
		GameConst.catch_show_layer_index=4;
		GameConst.boom_mask_layer_index=40 *2-2;
		GameConst.use_res_release_skill=5;
		GameConst.sign_in_getted=0;
		GameConst.sign_in_getting=2;
		GameConst.sign_in_not_reach=3;
		GameConst.fish_catch_type_normal=0;
		GameConst.fish_catch_type_extra_drop=1;
		GameConst.fish_catch_type_boss=2;
		GameConst.fish_catch_type_black_hole=3;
		GameConst.fish_catch_type_award_pool=4;
		GameConst.online_award_status_getted=1;
		GameConst.online_award_status_start=2;
		GameConst.online_award_status_not_start=3;
		GameConst.quit_state_left_confirm_right_cancel=0;
		GameConst.quit_state_left_cancel_right_confirm=1;
		GameConst.quit_state_mid_confirm=2;
		GameConst.quit_state_left_cancel_right_confirm_rank=4;
		GameConst.quit_state_mid_confirm_subscibe=5;
		GameConst.shop_tab_diamond="tab_diamond";
		GameConst.shop_tab_coin="tab_coin";
		GameConst.shop_tab_skin="tab_skin";
		GameConst.shop_tab_package="tab_package";
		GameConst.shop_tab_mini="tab_mini";
		GameConst.shop_tab_mini_coin="tab_mini_coin";
		GameConst.sceneId_1=1;
		GameConst.reconnect_type_other_device_login=1;
		GameConst.reconnect_type_kick=2;
		GameConst.reconnect_type_socket_error=3;
		GameConst.reconnect_type_server_error=4;
		GameConst.reconnect_type_user_check_error=5;
		GameConst.reconnect_type_network_error=6;
		GameConst.reconnect_admin_kick=7;
		GameConst.point_new_task_finish=1;
		GameConst.point_online_reward=2;
		GameConst.point_weapon=4;
		GameConst.point_sign=8;
		GameConst.point_first_charge=16;
		GameConst.point_vip_buy=32;
		GameConst.point_month_card=64;
		GameConst.point_gift=128;
		GameConst.point_rank=8192;
		GameConst.ani_type_frame=0;
		GameConst.ani_type_skeleton=1;
		GameConst.ani_type_3d=2;
		GameConst.shoot_bullet_fail_action_sub_allow=1;
		GameConst.shoot_bullet_fail_action_open_shop=2;
		GameConst.default_sound=0.5;
		GameConst.default_bgm_music=0.5;
		GameConst.in_fight_normal=0;
		GameConst.in_fight_by=1;
		GameConst.scene_play_extra_drop=1;
		GameConst.scene_play_money_bag=2;
		GameConst.scene_play_black_hole=3;
		GameConst.scene_play_award_pool=4;
		GameConst.Dec_Active=21;
		GameConst.server_local=true;
		GameConst.edition_department_version=true;
		GameConst.design_width=1280;
		GameConst.design_height=720;
		GameConst.atuoFire=0;
		GameConst.noAutoFire=1;
		GameConst.oPauseAutoFire=2;
		GameConst.appid="wxeb898598bd6698dd";
		GameConst.jumpLink="http://cdn.597w.com/shareprod";
		GameConst.loadMainState=0;
		GameConst.loadFishState=1;
		GameConst.FISH_PAGE="fish_page";
		GameConst.MAIN_PAGE="main_page";
		GameConst.activity_bomb='bomb';
		GameConst.activity_bonus='bonus';
		GameConst.activity_worldcup='worldcup2';
		GameConst.activity_wheel='turntable';
		GameConst.activity_common='multi_at';
		GameConst.activity_rank='top_double';
		GameConst.activity_red_pack='red_pack';
		GameConst.activity_common_shop=1;
		GameConst.activity_common_rew=2;
		GameConst.activity_common_daymatch=3;
		GameConst.activity_common_register=4;
		GameConst.activity_common_share=5;
		GameConst.activity_common_since=6;
		GameConst.activity_common_directchanges=101;
		GameConst.activity_common_giftbox=102;
		GameConst.activity_common_rankactivity=103;
		GameConst.activity_common_main_rank=105;
		GameConst.activity_common_main_daily_gift=106;
		GameConst.activity_common_main_match=107;
		GameConst.activity_currency_one=81;
		GameConst.activity_currency_two=82;
		GameConst.activity_currency_three=83;
		GameConst.coin_type_exchange="exchange_card";
		GameConst.coin_type_activity="at_coin";
		GameConst.coin_type_worldcup="worldcup";
		GameConst.coin_type_wheel="zbwk_coin";
		GameConst.scene_resource_coin=1;
		GameConst.scene_resource_contest_coin=2;
		GameConst.contest_daily_scene_id=5;
		GameConst.contest_tz_scene_id=6;
		GameConst.contest_match_scene_id=7;
		GameConst.contest_qd_scene_id=8;
		GameConst.platform="h5";
		GameConst.platform_h5="h5";
		GameConst.platform_wx_sg="wx_gs";
		GameConst.platform_wx=1;
		GameConst.platform_not_wx=2;
		GameConst.public_no_id_none=0;
		GameConst.public_no_id_jjh=1;
		GameConst.public_no_id_jjhh5=2;
		GameConst.public_no_id_ljby=3;
		GameConst.month_card_id=18;
		GameConst.week_card_id=41;
		GameConst.worldcup_battery_id=9;
		GameConst.show_died=0x20;
		GameConst.show_banner=0x08;
		GameConst.start_scene_pull=1104;
		GameConst.start_scene_collect=1103;
		GameConst.user_status_normal="normal";
		GameConst.user_status_ban="ban";
		GameConst.user_status_limited="limited";
		GameConst.novice_guide_click="click";
		GameConst.novice_guide_fight="fight";
		GameConst.novice_guide_shoot="shoot";
		GameConst.novice_guide_slider="slider";
		GameConst.novice_guide_new="new";
		GameConst.novice_guide_acceptNew="acceptNew";
		GameConst.novice_guide_quitNew="quitNew";
		GameConst.novice_guide_daily="daily";
		GameConst.novice_guide_daily_go="dailyGo";
		GameConst.novice_guide_daily_use_prop="dailyUseProp";
		GameConst.novice_guide_daily_accept="acceptDaily";
		GameConst.novice_guide_quitDaily="quitDaily";
		GameConst.novice_guide_unlockBattery="unlockBattery";
		GameConst.novice_guide_changeBattery="changeBattery";
		GameConst.platform_yyly="yyly";
		GameConst.platform_360="360h5";
		GameConst.platform_yawy="yawy";
		GameConst.platform_aiqiyi="aiqiyi";
		GameConst.platform_cocos="cocos";
		GameConst.platform_android_baidu="baidu";
		GameConst.platform_android_huawei="huawei";
		GameConst.platform_android_360="360";
		GameConst.platform_android_app="app";
		GameConst.platform_android_meizu="meizu";
		GameConst.platform_android_yyb="yyb";
		GameConst.platform_android_aiqiyi="aiqiyi";
		GameConst.platform_android_xiaomi="xiaomi";
		GameConst.platform_android_ali="ali";
		GameConst.platform_android_quick="quick";
		GameConst.novice_guide_slider_contest="slider_to_contest";
		GameConst.novice_guide_open_contest_icon="open_contest_icon";
		GameConst.novice_guide_sign_contest="sign_contest";
		GameConst.novice_guide_sign_contest_confirm="sign_contest_confirm";
		GameConst.novice_guide_rank="rank";
		GameConst.novice_guide_quitRank="rankQuit";
		GameConst.novice_guide_quitFight="quitFight";
		GameConst.novice_guide_open_follow="openFollow";
		GameConst.font_red="red";
		GameConst.font_red_sheet="取出立即购买获得消确定继 续搜索同意拒绝复制升级解 锁游戏领前往充放置全部加 入房间重抽报名免费";
		GameConst.font_green="green";
		GameConst.font_green_sheet="存入取消查看确定装备邀请 一键升级返回大厅反馈分享 礼包码炫耀下领奖励提交开 启使用完成布置规则询赠送 购买个观看广告订阅兑换全 部";
		GameConst.wxSDKVersion="2.0.6";
		GameConst.from_login="login";
		GameConst.from_shop="shop";
		GameConst.from_main="main";
		GameConst.from_month="month";
		GameConst.from_gift="Gift";
		GameConst.from_bank="bank";
		GameConst.from_quick_register="quick_register";
		GameConst.from_certifucation="certifucation";
		GameConst.shield_status=3;
		GameConst.reject_status=2;
		GameConst.agree_status=1;
		Laya.static(GameConst,
		['fixed_update_time',function(){return this.fixed_update_time=(1 / 50);}
		]);	

		class GameEvent{
			constructor(){}
		}

		manager.GameEvent=Laya.GameEvent=GameEvent;
		GameEvent.ReceiveHandshake="ReceiveHandshake";
		GameEvent.ReceiveSGHandshake="ReceiveSGHandshake";
		GameEvent.WsClose="WsClose";
		GameEvent.SGWsClose="SGWsClose";
		GameEvent.WsError="WsError";
		GameEvent.SGWsError="SGWsError";
		GameEvent.WsOpen="WsOpen";
		GameEvent.FightStart="FightStart";
		GameEvent.FightStop="FightStop";
		GameEvent.ParseFishData="ParseFishData";
		GameEvent.NewBullet="NewBullet";
		GameEvent.OnlineBullet="OnlineBullet";
		GameEvent.UpdateProfile="UpdateProfile";
		GameEvent.FightPlayerUpdate="FightPlayerUpdate";
		GameEvent.FightCoinUpdate="FightCoinUpdate";
		GameEvent.ShowGetGoodsEffect="ShowGetCoinEffect";
		GameEvent.QuitTip="QuitTip";
		GameEvent.MsgTip="MsgTp";
		GameEvent.MsgTipContent="MsgTipContent";
		GameEvent.BatteryUpgrade="BatteryUpgrade";
		GameEvent.FishTypeC="FishTypeC";
		GameEvent.RewardFish="RewardFish";
		GameEvent.RefreshTaskNew="RefreshTaskNew";
		GameEvent.RefreshTaskDaily="RefreshTaskDaily";
		GameEvent.RefreshTaskDailyTotal="RefreshTaskDailyTotal";
		GameEvent.FinishTaskDaily="FinishTaskDaily";
		GameEvent.FinishTaskNew="FinishTaskNew";
		GameEvent.Shop="Shop";
		GameEvent.ShopBuy="ShopBuy";
		GameEvent.ShopRefresh="ShopRefresh";
		GameEvent.ChangeSkin="ChangeSkin";
		GameEvent.ZhenFan="ZhenFan";
		GameEvent.TypeChange="TypeChange";
		GameEvent.LevelC="LevelC";
		GameEvent.RewardTip="RewardTip";
		GameEvent.HourseC="HourseC";
		GameEvent.BatteryBuyRet="BatteryBuyRet";
		GameEvent.EnterFightPage="EnterFightPage";
		GameEvent.BuffUpdate="BuffUpdate";
		GameEvent.He="He";
		GameEvent.PlayCard="PlayCard";
		GameEvent.SkillUpdate="SkillUpdate";
		GameEvent.GoodsUpdate="GoodsUpdate";
		GameEvent.ViolentUpdate="ViolentUpdate";
		GameEvent.BoomSelectUpdate="BoomSelectUpdate";
		GameEvent.SignInUpdate="SignInUpdate";
		GameEvent.OpenGift="OpenGift";
		GameEvent.UpdateFirstCharge="UpdateFirstCharge";
		GameEvent.MonthCardUpdate="MonthCardUpdate";
		GameEvent.OnlineAwardUpdate="OnlineAwardUpdate";
		GameEvent.HorseTipUpdate="HorseTipUpdate";
		GameEvent.ConfirmUseSkill="ConfirmUseSkill";
		GameEvent.ShowGuide="ShowGuide";
		GameEvent.ShowRedPoint="ShowRedPoint";
		GameEvent.ClearRedPoint="ClearRedPoint";
		GameEvent.FinishReward="FinishReward";
		GameEvent.UseGoodsConfirmAndJumpToShop="UseGoodsConfirmAndJumpToShop";
		GameEvent.StartRefersh="StartRefersh";
		GameEvent.SystemReset="SystemReset";
		GameEvent.ShootError="ShootError";
		GameEvent.ClearCoin="ClearCoin";
		GameEvent.StopTime="StopTime";
		GameEvent.HeCLick="HeClick";
		GameEvent.ReturnConfirm="ReturnConfirm";
		GameEvent.LoadUi="LoadUi";
		GameEvent.ShowFishCoin="ShowFishCoin";
		GameEvent.SetFishCoin="SetFishCoin";
		GameEvent.PlayComplete="PlayComplete";
		GameEvent.UpgradeC="UpgradeC";
		GameEvent.CloseRewadTip="CloseRewardTip";
		GameEvent.UpdateGoldPoolInfo="UpdateGoldPoolInfo";
		GameEvent.GetGoldPoolAward="GetGoldPoolAward";
		GameEvent.UpdateTime="UpdataTime";
		GameEvent.ExitLoginView="ExitLoginView";
		GameEvent.ScreenResize="ScreenResize";
		GameEvent.GetCatchShowEffectEndPos="GetCatchShowEffectEndPos";
		GameEvent.UpdateFish="UpdateFish";
		GameEvent.CloseUi="CloseUi";
		GameEvent.GoShop="GoShop";
		GameEvent.lockStart="lockStart";
		GameEvent.stopLock="stopLock";
		GameEvent.OpenMakeUp="OpenMakeUp";
		GameEvent.AutoShootTimeOut="AutoShootTimeOut";
		GameEvent.TestCom="TestCom";
		GameEvent.PlayBossComing="PlayBossComeIn";
		GameEvent.WelcomeGetIn="WelcomeGetIn";
		GameEvent.FishTide="FishComing";
		GameEvent.StartLoad="StartLoad";
		GameEvent.RestInRoom="RestInRoom";
		GameEvent.GiftConfirmFinish="GiftConfirmFinish";
		GameEvent.GiftFinish="GiftFinish";
		GameEvent.ExchangeFinish="ExchangeFinish";
		GameEvent.ActivityExchangeFinish="ActivityExchangeFinish";
		GameEvent.UpdateExchange="UpdateExchange";
		GameEvent.UpdateMiniBalance="UpdateMiniBalance";
		GameEvent.UpdateActivityTicket="UpdateActivityTicket";
		GameEvent.UpdateGoldExchange="UpdateGoldExchange";
		GameEvent.ExitsGame="ExitsGame";
		GameEvent.TestHorse="TestHorse";
		GameEvent.Regic="Regic";
		GameEvent.PlayerCoinChange="PlayerCoinChange";
		GameEvent.GetPaoPos="GetPaoPos";
		GameEvent.SetPaoRotation="SetPaoRotation";
		GameEvent.RefreshLotteryRecord="RefreshLotteryRecord";
		GameEvent.SyncActivityData="SyncActivityData";
		GameEvent.SyncActivityStatus="SyncActivityStatus";
		GameEvent.WxMiniLoginComplete="WxMiniLoginComplete";
		GameEvent.WxCheckSessionOk="WxCheckSessionOk";
		GameEvent.WxCheckSessionFail="WxCheckSessionFail";
		GameEvent.WxMiniGameExit="WxMiniGameExit";
		GameEvent.WxResetLogin="WxResetLogin";
		GameEvent.CloseReset="CloseReset";
		GameEvent.WxGetClipBoard="WxGetClipBoard";
		GameEvent.WxReset="WxReset";
		GameEvent.OpenWait="OpenWait";
		GameEvent.CloseWait="CloseWait";
		GameEvent.BankUpdate="BankUpdate";
		GameEvent.EndBankDeposit="EndBankDeposit";
		GameEvent.SyncBankCoin="SyncBankCoin";
		GameEvent.EndBankTake="EndBankTake";
		GameEvent.EndBankTakeFail="EndBankTakeFail";
		GameEvent.RightWait="RightWait";
		GameEvent.AreaShareSucess="AreaShareSucess";
		GameEvent.EndDailyMatchSign="EndDailyMatchSign";
		GameEvent.EndSnatchMatchSign="EndSnatchMatchSign";
		GameEvent.EndAcceptChallengeMatchReward="EndAcceptMatchReward";
		GameEvent.EndAcceptDailyMatchReward="EndAcceptDailyMatchReward";
		GameEvent.ContestFightStart="ContestFightStart";
		GameEvent.EndUseMonthCard="EndUseMonthCard";
		GameEvent.ScreenShare="ScreenShare";
		GameEvent.ScreenShareComplete="ScreenShareComplete";
		GameEvent.BoomLotteryOne="BoomLotteryOne";
		GameEvent.BoomLotteryTen="BoomLotteryTen";
		GameEvent.WxAppLoginIn="WxAppLoginIn";
		GameEvent.EndAcceptWorldCup="EndAcceptWorldCup";
		GameEvent.EndSyncWorldCupCoin="EndSyncWorldCupCoin";
		GameEvent.EndWorldCupLottery="EndWorldCupLottery";
		GameEvent.FinishChangeSkin="FinishChangeSkin";
		GameEvent.WxSaveShareFile="WxSaveShareFile";
		GameEvent.CloseRegisterPage="CloseRegisterPage";
		GameEvent.StartNoviceGuide="StartNoviceGuide";
		GameEvent.NoviceGuideRefresh="NoviceGuideRefresh";
		GameEvent.FinishNoviceGuideStep="FinishGuide";
		GameEvent.FinishNoviceGuideStep2="FinishGuide";
		GameEvent.NoviceGuideClickBar="NoviceGuideClickBar";
		GameEvent.NoviceGuideUnlockBattery="NoviceGuideUnlockBattery";
		GameEvent.NoviceGuideAcceptTaskNew="NoviceGuideAcceptTaskNew";
		GameEvent.NoviceGuideChangeBattery="NoviceGuideChangeBattery";
		GameEvent.NoviceShoot="NoviceShoot";
		GameEvent.NoviceShootUp="NoviceShootUp";
		GameEvent.NoviceShootMove="NoviceShootMove";
		GameEvent.NoviceGuideShoot="NoviceGuideShoot";
		GameEvent.NoviceSliderContest="NoviceSliderContest";
		GameEvent.NoviceOpenContest="NoviceOpenContest";
		GameEvent.NoviceSignContest="NoviceSignContest";
		GameEvent.NoviceSignContestConfirm="NoviceSignContestConfirm";
		GameEvent.NoviceListChange="NoviceListChange";
		GameEvent.NoviceListFinish="NoviceListFinish";
		GameEvent.CloseNovice="CloseNovice";
		GameEvent.AndroidReturnKey="AndroidReturnKey";
		GameEvent.AppPaySuccess="AppPaySuccess";
		GameEvent.AppOrderCheckOk="AppOrderCheckOk";
		GameEvent.PaoOneReset="PaoOneReset";
		GameEvent.YylyLoginComplete="YylyLoginComplete";
		GameEvent.CocosNativeLoginComplete="CocosLoginComplete";
		GameEvent.BettingSuccess="stcBettingSuccess";
		GameEvent.StcUserGetMoneyPrize="StcUserGetMoneyPrize";
		GameEvent.OnSyncBetData="OnSyncBetData";
		GameEvent.OnEndWorldCupExchange="OnEndWorldCupExchange";
		GameEvent.WheelExchange="WheelExchange";
		GameEvent.WheelStart="WheelStart";
		GameEvent.UpdateWheel="UpdateWheel";
		GameEvent.WheelscoreUpdate="WheelscoreUpdate";
		GameEvent.WheeltipsUpdate="WheeltipsUpdate";
		GameEvent.UpdataWheelMidAutumn="UpdataWheelMidAutumn";
		GameEvent.SyncSubscriptionIco="SyncSubscriptionIco";
		GameEvent.UpdateGiftlist="UpdateGiftlist";
		GameEvent.SubDisabled="SubDisabled";
		GameEvent.ResetSubBtn="ResetSubBtn";
		GameEvent.Closesubpanel="Closesubpanel";
		GameEvent.ActRegister="ActRegister";
		GameEvent.ActCurrency="ActCurrency";
		GameEvent.ActCdk="ActCdk";
		GameEvent.CloseAccount="CloseAccount";
		GameEvent.ExchangeTime="ExchangeTime";
		GameEvent.BatteryRateChagne="BatteryRateChagne";
		GameEvent.ShowAd="ShowAd";
		GameEvent.OnSyncAdWatchRemainTimes="OnSyncAdWatchRemainTimes";
		GameEvent.MatchingGameSynState="MatchingGameSynState";
		GameEvent.MatchingSynRusultMsg="MatchingSynRusultMsg";
		GameEvent.MatchingSynRoomData="MatchingSynRoomData";
		GameEvent.MatchingGameAgainStart="MatchingGameAgainStart";
		GameEvent.SynFindMatchGameData="SynFindMatchGameData";
		GameEvent.isCollect="isCollect";
		GameEvent.LoadMiniAdRes="LoadMiniAdRes";
		GameEvent.syncShortData="syncShortData";
		GameEvent.SyncCertificationInfo="SyncCertificationInfo";
		GameEvent.SynRedData="SynRedData";
		GameEvent.SynTaskCoinData="SynTaskCoinData";
		GameEvent.SynBindCode="SynBindCode";
		GameEvent.UpdateExchangeBtn="UpdateExchangeBtn";
		GameEvent.SynBankBindSuccess="SynBankBindSuccess";
		GameEvent.OpenBankView="OpenBankView";
		GameEvent.SynRankReward="SynRankReward";
		GameEvent.RankAniRefesh="RankAniRefesh";
		GameEvent.OpenSubscibe="OpenSubscibe";
		GameEvent.RefreshVirtualList="RefreshVirtualList";
		GameEvent.UpdateJJHAcInfo="UpdateJJHAcInfo";
		GameEvent.refreshApplyFriendList="refreshApplyFriendList";
		GameEvent.refreshFriendList="refreshFriendList";
		GameEvent.RefreshMatchData="RefreshMatchData";
		GameEvent.CloseOtherBar="CloseOtherBar";
		GameEvent.GetIntoMatchRoom="GetIntoMatchRoom";
		GameEvent.ExchangeInterval="ExchangeInterval";
		GameEvent.UpdFesDailyGift="UpdFesDailyGift";	

		class GameInit{
			constructor (){}
			ModelInit(){
				FriendM.instance;
				RoleInfoM.instance;
				LoginInfoM.instance;
				MsgM.instance;
				QuitM.instance;
				FishTypeM.instance;
				RewardM.instance;
				LevelM.instance;
				RTipM.instance;
				HorseM.instance;
				OnLineM.instance;
				SmallM.instance;
				UpgradeM.instance;
				RuleM.instance;
				CompenM.instance;
				LoginM.instance;
				LoadTipM.instance;
				MatchM.instance;
				ActivityM.instance;
				SubscriptionM.instance;
				AdM.instance;
				}ControlInit(){
				FriendC.instance;
				RoleInfoC.instance;
				LoginInfoC.instance;
				HeartbeatC.instance;
				FightC.instance;
				MsgC.instance;
				QuitC.instance;
				FishTypeC.instance;
				RewardC.instance;
				ShopC.instance;
				TaskC.instance;
				LevelC.instance;
				RTipC.instance;
				HourseC.instance;;
				OnLineC.instance;
				RedpointC.instance;
				UpgradeC.instance;
				RuleC.instance;
				RegiC.instance;
				CompenC.instance;
				LoginC.instance;
				ActivityC.instance;
				BankC.instance;
				MatchC.instance;
				BatteryC.instance;
				NoviceC.instance;
				SubscriptionC.instance;
				AdC.instance;
				WheelC.instance;
				}init(){
				this.ModelInit();
				this.ControlInit();
			}
			static get instance (){
				return GameInit._instance || (GameInit._instance=new GameInit());
			}
		}

		manager.GameInit=Laya.GameInit=GameInit;
		GameInit._instance=null;	

		class GameSoundManager{
			constructor(){}
			static getPlaySoundInterval (url){
				return 0;
			}
			static playSound (url){
				if(StartParam.instance.getParam("stopAllSound")==2){
					SoundManager.stopMusic();
					return;
				};
				var date=new Date();
				if (!GameSoundManager.playInfo[url]){
					SoundManager.playSound(url);
					GameSoundManager.playInfo[url]=date.getTime();
				}
				else{
					if (date.getTime()-GameSoundManager.playInfo[url] >=GameSoundManager.getPlaySoundInterval(url)){
						SoundManager.playSound(url);
						GameSoundManager.playInfo[url]=date.getTime();
					}
					else{
						console.log("skip sound ",GameSoundManager.playInfo[url],date.getTime(),GameSoundManager.getPlaySoundInterval(url));
					}
				}
			}
		}

		manager.GameSoundManager=Laya.GameSoundManager=GameSoundManager;
		Laya.static(GameSoundManager,
		['playInfo',function(){return this.playInfo=new Object();},'soundInterval',function(){return this.soundInterval={
				"music/fish1_1.mp3":5000,
				"music/fish1_2.mp3":5000,
				"music/fish1_3.mp3":5000,
				"music/fish1_4.mp3":5000,
				"music/fish1_5.mp3":5000,
				"music/fish2_1.mp3":5000,
				"music/fish2_2.mp3":5000,
				"music/fish2_3.mp3":5000,
				"music/fish2_4.mp3":5000,
				"music/fish2_5.mp3":5000,
				"music/fish2_6.mp3":5000,
				"music/fish2_7.mp3":5000,
				"music/batteryup.mp3":2000,
				"music/bingdong.mp3":2000,
				"music/bingo.mp3":4000,
				"music/click.mp3":1000,
				"music/kuangbao.mp3":2000,
				"music/levelup.mp3":5000,
				"music/reward.mp3":3000,
				"music/suoding.mp3":4000,
				"music/tide.mp3":2000,
				"music/yulei.mp3":2000,
				"music/zhaohuan.mp3":2000
		};}

		]);	

		class GameTools{
			constructor(){}
			static screenResize (){
				GameTools._screenPosDivideDesignPosWidth=Laya.stage.width / 1280;
				GameTools._screenPosDivideDesignPosHeight=Laya.stage.height / 720;
				GameTools._designPosDivideScreenPosWidth=1280 / Laya.stage.width;
				GameTools._designPosDivideScreenPosHeight=720 / Laya.stage.height;
			}
			static sendHideKeyboard (){
				Browser.window.top.postMessage("hide_keyboard","*");
			}
			static clipTxt (fontClip,txt,color){
				if (color=="red"){
					fontClip.skin="font/word_red.png";
					fontClip.sheet="取出立即购买获得消确定继 续搜索同意拒绝复制升级解 锁游戏领前往充放置全部加 入房间重抽报名免费";
					}else if (color=="green"){
					fontClip.skin="font/word_green.png";
					fontClip.sheet="存入取消查看确定装备邀请 一键升级返回大厅反馈分享 礼包码炫耀下领奖励提交开 启使用完成布置规则询赠送 购买个观看广告订阅兑换全 部";
				}
				fontClip.align="center";
				fontClip.value=txt;
			}
			static copyText (txt){
				if (WxC.isInMiniGame()){
					WxC.wx_set_clipboard_data(txt);
					}else{
					var oInput=Browser.document.createElement('input');
					oInput.setAttribute("readonly","readonly");
					oInput.value=txt;
					Browser.document.body.appendChild(oInput);
					oInput.select();
					if (Browser.document.execCommand("Copy")){
						Browser.document.execCommand("Copy");
					}
					oInput.style.display='none';
					oInput.remove();
				}
			}
			static showTip (txt){
				GameEventDispatch.instance.event("MsgTipContent",txt);
			}
			static getCurTs (){
				var now=new Date().getTime();
				var now_time=Math.floor((now / 1000));
				return now_time
			}
			static copyToClipboard (text){
				copyToClipboard(text);
			}
			static designPosMapScreenPos (pos){
				pos.x=GameTools._screenPosDivideDesignPosWidth *pos.x;
				pos.y=GameTools._screenPosDivideDesignPosHeight *pos.y;
			}
			static designPosXMapScreenPosX (x){
				return GameTools._screenPosDivideDesignPosWidth *x;
			}
			static designPosYMapScreenPosY (y){
				return GameTools._screenPosDivideDesignPosHeight *y;
			}
			static screenPosXMapDesignPosX (x){
				return GameTools._designPosDivideScreenPosWidth *x;
			}
			static screenPosYMapDesignPosY (y){
				return GameTools._designPosDivideScreenPosHeight *y;
			}
			static getRandomNumber (min,max){
				var ret=min+Math.floor(Math.random()*(max-min+1));
				if (ret > max){
					return max;
				}
				return ret;
			}
			static getMinus1_1 (){
				return Math.random()*2-1;
			}
			static CalSinCosSheet (){
				for (var i=0;i < 36000;i++){
					GameTools._sinAngleDic[i]=Math.sin((i / 100)*Math.PI / 180);
					GameTools._cosAngleDic[i]=Math.cos((i / 100)*Math.PI / 180);
				}
			}
			static CalSinBySheet (angle){
				if (angle < 0){
					angle+=360;
					}else if (angle >=360){
					angle-=360;
				}
				angle=Math.ceil(angle *100);
				return GameTools._sinAngleDic[angle];
			}
			static CalCosBySheet (angle){
				if (angle < 0){
					angle+=360;
					}else if (angle >=360){
					angle-=360;
				}
				angle=Math.ceil(angle *100);
				return GameTools._cosAngleDic[angle];
			}
			static CalAcosSheet (){
				for (var i=-10000;i <=10000;i++){
					GameTools._acosAngleDic[i+10000]=Math.acos(i / 10000)*(180 / Math.PI);
				}
			}
			static CalAngleByAcos (acos){
				var tmp=Math.floor(acos *10000+10000);
				return GameTools._acosAngleDic[tmp];
			}
			static CalSqrtSheet (){
				for (var i=0;i <=2000000;i++){
					GameTools._sqrtDic[i]=Math.sqrt(i);
				}
			}
			static CalSqrtBySheet (deltaX,deltaY){
				var powLen=deltaX *deltaX+deltaY *deltaY;
				var rate=1;
				if (powLen <=0){
					return 0;
				}
				if (powLen < 1){
					rate=2000000;
					}else if (powLen < 10){
					rate=200000;
					}else if (powLen < 100){
					rate=20000;
					}else if (powLen < 1000){
					rate=2000;
					}else if (powLen < 10000){
					rate=200;
					}else if (powLen < 100000){
					rate=20;
				}
				powLen=Math.floor(powLen *rate);
				if (GameTools._sqrtDic[powLen]){
					return GameTools._sqrtDic[powLen] / GameTools._sqrtDic[rate];
				}
				return Math.sqrt(powLen);
			}
			static CalAngleByDelta (deltaX,deltaY){
				var length=GameTools.CalSqrtBySheet(deltaX,deltaY);
				if (length < 0){
					return 0;
				};
				var cos=deltaX / length;
				return 0;
			}
			static CalLineAngle (startPos,endPos){
				var deltaX=endPos.x-startPos.x;
				var deltaY=endPos.y-startPos.y;
				if ((deltaY===0)&& (deltaX < 0)){
					return 180;
				};
				var length=GameTools.CalSqrtBySheet(deltaX,deltaY);
				if (length <=0){
					return 0;
				};
				var cos=deltaX / length;
				if (cos <-1){
					cos=-1;
					}else if (cos > 1){
					cos=1;
				};
				var angle=GameTools.CalAngleByAcos(cos);
				if (deltaY < 0){
					angle=360-angle;
				}
				return angle;
			}
			static CalLineAngleP4 (startX,startY,endX,endY){
				var deltaX=endX-startX;
				var deltaY=endY-startY;
				if ((deltaY===0)&& (deltaX < 0)){
					return 180;
				};
				var length=GameTools.CalSqrtBySheet(deltaX,deltaY);
				if (length <=0){
					return 0;
				};
				var cos=deltaX / length;
				var angle=GameTools.CalAngleByAcos(cos);
				if (deltaY < 0){
					angle=360-angle;
				}
				return angle;
			}
			static CalPointLen (startPos,endPos){
				return GameTools.CalSqrtBySheet(endPos.x-startPos.x,endPos.y-startPos.y);
			}
			static CalPointLenP4 (startX,startY,endX,endY){
				return GameTools.CalSqrtBySheet(endX-startX,endY-startY);
			}
			static CalRotatePos4 (center,p1,p3,angle,radius){
				p1.x=GameTools.CalCosBySheet(angle)*radius;
				p1.y=GameTools.CalSinBySheet(angle)*radius;
				p3.x=-p1.x;
				p3.y=-p1.y;
				p1.x+=center.x;
				p1.y+=center.y;
				p3.x+=center.x;
				p3.y+=center.y;
			}
			static CalRotatePos (angle,radius){
				var out=GameTools._calRotatePosOut;
				out.x=GameTools.CalCosBySheet(angle)*radius;
				out.y=GameTools.CalSinBySheet(angle)*radius;
				return out;
			}
			static CalAngleSinCos (angle,outSin,outCos){
				var radian=angle *3.14159 / 180;
				var fishCos=Math.abs(Math.cos(radian));
				var fishSin=Math.abs(Math.sin(radian));
				if (angle > 360){
					fishSin=-fishSin;
					}else if (angle <=0 || angle >=270){
					}else if (angle >=180){
					fishCos=-fishCos;
					}else if (angle >=90){
					fishCos=-fishCos;
					fishSin=-fishSin;
					}else{
					fishSin=-fishSin;
				}
				outSin=fishSin;
				outCos=fishCos;
			}
			static calLinePathInitInfoLikeBoss (pos){
				var sideRand=Math.random();
				var posRand=Math.random();
				var desRand=Math.random();
				var des_x=0;
				var des_y=0;
				var ret=0;
				var halfHeight=Laya.stage.height / 2;
				pos.y=posRand *Laya.stage.height;
				if (sideRand <=0.5){
					des_x=Laya.stage.width;
					}else{
					pos.x=Laya.stage.width;
				}
				if (posRand <=0.5){
					des_y=halfHeight+desRand *halfHeight;
					}else{
					des_y=desRand *halfHeight;
				}
				ret=manager.GameTools.CalLineAngle(pos,new Point(des_x,des_y));
				return ret;
			}
			static calLinePathInitInfoLikeBossP3 (pos,minY,maxY){
				var sideRand=Math.random();
				var posRand=Math.random();
				var desRand=Math.random();
				var des_x=0;
				var des_y=0;
				var ret=0;
				var height=maxY-minY;
				var halfHeight=height / 2;
				pos.y=posRand *height+minY;
				if (sideRand <=0.5){
					des_x=Laya.stage.width;
					}else{
					pos.x=Laya.stage.width;
				}
				if (posRand <=0.5){
					des_y=minY+halfHeight+desRand *halfHeight;
					}else{
					des_y=desRand *halfHeight+minY;
				}
				ret=manager.GameTools.CalLineAngle(pos,new Point(des_x,des_y));
				return ret;
			}
			static GetMirrorPoint (refPos,Pos){
				Pos.x=refPos.x-(Pos.x-refPos.x);
				Pos.y=refPos.y-(Pos.y-refPos.y);
			}
			static IsPointInScreen (pos){
				var maxX=Laya.stage.width;
				var maxY=Laya.stage.height;
				if (pos.x > maxX || pos.x < 0 || pos.y < 0 || pos.y > maxY){
					return false;
				}
				return true;
			}
			static getItemCoinStr (coin){
				var a=""+coin;
				if (coin > 100000){
					a=coin / 10000+"万";
				}
				return a;
			}
			static getCoinStr (coin){
				var a="";
				if (coin >=10000){
					a=coin / 10000+"万";
					}else if (coin > 1000){
					a=coin / 1000+"千";
				}
				return a;
			}
			static getRedTaskCoinStr (coin){
				var a="";
				if (coin > 10000){
					a=((coin-coin % 10000)/ 10000)+"万";
					}else if (coin > 1000){
					a=(coin / 1000).toFixed(0)+"千";
				}
				if (coin==0){
					a="0";
				}
				return a;
			}
			static formatCurrency (amount){
				return amount+""
			}
			static dealCode (code){
				var codeCfg=cfg_code.instance(code);
				if (codeCfg){
					GameEventDispatch.instance.event("MsgTipContent",codeCfg.txtContent);
					}else{
					console.log("code:",code,"不明错误");
				}
			}
			static formatNickName (nickname,str_len=14){
				if (null==nickname){
					return "";
				}
				if (GameTools.getStringTrueLength(nickname)> str_len){
					var length=Math.floor(str_len / 2);
					while (GameTools.getStringTrueLength(nickname.substr(0,length))< str_len){
						length++;
					}
					if (GameTools.getStringTrueLength(nickname.substr(0,length))>=str_len){
						return nickname.substr(0,length-1)+"..."
						}else{
						return nickname.substr(0,length)+"..."
					}
					}else{
					return nickname
				}
			}
			static getVisibleChildNumber (root){
				var ret=0;
				var index=0;
				var child;
				while (1){
					child=root.getChildAt(index++);
					if (!child){
						break ;
					}
				}
				return ret;
			}
			static traceLayaStageChildInfo (){
				var index=0;
				var child;
				var root=Laya.stage;
				while (1){
					child=root.getChildAt(index);
					if (!child){
						break ;
						}else{
						var num=GameTools.getVisibleChildNumber(child);
						console.log("traceLayaStageChildInfo: index = "+index+" num = "+num);
					}
					index++;
				}
			}
			static isCrossScreen (){
				return Browser.clientWidth > Browser.clientHeight
			}
			static getStringTrueLength (str){
				var l=str.length;
				var blen=0;
				for (var i=0;i < l;i++){
					if ((str.charCodeAt(i)& 0xff00)!=0){
						blen++;
					}
					blen++;
				}
				return blen
			}
			static closeAllPanel (){
				var num=Laya.stage.numChildren;
				for (var i=0;i < num;i++){
					var obj=Laya.stage.getChildAt(i);
					if (obj){
						obj.removeSelf();
					}
				}
				if (Laya.stage.numChildren > 0){
					GameTools.closeAllPanel();
				}
			}
			static replaceUrlParam (url,paramName,paramValue){
				if (paramValue==null){
					paramValue='';
				};
				var pattern=new RegExp('\\b('+paramName+'=).*?(&|#|$)');
				if (url.search(pattern)>=0){
					return url.replace(pattern,'$1'+paramValue+'$2');
				}
				url=url.replace(/[?#]$/,'');
				return url+(url.indexOf('?')> 0 ? '&' :'?')+paramName+'='+paramValue;
			}
			static replaceParam (key,value){
				var search=window.location.search;
				var param=GameTools.replaceUrlParam(search,key,value);
				window.history.pushState({},null,param);
			}
			static showInfoFromJava (code){
				GameEventDispatch.instance.event("MsgTipContent","code = "+code);
			}
			static nameSkip (name){
				return name.replace(/[&<>]/g,"");
			}
			static getUrlParamValue (name){
				if (!WxC.isInMiniGame()){
					var url=window.document.location.href.toString();
					var u=url.split("?");
					if ((typeof (u[1])=='string')){
						u=u[1].split("&");
						var gets={};
						for (var i in u){
							var j=u[i].split("=");
							gets[j[0]]=j[1];
						}
						return gets[name];
					}
				}
				return null
			}
			static notch (){
				if (WxC.isInMiniGame()){
					return WxC.get_notch();
					}else{
					var _notch='left';
					var tmpwindow=window;
					var tmpscreen=screen;
					if ('orientation' in tmpwindow){
						if (tmpwindow.orientation==90){
							_notch='left';
							}else if (tmpwindow.orientation==-90){
							_notch='right';
						}
						}else if ('orientation' in tmpwindow.screen){
						if (tmpwindow.screen.orientation.type==='landscape-primary'){
							_notch='left';
							}else if (tmpwindow.screen.orientation.type==='landscape-secondary'){
							_notch='right';
						}
						}else if ('mozOrientation' in tmpwindow.screen){
						if (tmpwindow.screen.mozOrientation==='landscape-primary'){
							_notch='left';
							}else if (tmpwindow.screen.mozOrientation==='landscape-secondary'){
							_notch='right';
						}
					}
					return _notch;
				}
				return "left";
			}
			static isIphoneXCrossScreen (){
				var isIphoneXCrossScreen=GameTools.isCrossScreen()&& Browser.clientWidth==812 && Browser.onIOS;
				return isIphoneXCrossScreen
			}
			static buttonEffect (target,timesX=0.2,timesY=0.2){
				Tween.to(target,{
					scaleX:timesX,
					scaleY:timesY
				},100,null,Handler.create(GameTools,GameTools.effectComplete,[target]));
			}
			static effectComplete (target){
				Tween.to(target,{scaleX:1,scaleY:1},100);
			}
		}

		manager.GameTools=Laya.GameTools=GameTools;
		GameTools._designPosDivideScreenPosWidth=1;
		GameTools._designPosDivideScreenPosHeight=1;
		GameTools._screenPosDivideDesignPosWidth=1;
		GameTools._screenPosDivideDesignPosHeight=1;
		GameTools.iphoneXOffset=70;
		GameTools._sqrtDic=[];
		GameTools._acosAngleDic=[];
		GameTools._sinAngleDic=[];
		GameTools._cosAngleDic=[];
		GameTools.curScreenWidth=0;
		GameTools.curScreenHeight=0;
		Laya.static(GameTools,
		['_calRotatePosOut',function(){return this._calRotatePosOut=new Point();}
		]);	

		class ScreenAdaptManager{
			constructor (){
				this.width=0;
				this.height=0;
				this.minWidth=1220;
				this.maxWidth=1800;
				this.minHeight=720;
				this.maxHeight=1120;
				this.useClientHeight=0;
				this.useClientWidth=0;
				this.useBrowserWidth=0;
				this.useBrowserHeight=0;
				this.notch="left";
				this.screenRotation=null;
				this.maxRate=this.maxWidth / this.minHeight;
				this.minRate=this.minWidth / this.maxHeight;
			}
			update(){
				if (this.screenRotation==null || this.screenRotation !=Laya.stage.canvasRotation){
					this.screenRotation=Laya.stage.canvasRotation;
				}
				if (this.useBrowserWidth !=Browser.clientWidth || this.useBrowserHeight !=Browser.clientHeight || (this.notch !=GameTools.notch()&& "normal" !=GameTools.notch())){
					var browserRate=Browser.clientWidth / Browser.clientHeight;
					if (Browser.clientWidth < Browser.clientHeight){
						browserRate=Browser.clientHeight / Browser.clientWidth;
					}
					this.useBrowserWidth=Browser.clientWidth;
					this.useBrowserHeight=Browser.clientHeight;
					if ("normal" !=GameTools.notch()){
						this.notch=GameTools.notch();
					}
					if (browserRate >=this.minRate && browserRate <=this.maxRate){
						var i=this.minHeight;
						var preI=0;
						var iminRate=0;
						var imaxRate=0;
						var imaxHeight=this.maxHeight;
						var findRate=false;
						i=Math.ceil(this.minWidth / browserRate);
						if (i < this.minHeight){
							i=this.minHeight;
						}
						while (i <=imaxHeight){
							iminRate=this.minWidth / i;
							imaxRate=this.maxWidth / i;
							if (imaxRate >=browserRate && iminRate <=browserRate){
								findRate=true;
								this.useClientHeight=i;
								this.useClientWidth=Math.floor(i *browserRate);
								break ;
							}
							else{
								preI=i;
								i=Math.floor((i+imaxHeight)/ 2);
								if ((this.minWidth / i)> browserRate){
									imaxHeight=i;
									i=preI+1;
								}
								else{
									if (i <=preI){
										i=preI+1;
									}
								}
							}
						}
						if (!findRate){
							this.useClientWidth=Math.floor(i *browserRate);
							this.useClientHeight=i;
						}
					}
					else if (browserRate > this.minRate){
						this.useClientHeight=this.minHeight;
						this.useClientWidth=this.maxWidth;
					}
					else{
						this.useClientHeight=this.maxHeight;
						this.useClientWidth=this.minWidth;
					}
					Laya.stage.width=this.useClientWidth;
					Laya.stage.height=this.useClientHeight;
					GameTools.screenResize();
					GameEventDispatch.instance.event("ScreenResize",null);
				}
				}init(){
				this.update();
				Laya.stage.on(Event.RESIZE,this,this.update);
			}
			static get instance (){
				return ScreenAdaptManager._instance || (ScreenAdaptManager._instance=new ScreenAdaptManager());
			}
		}

		manager.ScreenAdaptManager=Laya.ScreenAdaptManager=ScreenAdaptManager;
		ScreenAdaptManager._instance=null;	

		class ShieldWordManager{
			constructor (){
				this.senwords;
				this.init();
			}
			init(){
				this.senwords=ConfigManager.items("cfg_shieldWord");
				}filterInfo(text){
				if (this.senwords==null){
					return text
				}
				for (var i=0;i < this.senwords.length;i++){
					var obj=this.senwords[i];
					text=text.replace(obj.sensitiveword,"**");
				}
				return text
				}filterSpace(text){
				var index=text.indexOf(" ");
				var re1=new RegExp(" ","g");
				text=text.replace(re1,"");
				return text
			}
			static get instance (){
				return ShieldWordManager._instance || (ShieldWordManager._instance=new ShieldWordManager());
			}
		}

		manager.ShieldWordManager=Laya.ShieldWordManager=ShieldWordManager;
		ShieldWordManager._instance=null;	

		class UiManager{
			constructor (){
				//this._name=null;
				//this._param=null;
				//this._panel=null;
				//this._caches=null;
				this._basePanelMaxDepth=100;
				this._noramlUiStepAdd=50;
				this._noramlUiMaxNum=10;
				this._fightUiStepAdd=1;
				this._fightUiMaxNum=30;
				this._fightUiPageStepAdd=1;
				this._fightUiPageMaxNum=3;
				this._dlgUiStepAdd=50;
				this._dlgUiMaxNum=10;
				this._guideMaxDepth=30;
				this._disconnectStepAdd=1;
				this._disconnectMaxNum=1;
				this._errorUiMaxDepth=30;
				//this._normalList=null;
				//this._dlglist=null;
				//this._effecType=null;
				this.isEnterMain=false;
				this._emptyResUi=new Object();
				this._caches=new Object();
				this._normalList=[];
				this._dlglist=[];
				this._emptyResUi["Mask"]=true;
				this._emptyResUi["SgBrokePage"]=true;
				this._emptyResUi["BrokePage"]=true;
				this._emptyResUi["QuitTip"]=true;
				this._emptyResUi["GoldTip"]=true;
				this._emptyResUi["InsideNotice"]=true;
				this._emptyResUi["Compenstate"]=true;
				this._emptyResUi["Fish"]=true;
				this._emptyResUi["ResetLogin"]=true;
				this._emptyResUi["Mate"]=true;
				this._emptyResUi["Wait"]=true;
				this._emptyResUi["MatchSettle"]=true;
				this._emptyResUi["FeedBack"]=true;
				this._emptyResUi["BossShare"]=true;
				this._emptyResUi["LevelUp"]=true;
				this._emptyResUi["UserBan"]=true;
				this._emptyResUi["Certification"]=true;
				this._emptyResUi["WxInfo"]=true;
				if (WxC.isInMiniGame()){
					this._emptyResUi["Load"]=true;
				}
			}
			reset(){
				this._caches=new Object();
				this._normalList=[];
				this._dlglist=[];
			}
			//ui界面的资源是否为空
			uiResEmpty(name){
				return this._emptyResUi[name];
				}toLowHead(str){
				var rst;
				if (str.length <=1)return str.toLowerCase();
				rst=str.charAt(0).toLowerCase()+str.substr(1);
				return rst;
				}loadView(name,param=null,effectType=null){
				if (WxC.isHideShop()){
					if (name=='MonthCard'){
						GameEventDispatch.instance.event("MsgTipContent","需要月卡");
						}else if (name=='FirstCharge'){
						GameEventDispatch.instance.event("MsgTipContent","功能未开放");
						}else{
						this._effecType=effectType;
						this._name=name;
						this._param=param;
						this._panel=(this._caches[this._name] || ClassUtils.getInstance("view."+this.toLowHead(this._name)+"."+this._name));
						this._caches[this._name]=this._panel;
						if (this.uiResEmpty(name)){
							this.loadComplete(this._panel,name);
							}else{
							if (this._name !="HorseTip"){
								GameEventDispatch.instance.event("OpenWait");
							}
							Laya.loader.load(this.res,Handler.create(this,this.loadComplete,[this._panel,name]));
						}
						this.eventEnterMainPage(name);
						GameEventDispatch.instance.event("LoadUi",name);
					}
					}else{
					this._effecType=effectType;
					this._name=name;
					this._param=param;
					this._panel=(this._caches[this._name] || ClassUtils.getInstance("view."+this.toLowHead(this._name)+"."+this._name));
					this._caches[this._name]=this._panel;
					if (this.uiResEmpty(name)){
						this.loadComplete(this._panel,name);
						}else{
						if (this._name !="HorseTip"){
							GameEventDispatch.instance.event("OpenWait");
						}
						Laya.loader.load(this.res,Handler.create(this,this.loadComplete,[this._panel,name]));
					}
					this.eventEnterMainPage(name);
					GameEventDispatch.instance.event("LoadUi",name);
				}
				}eventEnterMainPage(page){
				if (!this.isEnterMain && page=="MainPage"){
					BuriedManager.instance.addBuriedData("ui_open_main");
					this.isEnterMain=true;
				}
				}loadComplete(pan,name){
				if (this._effecType){
					pan.EffectType=this._effecType;
				}
				pan.startGame(this._param,name);
				pan.setPanelBaseDepth(this.getNextBaseDepth(pan.uiType));
				this.addUiToList(pan);
				}loadUi(Panel,param=null){
				this._panel=new Panel();
				var arr=Panel.prototype.__className.split('.');
				this._name=arr[arr.length-1];
				Laya.loader.load(this.res,Handler.create(this,this.loadComplete));
			}
			//游戏各种界面的基础层级
			getUiBaseDepth(type){
				var ret=0;
				switch (type){
					case "uitypebase":{
							ret=0;
							break ;
						}
					case "uitypenormal":{
							ret=this._basePanelMaxDepth;
							break ;
						}
					case "uitypefight":{
							ret=this.getUiBaseDepth("uitypenormal")+this._noramlUiMaxNum *this._noramlUiStepAdd;
							break ;
						}
					case "uitypefightpage":{
							ret=this.getUiBaseDepth("uitypefight")+this._fightUiMaxNum *this._fightUiStepAdd;
							break ;
						}
					case "uitypedlg":{
							ret=this.getUiBaseDepth("uitypefightpage")+this._fightUiPageMaxNum *this._fightUiPageStepAdd;
							break ;
						}
					case "uitypeguide":{
							ret=this.getUiBaseDepth("uitypedlg")+this._dlgUiMaxNum *this._dlgUiStepAdd;
							break ;
						}
					case "uitypedisconnect":{
							ret=this.getUiBaseDepth("uitypeguide")+this._guideMaxDepth;
							break ;
						}
					case "uitypeerrortip":{
							ret=this.getUiBaseDepth("uitypedisconnect")+this._disconnectStepAdd *this._disconnectMaxNum;
							break ;
						}
					case "uitypemsgtip":{
							ret=this.getUiBaseDepth("uitypeerrortip")+this._errorUiMaxDepth;
							break ;
						}
					default :{
							break ;
						}
					}
				return ret;
				}getFightBaseDepth(){
				return this.getUiBaseDepth("uitypefight");
				}getFightUiBaseDepth(){
				return this.getUiBaseDepth("uitypefightpage");
				}getNextBaseDepth(type){
				var ret=0;
				switch (type){
					case "uitypebase":{
							ret=0;
							break ;
						}
					case "uitypenormal":{
							ret=this._basePanelMaxDepth+this._normalList.length *this._noramlUiStepAdd;
							break ;
						}
					case "uitypefight":{
							ret=this.getUiBaseDepth("uitypefight");
							break ;
						}
					case "uitypefightpage":{
							ret=this.getUiBaseDepth("uitypefightpage");
							break ;
						}
					case "uitypedlg":{
							ret=this.getUiBaseDepth("uitypedlg")+this._dlglist.length *this._dlgUiStepAdd;
							break ;
						}
					case "uitypeguide":{
							ret=this.getUiBaseDepth("uitypeguide");
							break ;
						}
					case "uitypedisconnect":{
							ret=this.getUiBaseDepth("uitypedisconnect");
						}
					case "uitypemsgtip":{
							ret=this.getUiBaseDepth("uitypemsgtip");
							break ;
						}
					case "uitypeerrortip":{
							ret=this.getUiBaseDepth("uitypeerrortip");
							break ;
						}
					default :{
							break ;
						}
					}
				return ret;
				}removieFromList(panel){
				switch (panel.uiType){
					case "uitypenormal":{
							if (this._normalList.indexOf(panel)!=-1){
								this._normalList.splice(this._normalList.indexOf(panel),1);
								this.resetBasePanelDepth(this._normalList,this.getUiBaseDepth("uitypenormal"),this._noramlUiStepAdd);
							}
							break ;
						}
					case "uitypedlg":{
							if (this._dlglist.indexOf(panel)!=-1){
								this._dlglist.splice(this._dlglist.indexOf(panel),1);
								this.resetBasePanelDepth(this._dlglist,this.getUiBaseDepth("uitypedlg"),this._dlgUiStepAdd);
							}
							break ;
						}
					default :{
							break ;
						}
					}
				}unloadView(){
				}addUiToList(panel){
				switch (panel.uiType){
					case "uitypenormal":{
							if (this._normalList.indexOf(panel)==-1){
								this._normalList.push(panel);
							}
							break ;
						}
					case "uitypedlg":{
							if (this._dlglist.indexOf(panel)==-1){
								this._dlglist.push(panel);
							}
							break ;
						}
					default :{
							break ;
						}
					}
				}resetBasePanelDepth(list,baseDepth,stepAdd){
				for (var i=0;i < list.length;i++){
					list[i].setPanelBaseDepth(baseDepth);
					baseDepth+=stepAdd;
				}
				}closePanel(name,isRemovie){
				var panel=this._caches[name];
				if (panel !=null){
					this.removieFromList(panel);
					if (isRemovie){
						panel.removie();
						}else{
						panel.hide();
					}
					GameEventDispatch.instance.event("CloseUi",name);
				}
				Laya.loader.clearTextureRes("res/atlas/ui/"+this.toLowHead(name)+".png");
			}
			get pngNum (){
				return this._panel.pngNum
			}
			get res (){
				var arr=[{url:"res/atlas/ui/"+this.toLowHead(this._name)+".atlas",type:Loader.ATLAS}];
				for (var i=0;i < this.pngNum;i++){
					arr.push({
						url:"ui/"+this.toLowHead(this._name)+"/"+this.toLowHead(this._name)+"_"+i+".png",
						type:Loader.IMAGE
					});
				}
				return arr;
			}
			static get instance (){
				return UiManager._instance || (UiManager._instance=new UiManager());
			}
			static init (){
				var reg=ClassUtils.regClass;
				reg("view.wxInfo.WxInfo",WxInfo);
				reg("view.certification.Certification",Certification);
				reg("view.bank.Bank",Bank);
				reg("view.bossShare.BossShare",BossShare);
				reg("view.brokePage.BrokePage",BrokePage);
				reg("view.addFriend.AddFriend",AddFriend);
				reg("view.friend.Friend",Friend);
				reg("view.load.Load",Load);
				reg("view.login.Login",Login);
				reg("view.mainPage.MainPage",MainPage);
				reg("view.mask.Mask",Mask);
				reg("view.wait.Wait",Wait);
				reg("view.insideNotice.InsideNotice",InsideNotice);
				reg("view.register.Register",Register);
				reg("view.rewardTip.RewardTip",RewardTip);
				reg("view.changeSkin.ChangeSkin",ChangeSkin);
				reg("view.compenstate.Compenstate",Compenstate);
				reg("view.exchange.Exchange",Exchange);
				reg("view.feedBack.FeedBack",FeedBack);
				reg("view.firstCharge.FirstCharge",FirstCharge);
				reg("view.fish.Fish",Fish$1);
				reg("view.fishType.FishType",FishType);
				reg("view.goldTip.GoldTip",GoldTip);
				reg("view.horseTip.HorseTip",HorseTip);
				reg("view.levelup.Levelup",Levelup);
				reg("view.match.Match",Match);
				reg("view.newMatch.NewMatch",NewMatch);
				reg("view.matchSettle.MatchSettle",MatchSettle);
				reg("view.mate.Mate",Mate);
				reg("view.monthCard.MonthCard",MonthCard);
				reg("view.noviceGuide.NoviceGuide",NoviceGuide);
				reg("view.pack.Pack",Pack);
				reg("view.pathEditor.PathEditor",PathEditor);
				reg("view.prize.Prize",Prize);
				reg("view.quitTip.QuitTip",QuitTip);
				reg("view.rank.Rank",Rank);
				reg("view.resetLoad.ResetLoad",ResetLoad);
				reg("view.resetLogin.ResetLogin",ResetLogin);
				reg("view.rewardPage.RewardPage",RewardPage);
				reg("view.rule.Rule",Rule);
				reg("view.setting.Setting",Setting);
				reg("view.sgBrokePage.SgBrokePage",SgBrokePage);
				reg("view.share.Share",Share);
				reg("view.shop.Shop",Shop);
				reg("view.taskDaily.TaskDaily",TaskDaily);
				reg("view.taskNew.TaskNew",TaskNew);
				reg("view.testImpact.TestImpact",TestImpact);
				reg("view.userBan.UserBan",UserBan);
				reg("view.wdlogin.Wdlogin",Wdlogin);
				reg("view.subscription.Subscription",Subscription);
				reg("view.useTicket.UseTicket",UseTicket);
				reg("view.collectLead.CollectLead",CollectLead);
				reg("view.redActivity.RedActivity",RedActivity);
				reg("view.shortGift.ShortGift",ShortGift);
				reg("view.quickRegister.QuickRegister",QuickRegister);
				reg("view.ciFu.CiFu",CiFu);
				reg("view.publicAccount.PublicAccount",PublicAccount);
			}
		}

		manager.UiManager=Laya.UiManager=UiManager;
		UiManager._instance=null;	

		class WebSocketManager{
			constructor (){
				//this.socket=null;
				//this.connetUrl=null;
				//this.timeOut=NaN;
				//正确建立连接；
				this.msgDispatch=true;
				this._protoObject=new ProtoObject();
				this.socket=null;
				this.connetUrl=null;
				this.timeOut=6;
				Laya.timer.loop(1000,this,this.connectTimeOutCheck);
			}
			connectTimeOutCheck(){
				if (this.socket && !this.socket.connected){
					if (this.timeOut > 0){
						this.timeOut-=1;
						if (this.timeOut <=0){
							this.close();
						}
					}
				}
				}send(id,msg){
				if (this.socket && this.socket.connected){
					var protoMsg=this._protoObject;
					protoMsg.id=id;
					protoMsg.a=msg;
					this.socket.send(JSON.stringify(protoMsg));
				}
				}close(){
				if (this.socket){
					this.socket.off(Event.OPEN,this,this.openHandler);
					this.socket.off(Event.MESSAGE,this,this.receiveHandler);
					this.socket.off(Event.CLOSE,this,this.closeHandler);
					this.socket.off(Event.ERROR,this,this.errorHandler);
					this.socket.close();
					this.socket=null;
					GameEventDispatch.instance.event("WsClose");
				}
				}closeNoEvent(){
				if (this.socket){
					this.socket.off(Event.OPEN,this,this.openHandler);
					this.socket.off(Event.MESSAGE,this,this.receiveHandler);
					this.socket.off(Event.CLOSE,this,this.closeHandler);
					this.socket.off(Event.ERROR,this,this.errorHandler);
					this.socket.close();
					this.socket=null;
				}
				}isConnect(){
				if (this.socket){
					return this.socket.connected;
				}
				return false;
				}isSocketNull(){
				return this.socket==null;
				}connect(url,login=1){
				if (this.socket && url===this.connetUrl){
					return this.socket;
				}
				this.connetUrl=url;
				this.socket=new Socket();
				this.timeOut=6;
				this.socket.endian=Byte.BIG_ENDIAN;
				this.socket.connectByUrl(url+"&login="+login+"&flag="+RoleInfoM.instance.getTimeStamp());
				this.socket.on(Event.OPEN,this,this.openHandler);
				this.socket.on(Event.MESSAGE,this,this.receiveHandler);
				this.socket.on(Event.CLOSE,this,this.closeHandler);
				this.socket.on(Event.ERROR,this,this.errorHandler);
				return this.socket;
				}reconnect(){
				if (!this.socket){
					return this.connect(this.connetUrl,0);
				}
				return null;
				}openHandler(event=null){
				}receiveHandler(msg=null){
				var protoMsg=JSON.parse(String(msg));
				if (protoMsg){
					GameEventDispatch.instance.event(String(protoMsg.id),protoMsg.a);
				}
				else{
				}
			}
			//GameEventDispatch.instance.event(String(proto.)
			closeHandler(e=null){
				if (this.socket){
					this.socket.off(Event.OPEN,this,this.openHandler);
					this.socket.off(Event.MESSAGE,this,this.receiveHandler);
					this.socket.off(Event.CLOSE,this,this.closeHandler);
					this.socket.off(Event.ERROR,this,this.errorHandler);
					this.socket=null;
					GameEventDispatch.instance.event("WsClose");
				}
				}errorHandler(e=null){
				if (this.socket){
					this.socket.off(Event.OPEN,this,this.openHandler);
					this.socket.off(Event.MESSAGE,this,this.receiveHandler);
					this.socket.off(Event.CLOSE,this,this.closeHandler);
					this.socket.off(Event.ERROR,this,this.errorHandler);
					this.socket=null;
					GameEventDispatch.instance.event("WsError");
				}
			}
			static get instance (){
				return WebSocketManager._instance || (WebSocketManager._instance=new WebSocketManager());
			}
		}

		manager.WebSocketManager=Laya.WebSocketManager=WebSocketManager;
		WebSocketManager._instance=null;	

		class WebSocketSmallGameManager{
			constructor (){
				//this.socket=null;
				//this.connetUrl=null;
				//this.timeOut=NaN;
				this.socket=null;
				this.connetUrl=null;
				this.timeOut=5;
				Laya.timer.frameLoop(1,this,this.connectTimeOutCheck);
			}
			connectTimeOutCheck(){
				if (this.socket && !this.socket.connected){
					this.timeOut-=Laya.timer.delta / 1000;
					if (this.timeOut <=0){
						this.close();
					}
				}
				}send(id,msg){
				if (this.socket && this.socket.connected){
					var protoMsg=new ProtoObject();
					protoMsg.id=id;
					protoMsg.a=msg;
					this.socket.send(JSON.stringify(protoMsg));
				}
				}close(){
				if (this.socket){
					this.socket.off(Event.OPEN,this,this.openHandler);
					this.socket.off(Event.MESSAGE,this,this.receiveHandler);
					this.socket.off(Event.CLOSE,this,this.closeHandler);
					this.socket.off(Event.ERROR,this,this.errorHandler);
					this.socket.close();
					this.socket=null;
					GameEventDispatch.instance.event("SGWsClose");
				}
				}isConnect(){
				if (this.socket){
					return this.socket.connected;
				}
				return false;
				}isSocketNull(){
				return this.socket==null;
				}connect(url,login=1){
				if (this.socket && url===this.connetUrl){
					return this.socket;
				}
				this.connetUrl=url;
				this.socket=new Socket();
				this.timeOut=3;
				this.socket.endian=Byte.BIG_ENDIAN;
				this.socket.connectByUrl(url+"&login="+login+"&flag="+RoleInfoM.instance.getTimeStamp());
				this.socket.on(Event.OPEN,this,this.openHandler);
				this.socket.on(Event.MESSAGE,this,this.receiveHandler);
				this.socket.on(Event.CLOSE,this,this.closeHandler);
				this.socket.on(Event.ERROR,this,this.errorHandler);
				return this.socket;
				}reconnect(){
				if (!this.socket){
					return this.connect(this.connetUrl,0);
				}
				return null;
			}openHandler(event=null){}
			//正确建立连接；
			receiveHandler(msg=null){
				var protoMsg=JSON.parse(String(msg));
				if (protoMsg){
					GameEventDispatch.instance.event(String(protoMsg.id),protoMsg.a);
				}
				}closeHandler(e=null){
				this.socket=null;
				GameEventDispatch.instance.event("SGWsClose");
				}errorHandler(e=null){
				this.socket=null;
				GameEventDispatch.instance.event("SGWsError");
			}
			static get instance (){
				return WebSocketSmallGameManager._instance || (WebSocketSmallGameManager._instance=new WebSocketSmallGameManager());
			}
		}

		manager.WebSocketSmallGameManager=Laya.WebSocketSmallGameManager=WebSocketSmallGameManager;
		WebSocketSmallGameManager._instance=null;	window.model={};

		class ActivityM{
			constructor (){
				this.activity_data=[];
				this.activity_status={};
				// 是否在世界杯抽奖中
				this.is_in_worldcup_lottery=false;
				//this.is_reward=NaN;
				//this.is_receive=NaN;
				this.bet_teams=[];
				//{football_total:1000000gold_total:100000win_team_id:8}
				this.worldcup_info={};
				//-----------------公共活动界面--------------------
				this._loginShowActivityPannel=false;
				this._loginNew=false;
				//this._activityMoneyConfig=null;
				//活动券图片
				//this._activityPictureConfig=null;
				//活动界面图片4+2红点类型图标
				//this._activityExplainConfig=null;
				//活动说明图片
				this._firstRankList={score:0,rank:0,rank_arr:[]};
				this._secondRankList={score:0,rank:0,rank_arr:[]};
				this._thirdRankList={score:0,rank:0,rank_arr:[]};
				//this._airBalloonRank=null;
				//this._rankRewards=null;
				this.betData=[];
				//this.actRegister_data=null;
				//this.actRegister_time=NaN;
				//this.actCurrency_data=null;
				this.sub_activity_status={};
				this.exchange_times=[];
				//this.is_exchange=NaN;
				//this.cdkeys_id=null;
				//this.hitBalloonArr_81=null;
				//this.hitBalloonArr_82=null;
				//this.hitBalloonArr_83=null;
				//兑换界面
				this._countDownTimes=10;
				//单位s
				this._countDownArr={};
				this._isRefresh=false;
				//每日礼包
				this._fesDailyGiftInfo={};
				//福利商城购买间隔
				this.exchangeInterval=0;
			}
			countDownLoop(){
				this._isRefresh=false;
				for (var i in model.ActivityM.instance.countDownArr){
					if (model.ActivityM.instance.countDownArr[i] > 0){
						model.ActivityM.instance.countDownArr[i]--;
						this._isRefresh=true;
					}
				}
				if (this._isRefresh){
					GameEventDispatch.instance.event("RefreshVirtualList");
				}
				}exchangeConversion(id,num){
				var endNum=num;
				return endNum;
				}getExchangeConversionDesc(id,num){
				var val=this.exchangeConversion(id,num);
				var ret=GameTools.getItemCoinStr(val);
				return ret;
				}_getCommonActivityConfig(module){
				if (this._getActivityData('multi_at')){
					var typeArr=this._getActivityData('multi_at')["sub_activity"];
					if (typeArr){
						for (var i=0;i < typeArr.length;i++){
							if (typeArr[i]["id"]==module){
								return typeArr[i]["config"]
							}
						}
					}
				}
				return null;
				}getRewardPageExtra(id){
				if (this._getCommonActivityConfig(2)){
					return this._getCommonActivityConfig(2)["lottery_extra"][id];
				}
				return null;
				}actCurrency(coin_type){
				for (var i=0;i < this.actCurrency_data.length;i++){
					if (this.actCurrency_data[i].coin_type==coin_type){
						return this.actCurrency_data[i].value;
					}
				}
				return 0;
				}getGoodsNum(id){
				if (id==1){
					return RoleInfoM.instance.getCoin()
					}else if (id==4){
					return RoleInfoM.instance.getDiamond();
					}else if (id==60){
					return RoleInfoM.instance.getExchange();
					}else{
					return model.ActivityM.instance.actCurrency(id);
				}
				}activeImg(){
				var active_img=[];
				if (this.isShowShopRebate){
					active_img.push(
					{img:{skin:this._activityExplainConfig[0]},view:"shop"});
				}
				if (this.isShowShareRebate){
					if (WxC.isInMiniGame()){
						active_img.push(
						{img:{skin:this._activityExplainConfig[1]},view:"Share"});
					}
				}
				if (this.isShowSinceRebate){
					active_img.push(
					{img:{skin:this._activityExplainConfig[2]},view:"Match"});
				}
				if (this.isShowDailyGift){
					active_img.push(
					{img:{skin:this._activityExplainConfig[3]},view:"Lottery"});
				}
				if(this.isShowMatchActivity){
					active_img.push(
					{img:{skin:this._activityExplainConfig[4]},view:"MatchGame"});
				}
				if (this.isShowDirectChanges){
					active_img.push(
					{img:{skin:this._activityExplainConfig[6]},view:"Rank"});
				}
				return active_img;
				}_getActivityData(activity_type){
				if (this.activity_data==null){
					return null
				}
				for (var i=0;i < this.activity_data.length;i++){
					if (this.activity_data[i]["type"]==activity_type){
						return this.activity_data[i]
					}
				}
				return null
				}getActivityData(activity_type){
				if ('bonus'==activity_type){
					return this._getActivityData('bonus')
					}else if ('bomb'==activity_type){
					return this._getActivityData('bomb')
					}else if ('worldcup2'==activity_type){
					return this._getActivityData('worldcup2')
					}else if ('turntable'==activity_type){
					return this._getActivityData('turntable')
					}else if ('multi_at'==activity_type){
					return this._getActivityData('multi_at')
					}else if ('top_double'==activity_type){
					return this._getActivityData('top_double')
					}else if ('red_pack'==activity_type){
					return this._getActivityData('red_pack')
					}else{
					return null
				}
				}worldCupActivityBatteryCanBuy(){
				return model.ActivityM.instance.activityIsExtraTime('worldcup2')
				}getShopExtraArrByShopId(commodity_id,activity_type){
				var activityData=this.getActivityData(activity_type);
				if (!activityData){
					return null
				}
				if (activityData){
					if (activity_type=='multi_at'){
						var shop_extra=this._getCommonActivityConfig(1)["shop_buy_extra"];
						}else{
						var shop_extra=activityData["config"]["shop_extra"];
					}
					if (!shop_extra){
						return null
					};
					var bomb_gift=shop_extra[commodity_id+""];
					if (bomb_gift){
						return bomb_gift
						}else{
						return null
					}
					}else{
					return null
				}
				}getActivityExtraTime(activity_type){
				var activityData=this.getActivityData(activity_type);
				if (activityData){
					var finish_time=activityData["extra_time"];
					return finish_time
					}else{
					return 0;
				}
				}getActivityEndTime(activity_type){
				var activityData=this.getActivityData(activity_type);
				if (activityData){
					var finish_time=activityData["finish_time"];
					return finish_time
					}else{
					return 0;
				}
				}showActivityIcon(activity_type){
				var activityData=this.getActivityData(activity_type);
				if (!activityData){
					return false
				}
				if (activityData){
					var activity_id=activityData.id;
					var activity_status_data=this.activity_status[activity_id+""];
					if (activity_status_data){
						return activity_status_data[0] && !activity_status_data[2]
						}else{
						return false
					}
					}else{
					return false
				}
				}getWinTeamId(){
				var winTeamId=model.ActivityM.instance.worldcup_info['win_team_id'];
				if (winTeamId){
					return winTeamId
				}
				return 0
				}worldCupRewardCanAccept(){
				var winTeamId=this.getWinTeamId();
				return winTeamId > 0
				}activityIsActive(activity_type){
				var activityData=this.getActivityData(activity_type);
				if (activityData){
					var activity_id=activityData.id;
					var activity_status_data=this.activity_status[activity_id+""];
					if (activity_status_data){
						return activity_status_data[0] && !activity_status_data[1]
						}else{
						return false
					}
					}else{
					return false
				}
				}activityIsEnd(activity_type){
				var activityData=this.getActivityData(activity_type);
				if (activityData){
					var activity_id=activityData.id;
					var activity_status_data=this.activity_status[activity_id+""];
					if (activity_status_data){
						return activity_status_data[1]
						}else{
						return false
					}
					}else{
					return false
				}
				}activityIsExtraTime(activity_type){
				var activityData=this.getActivityData(activity_type);
				if (activityData){
					var activity_id=activityData.id;
					var activity_status_data=this.activity_status[activity_id+""];
					if (activity_status_data){
						return activity_status_data[1] && !activity_status_data[2]
						}else{
						return false
					}
					}else{
					return false
				}
				}activityIsDown(activity_type){
				var activityData=this.getActivityData(activity_type);
				if (activityData){
					var activity_id=activityData.id;
					var activity_status_data=this.activity_status[activity_id+""];
					if (activity_status_data){
						return activity_status_data[2]
						}else{
						return false
					}
					}else{
					return false
				}
			}
			//活动是否在进行中
			activityIsProceed(activity_type){
				var activityData=this.getActivityData(activity_type);
				if (activityData){
					var activity_id=activityData.id;
					var activity_status_data=this.activity_status[activity_id+""];
					if (activity_status_data){
						return activity_status_data[0] && !activity_status_data[2];
						}else{
						return false
					}
					}else{
					return false
				}
				}commonActivityOnOff(module){
				var activityData=this.getActivityData('multi_at');
				if (activityData){
					var activity_id=activityData.id;
					var sub_activity_status_data=this.sub_activity_status[activity_id+""];
					if (sub_activity_status_data){
						var isStart=sub_activity_status_data[module];
						if (isStart){
							return true;
						}
					}
				}
				return false;
				}getHitBalloonArr(grade){
				switch (grade){
					case 1:
						return this.hitBalloonArr_81;
					case 2:
						return this.hitBalloonArr_82;
					case 3:
						return this.hitBalloonArr_83;
					default :
						return null;
					}
				}setHitBalloonArr(res){
				if (res[81].length > 0){
					this.hitBalloonArr_81=res[81];
					}else{
					this.hitBalloonArr_81=[];
				}
				if (res[82].length > 0){
					this.hitBalloonArr_82=res[82];
					}else{
					this.hitBalloonArr_82=[];
				}
				if (res[83].length > 0){
					this.hitBalloonArr_83=res[83];
					}else{
					this.hitBalloonArr_83=[];
				}
				}getChooseFlyRankList(grade){
				switch (grade){
					case 1:
						return this.firstRankList;
					case 2:
						return this.secondRankList;
					case 3:
						return this.thirdRankList;
					default :
						return null;
					}
				}unifiedBalloonRanking(rank){
				var str;
				if (rank==0){
					str="暂未排名";
					}else if (rank > 100){
					str="排名100之外";
					}else{
					str=""+rank;
				}
				return str;
				}getBalloonConsume(consumeType){
				return model.ActivityM.instance._getCommonActivityConfig(103)["consume"][consumeType+""];
				}setCommonImage(){
				if (this._getActivityData('multi_at')){
					if (this._getActivityData('multi_at')["config"] && this._getActivityData('multi_at')["config"]["upload_img"]){
						var typeArr=this._getActivityData('multi_at')["config"]["upload_img"];
						this._activityMoneyConfig={81:typeArr["volume_img_1"],82:typeArr["volume_img_2"],83:typeArr["volume_img_3"]};
						this._activityPictureConfig=[typeArr["items_img_1"],typeArr["items_img_2"],typeArr["items_img_3"],
						typeArr["items_img_4"],typeArr["items_img_5"],typeArr["items_img_6"]];
						this._activityExplainConfig=[typeArr["propaganda_img_1"],typeArr["propaganda_img_2"],typeArr["propaganda_img_3"],
						typeArr["propaganda_img_4"],typeArr["propaganda_img_5"],typeArr["propaganda_img_6"],typeArr["propaganda_img_7"]];
						cfg_goods.instance(81).icon=this._activityMoneyConfig[81];
						cfg_goods.instance(82).icon=this._activityMoneyConfig[82];
						cfg_goods.instance(83).icon=this._activityMoneyConfig[83];
						}else{
						this._activityMoneyConfig=[];
						this._activityPictureConfig=[null,null,null,null,null,null];
						this._activityExplainConfig=[];
					}
					}else{
					this._activityMoneyConfig=[];
					this._activityPictureConfig=[null,null,null,null,null,null];
					this._activityExplainConfig=[];
				}
				}getFesDailyGiftInfo(activityCommonId){
				return this._fesDailyGiftInfo[activityCommonId]
				}updFesDailyGiftInfo(value){
				value.multi_at_id=106;
				var info=this.getFesDailyGiftInfo(value.multi_at_id);
				if (!info){
					this._fesDailyGiftInfo[value.multi_at_id]=value;
					}else{
					info.is_exchange=value.is_exchange;
					info.gift_pack_stage=value.gift_pack_stage;
				}
				}isFesDailyGiftExchanged(activityCommonId){
				var info=this.getFesDailyGiftInfo(activityCommonId);
				return !!(info && info.is_exchange);
				}getFesDailyGiftStage(activityCommonId){
				var info=this.getFesDailyGiftInfo(activityCommonId);
				var ret=1;
				if (info){
					ret=info.gift_pack_stage || 1;
					var isFesDailyGiftExchanged=this.isFesDailyGiftExchanged(activityCommonId);
					var gifts=model.ActivityM.instance._getCommonActivityConfig(activityCommonId);
					if (isFesDailyGiftExchanged && gifts && ret >=gifts.length){
						ret=1;
					}
				}
				return ret;
				}getFesDailyGiftStageConfig(activityCommonId,stageId){
				var gifts=model.ActivityM.instance._getCommonActivityConfig(activityCommonId);
				var ret=null;
				if (gifts && gifts.length >=stageId){
					ret=gifts[stageId-1];
				}
				return ret;
				}getCurDailyGiftStageConfig(activityCommonId){
				var curStage=this.getFesDailyGiftStage(activityCommonId);
				return this.getFesDailyGiftStageConfig(activityCommonId,curStage);
				}isDailyGiftAllBuyed(activityCommonId){
				return this.isFesDailyGiftExchanged(activityCommonId);
			}
			get actRegisterDate (){
				return this.actRegister_data;
			}
			set actRegisterDate (arr){
				this.actRegister_data=arr;
			}
			//直接兑换
			get isShowDirectChanges (){
				return this.commonActivityOnOff(101);
			}
			//每日礼包
			get isShowDailyGift (){
				return this.commonActivityOnOff(106);
			}
			//排行榜活动 扎气球
			get isShowRankActivity (){
				return this.commonActivityOnOff(103);
			}
			get secondRankList (){
				return this._secondRankList;
			}
			//分享礼盒
			get isShowGiftBox (){
				return this.commonActivityOnOff(102);
			}
			get actRegisterTime (){
				return this.actRegister_time;
			}
			set actRegisterTime (day){
				this.actRegister_time=day;
			}
			get exchangeTimes (){
				return this.exchange_times
			}
			set exchangeTimes (arr){
				this.exchange_times=arr;
			}
			get thirdRankList (){
				return this._thirdRankList;
			}
			get exchange (){
				return this.is_exchange;
			}
			set exchange (re){
				this.is_exchange=re;
			}
			get giftCdk (){
				return this.cdkeys_id;
			}
			set giftCdk (data){
				this.cdkeys_id=data;
			}
			//商场返利（充值）
			get isShowShopRebate (){
				return this.commonActivityOnOff(1);
			}
			//第四关奖金池
			get isShowSinceRebate (){
				return this.commonActivityOnOff(6);
			}
			//渔场内抽奖页面
			get isShowRewRebate (){
				return this.commonActivityOnOff(2);
			}
			//活动日常赛
			get isShowDayMatchRebate (){
				return this.commonActivityOnOff(3);
			}
			//签到奖励
			get isShowRegisterRebate (){
				return this.commonActivityOnOff(4);
			}
			//分享奖励
			get isShowShareRebate (){
				return this.commonActivityOnOff(5);
			}
			//主界面排行榜是否开启发送兑换券
			get isShowMainRank (){
				return this.commonActivityOnOff(105);
			}
			set airBalloonRank (value){
				this._airBalloonRank=value;
				if (this._airBalloonRank[81]){
					this._firstRankList["score"]=this._airBalloonRank[81].score;
					this._firstRankList["rank"]=this._airBalloonRank[81].rank;
					if (this._airBalloonRank[81].rank_arr){
						this._firstRankList["rank_arr"]=this._airBalloonRank[81].rank_arr;
					}
				}
				if (this._airBalloonRank[82]){
					this._secondRankList["score"]=this._airBalloonRank[82].score;
					this._secondRankList["rank"]=this._airBalloonRank[82].rank;
					if (this._airBalloonRank[82].rank_arr){
						this._secondRankList["rank_arr"]=this._airBalloonRank[82].rank_arr;
					}
				}
				if (this._airBalloonRank[83]){
					this._thirdRankList["score"]=this._airBalloonRank[83].score;
					this._thirdRankList["rank"]=this._airBalloonRank[83].rank;
					if (this._airBalloonRank[83].rank_arr){
						this._thirdRankList["rank_arr"]=this._airBalloonRank[83].rank_arr;
					}
				}
			}
			//比赛场活动是否开启
			get isShowMatchActivity (){
				return this.commonActivityOnOff(107);
			}
			//活动是否在进行中
			get activityTicketContinueTime (){
				return this.activityIsProceed('multi_at');
			}
			//积分活动（兑换的喇叭送福，渔场免费抽奖，积分兑换）是否在进行中
			get redPackTicketContinueTime (){
				return this.activityIsProceed('red_pack');
			}
			get firstRankList (){
				return this._firstRankList;
			}
			get rankRewards (){
				return this._rankRewards;
			}
			set rankRewards (value){
				this._rankRewards=value;
			}
			get activityPictureConfig (){
				return this._activityPictureConfig;
			}
			get loginShowActivityPannel (){
				return this._loginShowActivityPannel;
			}
			set loginShowActivityPannel (value){
				this._loginShowActivityPannel=value;
			}
			get loginNew (){
				return this._loginNew;
			}
			set loginNew (value){
				this._loginNew=value;
			}
			get countDownTimes (){
				return this._countDownTimes;
			}
			set countDownTimes (value){
				this._countDownTimes=value;
			}
			get countDownArr (){
				return this._countDownArr;
			}
			set countDownArr (value){
				this._countDownArr=value;
			}
			static get instance (){
				return ActivityM._instance || (ActivityM._instance=new ActivityM());
			}
		}

		model.ActivityM=Laya.ActivityM=ActivityM;
		ActivityM._instance=null;	

		class AdM{
			constructor (){
			}
			get bannerHeight (){
				return this._bannerHeight;
			}
			set bannerHeight (value){
				this._bannerHeight=value;
			}
			get watch_times (){
				return this._watch_times;
			}
			set watch_times (value){
				this._watch_times=value;
			}
			get total_times (){
				return this._total_times;
			}
			set total_times (value){
				this._total_times=value;
			}
			static get instance (){
				return AdM._instance || (AdM._instance=new AdM());
			}
		}

		model.AdM=Laya.AdM=AdM;
		AdM._instance=null;	

		class CertificationM{
			constructor (){
				//this._info=null;
			}
			isOpenCertification(){
				if (ENV.isNeedCertification()){
					if (!RoleInfoM.instance.is_bind_tel || !LoginM.instance.isCompleteCertification){
						return true
					}
				}
				return false;
				}OpenCertification(){
				if (!RoleInfoM.instance.is_bind_tel || this._info.openFrom=="bank"){
					WebSocketManager.instance.send(33012,{is_show_tip:1});
					}else{
					UiManager.instance.loadView("Certification",null,"SMALL_TO_BIG");
				}
			}
			get info (){
				return this._info;
			}
			set info (value){
				this._info=value;
			}
			static get instance (){
				return CertificationM._instance || (CertificationM._instance=new CertificationM());
			}
		}

		model.CertificationM=Laya.CertificationM=CertificationM;
		CertificationM._instance=null;	

		class CompenM{
			constructor (){
				this._rewardName="我开始中奖了啊";
				//补偿奖励的名字
				//this._compenArr=null;
				//补偿奖励的ID数组
				this._currentTimes=1;
				//当前显示奖励的次数
				this._rewardFrom=-1;
				//当前显示奖励的次数
				//this._comenList=null;
				//this._totalTimes=NaN;
			}
			//得到icon的地址
			getUrl(id){
				var cfg=cfg_goods.instance(id);
				return cfg.icon;
				}point(id){
				if (id==1){
					return new Point(371,302);
					}else if (id==2){
					return new Point(291,302);
					}else if (id==3){
					return new Point(209,302);
					}else if (id==4){
					return new Point(127,302);
					}else{
					return null;
				}
			}
			//补偿奖励的名字
			get rewardName (){
				var compro=this.compenArr [0];
				return compro.tip;
			}
			set rewardName (name){
				this._rewardName=name;
			}
			get addIndex (){
				var index=0;
				if (this.currentTimes==this.totalTimes){
					index=this.compenList.length-(this.currentTimes-1)*4;
					}else{
					index=4;
				}
				return index;
			}
			//当前领取的奖励的次数
			get currentTimes (){
				return this._currentTimes;
			}
			set currentTimes (times){
				this._currentTimes=times;
			}
			//刷新数据列表
			get refreshList (){
				var startIndex=(this.currentTimes-1)*4;
				var endIndex=startIndex+this.addIndex;
				return this.compenList.slice(startIndex,endIndex);
			}
			get compenArr (){
				return this._compenArr;
			}
			set compenArr (arr){
				this._compenArr=arr;
			}
			//需要领取的总共的次数
			get totalTimes (){
				if (this.compenList !=null){
					var len=this.compenList.length;
					return Math.ceil(len / 4);
					}else{
					return 0;
				}
			}
			get compenList (){
				var comList=[];
				for (var i=0;i < this.compenArr.length;i++){
					var compro=this.compenArr [i];
					var pro=new MakePro();
					pro.count=ActivityM.instance.exchangeConversion(compro.id,compro.num);
					pro.icon=this.getUrl(compro.id+"");
					comList.push(pro);
				}
				return comList;
			}
			get showRefeshList (){
				var showlist=[];
				for (var i=0;i < this.refreshList.length;i++){
					var pro=this.refreshList[i];
					showlist.push({icon:{skin:pro.icon},count:{text:pro.count}});
				}
				return showlist;
			}
			get rewardFrom (){
				return this._rewardFrom;
			}
			set rewardFrom (value){
				this._rewardFrom=value;
			}
			static get instance (){
				return CompenM._instance || (CompenM._instance=new CompenM());
			}
		}

		model.CompenM=Laya.CompenM=CompenM;
		CompenM._instance=null;	

		class ExchangeM{
			constructor (){
				//微信绑定
				//this._wxIsBind=NaN;
				//是否已经绑定
				//this._wxBindTicket=null;
				//绑定码
				//this._wxExpiredTime=NaN;
				//支付宝绑定
				//this._alipayIsBind=NaN;
				//是否已经绑定
				//this._alipayBindTicket=null;
				//绑定码
				//this._alipayExpiredTime=NaN;
				//微信渠道 支付宝和微信兑换开关
				this._wx_wxExchangeOpen=false;
				this._wx_alipayExchangeOpen=false;
				//h5渠道 支付宝和微信兑换开关
				this._h5_wxExchangeOpen=false;
				this._h5_alipayExchangeOpen=false;
				//渠道 1小游戏 2非小游戏
				this._platform=2;
				//绑定支付偏好 0:没有 1微信 2支付宝
				this._payType=0;
				this._curSelect=0;
			}
			get wxBindTicket (){
				return this._wxBindTicket;
			}
			set wxBindTicket (value){
				this._wxBindTicket=value;
			}
			set wx_wxExchangeOpen (value){
				this._wx_wxExchangeOpen=value;
			}
			get alipayExpiredTime (){
				return this._alipayExpiredTime;
			}
			set alipayExpiredTime (value){
				this._alipayExpiredTime=value;
			}
			get payType (){
				return this._payType;
			}
			set payType (value){
				this._payType=value;
			}
			get wxIsBind (){
				return this._wxIsBind;
			}
			set wxIsBind (value){
				this._wxIsBind=value;
			}
			get wxExpiredTime (){
				return this._wxExpiredTime;
			}
			set wxExpiredTime (value){
				this._wxExpiredTime=value;
			}
			get alipayBindTicket (){
				return this._alipayBindTicket;
			}
			set alipayBindTicket (value){
				this._alipayBindTicket=value;
			}
			set wx_alipayExchangeOpen (value){
				this._wx_alipayExchangeOpen=value;
			}
			get alipayIsBind (){
				return this._alipayIsBind;
			}
			set alipayIsBind (value){
				this._alipayIsBind=value;
			}
			set h5_wxExchangeOpen (value){
				this._h5_wxExchangeOpen=value;
			}
			set h5_alipayExchangeOpen (value){
				this._h5_alipayExchangeOpen=value;
			}
			get curSelect (){
				return this._curSelect;
			}
			set curSelect (value){
				this._curSelect=value;
			}
			static get instance (){
				return ExchangeM._instance || (ExchangeM._instance=new ExchangeM());
			}
		}

		model.ExchangeM=Laya.ExchangeM=ExchangeM;
		ExchangeM._instance=null;	

		class FightM{
			constructor (){
				this.seatId=0;
				this.sceneId=0;
				//当前所在场景
				this._lockUid=0;
				//自身瞄准的鱼的id
				//this._seatOneInfo=null;
				//this._seatTwoInfo=null;
				//this._seatThreeInfo=null;
				//this._seatFourInfo=null;
				//this._skillList=null;
				//this._agentGetArray=null;
				//位置获得信息
				//this._minBulletUid=0;
				//this._maxBulletUid=0;
				//this._curBulletUid=0;
				//this._goldPoolTotalValue=NaN;
				//this._autoTime=NaN;
				//自动发炮剩余时间
				//this._contestEndTime=NaN;
				this._seatOneInfo=null;
				this._seatTwoInfo=null;
				this._seatThreeInfo=null;
				this._seatFourInfo=null;
				this._goldPoolTotalValue=0;
				this._autoTime=0;
				this._skillList=[];
				this._agentGetArray=[];
			}
			dataReset(){
				this._seatOneInfo=null;
				this._seatTwoInfo=null;
				this._seatThreeInfo=null;
				this._seatFourInfo=null;
				this.seatId=0;
				this.sceneId=0;
				this._contestEndTime=0;
				}setContestEndTime(time){
				this._contestEndTime=time;
				}getContestEndTime(){
				return this._contestEndTime;
				}contestEndTimeSub(){
				if (this._contestEndTime > 0){
					this._contestEndTime-=1;
					if (this._contestEndTime < 0){
						this._contestEndTime=0;
					}
				}
				}getyuleiItems(){
				var goods=ConfigManager.filter("cfg_goods",function(cfg){
					if (cfg.packed==1){
						if (cfg.can_use==0 && cfg.type==6 && cfg.name.indexOf("鱼雷")>=0){
							return true;
						}
					}
					return false;
				});
				goods.sort(function(a,b){
					return a.pack_index-b.pack_index;
				});
				return goods;
			}
			/**
			*是否是匹配赛
			*/
			isMatchingGame(){
				if (model.FightM.instance.getSceneId()==7){
					return true;
				}
				return false;
				}coinShootScene(){
				if (this.sceneId > 0){
					return (ConfigManager.getConfValue("cfg_scene",this.sceneId,"resource"))==1;
				}
				return false;
				}isShowRankAni(){
				if (this.sceneId > 1 && this.sceneId <=4){
					return true;
				}
				return false;
				}setAutoTime(time){
				this._autoTime=time;
				if (this._autoTime <=0){
					GameEventDispatch.instance.event("AutoShootTimeOut",null);
				}
				}getAutoTime(){
				return this._autoTime;
				}getAutoTimeStr(){
				var ret="";
				var Hour=Math.floor(this._autoTime / (60 *60));
				var minute=Math.floor((this._autoTime-Hour *60 *60)/ 60);
				var second=Math.floor(this._autoTime-Hour *60 *60-minute *60);
				if (Hour < 10){
					ret=ret+"0"+Hour;
					}else{
					ret=ret+Hour;
				}
				if (minute < 10){
					ret=ret+":0"+minute;
					}else{
					ret=ret+":"+minute;
				}
				if (second < 10){
					ret=ret+":0"+second;
					}else{
					ret=ret+":"+second;
				}
				return ret;
				}setGoldPoolTotalValue(value){
				this._goldPoolTotalValue=value;
				}getGoldPoolTotalValue(){
				return Math.floor(this._goldPoolTotalValue);
				}goldPoolTotalValueAdd(value){
				this._goldPoolTotalValue+=value;
				}setBulletUidInfo(info){
				this._minBulletUid=info[0];
				this._maxBulletUid=info[1];
				this._curBulletUid=info[2];
				}getBulletUid(){
				if (this._curBulletUid > this._maxBulletUid){
					this._curBulletUid=this._minBulletUid;
				}
				this._curBulletUid=this._curBulletUid+1;
				return this._curBulletUid;
				}getSeatInfo(seatId){
				switch (seatId){
					case 1:{
							return this._seatOneInfo;
							break ;
						}
					case 2:{
							return this._seatTwoInfo;
							break ;
						}
					case 3:{
							return this._seatThreeInfo;
							break ;
						}
					case 4:{
							return this._seatFourInfo;
							break ;
						}
					}
				return null;
				}getOwnAgent(){
				var ret=-1;
				var seatInfo=this.getSeatInfo(this.seatId);
				if (seatInfo){
					return seatInfo.agent;
				}
				return ret;
			}
			//获取子弹碰撞检测的最佳玩家id
			isOwnBestBulletOwner(agent){
				var seatInfo=this.getSeatInfoByAgent(agent);
				if (seatInfo && agent >=0){
					return seatInfo.seat_id==this.seatId;
				}
				if (this._seatOneInfo){
					return this._seatOneInfo.seat_id==this.seatId;
				}
				if (this._seatTwoInfo){
					return this._seatTwoInfo.seat_id==this.seatId;
				}
				if (this._seatThreeInfo){
					return this._seatThreeInfo.seat_id==this.seatId;
				}
				if (this._seatFourInfo){
					return this._seatFourInfo.seat_id==this.seatId;
				}
				return false;
			}
			//获取
			getOwnUseBattery(){
				var seatInfo=this.getSeatInfo(this.seatId);
				if (seatInfo){
					return seatInfo.battery;
				}
				return 0;
			}
			//通过自己位置获取镜像x坐标
			getMirrorPosXByOwnSeat(x){
				if (GameConst.fix_left_down_pos){
					if (2==this.seatId){
						x=1280-x;
						}else if (3==this.seatId){
						x=1280-x;
					}
				}
				return x;
				}getOwnSeatMirrorType(){
				var ret=1;
				if (2==this.seatId){
					ret=2;
					}else if (3==this.seatId){
					ret=4;
					}else if (4==this.seatId){
					ret=3;
				}
				return ret;
			}
			//通过自己位置获取镜像y坐标
			getMirrorPosYByOwnSeat(y){
				if (GameConst.fix_left_down_pos){
					if (3==this.seatId){
						y=720-y;
						}else if (4==this.seatId){
						y=720-y;
					}
				}
				return y;
			}
			//通过显示炮台位置获取真实炮台位置
			getSeatIdByShowSeatId(showSeatId){
				if (!GameConst.fix_left_down_pos){
					return showSeatId;
				}
				if (2==this.seatId){
					if (1==showSeatId){
						return 2;
						}else if (2==showSeatId){
						return 1;
						}else if (3==showSeatId){
						return 4;
						}else if (4==showSeatId){
						return 3;
					}
				}
				if (3==this.seatId){
					if (1==showSeatId){
						return 3;
						}else if (2==showSeatId){
						return 4;
						}else if (3==showSeatId){
						return 1;
						}else if (4==showSeatId){
						return 2;
					}
				}
				if (4==this.seatId){
					if (1==showSeatId){
						return 4;
						}else if (2==showSeatId){
						return 3;
						}else if (3==showSeatId){
						return 2;
						}else if (4==showSeatId){
						return 1;
					}
				}
				return showSeatId;
			}
			//通过实际位置获取镜像位置
			getShowSeatId(rSeatId){
				if (!GameConst.fix_left_down_pos){
					return rSeatId;
				}
				if (2==this.seatId){
					if (1==rSeatId){
						return 2;
						}else if (2==rSeatId){
						return 1;
						}else if (3==rSeatId){
						return 4;
						}else if (4==rSeatId){
						return 3;
					}
				}
				if (3==this.seatId){
					if (1==rSeatId){
						return 3;
						}else if (2==rSeatId){
						return 4;
						}else if (3==rSeatId){
						return 1;
						}else if (4==rSeatId){
						return 2;
					}
				}
				if (4==this.seatId){
					if (1==rSeatId){
						return 4;
						}else if (2==rSeatId){
						return 3;
						}else if (3==rSeatId){
						return 2;
						}else if (4==rSeatId){
						return 1;
					}
				}
				return rSeatId;
				}seatConfigChange(data){
				var seatInfo=this.getSeatInfo(data.seat_id);
				if (seatInfo){
					seatInfo.cskin=data.cskin;
					seatInfo.battery=data.battery;
				}
				}getSeatInfoByAgent(agent){
				if (this._seatOneInfo && this._seatOneInfo.agent===agent){
					return this._seatOneInfo;
				}
				if (this._seatTwoInfo && this._seatTwoInfo.agent===agent){
					return this._seatTwoInfo;
				}
				if (this._seatThreeInfo && this._seatThreeInfo.agent===agent){
					return this._seatThreeInfo;
				}
				if (this._seatFourInfo && this._seatFourInfo.agent===agent){
					return this._seatFourInfo;
				}
				return null;
				}inSeatInfo(seatId,seatInfo){
				switch (seatId){
					case 1:{
							this._seatOneInfo=seatInfo;
							this._seatOneInfo.skipCoin=0;
							break ;
						}
					case 2:{
							this._seatTwoInfo=seatInfo;
							this._seatTwoInfo.skipCoin=0;
							break ;
						}
					case 3:{
							this._seatThreeInfo=seatInfo;
							this._seatThreeInfo.skipCoin=0;
							break ;
						}
					case 4:{
							this._seatFourInfo=seatInfo;
							this._seatFourInfo.skipCoin=0;
							break ;
						}
					}
				}setLevel(seat_id,level){
				var seatInfo=this.getSeatInfo(seat_id);
				if (seatInfo){
					seatInfo.level=level;
				}
				}outSeatInfo(seatId,seatInfo){
				switch (seatId){
					case 1:{
							this._seatOneInfo=null;
							break ;
						}
					case 2:{
							this._seatTwoInfo=null;
							break ;
						}
					case 3:{
							this._seatThreeInfo=null;
							break ;
						}
					case 4:{
							this._seatFourInfo=null;
							break ;
						}
					}
				}setSkipCoin(sId,skipCoin){
				var seatInfo=this.getSeatInfo(sId);
				if (seatInfo){
					seatInfo.skipCoin=skipCoin;
					GameEventDispatch.instance.event("PlayerCoinChange",null);
				}
				}seatAddCoin(sId,agent,addCoin,skipCoinClear=false){
				var seatInfo=this.getSeatInfo(sId);
				if (seatInfo && seatInfo.seat_id==sId && seatInfo.agent==agent){
					seatInfo.coin+=addCoin;
					if (skipCoinClear){
						seatInfo.skipCoin=0;
					}
					if (sId==this.seatId){
						GameEventDispatch.instance.event("PlayerCoinChange",null);
					}
				}
				}seatAddContestCoin(sId,agent,addCoin){
				var seatInfo=this.getSeatInfo(sId);
				if (seatInfo && seatInfo.seat_id==sId && seatInfo.agent==agent){
					seatInfo.contestCoin+=addCoin;
					if (sId==this.seatId){
						GameEventDispatch.instance.event("PlayerCoinChange",null);
					}
				}
				}seatAddContestScore(sId,agent,addScore){
				var seatInfo=this.getSeatInfo(sId);
				if (seatInfo && seatInfo.seat_id==sId && seatInfo.agent==agent){
					seatInfo.contestScore+=addScore;
					if (sId==this.seatId){
						GameEventDispatch.instance.event("PlayerCoinChange",null);
					}
				}
				}seatAddContestScoreByAgent(agent,addScore){
				var seatInfo=this.getSeatInfoByAgent(agent);
				if (seatInfo){
					seatInfo.contestScore+=addScore;
					if (seatInfo.seat_id==this.seatId){
						GameEventDispatch.instance.event("PlayerCoinChange",null);
					}
				}
				}seatAddContestCoinByAgent(agent,addCoin){
				var seatInfo=this.getSeatInfoByAgent(agent);
				if (seatInfo){
					seatInfo.contestCoin+=addCoin;
					if (seatInfo.seat_id==this.seatId){
						GameEventDispatch.instance.event("PlayerCoinChange",null);
					}
				}
				}seatAddCoinByAgent(agent,addCoin){
				var seatInfo=this.getSeatInfoByAgent(agent);
				if (seatInfo){
					seatInfo.coin+=addCoin;
					if (seatInfo.seat_id==this.seatId){
						GameEventDispatch.instance.event("PlayerCoinChange",null);
					}
				}
				}getSceneId(){
				return this.sceneId;
				}setSceneId(id){
				this.sceneId=id;
				}isGoldPoolScene(){
				if (this.sceneId > 0){
					var playId=ConfigManager.getConfValue("cfg_scene",this.sceneId,"play_id");
					return playId==4;
				}
				return false;
				}getSkillId(skillIndex){
				if (model.FightM.instance.sceneId > 0){
					var skills=ConfigManager.getConfValue("cfg_scene",model.FightM.instance.sceneId,"skills");
					if (skills){
						return skills[skillIndex];
					}
				}
				return 0;
			}
			//cd剩余时间
			getSkillCdLeftTime(skillId){
				var skillInfo;
				for (var i=0;i < this._skillList.length;i++){
					skillInfo=this._skillList [i];
					if (skillInfo.id==skillId){
						return skillInfo.cd;
					}
				}
				return 0;
			}
			//更新技能cd时间
			updateSkillCdLeftTime(skillData){
				var skillInfo;
				for (var i=0;i < this._skillList.length;i++){
					skillInfo=this._skillList [i];
					if (skillInfo.id==skillData.id){
						skillInfo.cd=skillData.cd;
						return;
					}
				}
				this._skillList[this._skillList.length]=skillData;
				}resetSkillCd(){
				var skillInfo;
				for (var i=0;i < this._skillList.length;i++){
					skillInfo=this._skillList [i];
					skillInfo.cd=0;
				}
			}
			//cd时间tick
			updateSkill(delta){
				var skillInfo;
				for (var i=0;i < this._skillList.length;i++){
					skillInfo=this._skillList [i];
					if (skillInfo.cd > 0){
						skillInfo.cd-=delta;
					}
				}
			}
			//获取连续射击间隔时间
			getShootInterval(){
				var seatInfo=this.getSeatInfo(this.seatId);
				var ret=ConfigManager.getConfValue("cfg_battery_skin",RoleInfoM.instance.getCurSkin(),"shootInterval");
				if (seatInfo){
					if (seatInfo.lvet > 0){
						var firing_rate=ConfigManager.getConfValue("cfg_skill",seatInfo.vsid,"firing_rate");
						ret=ret / firing_rate;
					}
				}
				return ret;
				}isShowSeatViolent(showIndex){
				var ret=false;
				var seatInfo=model.FightM.instance.getSeatInfo(model.FightM.instance.getSeatIdByShowSeatId(showIndex));
				if (seatInfo && seatInfo.lvet > 0){
					ret=true;
				}
				return ret;
				}getBulletSpeedRate(){
				var seatInfo=this.getSeatInfo(this.seatId);
				var ret=1;
				if (seatInfo){
					if (seatInfo.lvet > 0){
						ret=ConfigManager.getConfValue("cfg_skill",seatInfo.vsid,"speed_rate");
					}
				}
				return ret;
			}
			//狂暴时间更新
			updateViolent(delta){
				var violentUpdate=false;
				if (this._seatOneInfo){
					if (this._seatOneInfo.lvet > 0){
						this._seatOneInfo.lvet-=delta;
						if (this._seatOneInfo.lvet <=0){
							violentUpdate=true;
						}
					}
				}
				if (this._seatTwoInfo){
					if (this._seatTwoInfo.lvet > 0){
						this._seatTwoInfo.lvet-=delta;
						if (this._seatTwoInfo.lvet <=0){
							violentUpdate=true;
						}
					}
				}
				if (this._seatThreeInfo){
					if (this._seatThreeInfo.lvet > 0){
						this._seatThreeInfo.lvet-=delta;
						if (this._seatThreeInfo.lvet <=0){
							violentUpdate=true;
						}
					}
				}
				if (this._seatFourInfo){
					if (this._seatFourInfo.lvet > 0){
						this._seatFourInfo.lvet-=delta;
						if (this._seatFourInfo.lvet <=0){
							violentUpdate=true;
						}
					}
				}
				if (violentUpdate){
					GameEventDispatch.instance.event("ViolentUpdate");
				}
				}isOwnLock(){
				if (this.seatId==1){
					if (this._seatOneInfo){
						return this._seatOneInfo.lock_et > 0;
					}
					}else if (this.seatId==2){
					if (this._seatTwoInfo){
						return this._seatTwoInfo.lock_et > 0;
					}
					}else if (this.seatId==3){
					if (this._seatThreeInfo){
						return this._seatThreeInfo.lock_et > 0;
					}
					}else if (this.seatId==4){
					if (this._seatFourInfo){
						return this._seatFourInfo.lock_et > 0;
					}
				}
				return false;
				}updateLock(delta){
				if (this._seatOneInfo){
					if (this._seatOneInfo.lock_et > 0){
						this._seatOneInfo.lock_et-=delta;
						if (this._seatOneInfo.lock_et <=0 && model.FightM.instance.seatId==1){
							GameEventDispatch.instance.event("stopLock");
						}
					}
				}
				if (this._seatTwoInfo){
					if (this._seatTwoInfo.lock_et > 0){
						this._seatTwoInfo.lock_et-=delta;
						if (this._seatTwoInfo.lock_et <=0 && model.FightM.instance.seatId==2){
							GameEventDispatch.instance.event("stopLock");
						}
					}
				}
				if (this._seatThreeInfo){
					if (this._seatThreeInfo.lock_et > 0){
						this._seatThreeInfo.lock_et-=delta;
						if (this._seatThreeInfo.lock_et <=0 && model.FightM.instance.seatId==3){
							GameEventDispatch.instance.event("stopLock");
						}
					}
				}
				if (this._seatFourInfo){
					if (this._seatFourInfo.lock_et > 0){
						this._seatFourInfo.lock_et-=delta;
						if (this._seatFourInfo.lock_et <=0 && model.FightM.instance.seatId==4){
							GameEventDispatch.instance.event("stopLock");
						}
					}
				}
				}update(delta){
				this.updateSkill(delta);
				this.updateViolent(delta);
				this.updateLock(delta);
				}reset(){
				if (this._seatOneInfo){
					this._seatOneInfo.lock_et=0;
					this._seatOneInfo.lvet=0;
				}
				if (this._seatTwoInfo){
					this._seatTwoInfo.lock_et=0;
					this._seatOneInfo.lvet=0;
				}
				if (this._seatThreeInfo){
					this._seatThreeInfo.lock_et=0;
					this._seatOneInfo.lvet=0;
				}
				if (this._seatFourInfo){
					this._seatFourInfo.lock_et=0;
					this._seatOneInfo.lvet=0;
				};
				var skillInfo;
				for (var i=0;i < this._skillList.length;i++){
					skillInfo=this._skillList [i];
					skillInfo.cd=0;
				}
				GameEventDispatch.instance.event("ViolentUpdate");
				}addAgentGetInfo(data){
				this._agentGetArray.push(data);
				}getGoodsUnreachNum(ag,goodsId){
				var ret=0;
				var info;
				for (var i=0;i < this._agentGetArray.length;i++){
					info=this._agentGetArray [i];
					if (info.ag==ag && info.t==goodsId){
						ret+=info.v;
					}
				}
				return ret;
				}agentGetInfoUpdate(delta){
				var info;
				var removeArray=[];
				var coinUpdate=false;
				var goodsUpdate=false;
				for (var i=0;i < this._agentGetArray.length;i++){
					info=this._agentGetArray [i];
					info.leftTime-=delta;
					if (info.leftTime <=0){
						if (info.t==1){
							coinUpdate=true;
							model.FightM.instance.seatAddCoinByAgent(info.ag,info.v);
							}else if (info.t==201){
							goodsUpdate=true;
							model.FightM.instance.seatAddContestScoreByAgent(info.ag,info.v);
							}else{
							goodsUpdate=true;
						}
						removeArray.push(info);
					}
				}
				for (var j=0;j < removeArray.length;j++){
					var removeInfo=removeArray [j];
					for (var k=0;k < this._agentGetArray.length;k++){
						if (this._agentGetArray[k]==removeInfo){
							this._agentGetArray.splice(k,1);
							break ;
						}
					}
				}
				if (coinUpdate){
					GameEventDispatch.instance.event("FightCoinUpdate",null);
				}
				if (goodsUpdate){
					GameEventDispatch.instance.event("UpdateProfile",null);
					GameEventDispatch.instance.event("GoodsUpdate",null);
				}
				if (this._autoTime > 0){
					this._autoTime=this._autoTime-delta;
					if (this._autoTime <=0){
						GameEventDispatch.instance.event("AutoShootTimeOut",null);
					}
				}
				}getCoinRate(){
				var cfg=cfg_scene.instance(model.FightM.instance.sceneId+"");
				if (cfg.doubleRate[0]==1){
					return RoleInfoM.instance.coin_rate
					}else{
					return 1;
				}
				}getChangeRate(){
				var cfg=cfg_scene.instance(model.FightM.instance.sceneId+"");
				if (cfg.doubleRate[1]==1){
					return RoleInfoM.instance.chance_rate
					}else{
					return 1;
				}
				}initCountDown(end_time,element){
				var now=new Date().getTime();
				var now_time=Math.floor((now / 1000));
				var diff_time=end_time;
				if (diff_time < 0){
					diff_time=0;
				};
				var minutesleft=Math.floor(((diff_time)% 3600)/ 60);
				var secondsleft=(diff_time)% 60;
				if (minutesleft < 10)minutesleft="0"+minutesleft;
				if (secondsleft < 10)secondsleft="0"+secondsleft;
				if (model.FightM.instance.isMatchingGame()){
					element.text=""+minutesleft+":"+secondsleft;
					}else{
					element.text="本局倒计时："+minutesleft+":"+secondsleft;
				}
			}
			static get instance (){
				return FightM._instance || (FightM._instance=new FightM());
			}
		}

		model.FightM=Laya.FightM=FightM;
		FightM._instance=null;	

		class FishTypeM{
			constructor (){
				//this._infoList=null;
				//this.sceneId=0;
				this.aniNames=[
				"1",
				"2",
				"3",
				"4",
				"5",
				"6",
				"7",
				"8",
				"9",
				"10",
				"11",
				"12",
				"13",
				"14",
				"15",
				"201",
				"202"];
			}
			setInfo(){
				this.sceneId=1;
			}
			get infoList (){
				return this._infoList;
			}
			//大鱼的列表
			get bigFishIdArr (){
				var scene_id=FightM.instance.sceneId;
				var cfg=cfg_scene.instance(scene_id+"");
				return cfg.bigfish_arr;
			}
			//展现大鱼列表
			get showSmallFish (){
				var smallArr=[];
				for (var i=0;i < this.smallFishArr.length;i++){
					var fishData=cfg_fish.instance(this.smallFishArr[i]);
					if (fishData.fishType==1){
						smallArr.push({
							txt:{text:fishData.coin_rate},
							image:{skin:fishData.Imageurl},
							bei:{skin:"ui/fishType/bei.png"}
						});
						}else if (fishData.fishType==0){
						smallArr.push({
							txt:{text:fishData.coin_rate},
							image:{skin:fishData.Imageurl},
							bei:{skin:"ui/fishType/jinbian.png"}
						});
						}else{
						smallArr.push({
							txt:{text:fishData.coin_rate},
							image:{skin:fishData.Imageurl},
							bei:{skin:"ui/fishType/boos.png"}
						});
					}
				}
				return smallArr;
			}
			//展现小鱼列表
			get showBigFish (){
				var bigArr=[];
				for (var i=0;i < this.bigFishIdArr.length;i++){
					var fishData=cfg_fish.instance(this.bigFishIdArr[i]);
					if (fishData.fishType==0){
						bigArr.push({
							image:{skin:fishData.Imageurl},
							name:{text:fishData.fishname},
							beishu:{text:fishData.coin_rate},
							bei:{skin:"ui/fishType/jinbian.png"}
						});
						}else if (fishData.fishType==1){
						bigArr.push({
							image:{skin:fishData.Imageurl},
							name:{text:fishData.fishname},
							beishu:{text:fishData.coin_rate},
							bei:{skin:"ui/fishType/bei.png"}
						});
						}else{
						bigArr.push({
							image:{skin:fishData.Imageurl},
							name:{text:fishData.fishname},
							beishu:{text:fishData.coin_rate},
							bei:{skin:"ui/fishType/boos.png"}
						});
					}
				}
				return bigArr;
			}
			get smallFishArr (){
				var scene_id=FightM.instance.sceneId;
				var cfg=cfg_scene.instance(scene_id+"");
				return cfg.smallfish_arr;
			}
			static get instance (){
				return FishTypeM._instance || (FishTypeM._instance=new FishTypeM());
			}
		}

		model.FishTypeM=Laya.FishTypeM=FishTypeM;
		FishTypeM._instance=null;	

		class FriendM{
			constructor (){
				//好友数量限制
				this._friendLimit=50;
				//搜索好友信息
				//this._findFriendInfo=null;
				//好友列表
				//this._friendArr=null;
				//增量好友信息
				//this._deltaFriendArr=null;
				//好友列表所有信息
				//this._friendObj=null;
				//申请好友列表
				//this._applyFriendArr=null;
				//个性签名
				this._signatureStr="";
				this._findFriendInfo={};
				this._friendArr=[];
				this._applyFriendArr=[];
			}
			noApplyFriendList(){
				if (!this._applyFriendArr || !this._applyFriendArr.length || this._applyFriendArr.length <=0){
					return false
				}
				return true
				}searchFriend(idStr,data=null,isRobot=false){
				if (this._friendArr.length < this._friendLimit){
					if (data && isRobot==true && idStr==null){
						model.FriendM.instance.SearchFriendSuccess(data,isRobot);
						}else{
						var token=StartParam.instance.getParam("access_token");
						ApiManager.instance.getSearchFriend(token,idStr,Handler.create(this,this.SearchFriendSuccess),Handler.create(this,this.SearchFriendError));
					}
					}else{
					GameEventDispatch.instance.event("MsgTipContent","好友过多，请删除好友后再试");
				}
				}SearchFriendSuccess(data,isRobot=false){
				if (data.code=="success"){
					if (data.data['stauts']==1){
						GameEventDispatch.instance.event("MsgTipContent","该玩家已经你的好友");
						}else{
						data.data['robot']=isRobot;
						model.FriendM.instance.findFriendInfo=data['data'];
						UiManager.instance.loadView("AddFriend",null);
					}
					}else{
					GameEventDispatch.instance.event("MsgTipContent",data.msg);
				}
				}SearchFriendError(data){
				}updateFriendArr(){
				var obj;
				for (var i=0;i < this._deltaFriendArr.length;i++){
					obj=this._deltaFriendArr [i];
					this._friendObj[obj.id]=obj;
					this._friendArr[obj.rank-1]=obj;
				}
			}
			get applyFriendArr (){
				return this._applyFriendArr;
			}
			set applyFriendArr (value){
				this._applyFriendArr=value;
			}
			get findFriendInfo (){
				return this._findFriendInfo
			}
			set findFriendInfo (value){
				this._findFriendInfo={
					id:value.robot ? null :value.user_id,
					jjhId:value.robot ? null :value.jjh_user_id,
					name:value.nickname,
					icon:value.avatar,
					level:value.level,
					robot:value.robot
				};
			}
			get deltaFriendArr (){
				return this._deltaFriendArr;
			}
			set deltaFriendArr (value){
				this._deltaFriendArr=[];
				for (var i=0;i < value.length;i++){
					var obj=new FriendInfo();
					obj.rank=value[i][0];
					obj.id=value[i][1];
					obj.name=value[i][2];
					obj.icon=value[i][3];
					obj.level=value[i][4];
					obj.online=value[i][5];
					obj.signature=value[i][6];
					this._deltaFriendArr.push(obj);
				}
			}
			get friendLimit (){
				return this._friendLimit;
			}
			set friendLimit (value){
				this._friendLimit=value;
			}
			get signatureStr (){
				return this._signatureStr;
			}
			set signatureStr (value){
				this._signatureStr=value;
			}
			get friendArr (){
				return this._friendArr;
			}
			set friendArr (value){
				this._friendArr=[];
				this._friendObj={};
				for (var i=0;i < value.length;i++){
					var obj=new FriendInfo();
					obj.rank=value[i][0];
					obj.id=value[i][1];
					obj.name=value[i][2];
					obj.icon=value[i][3];
					obj.level=value[i][4];
					obj.online=value[i][5];
					obj.signature=value[i][6];
					this._friendObj[obj.id]=obj;
					this._friendArr[obj.rank-1]=obj;
				}
			}
			get onlineFriendArr (){
				var curArr=[];
				for (var i=0;i < this._friendArr.length;i++){
					if (this._friendArr[i].online){
						curArr.push(this._friendArr[i]);
					}
				}
				return curArr;
			}
			static get instance (){
				return FriendM._instance || (FriendM._instance=new FriendM())
			}
		}

		model.FriendM=Laya.FriendM=FriendM;
		FriendM._instance=null;	

		class GunM{
			constructor (){}
			getNextPower(id){
				var a=id+1;
				var battery=cfg_battery.instance(a+"");
				if (battery==null){
					return -1;
				}
				return battery.comsume;
				}needDiamod(id){
				var b=id+1;
				var battery=cfg_battery.instance(b+"");
				return battery.need_diamond;
				}giveCount(id){
				var c=id+1;
				var battery=cfg_battery.instance(c+"");
				var arr=battery.award;
				return arr[1];
			}
			static get instance (){
				return GunM._instance || (GunM._instance=new GunM());
			}
		}

		model.GunM=Laya.GunM=GunM;
		GunM._instance=null;	

		class HorseM{
			constructor (){
				this.isI=false;
				this._isOpenNotice=false;
				this._noticeTime=30;
				//分钟
				this._oneTimesNotice=true;
				this._oneTimes=1;
				//分钟
				this._horseTipArray=[{id:1,a6:300,agent:true},{id:3,a6:700,agent:true},{
					id:6,
					a6:100,
					agent:true
				},{id:4,a6:800,agent:false},{id:5,a6:500,agent:true},{id:3,a6:134,agent:false}];
				//this._resetArr=null;
				//this._repeatNum=NaN;
				this._horseTipArray=[];
			}
			addHorseTipItem(data){
				this._horseTipArray.push(data);
				}setInfo(){
				this.isI=true;
				}getHorseTipNum(){
				return this._horseTipArray.length;
				}getRepeatNum(){
				if (this._horseTipArray.length > 50){
					return 1;
				}
				return 3;
				}getHtml(){
				this.resetArr;
				var html="";
				if (this._horseTipArray.length > 0){
					var tipData=this._horseTipArray[0];
					if (tipData.id !=5){
						var agent=Number(tipData.agent);
						if (FightM.instance.getSeatInfoByAgent(agent)!=null){
							this.repeatNum=3;
							}else{
							this.repeatNum=1;
						}
						if (agent < 0){
							this.repeatNum=1;
						}
						}else{
						this.repeatNum=3;
					}
					this._horseTipArray.splice(0,1);
					var id=tipData.id;
					var cfg=cfg_hourse.instance(id+"");
					var conent;
					var isName=false;
					for (var i=1;i <=7;i++){
						var idTmp=cfg ["txt"+i];
						if (i==1 && idTmp==1){
							isName=true;
						}
						if (idTmp > 0){
							conent=this.getContent(idTmp);
							if (1==this.getType(idTmp)){
								if (isName && i==2){
									conent=LoginInfoM.instance.filterName(String(tipData["a"+i]));
									}else{
									conent=String(tipData["a"+i]);
								}
								conent=conent.replace(/[&<>]/g,"");
								if (ENV.channelType==3){
									conent=conent.replace("集结号","联机捕鱼");
								}
							}
							html+="<span color="+"'"+this.getColor(idTmp)+"'"+">"+conent+"</span>";
						}
					}
				}
				return html;
			}
			//获取打到boss金币个数
			getCoinCount(i){
				var tipData=this._horseTipArray[i];
			}
			//判断是否是系统公告
			isSystemHorse(i){
				var tipData=this._horseTipArray[i];
				var id=tipData.id;
				if (id==5){
					return true
					}else{
					return false
				}
			}
			//是否是自己
			isOwn(i){
				var tipData=this._horseTipArray[i];
				if (tipData.agent==true){
					return false;
					}else{
					this._resetArr.push(tipData);
					this._horseTipArray.splice(i,1);
					return true;
				}
				}getContent(id){
				var cf=cfg_hId.instance(id+"");
				var content=cf.txtContent;
				return content;
				}getType(id){
				var cf=cfg_hId.instance(id+"");
				return cf.txtType;
				}getColor(id){
				var cf=cfg_hId.instance(id+"");
				var color=cf.txtColor;
				return color;
			}getdata(){}
			get noticeTime (){
				var time=this._noticeTime *60 *1000;
				return time;
			}
			get isOpenNotice (){
				return this._isOpenNotice;
			}
			set isOpenNotice (boo){
				this._isOpenNotice=boo;
			}
			get isIn (){
				return this.isI;
			}
			set isIn (_isI){
				this.isI=_isI;
			}
			get repeatNum (){
				return this._repeatNum;
			}
			set repeatNum (num){
				this._repeatNum=num;
			}
			//将跑马灯按照规则排序
			get resetArr (){
				this._resetArr=[];
				for (var i=0;i < this._horseTipArray.length;i++){
					if (this.isSystemHorse(i)){
						var obj=this._horseTipArray[i];
						this._horseTipArray.splice(i,1);
						this._resetArr.push(obj);
					}
				}
				this._horseTipArray.sort(function(a,b){
					var coinCountA=Number(a.a6);
					var coinCountB=Number(b.a6);
					var agentA=Number(a.agent);
					var agnetB=Number(b.agent);
					if (FightM.instance.getSeatInfoByAgent(agentA)!=null || FightM.instance.getSeatInfoByAgent(agnetB)!=null){
						return 1;
						}else{
						if (coinCountA > coinCountB){
							return 1;
						}
					}
				});
				if (this._resetArr.length > 0){
					for (var k=0;k < this._resetArr.length;k++){
						this._horseTipArray.unshift(this._resetArr[k]);
					}
				}
				return this._horseTipArray;
			}
			set resetArr (arr){
				this._resetArr=arr;
			}
			get oneTimes (){
				var time=this._oneTimes *60 *1000;
				return time;
			}
			get oneTimesNotice (){
				return this._oneTimesNotice;
			}
			// colorOne=
			set oneTimesNotice (value){
				this._oneTimesNotice=value;
			}
			static get instance (){
				return HorseM._instance || (HorseM._instance=new HorseM());
			}
		}

		model.HorseM=Laya.HorseM=HorseM;
		HorseM._instance=null;	

		class LevelM{
			constructor (){
				//this.keyArr=null;
				//this.sceneType=0;
				//this.sceneArr=null;
				//排行榜
				this._isCanReward=0;
				this._coinRankLv=-1;
				//this._coinReward=null;
				this._strengthRankLv=-1;
				//this._strengthReward=null;
				this._loopMsg="";
				this._todayStrIsHaveReward=false;
				this._todayCoinIsHaveReward=false;
				this._isPopupRankPage=0;
				if (!this._coinReward){
					this._coinReward=[];
				}
				if (!this._strengthReward){
					this._strengthReward=[];
				}
			}
			loopMsg(){
				if (ActivityM.instance.getActivityData('top_double')){
					var data=ActivityM.instance.getActivityData('top_double');
					this._loopMsg=data.config.timing_msg;
					}else{
					this._loopMsg="";
				}
				return this._loopMsg;
				}setInfo(stype){
				this.sceneType=stype;
				this.keyArr=[];
				var items=ConfigManager.getConfBySheet("cfg_scene");
				for (var i in items){
					this.keyArr.push(i);
				}
				this.sceneArr=[];
				this.sceneArr=ConfigManager.groupby("cfg_scene","sceneType")[stype];
				}getUnloc(id){
				var levlem=this.sceneArr[id];
				return levlem.unlock
				}getCountArr(level){
				var cfg=cfg_level.instance(level);
				return cfg.awardCount;
				}getGoodsArr(level){
				var cfg=cfg_level.instance(level);
				return cfg.awardId;
				}listArr(){
				var arr=[];
				for (var j=0;j < this.sceneArr.length;j++){
					var levelem=this.sceneArr[j];
					arr.push({levelImg:{skin:levelem.imageurl}});
				}
				return arr;
				}setTodayStrIsHaveReward(result){
				var strLv=result.data["strength_top_me"];
				var strList=result.data["strength_top"];
				var coinLv=result.data["gold_top_me"];
				var coinList=result.data["gold_top"];
				if (strList[(strLv-1)+""] && strList[(strLv-1)+""].reward.length > 0){
					this._todayStrIsHaveReward=true;
					}else{
					this._todayStrIsHaveReward=false;
				}
				if (coinList[(coinLv-1)+""] && coinList[(coinLv-1)+""].reward.length > 0){
					this._todayCoinIsHaveReward=true;
					}else{
					this._todayCoinIsHaveReward=false;
				}
			}
			get rankDoubleReward (){
				return ActivityM.instance.activityIsProceed('top_double')
			}
			get todayCoinIsHaveReward (){
				return this._todayCoinIsHaveReward;
			}
			get isCanReward (){
				return this._isCanReward;
			}
			set isCanReward (value){
				this._isCanReward=value;
			}
			get isPopupRankPage (){
				return this._isPopupRankPage;
			}
			set isPopupRankPage (value){
				this._isPopupRankPage=value;
			}
			get coinRankLv (){
				return this._coinRankLv;
			}
			set coinRankLv (value){
				this._coinRankLv=value;
			}
			get coinReward (){
				return this._coinReward;
			}
			set coinReward (value){
				this._coinReward=value;
			}
			get todayStrIsHaveReward (){
				return this._todayStrIsHaveReward;
			}
			get strengthRankLv (){
				return this._strengthRankLv;
			}
			set strengthRankLv (value){
				this._strengthRankLv=value;
			}
			get strengthReward (){
				return this._strengthReward;
			}
			set strengthReward (value){
				this._strengthReward=value;
			}
			static get instance (){
				return LevelM._instance || (LevelM._instance=new LevelM());
			}
		}

		model.LevelM=Laya.LevelM=LevelM;
		LevelM._instance=null;	

		class LoadResM{
			constructor (){
				//this._firstArr=null;
				//this._firstSpineArr=null;
				//this._secondSpineArr=null;
				//this._firstSceneArr=null;
				//第一个场景
				//this._secondSceneArr=null;
				//第二个场景
				//this._threeSceneArr=null;
				//第三个场景
				//this._fourSceneArr=null;
				//第四个场景
				//this._fiveSceneArr=null;
				//第五个场景
				//this._sixSceneArr=null;
				//第六个场景
				//this._sevenSceneArr=null;
				//第七个场景
				//this._eightSceneArr=null;
				//第八个场景
				//this._breakFirstScnen=null;
				//this._breakSecondScene=null;
				//this._breakThreeScene=null;
				//this._breakFourScene=null;
				//this._firstSceneSpineArr=null;
				//this._secondSceneSpineArr=null;
				//this._threeSceneSpineArr=null;
				//this._fourSceneSpineArr=null;
				//this._fiveSceneSpineArr=null;
				//this._sixSceneSpineArr=null;
				//this._sevenSceneSpineArr=null;
				//this._eightSceneSpineArr=null;
			}
			commonSceneArr(){
				return [
				{url:"res/atlas/ani/shuimu.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/bullet.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/paotai.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/paosheng.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/guide.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/coin.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/coin1.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/cd.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/fish20.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/shiziyu.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/fish22.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/fish23.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/fengweiyu.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/hetun.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/jinyu.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/fish28.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/fish29.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/fish25.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/fish24.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/fish26.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/haigui.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/fish30.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/fish31.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/kedou.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/haima.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ani/zhangyu.atlas",type:Loader.ATLAS},
				{url:"scene/scene_1_1_1.png",type:Loader.IMAGE},
				{url:"scene/scene_1_1_2.png",type:Loader.IMAGE},
				{url:"scene/scene_1_2.png",type:Loader.IMAGE},
				{url:"scene/scene_1_3.png",type:Loader.IMAGE},
				{url:"scene/freeze.png",type:Loader.IMAGE},
				{url:"res/atlas/ui/fight.atlas",type:Loader.ATLAS},
				{url:"res/atlas/ui/fish.atlas",type:Loader.ATLAS},
				{url:"spine/sanguanpao/sanguanpao.sk",type:Loader.BUFFER},
				{url:"spine/chuantoupao1/chuantoupao_01.sk",type:Loader.BUFFER},
				{url:"spine/chujipao1/chujipao_01.sk",type:Loader.BUFFER},
				{url:"spine/sandanpao1/sandanpao_01.sk",type:Loader.BUFFER},
				{url:"spine/sushepao1/sushepao_01.sk",type:Loader.BUFFER},
				{url:"spine/chuantoupao2/chuantoupao_02.sk",type:Loader.BUFFER},
				{url:"spine/chujipao2/chujipao_02.sk",type:Loader.BUFFER},
				{url:"spine/sandanpao2/sandanpao_02.sk",type:Loader.BUFFER},
				{url:"spine/sushepao2/sushepao_02.sk",type:Loader.BUFFER},
				{url:"spine/chuantoupaoEffect/H5_chuantoupao.sk",type:Loader.BUFFER},
				{url:"spine/putongpaoEffect/H5_putongpao.sk",type:Loader.BUFFER},
				{url:"spine/shanshepaoEffect/H5_shanshepao.sk",type:Loader.BUFFER},
				{url:"spine/shushepaoEffect/H5_shushepao.sk",type:Loader.BUFFER},
				{url:"spine/zhuanfanle/zhuanfanle.sk",type:Loader.BUFFER},
				{url:"spine/facaile/facaile.sk",type:Loader.BUFFER},
				{url:"spine/zhuanpan/H5_zhuanpan.sk",type:Loader.BUFFER},
				{url:"spine/suoding/H5_suoding.sk",type:Loader.BUFFER},
				{url:"spine/baozha2/H5_baozha.sk",type:Loader.BUFFER},
				{url:"spine/bossbaozha/H5_bossbaozha.sk",type:Loader.BUFFER},
				{url:"spine/shengji/ShengJi.sk",type:Loader.BUFFER},
				{url:"spine/dujiaojing/dujiaojing.sk",type:Loader.BUFFER},
				{url:"spine/shijiebeiEffect/H5_shijiebei.sk",type:Loader.BUFFER},
				{url:"spine/shijiebei/shijiebei.sk",type:Loader.BUFFER},
				{url:"spine/sanguanpao/sanguanpao.png",type:Loader.IMAGE},
				{url:"spine/chuantoupao1/chuantoupao_01.png",type:Loader.IMAGE},
				{url:"spine/chujipao1/chujipao_01.png",type:Loader.IMAGE},
				{url:"spine/sandanpao1/sandanpao_01.png",type:Loader.IMAGE},
				{url:"spine/sushepao1/sushepao_01.png",type:Loader.IMAGE},
				{url:"spine/chuantoupao2/chuantoupao_02.png",type:Loader.IMAGE},
				{url:"spine/chujipao2/chujipao_02.png",type:Loader.IMAGE},
				{url:"spine/sandanpao2/sandanpao_02.png",type:Loader.IMAGE},
				{url:"spine/sushepao2/sushepao_02.png",type:Loader.IMAGE},
				{url:"spine/chuantoupaoEffect/H5_chuantoupao.png",type:Loader.IMAGE},
				{url:"spine/putongpaoEffect/H5_putongpao.png",type:Loader.IMAGE},
				{url:"spine/shanshepaoEffect/H5_shanshepao.png",type:Loader.IMAGE},
				{url:"spine/shushepaoEffect/H5_shushepao.png",type:Loader.IMAGE},
				{url:"spine/zhuanfanle/zhuanfanle.png",type:Loader.IMAGE},
				{url:"spine/facaile/facaile.png",type:Loader.IMAGE},
				{url:"spine/zhuanpan/H5_zhuanpan.png",type:Loader.IMAGE},
				{url:"spine/suoding/H5_suoding.png",type:Loader.IMAGE},
				{url:"spine/baozha2/H5_baozha.png",type:Loader.IMAGE},
				{url:"spine/bossbaozha/H5_bossbaozha.png",type:Loader.IMAGE},
				{url:"spine/shengji/ShengJi.png",type:Loader.IMAGE},
				{url:"spine/dujiaojing/dujiaojing.png",type:Loader.IMAGE},
				{url:"spine/shijiebeiEffect/H5_shijiebei.png",type:Loader.IMAGE},
				{url:"spine/shijiebei/shijiebei.png",type:Loader.IMAGE},]
				}commonSceneSpineArr(){
				return [
				"spine/chuantoupao1/chuantoupao_01.sk",
				"spine/chujipao1/chujipao_01.sk",
				"spine/sandanpao1/sandanpao_01.sk",
				"spine/sushepao1/sushepao_01.sk",
				"spine/chuantoupao2/chuantoupao_02.sk",
				"spine/chujipao2/chujipao_02.sk",
				"spine/sandanpao2/sandanpao_02.sk",
				"spine/sushepao2/sushepao_02.sk",
				"spine/chuantoupaoEffect/H5_chuantoupao.sk",
				"spine/putongpaoEffect/H5_putongpao.sk",
				"spine/shanshepaoEffect/H5_shanshepao.sk",
				"spine/shushepaoEffect/H5_shushepao.sk",
				"spine/zhuanfanle/zhuanfanle.sk",
				"spine/facaile/facaile.sk",
				"spine/zhuanpan/H5_zhuanpan.sk",
				"spine/suoding/H5_suoding.sk",
				"spine/baozha2/H5_baozha.sk",
				"spine/bossbaozha/H5_bossbaozha.sk",
				"spine/shengji/ShengJi.sk",
				"spine/dujiaojing/dujiaojing.sk",
				"spine/shijiebeiEffect/H5_shijiebei.sk",
				"spine/shijiebei/shijiebei.sk",]
				}loadSkeleton(skName,imgName,resArr,spineArr){
				resArr.push({url:skName,type:Loader.BUFFER});
				resArr.push({url:imgName,type:Loader.IMAGE});
				spineArr.push(skName);
			}
			//进入场景的所需的骨骼动画
			get firstSpineArr (){
				if (this._firstSceneSpineArr){
					return this._firstSceneSpineArr;
				}
				this._firstSpineArr=[];
				this._firstSpineArr.push("spine/jixieyuwang/H5_jixieyuwang.sk");
				this._firstSpineArr.push("spine/wannianjue/H5_wannianjue.sk");
				this._firstSpineArr.push("spine/tieqianxiewang/H5_tieqianxiewang.sk");
				this._firstSpineArr.push("spine/shenhaijujing/H5_shenhaijujing.sk");
				this._firstSpineArr.push("spine/guang/25xuanzhuanguangxiao.sk");
				return this._firstSpineArr;
			}
			//第三个场景解析骨骼动画资源
			get threeSceneSpineArr (){
				return this._threeSceneSpineArr;
			}
			//第二个场景资源
			get secondScene (){
				if (this._secondSceneArr){
					return this._secondSceneArr;
				}
				this._secondSceneArr=this.commonSceneArr();
				this._secondSceneSpineArr=this.commonSceneSpineArr();
				this._secondSceneArr.push({url:"ui/fish/boss_2.png",type:Loader.IMAGE});
				this._secondSceneArr.push({url:"res/atlas/ani/chutousha.atlas",type:Loader.ATLAS});
				this.loadSkeleton("spine/heidong/H5_heidong.sk","spine/heidong/H5_heidong.png",this._secondSceneArr,this._secondSceneSpineArr);
				return this._secondSceneArr;
			}
			get secondSpineArr (){
				if (this._secondSpineArr){
					return this._secondSpineArr;
				}
				this._secondSpineArr=[];
				this._secondSpineArr.push("spine/pao/H5_pao.sk");
				this._secondSpineArr.push("spine/chuantoupao1/chuantoupao_01.sk");
				this._secondSpineArr.push("spine/chujipao1/chujipao_01.sk");
				this._secondSpineArr.push("spine/sandanpao1/sandanpao_01.sk");
				this._secondSpineArr.push("spine/sushepao1/sushepao_01.sk");
				this._secondSpineArr.push("spine/chuantoupao2/chuantoupao_02.sk");
				this._secondSpineArr.push("spine/chujipao2/chujipao_02.sk");
				this._secondSpineArr.push("spine/sandanpao2/sandanpao_02.sk");
				this._secondSpineArr.push("spine/sushepao2/sushepao_02.sk");
				this._secondSpineArr.push("spine/zhuanpan/H5_zhuanpan.sk");
				this._secondSpineArr.push("spine/suoding/H5_suoding.sk");
				this._secondSpineArr.push("spine/ankangyu/ankangyu.sk");
				this._secondSpineArr.push("spine/qiyu/qiyu.sk");
				this._secondSpineArr.push("spine/eyu/eyu.sk");
				this._secondSpineArr.push("spine/pangxie/pangxie.sk");
				this._secondSpineArr.push("spine/qiyu/qiyu.sk");
				this._secondSpineArr.push("spine/baozha2/H5_baozha.sk");
				this._secondSpineArr.push("spine/ankangyu/ankangyu.sk");
				this._secondSpineArr.push("spine/dujiaojing/dujiaojing.sk");
				this._secondSpineArr.push("spine/bossbaozha/H5_bossbaozha.sk");
				this._secondSpineArr.push("spine/shushepaoEffect/H5_shushepao.sk");
				this._secondSpineArr.push("spine/facaile/facaile.sk");
				this._secondSpineArr.push("spine/baozha/H5_baozha.sk");
				this._secondSpineArr.push("spine/chuantoupaoEffect/H5_chuantoupao.sk");
				this._secondSpineArr.push("spine/shengji/ShengJi.sk");
				this._secondSpineArr.push("spine/shayu/shayu.sk");
				this._secondSpineArr.push("spine/haitun/haitun.sk");
				this._secondSpineArr.push("spine/qiandai/H5_qiandai.sk");
				this._secondSpineArr.push("spine/shanshepaoEffect/H5_shanshepao.sk");
				this._secondSpineArr.push("spine/haigui/haigui.sk");
				this._secondSpineArr.push("spine/heidong/H5_heidong.sk");
				this._secondSpineArr.push("spine/chujipao1/chujipao_01.sk");
				this._secondSpineArr.push("spine/shijiebei/shijiebei.sk");
				this._secondSpineArr.push("spine/shijiebeiEffect/H5_shijiebei.sk");
				return this._secondSpineArr;
			}
			get firstArr (){
				if (this._firstArr){
					return this._firstArr;
				}
				this._firstArr=[];
				this._firstArr.push({url:"res/atlas/ui/common.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/common_ex.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/mainPage.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/matchSettle.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"ui/mainPage/bg.png",type:Loader.IMAGE});
				this._firstArr.push({url:"res/atlas/ui/prize.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"spine/jixieyuwang/H5_jixieyuwang.sk",type:Loader.BUFFER});
				this._firstArr.push({url:"spine/jixieyuwang/H5_jixieyuwang.png",type:Loader.IMAGE});
				this._firstArr.push({url:"spine/shenhaijujing/H5_shenhaijujing.sk",type:Loader.BUFFER});
				this._firstArr.push({url:"spine/shenhaijujing/H5_shenhaijujing.png",type:Loader.IMAGE});
				this._firstArr.push({url:"spine/tieqianxiewang/H5_tieqianxiewang.sk",type:Loader.BUFFER});
				this._firstArr.push({url:"spine/tieqianxiewang/H5_tieqianxiewang.png",type:Loader.IMAGE});
				this._firstArr.push({url:"scene/scene_1_1_1.png",type:Loader.IMAGE});
				this._firstArr.push({url:"scene/scene_1_1_2.png",type:Loader.IMAGE});
				this._firstArr.push({url:"scene/scene_1_2.png",type:Loader.IMAGE});
				this._firstArr.push({url:"scene/scene_1_3.png",type:Loader.IMAGE});
				this._firstArr.push({url:"spine/wannianjue/H5_wannianjue.sk",type:Loader.BUFFER});
				this._firstArr.push({url:"spine/wannianjue/H5_wannianjue.png",type:Loader.IMAGE});
				this._firstArr.push({url:"spine/guang/25xuanzhuanguangxiao.sk",type:Loader.BUFFER});
				this._firstArr.push({url:"spine/guang/25xuanzhuanguangxiao.png",type:Loader.IMAGE});
				this._firstArr.push({url:"spine/tishi/H5_tishi.sk",type:Loader.BUFFER});
				this._firstArr.push({url:"spine/tishi/H5_tishi.png",type:Loader.IMAGE});
				this._firstArr.push({url:"abbey/H5_loading1.part",type:Loader.JSON});
				this._firstArr.push({url:"res/atlas/font.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/load.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/firstCharge.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/fishType.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/rewardPage.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/setting.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/monthCard.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/rank.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/bank.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/share.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/shop.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/register.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/rewardTip.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/taskDaily.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/exchange.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/pack.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/changeSkin.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/subscription.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/match.atlas",type:Loader.ATLAS});
				this._firstArr.push({url:"res/atlas/ui/fish.atlas",type:Loader.ATLAS});
				if (!WxC.isInMiniGame()){
					this._firstArr.push({url:"spine/loading/YX_Loading.sk",type:Loader.BUFFER});
					this._firstArr.push({url:"spine/loading/YX_Loading.png",type:Loader.IMAGE});
				}
				return this._firstArr;
			}
			//第二个场景解析骨骼动画资源
			get secondScnenSpineArr (){
				return this._secondSceneSpineArr;
			}
			//第一个场景的资源
			get firstSceneArr (){
				if (this._firstSceneArr){
					return this._firstSceneArr;
				}
				this._firstSceneArr=this.commonSceneArr();
				this._firstSceneSpineArr=this.commonSceneSpineArr();
				this._firstSceneArr.push({url:"ui/fish/boss_1.png",type:Loader.IMAGE});
				return this._firstSceneArr;
			}
			//第六个场景资源
			get sixScene (){
				if (this._sixSceneArr){
					return this._sixSceneArr;
				}
				this._sixSceneArr=this.commonSceneArr();
				this._sixSceneSpineArr=this.commonSceneSpineArr();
				this._sixSceneArr.push({url:"ui/fish/boss_4.png",type:Loader.IMAGE});
				this._sixSceneArr.push({url:"res/atlas/ui/matchSettle.atlas",type:Loader.ATLAS});
				return this._sixSceneArr;
			}
			//第一个场景要解析的骨骼动画资源
			get firstSceneSpineArr (){
				return this._firstSceneSpineArr;
			}
			//第三个场景资源
			get threeScnen (){
				if (this._threeSceneArr){
					return this._threeSceneArr;
				}
				this._threeSceneArr=this.commonSceneArr();
				this._threeSceneSpineArr=this.commonSceneSpineArr();
				this._threeSceneArr.push({url:"ui/fish/boss_3.png",type:Loader.IMAGE});
				this._threeSceneArr.push({url:"res/atlas/ani/fish21.atlas",type:Loader.ATLAS});
				this._threeSceneArr.push({url:"res/atlas/ani/fish27.atlas",type:Loader.ATLAS});
				this.loadSkeleton("spine/qiandai/H5_qiandai.sk","spine/qiandai/H5_qiandai.png",this._threeSceneArr,this._threeSceneSpineArr);
				return this._threeSceneArr;
			}
			//第六个场景的骨骼动画资源
			get sixSceneSpineArr (){
				return this._sixSceneSpineArr;
			}
			//第四个场景资源
			get fourScene (){
				if (this._fourSceneArr){
					return this._fourSceneArr;
				}
				this._fourSceneArr=this.commonSceneArr();
				this._fourSceneSpineArr=this.commonSceneSpineArr();
				this._fourSceneArr.push({url:"ui/fish/boss_4.png",type:Loader.IMAGE});
				this._fourSceneArr.push({url:"res/atlas/ani/fish21.atlas",type:Loader.ATLAS});
				return this._fourSceneArr;
			}
			//第四个场景解析骨骼动画资源
			get fourSceneSpineArr (){
				return this._fourSceneSpineArr;
			}
			//第五个场景资源
			get fiveScene (){
				if (this._fiveSceneArr){
					return this._fiveSceneArr;
				}
				this._fiveSceneArr=this.commonSceneArr();
				this._fiveSceneSpineArr=this.commonSceneSpineArr();
				this._fiveSceneArr.push({url:"ui/fish/boss_4.png",type:Loader.IMAGE});
				this._fiveSceneArr.push({url:"res/atlas/ui/matchSettle.atlas",type:Loader.ATLAS});
				return this._fiveSceneArr;
			}
			//第五个场景的骨骼动画资源
			get fiveSceneSpineArr (){
				return this._fiveSceneSpineArr;
			}
			//断线重连进入第一场景
			get brokeFirstScnenArr (){
				this._breakFirstScnen=[];
				for (var i=0;i < this.firstArr.length;i++){
					this._breakFirstScnen.push(this.firstArr[i]);
				}
				for (var j=0;j < this.firstSceneArr.length;j++){
					this._breakFirstScnen.push(this.firstSceneArr[j]);
				}
				return this._breakFirstScnen;
			}
			//第八个骨骼动画资源
			get eightSceneSpineArr (){
				return this._eightSceneSpineArr;
			}
			//第七个场景资源
			get sevenScene (){
				if (this._sevenSceneArr){
					return this._sevenSceneArr;
				}
				this._sevenSceneArr=this.commonSceneArr();
				this._sevenSceneSpineArr=this.commonSceneSpineArr();
				this._sevenSceneArr.push({url:"ui/fish/boss_4.png",type:Loader.IMAGE});
				this._sevenSceneArr.push({url:"res/atlas/ui/matchSettle.atlas",type:Loader.ATLAS});
				return this._sevenSceneArr;
			}
			//第七个场景的骨骼动画资源
			get sevenSceneSpineArr (){
				return this._sevenSceneSpineArr;
			}
			//第八个场景动画资源
			get eightScene (){
				if (this._eightSceneArr){
					return this._eightSceneArr;
				}
				this._eightSceneArr=this.commonSceneArr();
				this._eightSceneSpineArr=this.commonSceneSpineArr();
				this._eightSceneArr.push({url:"ui/fish/boss_4.png",type:Loader.IMAGE});
				this._eightSceneArr.push({url:"res/atlas/ui/matchSettle.atlas",type:Loader.ATLAS});
				this.loadSkeleton("spine/eyu/eyu.sk","spine/eyu/eyu.png",this._eightSceneArr,this._eightSceneSpineArr);
				return this._eightSceneArr;
			}
			//断线重连进入第二个场景
			get brokeSecondSceneArr (){
				this._breakSecondScene=[];
				for (var i=0;i < this.firstArr.length;i++){
					this._breakFirstScnen.push(this.firstArr[i]);
				}
				for (var j=0;j < this.secondScene.length;j++){
					this._breakFirstScnen.push(this.secondScene[j]);
				}
				return this._breakSecondScene;
			}
			//断线重连进入第三个场景
			get brokeThreeSceneArr (){
				this._breakThreeScene=[];
				for (var i=0;i < this.firstArr.length;i++){
					this._breakThreeScene.push(this.firstArr[i]);
				}
				for (var j=0;j < this.threeScnen.length;j++){
					this._breakThreeScene.push(this.threeScnen[j]);
				}
				return this._breakThreeScene;
			}
			//断线重连进入第四个场景
			get brokeFourSceneArr (){
				this._breakFourScene=[];
				for (var i=0;i < this.firstArr.length;i++){
					this._breakFourScene.push(this.firstArr[i]);
				}
				for (var j=0;j < this.fourScene.length;j++){
					this._breakFourScene.push(this.fourScene[j]);
				}
				return this._breakFourScene;
			}
			static get instance (){
				return LoadResM._instance || (LoadResM._instance=new LoadResM());
			}
		}

		model.LoadResM=Laya.LoadResM=LoadResM;
		LoadResM._instance=null;	

		class LoadTipM{
			constructor (){
				//this._idArr=null;
				//this._contentArr=null;
				this._getInRoomFailCount=0;
			}
			getIndex(len){
				var index=Math.floor(Math.random()*len);
				return index;
			}
			get idArr (){
				if (!this._idArr){
					this._idArr=[];
					var items;
					var i=0;
					if (WxC.isInMiniGame()){
						items=ConfigManager.getConfBySheet("cfg_loadtip_weixin");
						for (i in items){
							this._idArr.push(i);
						}
					}
					else{
						items=ConfigManager.getConfBySheet("cfg_loadtip");
						for (i in items){
							this._idArr.push(i);
						}
					}
				}
				return this._idArr
			}
			get getInRoomFailCount (){
				return this._getInRoomFailCount;
			}
			set getInRoomFailCount (count){
				this._getInRoomFailCount=count;
			}
			get showContent (){
				var id=this.getIndex(this.idArr.length);
				var content=this.contentArr[id];
				return content;
			}
			get contentArr (){
				if (!this._contentArr){
					this._contentArr=[];
					for (var j=0;j < this.idArr.length;j++){
						var cfg;
						if (WxC.isInMiniGame()){
							cfg=cfg_loadtip_weixin.instance(this.idArr[j]+"");
							this._contentArr.push(cfg.txtContent);
						}
						else{
							cfg=cfg_loadtip.instance(this.idArr[j]+"");
							this._contentArr.push(cfg.txtContent);
						}
					}
				}
				return this._contentArr;
			}
			static get instance (){
				return LoadTipM._instance || (LoadTipM._instance=new LoadTipM());
			}
		}

		model.LoadTipM=Laya.LoadTipM=LoadTipM;
		LoadTipM._instance=null;	

		class LoginInfoM{
			constructor (){
				//this.code=NaN;
				//this.name=null;
				//this.uid=NaN;
				//this._shopRate=NaN;
				this.mainPageShow=false;
				//主界面是否加载过
				this._openBankBatteryLevel=0;
				this._openCertification=0;
				//强制实名认证开关
				this._isShowRankAniBox=0;
				this._ageType=1;
				this._nameFilter=[];
				this.privacyArr=[];
				this.gameArr=[];
				this._shopRate=1;
			}
			filterName(name){
				var tmp=name;
				for (var i=0;i < this._nameFilter.length;i++){
					var nameFilterElement=this._nameFilter[i];
					tmp=tmp.replace(new RegExp(nameFilterElement,"gm"),"*");
				}
				return tmp
				}fromApp(){
				return StartParam.instance.getParam("platform")=="app";
				}from360App(){
				return StartParam.instance.getParam("platform")=="360";
				}fromMeizu(){
				return StartParam.instance.getParam("platform")=="meizu";
				}fromHuawei(){
				return StartParam.instance.getParam("platform")=="huawei";
				}fromQuick(){
				return StartParam.instance.getParam("platform")=="quick";
				}fromAndroid(){
				return this.fromApp()|| this.from360App()|| this.fromMeizu()|| this.fromHuawei()|| this.fromQuick()
				}setShopRate(rate){
				this._shopRate=rate;
				}getShopRate(){
				return this._shopRate;
			}
			set nameFilter (value){
				this._nameFilter=value;
			}
			get openBankBatteryLevel (){
				return this._openBankBatteryLevel;
			}
			set openBankBatteryLevel (value){
				this._openBankBatteryLevel=value;
			}
			get openCertification (){
				return this._openCertification
			}
			set openCertification (value){
				this._openCertification=value;
			}
			get ageType (){
				return this._ageType;
			}
			set ageType (value){
				this._ageType=value;
			}
			get isShowRankAniBox (){
				return this._isShowRankAniBox;
			}
			set isShowRankAniBox (value){
				this._isShowRankAniBox=value;
			}
			static get instance (){
				return LoginInfoM._instance || (LoginInfoM._instance=new LoginInfoM());
			}
		}

		model.LoginInfoM=Laya.LoginInfoM=LoginInfoM;
		LoginInfoM._instance=null;	

		class LoginM{
			constructor (){
				//this._resArr=null;
				//this._loginState=NaN;
				//this._spineArr=null;
				//this._sceneId=NaN;
				//this._contestId=0;
				this._roomId=-1;
				//this._pageId=null;
				this._IsfirstEntryGame=true;
				this._preLoadFishIds=null;
				this._preLoadBullet=false;
				//是否完成身份认证
				this._isCompleteCertification=0;
				this._popupCertificationTimes=0;
				this._isNovicePlayer=1;
				//1是新手玩家 0不是新手玩家
				this._replaceRankName="***";
				this._preLoadFishIds=[];
			}
			setFishIdPreload(fishId){
				this._preLoadFishIds[fishId]=1;
				}isFishIdPreload(fishId){
				if (this._preLoadFishIds[fishId]){
					return true;
				}
				return false;
				}setBulletPreload(){
				this._preLoadBullet=true;
				}isBulletPreload(){
				return this._preLoadBullet;
				}getMapUrl(url){
				var dic=Laya.loader.getRes("manifest.json");
				if (dic[url]){
					return dic[url];
				}
				return url;
				}getContestId(){
				return this._contestId;
				}setContestId(contestId,sceneId){
				this._contestId=contestId;
				this._sceneId=sceneId;
			}
			get popupCertificationTimes (){
				return this._popupCertificationTimes;
			}
			set popupCertificationTimes (value){
				this._popupCertificationTimes=value;
			}
			get IsfirstEntryGame (){
				return this._IsfirstEntryGame
			}
			set IsfirstEntryGame (isFirst){
				this._IsfirstEntryGame=isFirst;
			}
			get pageId (){
				return this._pageId;
			}
			set pageId (id){
				this._pageId=id;
			}
			get sceneId (){
				return this._sceneId;
			}
			set sceneId (id){
				this._contestId=0;
				this._sceneId=id;
				this._roomId=-1;
			}
			get isCompleteCertification (){
				return this._isCompleteCertification;
			}
			set isCompleteCertification (value){
				this._isCompleteCertification=value;
			}
			get resArr (){
				return this._resArr;
			}
			set resArr (res){
				this._resArr=res;
			}
			get loginState (){
				return this._loginState;
			}
			set loginState (state){
				this._loginState=state;
			}
			get roomId (){
				return this._roomId;
			}
			set roomId (value){
				this._roomId=value;
			}
			get spineArr (){
				return this._spineArr
			}
			set spineArr (arr){
				this._spineArr=arr;
			}
			get isNovicePlayer (){
				return this._isNovicePlayer;
			}
			set isNovicePlayer (value){
				this._isNovicePlayer=value;
			}
			get replaceRankName (){
				return this._replaceRankName;
			}
			static get instance (){
				return LoginM._instance || (LoginM._instance=new LoginM());
			}
		}

		model.LoginM=Laya.LoginM=LoginM;
		LoginM._instance=null;	

		class MatchM{
			constructor (){
				this._isMatchSart=0;
				//比赛是否开始
				this._prepareState={1:0,2:0,3:0,4:0};
				//房间内准备状态
				this._roomName="";
				//房主名字
				this._roomTime=0;
				//房间持续时间
				this._contestFee=0;
				//房间报名费
				this._theRoomNumber=-1;
				//房间人数
				this._prepareNum=-1;
				//准备人数
				//this._resultMsg=null;
				//this._findRoomData=null;
				//通过房间号查询到的比赛id 消耗id 消耗num
				//this._matchData=null;
				//this._storageData=null;
				this._contest_open=0;
				//比赛场开关 1:开启 2:关闭
				this._offLineInfoMsg=[];
				this._offLineSeatIndex=[];
			}
			initMatchimgGameData(againGame=false){
				this._isMatchSart=0;
				if (!againGame){
					this._prepareState={1:0,2:0,3:0,4:0};
					this._theRoomNumber=-1;
					this._roomName="";
					this._prepareNum=-1;
					this._roomTime=0;
					this._contestFee=0;
				}
			}
			/**
			*玩家限时准备 倒计时
			*/
			matchCountDown(end_time,element){
				var now=new Date().getTime();
				var now_time=Math.floor((now / 1000));
				var diff_time=end_time;
				if (diff_time < 0){
					diff_time=0;
				};
				var minutesleft=Math.floor(((diff_time)% 3600)/ 60);
				var secondsleft=(diff_time)% 60;
				if (minutesleft < 10)minutesleft="0"+minutesleft;
				if (secondsleft < 10)secondsleft="0"+secondsleft;
				element.text="准备倒计时："+minutesleft+":"+secondsleft;
			}
			/**
			*是否打开了结算界面
			*/
			isMatchSettleShow(){
				var ret=false;
				var uiLayer=null;
				for (var i=0;i < Laya.stage.numChildren;i++){
					uiLayer=Laya.stage.getChildAt(i);
					if (uiLayer && uiLayer.visible && uiLayer.name.length > 0){
						if (uiLayer.name=="MatchSettle"){
							ret=true;
							break ;
						}
					}
				}
				return ret;
				}setPrepareState(stateArr){
				var perpareNum=0;
				for (var i=0;i < stateArr.length;i++){
					var seatId=FightM.instance.getShowSeatId(i+1);
					this._prepareState[seatId]=stateArr[i];
					if (this._prepareState[seatId]==1){
						perpareNum++;
					}
				}
				this._prepareNum=perpareNum;
				}matchNameRule(curName){
				if (FightM.instance.isMatchingGame()&& curName.length > 2){
					return "***"+curName.slice(2);
					}else if (FightM.instance.isMatchingGame()&& curName.length==2){
					return "***"+curName.slice(1);
					}else{
					return curName
				}
				}setOffLineSeatIndex(value){
				if (!this._offLineSeatIndex){
					this._offLineSeatIndex=[];
					this._offLineInfoMsg=[];
					var seatInfo=FightM.instance.getSeatInfo(value);
					this._offLineSeatIndex.push(value);
					this._offLineInfoMsg[value]=({
						name:LoginInfoM.instance.filterName(GameTools.formatNickName(model.MatchM.instance.matchNameRule(seatInfo.name),8)),
						me:0,
						num:seatInfo.contestScore
					});
					}else{
					if (this._offLineSeatIndex.indexOf(value)< 0){
						var seatInfo=FightM.instance.getSeatInfo(value);
						this._offLineSeatIndex.push(value);
						this._offLineInfoMsg[value]=({
							name:LoginInfoM.instance.filterName(GameTools.formatNickName(model.MatchM.instance.matchNameRule(seatInfo.name),8)),
							me:0,
							num:seatInfo.contestScore
						});
					}
				}
			}
			get storageData (){
				return this._storageData
			}
			set storageData (value){
				this._storageData=value;
			}
			get theRoomNumber (){
				return this._theRoomNumber;
			}
			set theRoomNumber (value){
				this._theRoomNumber=value;
			}
			get matchData (){
				return this._matchData
			}
			set matchData (value){
				this._matchData=value;
			}
			get contestOpen (){
				return this._contest_open
			}
			set contestOpen (value){
				this._contest_open=value;
			}
			get prepareNum (){
				return this._prepareNum;
			}
			get isMatchSart (){
				return this._isMatchSart;
			}
			set isMatchSart (value){
				if (this._isMatchSart==0 && value==1){
					this._offLineSeatIndex=null;
				}
				this._isMatchSart=value;
			}
			get prepareState (){
				return this._prepareState;
			}
			get roomName (){
				return this._roomName;
			}
			set roomName (value){
				this._roomName=value;
			}
			get resultMsg (){
				return this._resultMsg;
			}
			set resultMsg (value){
				this._resultMsg=value;
			}
			get findRoomData (){
				return this._findRoomData;
			}
			set findRoomData (value){
				this._findRoomData=value;
			}
			get roomTime (){
				return this._roomTime;
			}
			set roomTime (value){
				this._roomTime=value;
			}
			get contestFee (){
				return this._contestFee;
			}
			set contestFee (value){
				this._contestFee=value;
			}
			get offLineSeatIndex (){
				return this._offLineSeatIndex;
			}
			get offLineInfoMsg (){
				return this._offLineInfoMsg;
			}
			static get instance (){
				return MatchM._instance || (MatchM._instance=new MatchM());
			}
		}

		model.MatchM=Laya.MatchM=MatchM;
		MatchM._instance=null;	

		class MsgM{
			constructor (){
				//this._msgX=NaN;
				//this._msgY=NaN;
				//this._content=null;
				//this._isShow=false;
				//this._speed=NaN;
			}
			setContentInfo(msgConent,time=1000){
				this._content=msgConent;
				this._isShow=true;
				this._speed=time;
			}
			get msgX (){
				return this._msgX;
			}
			get msgY (){
				return this._msgY;
			}
			get content (){
				return this._content;
			}
			get speed (){
				return this._speed;
			}
			get isShow (){
				return this._isShow
			}
			set isShow (isShow){
				this._isShow=isShow;
			}
			static get instance (){
				return MsgM._instance || (MsgM._instance=new MsgM());
			}
		}

		model.MsgM=Laya.MsgM=MsgM;
		MsgM._instance=null;	

		class OnLineM{
			constructor (){
				//可领取的剩余时间
				this._index=1;
				//获取奖励的id
				this._isAni=false;
				OnLineM._awardId=-1;
				OnLineM._leftTime=0;
			}
			getAwardStatus(awardId){
				if (OnLineM._awardId < 0){
					return 1;
				}
				if (awardId < OnLineM._awardId){
					return 1;
				}
				else if (awardId > OnLineM._awardId){
					return 3;
				}
				return 2;
				}getRewardStatus(awardId){
				return null;
				}getLeftTime(){
				return OnLineM._leftTime;
				}setLeftTime(leftTime){
				OnLineM._leftTime=leftTime;
				}setAwardId(id){
				OnLineM._awardId=id;
				}timeTick(delta){
				if (OnLineM._leftTime > 0){
					OnLineM._leftTime-=delta;
					if (OnLineM._leftTime <=0){
						GameEventDispatch.instance.event("StartRefersh");
						this.list;
					}
				}
				}getAwardState(id){
				var _onlineList=[];
				var can_acc=false;
				for (var i=0;i < this.idArr.length;i++){
					var online=cfg_onLine.instance(this.idArr[i]);
					if (this.getAwardStatus(this.idArr[i])==1){
						_onlineList.push({
							count:online.rewardCount,
							name:"未领取",
							rewardUrl:"ui/fish/lqjl_1.png",
							enable:false,
							isVisible:true,
							isTimeVisible:true
						});
						}else if (this.getAwardStatus(this.idArr[i])==3){
						_onlineList.push({
							count:online.rewardCount,
							name:"未领取",
							rewardUrl:"ui/fish/lqjl_1.png",
							enable:false,
							isVisible:true,
							isTimeVisible:true
						});
						}else if (this.getAwardStatus(this.idArr[i])==2 && this.getLeftTime()<=0){
						_onlineList.push({
							count:online.rewardCount,
							name:"可以领取",
							rewardUrl:"ui/fish/lqjl_1.png",
							enable:true,
							isVisible:true,
							isTimeVisible:false
						});
						}else{
						_onlineList.push({
							count:online.rewardCount,
							name:"未领取",
							rewardUrl:"ui/fish/lqjl_1.png",
							enable:false,
							isVisible:true,
							isTimeVisible:true
						});
					}
				}
				if (id >=_onlineList.length || id < 0){
					var obj={
						count:"",
						name:"未领取",
						rewardUrl:"ui/fish/lqjl_3.png",
						enable:false,
						isVisible:false,
						isTimeVisible:true
					};
					return obj;
					}else{
					return _onlineList[id];
				}
			}
			//得到图片地址
			imageUrl(goodsId){
				var goods=cfg_goods.instance(goodsId+"");
				return goods.icon;
				}vipTime(id){
				var cfg=cfg_onLine.instance(id+"");
				return cfg.vipTimes;
			}
			get isAni (){
				return this._isAni;
			}
			set isAni (ani){
				this._isAni=ani;
			}
			//领取奖励
			get onLineList (){
				var onlineList=[];
				var can_acc=false;
				for (var i=0;i < this.idArr.length;i++){
					var online=cfg_onLine.instance(this.idArr[i]);
					if (this.getAwardStatus(this.idArr[i])==1){
						onlineList.push({count:online.rewardCount,name:"未领取",rewardUrl:"ui/common/lqjl_1.png"});
						}else if (this.getAwardStatus(this.idArr[i])==3){
						onlineList.push({count:online.rewardCount,name:"未领取",rewardUrl:"ui/common/lqjl_1.png"});
						}else if (this.getAwardStatus(this.idArr[i])==2 && this.getLeftTime()<=0){
						onlineList.push({count:online.rewardCount,name:"可以领取",rewardUrl:"ui/common/lqjl_2.png"});
						}else{
						onlineList.push({count:online.rewardCount,name:"未领取",rewardUrl:"ui/common/lqjl_1.png"});
					}
				}
				return onlineList;
			}
			get RewardIndex (){
				return this._index;
			}
			set RewardIndex (index){
				this._index=index;
			}
			get idArr (){
				var arr=[];
				var items=ConfigManager.getConfBySheet("cfg_onLine");
				for (var i in items){
					arr.push(parseInt(i));
				}
				return arr
			}
			get list (){
				var listArr=[];
				var can_acc=false;
				for (var i=0;i < this.idArr.length;i++){
					var online=cfg_onLine.instance(this.idArr[i]);
					if (this.getAwardStatus(this.idArr[i])==1){
						listArr.push({
							icon:{skin:this.imageUrl(online.rewardID)},
							coinLabel:{text:online.rewardCount},
							reaminTime:{text:online.receiveTime},
							receiveBtn:{gray:true,mouseEnabled:false},
							receivelabel:{text:"已领取",gray:true}
						});
						}else if (this.getAwardStatus(this.idArr[i])==3){
						listArr.push({
							icon:{skin:this.imageUrl(online.rewardID)},
							coinLabel:{text:online.rewardCount},
							reaminTime:{text:online.receiveTime},
							receiveBtn:{gray:true,mouseEnabled:false},
							receivelabel:{text:"领取",gray:true}
						});
						}else if (this.getAwardStatus(this.idArr[i])==2 && this.getLeftTime()<=0){
						can_acc=true;
						listArr.push({
							icon:{skin:this.imageUrl(online.rewardID)},
							coinLabel:{text:online.rewardCount},
							reaminTime:{text:online.receiveTime},
							receiveBtn:{gray:false,mouseEnabled:true},
							receivelabel:{text:"领取",gray:false}
						});
						}else{
						listArr.push({
							icon:{skin:this.imageUrl(online.rewardID)},
							coinLabel:{text:online.rewardCount},
							reaminTime:{text:online.receiveTime},
							receiveBtn:{gray:true,mouseEnabled:false},
							receivelabel:{text:"领取",gray:true}
						});
					}
				}
				return listArr;
			}
			get isComplete (){
				if (this.getAwardStatus(this.idArr[this.idArr.length-1])==1){
					return true
					}else{
					return false;
				}
			}
			static get instance (){
				return OnLineM._instance || (OnLineM._instance=new OnLineM());
			}
		}

		model.OnLineM=Laya.OnLineM=OnLineM;
		OnLineM._instance=null;
		OnLineM._awardId=0;
		OnLineM._leftTime=NaN;	

		class QuitM{
			constructor (){
				//this._mainContent=null;
				//this._timeContent=0;
				//this._contentObject=null;
				//this._topContent=null;
				//this._name=0;
				//this._id=0;
				//this._state=0;
				//this._tipInfo=null;
			}
			setTipInfo(info){
				this._tipInfo=info;
				}getTipInfo(){
				return this._tipInfo;
				}setContent(id){
				this._id=id;
				this._contentObject=ConfigManager.getConfObject("cfg_content",String(id));
				this._mainContent=this._contentObject.mainContent;
				this._timeContent=this._contentObject.timeContent;
				this._topContent=this._contentObject.topContent;
				this._state=this._contentObject.state;
			}
			get mainContent (){
				return this._mainContent;
			}
			get timeContent (){
				return this._timeContent;
			}
			get topContent (){
				return this._topContent;
			}
			get state (){
				return this._state;
			}
			get name (){
				return this._name;
			}
			get id (){
				return this._id;
			}
			static get instance (){
				return QuitM._instance || (QuitM._instance=new QuitM());
			}
		}

		model.QuitM=Laya.QuitM=QuitM;
		QuitM._instance=null;	

		class RegiM{
			constructor (){
				//this.state=null;
				this.registerDiSkin="ui/register/touxiang1.png";
				this.unregisterDiSkin="ui/register/touxiang.png";
				this.registerHfSkin="ui/register/QDJL_board2.png";
				this.unregisterHfSkin="ui/register/XSFL_board.png";
				this._isRegic=false;
				this._isToday=false;
			}
			setInfo(){
				}skinInd(rewardId){
				var goods=cfg_goods.instance(rewardId+"");
				return goods.typeID
				}isShowVip(reward){
				if (reward.db_vip==0){
					return false;
					}else{
					return true;
				}
				}getVipTime(reward){
				return "v"+reward.db_vip;
			}
			//得到图片地址
			imageUrl(goodsId,id){
				var goods=cfg_goods.instance(goodsId+"");
				if (goods.type==7){
					if (RoleInfoM.instance.isSkinExit(goods.typeID)){
						var m=cfg_register.instance(id+"");
						var mId=m.replace_reward_id;
						var n=cfg_goods.instance(mId+"");
						return n.icon
					}
				}
				return goods.icon;
			}
			//得到图片数量
			rewardCount(goodsId,id){
				var goods=cfg_goods.instance(goodsId+"");
				var m=cfg_register.instance(id+"");
				var num=m.rewardCount;
				if (goods.type==7){
					if (RoleInfoM.instance.isSkinExit(goods.typeID)){
						num=m.replace_reward_count;
					}
				}
				return ActivityM.instance.exchangeConversion(goodsId,num);
			}
			get isToday (){
				return this._isToday;
			}
			set isToday (today){
				this._isToday=today;
			}
			get isRegic (){
				return this._isRegic;
			}
			set isRegic (regic){
				this._isRegic=regic;
			}
			get idArr (){
				var arr=[];
				var items=ConfigManager.getConfBySheet("cfg_register");
				for (var i in items){
					if (!items[parseInt(i)].rewardID){
						break ;
					}
					arr.push(parseInt(i));
				}
				return arr
			}
			get infoList (){
				var infoArr=[];
				for (var i=0;i < this.idArr.length;i++){
					var reward=cfg_register.instance(this.idArr[i]);
					if (RoleInfoM.instance.getSignInStatus(this.idArr[i])==0){
						infoArr.push({
							txt:{text:reward.weekName},
							image:{skin:this.imageUrl(reward.rewardID,this.idArr[i])},
							count:{text:this.rewardCount(reward.rewardID,this.idArr[i])},
							maskBtn:{visible:true},
							rightBtn:{visible:true},
							diImg:{skin:this.unregisterDiSkin},
							halfBtn:{skin:this.unregisterHfSkin},
							vipdi:{visible:false},
							vipbei:{visible:false},
							twobei:{visible:false}
						});
						}else if (RoleInfoM.instance.getSignInStatus(this.idArr[i])==2){
						infoArr.push({
							txt:{text:reward.weekName},
							image:{skin:this.imageUrl(reward.rewardID,this.idArr[i])},
							count:{text:this.rewardCount(reward.rewardID,this.idArr[i])},
							maskBtn:{visible:false},
							rightBtn:{visible:false},
							diImg:{skin:this.registerDiSkin},
							halfBtn:{skin:this.registerHfSkin},
							vipdi:{visible:this.isShowVip(reward)},
							vipbei:{visible:this.isShowVip(reward),text:this.getVipTime(reward)},
							twobei:{visible:this.isShowVip(reward)}
						});
						}else if (RoleInfoM.instance.getSignInStatus(this.idArr[i])==3){
						infoArr.push({
							txt:{text:reward.weekName},
							image:{skin:this.imageUrl(reward.rewardID,this.idArr[i])},
							count:{text:this.rewardCount(reward.rewardID,this.idArr[i])},
							maskBtn:{visible:false},
							rightBtn:{visible:false},
							diImg:{skin:this.unregisterDiSkin},
							halfBtn:{skin:this.unregisterHfSkin},
							vipdi:{visible:this.isShowVip(reward)},
							vipbei:{visible:this.isShowVip(reward),text:this.getVipTime(reward)},
							twobei:{visible:this.isShowVip(reward)}
						});
					}
				}
				return infoArr;
			}
			get isGet (){
				var isget=false;
				for (var i=0;i < this.idArr.length;i++){
					var reward=cfg_register.instance(this.idArr[i]);
					if (RoleInfoM.instance.getSignInStatus(this.idArr[i])==2){
						isget=true;
						break ;
					}
				}
				return isget;
			}
			static get instance (){
				return RegiM._instance || (RegiM._instance=new RegiM());
			}
		}

		model.RegiM=Laya.RegiM=RegiM;
		RegiM._instance=null;	

		class RewardM{
			constructor (){
				this.aniNames=["common","bronze","silver","gold","platina","extreme"];
				this.idArr=["firstId","secondId","threeId","fourId","fiveId","sixId"];
				this.commonArr=["common_1","common_2","common_3","common_4","common_5","common_6"];
				//this.infoList=null;
				//this._recordArr=null;
				//this._currentList=null;
				//this._userNameArr=null;
				//this._lotterIdArr=null;
				//收藏小程序奖励
				//this._isCollect=NaN;
				//this._isFristCollect=NaN;
				this.reward=new Object();
			}
			setInfo(){
				for (var j=0;j < this.aniNames.length;j++){
					var rewardType=ConfigManager.getConfObject("cfg_rewardType",this.aniNames[j]);
					var arr=[];
					for (var k=0;k < this.idArr.length;k++){
						arr.push(rewardType[this.idArr[k]]);
					}
					this.reward[this.aniNames[j]+""]=arr;
				}
				}getlotteryRecord(id,goodsId,goodNum,userName){
				userName=userName.replace(/[&<>]/g,"");
				var contentOne="<span color='#e3d26a'>恭喜</span>";
				var contentTwo="<span color='#FF0000'>"+userName+"</span>";
				var contentThree="<span color='#e3d26a'>通过进行"+this.getlotteryName(id)+",获得了&nbsp;"+"</span>";
				var contentFour="<span color='#EEB422'>"+this.getLotteryRewardName(id,goodsId,goodNum)+"</span>";
				return contentOne+""+contentTwo+""+contentThree+""+contentFour;
				}getLotteryRewardName(id,goodsId,goodNum){
				var cfg=cfg_rewardDetails.instance(id);
				if (goodsId==cfg.award[0] && goodNum==cfg.award[1]){
					return cfg.rewardName;
					}else if (goodsId==cfg.red_pack_activity_award[0] && goodNum==cfg.red_pack_activity_award[1]){
					return cfg.red_pack_activity_Name;
				}
				return cfg.rewardName;
				}rewardArr(id){
				var arr=[];
				var rewardArr=this.reward[this.aniNames[id]+""];
				if (ActivityM.instance.redPackTicketContinueTime){
					for (var i=0;i < rewardArr.length;i++){
						var c=cfg_rewardDetails.instance(rewardArr[i]);
						var goodsId=c.red_pack_activity_award[0];
						var goods=cfg_goods.instance(goodsId+"");
						if (goods.type==7){
							if (RoleInfoM.instance.isSkinExit(goods.typeID)){
								arr.push({id:c.id,txt:c.re_rewardName,image:c.re_rewardUrl,count:c.re_award});
							}
							else{
								arr.push({
									id:c.id,txt:c.red_pack_activity_Name,image:c.red_pack_activity_rewardUrl,count:c.red_pack_activity_award
								});
							}
						}
						else{
							arr.push({id:c.id,txt:c.red_pack_activity_Name,image:c.red_pack_activity_rewardUrl,count:c.red_pack_activity_award});
						}
					}
					}else{
					for (var i=0;i < rewardArr.length;i++){
						var c=cfg_rewardDetails.instance(rewardArr[i]);
						var goodsId=c.award[0];
						var goods=cfg_goods.instance(goodsId+"");
						if (goods.type==7){
							if (RoleInfoM.instance.isSkinExit(goods.typeID)){
								arr.push({id:c.id,txt:c.re_rewardName,image:c.re_rewardUrl,count:c.re_award});
							}
							else{
								arr.push({id:c.id,txt:c.rewardName,image:c.rewardUrl,count:c.award});
							}
						}
						else{
							arr.push({id:c.id,txt:c.rewardName,image:c.rewardUrl,count:c.award});
						}
					}
				}
				return arr;
				}getCurrentList(){
				}rewardName(id){
				var c=cfg_rewardDetails.instance(id);
				if (ActivityM.instance.redPackTicketContinueTime){
					return c.red_pack_activity_Name;
					}else{
					return c.rewardName;
				}
				}conditonValue(id){
				var rewardArr=this.reward[this.aniNames[id]+""];
				var c=cfg_rewardDetails.instance(rewardArr[0]);
				return c.condition[1];
				}conditionShowValue(id){
				var rewardArr=this.reward[this.aniNames[id]+""];
				var c=cfg_rewardDetails.instance(rewardArr[0]);
				return c.com_fish_coin;
				}imageUrl(id){
				var c=cfg_rewardDetails.instance(id);
				var goodsId=0;
				if (ActivityM.instance.redPackTicketContinueTime){
					goodsId=c.red_pack_activity_goodId;
					}else{
					goodsId=c.goodId;
				};
				var cfg=cfg_goods.instance(goodsId+"");
				return cfg.icon;
				}goodsId(id){
				var c=cfg_rewardDetails.instance(id);
				var goodsId=0;
				if (ActivityM.instance.redPackTicketContinueTime){
					goodsId=c.red_pack_activity_goodId;
					}else{
					goodsId=c.goodId;
				}
				return goodsId;
				}rewardCount(id){
				var c=cfg_rewardDetails.instance(id);
				var awardArr;
				if (ActivityM.instance.redPackTicketContinueTime){
					awardArr=c.red_pack_activity_award;
					}else{
					awardArr=c.award;
				}
				return awardArr[1];
				}baseFishCount(){
				var c=cfg_rewardDetails.instance("101");
				return c.condition[0];
				}selectTab(coin){
				if (coin >=this.conditonValue(0)&& coin < this.conditonValue(1)){
					return 0;
					}else if (coin >=this.conditonValue(1)&& coin < this.conditonValue(2)){
					return 1;
					}else if (coin >=this.conditonValue(2)&& coin < this.conditonValue(3)){
					return 2
					}else if (coin >=this.conditonValue(3)&& coin < this.conditonValue(4)){
					return 3
					}else if (coin >=this.conditonValue(4)&& coin < this.conditonValue(5)){
					return 4
					}else if (coin >=this.conditonValue(5)){
					return 5
					}else{
					return 0;
				}
				}setName(coin){
				if (coin >=this.conditonValue(0)&& coin < this.conditonValue(1)){
					return "普通抽奖";
					}else if (coin >=this.conditonValue(1)&& coin < this.conditonValue(2)){
					return "青铜抽奖";
					}else if (coin >=this.conditonValue(2)&& coin < this.conditonValue(3)){
					return "白银抽奖"
					}else if (coin >=this.conditonValue(3)&& coin < this.conditonValue(4)){
					return "黄金抽奖"
					}else if (coin >=this.conditonValue(4)&& coin < this.conditonValue(5)){
					return "钻石抽奖"
					}else if (coin >=this.conditonValue(5)){
					return "至尊抽奖"
					}else{
					return "普通抽奖";
				}
				}getlotteryName(id){
				var c=cfg_rewardDetails.instance(id);
				return c.reward_type;
				}url(award){
				var goodsId=award[0];
				var cfg_good=cfg_goods.instance(goodsId+"");
				return cfg_good.icon;
				}isCollect(value){
				this._isCollect=value;
			}
			get currentList (){
				return this._currentList;
			}
			set currentList (arr){
				this._currentList=arr;
			}
			get sortArr (){
				var arr=[];
				if (this._currentList !=null){
					arr=this.currentList.sort(function(a,b){
						var agentA=Number(a.type);
						var agentB=Number(b.type);
						if (agentA < agentB){
							return 1;
							}else if (agentA > agentB){
							return -1;
							}else{
							return 0;
						}
					});
				}
				return arr
			}
			get RecordArr (){
				var arr=[];
				if (this.currentList !=null){
					if (this.currentList.length > 4){
						for (var i=0;i < 4;i++){
							var typeId=this.currentList[i].type;
							var goodId=this.currentList[i].reward[0].t;
							var goodNum=this.currentList[i].reward[0].v;
							var userName=LoginInfoM.instance.filterName(GameTools.formatNickName(this.currentList[i].nickname,10));
							arr.push(this.getlotteryRecord(typeId,goodId,goodNum,userName));
						}
						}else{
						for (var j=0;j < this.currentList.length;j++){
							var typeId=this.currentList[j].type;
							var goodId=this.currentList[j].reward[0].t;
							var goodNum=this.currentList[j].reward[0].v;
							var userName=LoginInfoM.instance.filterName(GameTools.formatNickName(this.currentList[j].nickname,10));
							arr.push(this.getlotteryRecord(typeId,goodId,goodNum,userName));
						}
					}
				}
				return arr;
			}
			static get instance (){
				return RewardM._instance || (RewardM._instance=new RewardM());
			}
		}

		model.RewardM=Laya.RewardM=RewardM;
		RewardM._instance=null;	

		class RoleInfoM{
			constructor (){
				//this._name=null;
				//this._level=0;
				//this._vip=0;
				//this._vip_exp=0;
				//this._coin=0;
				//this._diamond=0;
				//this._exp=0;
				//this._fcount=0;
				//奖金池鱼数量
				//this._fcoin=0;
				//奖金池中的金币
				//this._battery=0;
				//炮台等级
				//this._cskin=0;
				//当前皮肤
				//this._skins=null;
				//当前拥有的皮肤
				this._timesSkins=[];
				//限时皮肤
				//this._goods=null;
				//拥有的道具 {[i=x,n=x]}i=>id n=>num
				//this.vip_buy=null;
				//vip领取过的奖励
				//this.purchased_items=null;
				//购买过的商品
				this.task_new=[];
				//新手任务数据
				this.task_daily={f:{},good:{}};
				//日常任务数据
				//this.task_daily_ids=null;
				//日常任务ids
				//this.create_time=0;
				//创建时间
				//this.day_index=0;
				//第几天
				//this.charge_times=0;
				//充值次数
				//this.charge_total=0;
				//充值总金额
				//this.first_charge_reward_accepted=0;
				//是否领取过首充奖励
				//this.firstSubscription=false;
				//是否已关注过公众号
				//this.login_days=0;
				//月卡信息
				//this._sign_in_day=0;
				//当前是签到第几天
				//this._sign_award_get=0;
				//签到数据
				//this._skill_res_tip=0;
				//是否提示过用钻石购买道具并确认
				this._award_score=0;
				//用户积分
				//this._award_value=0;
				//可领取的奖励
				//this.red_points=0;
				//this.avatar=null;
				//用户头像
				//this._cost_coin=0;
				//当前赚或者获取的金币
				//this._exchange=0;
				//兑换券
				//this._bcoin=0;
				//绑定金币
				//this._timeStamp=0;
				//
				//this.activity_ticket=0;
				//福利活动
				//this.is_set_bank_password=0;
				//是否设置银行密码
				//this.is_bind_tel=0;
				//是否绑定集结号
				//this.tel=null;
				//手机号
				//this.jjhNumber=null;
				//集结号账号
				//this.jjhId=null;
				//集结号id
				//this.jjhPass=null;
				//集结号密码
				//this.bankPass=null;
				//银行密码
				//this.phoneNum=null;
				//注册手机号
				this.reenter=0;
				//是否重新登入
				this.isQuickRegister=0;
				//是否快速注册账号:1-是，0-否
				//this.bank_gold=0;
				//银行金币
				//this.mini_balance=0;
				//集结币
				//this._contest_coin=0;
				//this._contest_score=0;
				//this.worldcup_battery_accepted=0;
				//this.worldcup_coin=0;
				this.guide_status={};
				this._SyncSwish=1;
				//短链接活动
				//this.short_pf=NaN;
				//短信用户状态： 0-不是此渠道;1-是此渠道，新用户;2-是此渠道，老用户
				this.curDay=0;
				//短信活动签到第几天
				this.total=0;
				//短信活动当前消费总金额
				this.receive=[];
				//已经领取的签到id
				this.pay_accept_ids=[];
				//已经领过的充值奖励
				this.level_accept_ids=[];
				//已经领过的升级奖励
				this.pay_expire=0;
				//充值返喇叭活动是否到期
				this.grade_expire=0;
				//冲级返喇叭活动是否到期
				//this.coin_rate=NaN;
				//this.chance_rate=NaN;
				//this.coin_rate_buy=NaN;
				//this.chance_rate_buy=NaN;
				//订阅信息
				this.subscribe_tpl=[];
				this.time_skin_data={};
				this.month_card=[];
				this._name="unsync";
				this._level=0;
				this._vip=0;
				this._coin=0;
				this._award_score=0;
				this._award_value=0;
				this._cost_coin=0;
				this._bcoin=0;
				this.mini_balance=0;
				var date=new Date();
				this._timeStamp=date.getTime();
			}
			canDoubelCoin(){
				return this.coin_rate_buy==1 || this._battery >=cfg_global.instance("1").double_coin_battery
				}canDoubelChance(){
				return this.chance_rate_buy==1 || this._battery >=cfg_global.instance("1").double_chance_battery
				}isConsumeEnough(conId,conNum){
				if (conId==1){
					return this._coin >=conNum;
				}
				if (conId==4){
					return this._diamond >=conNum;
				}
				for (var i=0;i < this._goods.length;i++){
					if (this._goods[i].i==conId){
						if (this._goods[i].n >=conNum){
							return true;
						}
						return false;
					}
				}
				return false;
				}subscribeState(type){
				for (var i=0;i < this.subscribe_tpl.length;i++){
					if (this.subscribe_tpl[i].id && this.subscribe_tpl[i].id==type){
						return this.subscribe_tpl[i].is_remember
					}
				}
				return 0
				}subsState(type){
				for (var i=0;i < this.subscribe_tpl.length;i++){
					if (this.subscribe_tpl[i].id && this.subscribe_tpl[i].id==type){
						return this.subscribe_tpl[i].status=="accept"
					}
				}
				return false
				}calcRed(){
				var A=0;
				var B=0;
				var C=0;
				var arr_red;
				var config_rech=ConfigManager.items("cfg_rech_award");
				var config_up=ConfigManager.items("cfg_upgradeRed");
				var arr_re=model.RoleInfoM.instance.receive;
				var arr_pay=model.RoleInfoM.instance.pay_accept_ids;
				var arr_lv=model.RoleInfoM.instance.level_accept_ids;
				for (var i=0;i < config_rech.length;i++){
					if (this.total < config_rech[i].rechSum){
						break ;
					}
				}
				for (var j=0;j < config_up.length;j++){
					if (this._level < config_up[j].level){
						break ;
					}
				}
				if (arr_re.length-1 < this.curDay){
					A=1;
					}else{
					A=0;
				}
				if (arr_pay.length < i+1){
					B=1;
					}else{
					B=0;
				}
				if (arr_lv.length < j+1){
					C=1;
					}else{
					C=0;
				}
				if (model.RoleInfoM.instance.short_pf !=2){
					arr_red=[A,B,C];
					}else{
					arr_red=[A,B];
				}
				return arr_red;
				}getTimeStamp(){
				return this._timeStamp;
				}setTimeStamp(stamp){
				this._timeStamp=stamp;
				}getExchange(){
				return (this._exchange);
				}setExchange(exchange){
				this._exchange=exchange;
				}getCostCoin(){
				return this._cost_coin;
				}setCostCoin(value){
				this._cost_coin=value;
				}isSkinExit(skinId){
				return this._skins.indexOf(skinId)>-1;
				}setContestCoin(value){
				this._contest_coin=value;
				}getContestCoin(){
				return this._contest_coin;
				}setContestScore(value){
				this._contest_score=value;
				}getContestScore(){
				return this._contest_score;
				}setAwardScore(score){
				this._award_score=score;
				}getAwardScore(){
				return this._award_score;
				}getAwardValue(){
				return this._award_value;
				}setAwardValue(value){
				this._award_value=value;
				}getRedPoints(){
				return this.red_points;
				}setRedPoints(value){
				this.red_points=value;
				}getLoginDays(){
				return this.login_days;
				}setLoginDays(value){
				this.login_days=value;
				}getVipBuy(){
				return this.vip_buy;
				}setVipBuy(value){
				this.vip_buy=value;
				}getMonthCard(){
				return this.month_card;
				}setMonthCard(value){
				this.month_card=value;
				}setChargeTotal(value){
				this.charge_total=value;
				}getChargeTotal(){
				return this.charge_total;
				}setChargeTimes(value){
				this.charge_times=value;
				}getChargeTimes(){
				return this.charge_times;
				}setFirstChargeRewardAccepted(value){
				this.first_charge_reward_accepted=value;
				}getFirstChargeRewardAccepted(){
				return this.first_charge_reward_accepted;
				}setFirstSubscription(value){
				this.firstSubscription=value;
				}getFirstSubscription(){
				return this.firstSubscription;
				}setDayIndex(value){
				this.day_index=value;
				}getDayIndex(){
				return this.day_index;
				}getTaskNew(){
				return this.task_new;
				}setTaskNew(value){
				this.task_new=value;
				}updateTaskNew(value){
				for (var key in value){
					this.task_new[ key]=value[ key];
				}
				}getTaskDaily(){
				return this.task_daily;
				}setTaskDaily(value){
				this.task_daily=value;
				}updateTaskDaily(value){
				for (var key in value){
					if (key=="f"){
						for (var attrname in value.f){
							this.task_daily.f[attrname]=value.f[attrname];
						}
						}else if (key=="goods"){
						for (var attrname in value.goods){
							this.task_daily.goods[attrname]=value.goods[attrname];
						}
						}else{
						this.task_daily[key]=value[key];
					}
				}
				}getTaskDailyIds(){
				if (Array.isArray(this.task_daily_ids)){
					return this.task_daily_ids
					}else{
					return []
				}
				}setTaskDailyIds(value){
				this.task_daily_ids=value;
				}getPurchasedItems(){
				return this.purchased_items;
				}setPurchasedItems(value){
				this.purchased_items=value;
				}setProfileInfo(profileData){
				this._name=profileData.name;
				if (this._level <=0){
					YylyC.RoleLevelUp(profileData.level);
				}
				this._level=profileData.level;
				this._vip=profileData.vip;
				this._vip_exp=profileData.vip_exp;
				this._coin=profileData.coin;
				this._exp=profileData.exp;
				this._fcount=profileData.fish_coin.count;
				this._fcoin=profileData.fish_coin.value;
				this._cskin=profileData.cskin;
				this._battery=profileData.battery;
				this._skins=profileData.skins;
				this._diamond=profileData.diamond;
				this._goods=profileData.goods;
				this._award_score=profileData.award_score;
				this.purchased_items=profileData.purchased_items;
				this.vip_buy=profileData.vip_buy;
				this.task_new=profileData.task_new;
				this.task_daily=profileData.task_daily;
				this.create_time=profileData.create_time;
				this.day_index=profileData.day_index;
				this.task_daily_ids=profileData.task_daily_ids;
				this.charge_total=profileData.charge_total;
				this.charge_times=profileData.charge_times;
				this.first_charge_reward_accepted=profileData.first_charge_reward_accepted;
				this.red_points=profileData.red_points;
				this.month_card=profileData.month_card;
				this.login_days=profileData.login_days;
				this._skill_res_tip=profileData.skill_res_tip;
				this.avatar=profileData.avatar;
				this._exchange=profileData.exchange;
				this._bcoin=profileData.bcoin;
				this.activity_ticket=profileData.at_coin;
				this.is_set_bank_password=profileData.is_set_bank_password;
				this.bank_gold=profileData.bank_gold;
				this.worldcup_battery_accepted=profileData.worldcup_battery_accepted;
				this.worldcup_coin=profileData.worldcup_coin;
				this.is_bind_tel=profileData.is_bind_tel;
				this.tel=profileData.tel;
				this.guide_status=profileData.guide_status;
				}getAvatar(){
				return this.avatar;
				}setSkillResTip(value){
				this._skill_res_tip=value;
				}isSkillResTip(){
				return this._skill_res_tip==1;
				}setCreateTime(value){
				this.create_time=value;
				}getCreateTime(){
				return this.create_time;
				}setName(name){
				this._name=name;
				}getName(){
				return this._name;
				}setLevel(curLevel){
				this._level=curLevel;
				}getLevel(){
				return this._level;
				}setVipExp(value){
				this._vip_exp=value;
				}getVipExp(){
				return this._vip_exp
				}setVip(value){
				this._vip=value;
				}getVip(){
				return this._vip;
				}getCoin(){
				return this._coin;
				}setCoin(num){
				this._coin=num;
				}getBindCoin(){
				return this._bcoin;
				}setBindCoin(num){
				this._bcoin=num;
				}getDiamond(){
				return this._diamond;
				}setDiamond(num){
				this._diamond=num;
				}getExp(){
				return this._exp;
				}setExp(value){
				this._exp=value;
				}getFcount(){
				return this._fcount;
				}setFcount(count){
				this._fcount=count;
				}getFcoin(){
				return this._fcoin;
				}setFcoin(value){
				this._fcoin=value;
				}getBattery(){
				return this._battery;
				}setBattery(value){
				this._battery=value;
				}getCurSkin(){
				return this._cskin;
				}setCurSkin(skin){
				this._cskin=skin;
				}getSkins(){
				return this._skins;
				}setSkins(value){
				this._skins=value;
			}
			// 初始化限时皮肤
			init_time_skins(data){
				this.time_skin_data={};
				this._timesSkins=[];
				for (var i=0;i < data.length;i+=3){
					var key=data[i]+"";
					var remain_day=data[i+1];
					if (remain_day > 0){
						this._timesSkins.push(data[i]);
					}
					this.time_skin_data[key]={"remain":data[i+1]};
				}
			}
			// 返回-1则没有该限时皮肤
			getSkinRemainTime(skin_id){
				if (model.RoleInfoM.instance.getSkins().indexOf(skin_id)>-1){
					return -1
					}else{
					var skin_data=this.time_skin_data[skin_id+""];
					if (skin_data){
						var remain=skin_data['remain'];
						if (remain > 0){
							return remain
							}else{
							return -1
						}
						}else{
						return -1
					}
				}
				}getAllSkins(){
				if (this._timesSkins.length <=0){
					return this._skins;
				};
				var allskins=[];
				var skinId=0;
				for (var i=0;i < this._timesSkins.length;i++){
					skinId=this._timesSkins[i];
					if (!this.checkHaveSkin(skinId)){
						allskins.push(skinId);
					}
				}
				allskins=allskins.concat(this._skins);
				return allskins;
				}findTypeId(_id){
				var popArr=ConfigManager.filter("cfg_goods");
				var skinId=0;
				for (var i=0;i < popArr.length;i++){
					if (popArr[i]['id']==_id){
						skinId=popArr[i]['typeID'];
						return skinId;
					}
				}
				return null;
				}checkHaveSkin(_id){
				var _playerArr=this._skins;
				for (var i=0;i < _playerArr.length;i++){
					if (_playerArr[i]==_id){
						return true;
					}
				}
				return false;
				}getGoods(){
				return this._goods;
				}setGoods(value){
				this._goods=value;
				}getGoodsItemNum(goodsId){
				var goodsItem;
				for (var i=0;i < this._goods.length;i++){
					goodsItem=this._goods [i];
					if (goodsItem.i==goodsId){
						return goodsItem.n;
					}
				}
				return 0;
				}updateGoodsItem(goodsId,num){
				var goodsItem;
				for (var i=0;i < this._goods.length;i++){
					goodsItem=this._goods [i];
					if (goodsItem.i==goodsId){
						goodsItem.n=num;
						return;
					}
				}
				goodsItem=new Object();
				goodsItem.i=goodsId;
				goodsItem.n=num;
				this._goods[this._goods.length]=goodsItem;
				}updateSignInData(day,award_get){
				this._sign_in_day=day;
				this._sign_award_get=award_get;
				}getSignInStatus(day){
				var ret=0;
				if (day > this._sign_in_day){
					return 3;
				}
				if (day <=this._sign_award_get){
					return 0;
				}
				return 2;
			}
			/**
			*是否有生效的月卡
			*
			*@return
			*/
			haveValidMonthCard(){
				for (var id in this.month_card){
					if (!this.month_card[id].is_expired){
						return true
					}
				}
				return false
			}
			static get instance (){
				return RoleInfoM._instance || (RoleInfoM._instance=new RoleInfoM());
			}
		}

		model.RoleInfoM=Laya.RoleInfoM=RoleInfoM;
		RoleInfoM._instance=null;	

		class RTipM{
			constructor (){
				//this._imageUrl=null;
				//this._urlArray=null;
				//this._idArr=null;
				//this._idLen=0;
				//this._countArr=null;
				//this._isShow=false;
			}
			setInfo(url,count,ishow=false){
				this._countArr=count;
				this._idArr=url;
				if (this._idArr !=null){
					this._idLen=this._idArr.length;
				}
				this._isShow=ishow;
			}
			get imageUrl (){
				return this._imageUrl;
			}
			get pointList (){
				var fixedX=140;
				var fixedY=140;
				var arr=[];
				if (this._idLen <=7){
					for (var i=0;i < this._idLen;i++){
						var onePoint=new Point((Laya.stage.width-fixedX *(this._idLen-1))/ 2+fixedX *i,Laya.stage.height / 2);
						arr.push(onePoint);
					}
					}else if (this._idLen < 11 && this._idLen >=8){
					for (var i=0;i < this._idLen;i++){
						var onePoint;
						if ((i+1)<=Math.floor(this._idLen / 2)){
							onePoint=new Point((Laya.stage.width-fixedX *(Math.floor(this._idLen / 2)-1))/ 2+fixedX *i,Laya.stage.height / 2-fixedY / 2);
							}else{
							onePoint=new Point((Laya.stage.width-fixedX *((this._idLen-Math.floor(this._idLen / 2))-1))/ 2+fixedX *(i-Math.floor(this._idLen / 2)),Laya.stage.height / 2+fixedY / 2);
						}
						arr.push(onePoint);
					}
					}else{
					return null;
				}
				return arr;
			}
			get isShow (){
				return this._isShow;
			}
			get countArr (){
				return this._countArr;
			}
			get ImageArr (){
				this._urlArray=[];
				if (this._idArr !=null){
					for (var i=0;i < this._idArr.length;i++){
						var goods=cfg_goods.instance(this._idArr[i]);
						this._urlArray.push(goods.icon);
						if (this._idArr[i]==60 && this._countArr[i]){
							this._countArr[i]=ActivityM.instance.exchangeConversion(60,this._countArr[i]);
						}
					}
				}
				return this._urlArray;
			}
			static get instance (){
				return RTipM._instance || (RTipM._instance=new RTipM());
			}
		}

		model.RTipM=Laya.RTipM=RTipM;
		RTipM._instance=null;	

		class RuleM{
			constructor (){
				//this._integral=NaN;
				//this._url=null;
				//this._coinCount=NaN;
				//this._goodsId=0;
				//this._hour=NaN;
				this._minute=0;
				this._second=0;
				this._islist=true;
				this._totalTime=0;
				//this._activityID=null;
				this._activityNum;
				this._coinCount=0;
			}
			isRewardShowScene(){
				if (FightM.instance.sceneId==4 || FightM.instance.sceneId==1){
					return false;
				}
				return true;
				}setTime(time){
				if (time !=null){
					var date=new Date(time *1000);
					model.RuleM.instance.hour=date.getHours();
					model.RuleM.instance.minute=59-date.getMinutes();
					model.RuleM.instance.second=59-date.getSeconds();
					if (this.second < 0){
						this.second=59;
					}
					GameEventDispatch.instance.event("UpdataTime");
				}
			}
			get showTime (){
				var min=this.minute+"";
				var sec=this.second+"";
				var hou=this.hour+"";
				if (this.minute < 10){
					min="0"+this.minute;
				}
				if (this.second < 10){
					sec="0"+this.second;
				}
				if (this.hour < 10){
					hou="0"+this.hour;
				};
				var showtime="倒计时: 00"+":"+min+":"+sec;
				return showtime;
			}
			//秒
			get second (){
				return Math.floor(this._second);
			}
			set second (se){
				this._second=se;
			}
			get integral (){
				return this._integral;
			}
			set integral (integr){
				this._integral=integr;
			}
			get isShowScene (){
				if (FightM.instance.sceneId==4){
					return true;
					}else{
					return false;
				}
			}
			get goodsId (){
				return this._goodsId;
			}
			set goodsId (id){
				this._goodsId=id;
			}
			//小时
			get hour (){
				return Math.floor(this._hour);
			}
			set hour (h){
				this._hour=h;
			}
			get isList (){
				return this._islist;
			}
			set isList (isl){
				this._islist=isl;
			}
			//分
			get minute (){
				return Math.floor(this._minute);
			}
			set minute (min){
				this._minute=min;
			}
			get imageUrl (){
				var cfg=cfg_goods.instance(this.goodsId+"");
				return cfg.icon;
			}
			get coinCount (){
				return this._coinCount;
			}
			set coinCount (coin){
				this._coinCount=coin;
			}
			get totalTime (){
				return Math.floor(this._totalTime);
			}
			set totalTime (total){
				this._totalTime=total;
			}
			get activityID (){
				return this._activityID;
			}
			set activityID (value){
				this._activityID=value;
			}
			get activityNum (){
				return this._activityNum;
			}
			set activityNum (value){
				this._activityNum=value;
			}
			static get instance (){
				return RuleM._instance || (RuleM._instance=new RuleM());
			}
		}

		model.RuleM=Laya.RuleM=RuleM;
		RuleM._instance=null;	

		class SettleM{
			constructor (){
				this._totalCount=0;
				//this._pmop=NaN;
				this._listArr=[];
			}
			setInfo(){
				}clearData(){
				this._totalCount=0;
				this._listArr=[];
				}addTotalCount(count){
				this._totalCount=this._totalCount+count;
				}listUtisl(){
				var list=[];
				for (var i=this._listArr.length-1;i >-1;i--){
					list.push(this._listArr[i]);
				}
			}
			get listArr (){
				var list=[];
				for (var i=this._listArr.length-1;i >-1;i--){
					list.push(this._listArr[i]);
				}
				return list;
			}
			get totalCount (){
				return this._totalCount;
			}
			set totalCount (totalCount){
				this._totalCount=totalCount;
			}
			get pump (){
				return this._pmop
			}
			set pump (pmop){
				this._pmop=pmop;
			}
			static get instance (){
				return SettleM._instance || (SettleM._instance=new SettleM());
			}
		}

		model.SettleM=Laya.SettleM=SettleM;
		SettleM._instance=null;	

		class ShareM{
			constructor (){
				//this._idArr=null;
				this._idArr=[];
				var items=ConfigManager.getConfBySheet("cfg_shareLottery");
				for (var i in items){
					this._idArr.push(parseInt(i));
				}
			}
			getGoodsId(prizeId){
				var cfg=cfg_shareLottery.instance(prizeId);
				if (ActivityM.instance.isShowShareRebate){
					return cfg.activity_rewardId
					}else{
					return cfg.rewardId
				}
				}count(prizeId){
				var cfg=cfg_shareLottery.instance(prizeId);
				if (ActivityM.instance.isShowShareRebate){
					return cfg.activity_rewardCount
					}else{
					return cfg.rewardCount
				}
			}
			get shareInfo (){
				var sharePro=new SharePro();
				return sharePro;;
			}
			get shareInfoArr (){
				var arr=[];
				for (var i=0;i < this._idArr.length;i++){
					var cfg=cfg_shareLottery.instance(this._idArr[i]);
					arr.push(cfg);
				}
				return arr;
			}
			static get instance (){
				return ShareM._instance || (ShareM._instance=new ShareM());
			}
		}

		model.ShareM=Laya.ShareM=ShareM;
		ShareM._instance=null;	

		class SkillM{
			constructor (){
				//this.sceneId=0;
				//this._ani=null;
				//this._pointArr=null;
				//this._blooenArr=null;
				//this._clollectArr=null;
			}
			skillInfo(id){
				var skill=cfg_skill.instance(id+"");
				var icon=skill.icon;
				var num=RoleInfoM.instance.getGoodsItemNum(skill.need_prop);
				var object={img:icon,skillNum:num};
				return null;
			}
			//技能图标的素材
			skillUrl(id){
				if (!this.skillArr || this.skillArr[id]==-1){
					return null
					}else{
					return "0"
				}
				}isConsumeEnough(skillIndex){
				if (this.skillCount(skillIndex)<=0){
					var needDiamond=this.diamondCount(skillIndex);
					return RoleInfoM.instance.getDiamond()>=needDiamond;
				}
				return true;
				}skillCount(id,isFishPage=true){
				var skillArray=[];
				if (isFishPage){
					skillArray=this.skillArr;
					}else{
					var scene=cfg_scene.instance(1+"");
					skillArray=scene.skills;
				}
				if (id < skillArray.length){
					var skill=cfg_skill.instance(skillArray[id]);
					var seatInfo;
					var seatId=0;
					var unreachNum=0;
					seatId=FightM.instance.getSeatIdByShowSeatId(1);
					seatInfo=FightM.instance.getSeatInfo(seatId);
					if (seatInfo){
						unreachNum=FightM.instance.getGoodsUnreachNum(seatInfo.agent,skill.need_prop);
					}
					return RoleInfoM.instance.getGoodsItemNum(skill.need_prop)-unreachNum;
					}else{
					return 0;
				}
				}skillDiamondCount(skillId){
				var skill=cfg_skill.instance(String(skillId));
				var goods=cfg_goods.instance(skill.need_prop+"");
				var arr=goods.replace_res;
				return arr[1];
				}diamondCount(id){
				if (id < this.skillArr.length){
					var skill=cfg_skill.instance(this.skillArr[id]);
					var goods=cfg_goods.instance(skill.need_prop+"");
					var arr=goods.replace_res;
					return arr[1];
					}else{
					return 0;
				}
				}skillTime(id){
				if (this.skillArr !=null){
					if (this.skillArr[id] !=-1){
						var skill=cfg_skill.instance(this.skillArr[id]);
						var time=skill.cd;
						return time *1000;
						}else{
						return 0;
					}
					}else{
					return 0;
				}
			}
			get skillArr (){
				var scene=cfg_scene.instance(FightM.instance.sceneId+"");
				if (scene==null){
					return null
					}else{
					return scene.skills
				}
			}
			get scaleNum (){
				var c=0;
				for (var i=0;i < 6;i++){
					if (this.skillArr[i] > 0){
						c++;
					}
				}
				return c / 6;
			}
			static get instance (){
				return SkillM._instance || (SkillM._instance=new SkillM());
			}
		}

		model.SkillM=Laya.SkillM=SkillM;
		SkillM._instance=null;	

		class SmallM{
			constructor (){
				this._url="";
				//小游戏服务器连接
				this._isReceiVe=false;
			}
			setUrl(url){
				this._url=url;
				}getUrl(){
				return this._url;
			}
			get isReceive (){
				return this._isReceiVe;
			}
			set isReceive (isRe){
				this._isReceiVe=isRe;
			}
			static get instance (){
				return SmallM._instance || (SmallM._instance=new SmallM());
			}
		}

		model.SmallM=Laya.SmallM=SmallM;
		SmallM._instance=null;	

		/**
		*...
		*@author ...
		*/
		class SubscriptionM{
			constructor (){
				this._giftcode="";
			}
			getGiftcode(){
				return this._giftcode;
				}setGiftcode(_str){
				this._giftcode=_str;
			}
			static get instance (){
				return SubscriptionM._instance || (SubscriptionM._instance=new SubscriptionM());
			}
		}

		model.SubscriptionM=Laya.SubscriptionM=SubscriptionM;
		SubscriptionM._instance=null;	

		class UpgradeM{
			constructor (){
				//this._idLen=0;
				//this._urlArray=null;
				//this._idArr=null;
				//this._levelCount=NaN;
				//this._countArr=null;
			}
			setInfo(url,count){
				this._idArr=url;
				this._countArr=count;
				this._idLen=this._idArr.length;
			}
			get countArr (){
				return this._countArr;
			}
			get levelCount (){
				return this._levelCount;
			}
			get pointList (){
				if (this._idLen==1){
					return [new Point(640,500)];
					}else if (this._idLen==2){
					return [new Point(570,500),new Point(710,500)]
					}else if (this._idLen==3){
					return [new Point(500,500),new Point(640,500),new Point(780,500)]
					}else if (this._idLen==4){
					return [new Point(430,500),new Point(570,500),new Point(710,500),new Point(850,500)];
					}else if (this._idLen==5){
					return [new Point(360,500),new Point(500,500),new Point(640,500),new Point(780,500),new Point(920,500)];
					}else if (this._idLen==6){
					return [new Point(290,500),new Point(430,500),new Point(570,500),new Point(710,500),new Point(850,500),new Point(990,500)];
					}else if (this._idLen==7){
					return [new Point(),new Point(),new Point(),new Point(),new Point(),new Point(),new Point()];
					}else if (this._idLen==8){
				}
				return null;
			}
			get ImageArr (){
				this._urlArray=[];
				for (var i=0;i < this._idArr.length;i++){
					var goods=cfg_goods.instance(this._idArr[i]);
					this._urlArray.push(goods.icon);
				}
				return this._urlArray;
			}
			static get instance (){
				return UpgradeM._instance || (UpgradeM._instance=new UpgradeM());
			}
		}

		model.UpgradeM=Laya.UpgradeM=UpgradeM;
		UpgradeM._instance=null;	

		class WheelM{
			constructor (){
				this._frontIct=[0,0,0];
				//前三个转盘是否可转
				this._times=[0,0,0,0,0];
				//各转盘已转次数
				this._allTimes=[12,12,5,12,12];
				//各转盘上限次数
				this._wheelScore=[0,0,0,0,0];
				//各转盘已转累计值
				this._wheelToday=[0,0,0];
				//前三个转盘当日累计值
				this._costScore=[0,0,0,0,0];
				//转盘当日消耗
				this._playerScore=0;
				//玩家活动积分
				this._wheelShopScore=0;
				//玩家转盘商城积分
				this._isExchange=0;
				//积分是否对换成礼包码
				this._cdkey="";
				//礼包码
				//this._midAutumnScore=NaN;
			}
			getIct(){
				return this._frontIct;
				}setIct(_arr){
				this._frontIct=_arr;
				}getPlayerScore(){
				return this._playerScore;
				}setPlayerScore(_num){
				this._playerScore=_num;
				}setShopScore(_num){
				this._wheelShopScore=_num;
				}getShopScore(){
				return this._wheelShopScore;
				}getTimes(){
				return this._times;
				}setTimes(_arr){
				this._times=_arr;
				}getAllTimes(){
				return this._allTimes;
				}setAllTimes(_arr){
				this._allTimes=_arr;
				}getcostScore(){
				return this._costScore;
				}setcostScore(_arr){
				this._costScore=_arr;
				}getwheelScore(){
				return this._wheelScore;
				}setwheelScore(_arr){
				this._wheelScore=_arr;
				}getwheelToday(){
				return this._wheelToday;
				}setwheelToday(_arr){
				this._wheelToday=_arr;
			}
			get isExchange (){
				return this._isExchange;
			}
			set isExchange (num){
				this._isExchange=num;
			}
			get cdKey (){
				return this._cdkey;
			}
			set cdKey (str){
				this._cdkey=str;
			}
			get midAutumnScore (){
				return this._midAutumnScore;
			}
			set midAutumnScore (num){
				this._midAutumnScore=num;
			}
			static get instance (){
				return WheelM._instance || (WheelM._instance=new WheelM());
			}
		}

		model.WheelM=Laya.WheelM=WheelM;
		WheelM._instance=null;	

		class WxM{
			constructor (){
				this._imgUrl="ui/common/nan.png";
				this._idArr=null;
				this._isShow=true;
				//this._backScene=NaN;
			}
			getIndex(len){
				var index=Math.floor(Math.random()*len);
				return index;
			}
			get shareInfo (){
				if (null==this._idArr){
					this._idArr=[];
					var items=ConfigManager.getConfBySheet("cfg_share");
					for (var i in items){
						this._idArr.push(parseInt(i));
					}
				};
				var id=this.getIndex(this._idArr.length);
				var cfg=cfg_share.instance(this._idArr[id]);
				return cfg;
			}
			get isShow (){
				return this._isShow;
			}
			set isShow (isshow){
				this._isShow=isshow;
			}
			get isBackScene (){
				return this._backScene;
			}
			get imageUrl (){
				return this._imgUrl;
			}
			set imageUrl (imgUrl){
				this._imgUrl=imgUrl;
			}
			static get instance (){
				return WxM._instance || (WxM._instance=new WxM());
			}
		}

		model.WxM=Laya.WxM=WxM;
		WxM._instance=null;	window.proto={};

		class C2s_12001{
			constructor (){
				//this.scene_id=0;
			}
		}

		proto.C2s_12001=Laya.C2s_12001=C2s_12001;	

		class C2s_12031{
			constructor (){
				//this.uid=0;
			}
		}

		proto.C2s_12031=Laya.C2s_12031=C2s_12031;	

		class C2s_12035{
			constructor (){
				//public var f:Array;
				//this.hit=null;
			}
		}

		proto.C2s_12035=Laya.C2s_12035=C2s_12035;	

		class C2s_12043{
			constructor (){
				//this.fishes=null;
				//this.x=0;
				//this.y=0;
			}
		}

		proto.C2s_12043=Laya.C2s_12043=C2s_12043;	

		class C2s_13003{
			constructor (){
				//this.battery=0;
				//this.skin=0;
			}
		}

		proto.C2s_13003=Laya.C2s_13003=C2s_13003;	

		class C2s_14000{
			constructor (){
				//this.id=0;
				//this.platform=null;
			}
		}

		proto.C2s_14000=Laya.C2s_14000=C2s_14000;	

		class S2c_14006{
			constructor (){
				//this.id=0;
			}
		}

		proto.S2c_14006=Laya.S2c_14006=S2c_14006;	

		class C2s_14031{
			constructor (){
				//this.order_no=null;
			}
		}

		proto.C2s_14031=Laya.C2s_14031=C2s_14031;	

		class C2s_15001{
			constructor (){
				//this.type=0;
			}
		}

		proto.C2s_15001=Laya.C2s_15001=C2s_15001;	

		class C2s_17001{
			constructor (){
				//this.id=0;
				//this.uid=0;
				//this.x=0;
				//this.y=0;
				//this.rp=0;
				//使用资源替代rp
				//this.callreq=0;
				//召唤技能能否释放的询问
				//this.index=0;
			}
		}

		proto.C2s_17001=Laya.C2s_17001=C2s_17001;	

		class C2s_19000{
			constructor (){
				//this.task_id=0;
				this.is_daily=false;
				this.day_index=1;
			}
		}

		proto.C2s_19000=Laya.C2s_19000=C2s_19000;	

		class C2s_19002{
			constructor (){
				this.is_daily=false;
			}
		}

		proto.C2s_19002=Laya.C2s_19002=C2s_19002;	

		class C2s_19007{
			constructor (){
			}
		}

		proto.C2s_19007=Laya.C2s_19007=C2s_19007;	

		class C2s_20002{
			constructor (){
				//this.day=0;
			}
		}

		proto.C2s_20002=Laya.C2s_20002=C2s_20002;	

		class C2s_30002{
			constructor (){
				//this.value=NaN;
			}
		}

		proto.C2s_30002=Laya.C2s_30002=C2s_30002;	

		class C2s_34002{
			constructor (){
				//this.prize_id=NaN;
			}
		}

		proto.C2s_34002=Laya.C2s_34002=C2s_34002;	

		class C2s_34004{
			constructor (){
				//this.count=NaN;
				//this.type=NaN;
			}
		}

		proto.C2s_34004=Laya.C2s_34004=C2s_34004;	

		class C2s_shootBullet{
			constructor (){
				//this.startX=NaN;
				//this.startY=NaN;
				//this.endX=0;
				//this.endY=0;
				//this.sk=0;
				//皮肤
				//this.bt=0;
				//炮台等级
				//this.sr=NaN;
				//this.index=0;
				//this.lock=0;
				//是否锁定释放子弹
				//this.fuid=0;
				//锁定的鱼目标
				//this.uid=0;
				//子弹唯一id
				//this.m=0;
				//是否主子弹
				//this.tick=0;
			}
		}

		proto.C2s_shootBullet=Laya.C2s_shootBullet=C2s_shootBullet;	

		class ComPro{
			constructor (){
				//this.tip=null;
				//this.id=NaN;
				//this.num=NaN;
			}
		}

		proto.ComPro=Laya.ComPro=ComPro;	

		class MakePro{
			constructor (){
				//this.count=NaN;
				//this.icon=null;
			}
		}

		proto.MakePro=Laya.MakePro=MakePro;	

		class ProtoBulletHitInfo{
			constructor (){
				// public var lc:int;//left count
				//this.p=null;
			}
			getCx(){
				return this.p[0];
				}getCy(){
				return this.p[1];
				}getUniId(){
				return this.p[2];
				}getLc(){
				return this.p[3];
				}getFishUid(){
				return this.p[4];
			}
		}

		proto.ProtoBulletHitInfo=Laya.ProtoBulletHitInfo=ProtoBulletHitInfo;	

		class ProtoBulletInfo{
			constructor (){
				// public var fuid:int;
				//this.p=null;
			}
			getStartX(){
				return this.p[0];
				}getStartY(){
				return this.p[1];
				}getEndX(){
				return this.p[2];
				}getEndY(){
				return this.p[3];
				}getFuid(){
				return this.p[4];
				}getUniId(){
				return this.p[5];
				}getCoin(){
				return this.p[6];
				}getAgent(){
				return this.p[7];
				}getIndex(){
				return this.p[8];
				}getSk(){
				return this.p[9];
				}getSr(){
				return this.p[10];
				}getTick(){
				return this.p[11];
				}getCount(){
				return this.p[12];
			}
		}

		proto.ProtoBulletInfo=Laya.ProtoBulletInfo=ProtoBulletInfo;	

		class ProtoCatchAward{
			constructor (){
				// public var b:int;//bulletHit
				//this.p=null;
			}
			getT(){
				return this.p[0];
				}getV(){
				return this.p[1];
			}
		}

		proto.ProtoCatchAward=Laya.ProtoCatchAward=ProtoCatchAward;	

		class ProtoCatchFish{
			constructor (){
				// public var b:int;//1:子弹击中 0:其他连带(一网打尽等)
				//this.p=null;
				//this.seat_info=null;
			}
			//延时显示时的位置
			getU(){
				return this.p[0];
				}getAw(){
				return this.p[1]
				}getAg(){
				return this.p[2]
				}getB(){
				return this.p[3];
			}
		}

		proto.ProtoCatchFish=Laya.ProtoCatchFish=ProtoCatchFish;	

		class ProtoFightEatCoinRet{
			constructor (){
				//this.agent=0;
				//this.seat_id=0;
				//this.coin=0;
			}
		}

		proto.ProtoFightEatCoinRet=Laya.ProtoFightEatCoinRet=ProtoFightEatCoinRet;	

		class ProtoFightPlayerCoint{
			constructor (){
				//this.agent=0;
				//this.seat_id=0;
				//this.coin=0;
			}
		}

		proto.ProtoFightPlayerCoint=Laya.ProtoFightPlayerCoint=ProtoFightPlayerCoint;	

		class ProtoFishInfo{
			constructor (){
				// public var cad:Number;
				//this.p=null;
			}
			getUniId(){
				return this.p[0];
				}getFishId(){
				return this.p[1];
				}getFreezeStartTick(){
				return this.p[2];
			}
			// }
			getDelayTickNum(){
				return this.p[3];
				}getPath(){
				return this.p[4];
				}getStartTick(){
				return this.p[5];
				}isCatch(){
				return this.p[6]==1
			}
			// }
			getOffX(){
				return this.p[7];
				}getOffY(){
				return this.p[8];
			}
			// }
			getMirror(){
				return this.p[9];
			}
			// }
			getExtraTick(){
				return this.p[10];
			}
			// }
			getcalldelayTickNum(){
				return this.p[11];
				}getDelayDie(){
				return this.p[12];
			}
		}

		proto.ProtoFishInfo=Laya.ProtoFishInfo=ProtoFishInfo;	

		class ProtoObject{
			constructor (){
				//this.id=0;
				//this.a=null;
			}
		}

		proto.ProtoObject=Laya.ProtoObject=ProtoObject;	

		class ProtoSeatInfo{
			constructor (){
				//this.name=null;
				//this.coin=0;
				//this.agent=0;
				//this.seat_id=0;
				//this.cskin=0;
				//this.battery=0;
				//this.lvet=NaN;
				//狂暴剩余时间
				//this.vsid=0;
				//狂暴技能id
				//this.lock_et=NaN;
				//this.lock_uid=NaN;
				//this.lock_sid=NaN;
				//this.level=0;
				//this.avatar=null;
				//this.contestCoin=0;
				//this.contestScore=0;
				this.skipCoin=0;
			}
		}

		proto.ProtoSeatInfo=Laya.ProtoSeatInfo=ProtoSeatInfo;	

		class S2c_10007{
			constructor (){
				//this.type=0;
				//this.num=0;
			}
		}

		proto.S2c_10007=Laya.S2c_10007=S2c_10007;	

		class S2c_10008{
			constructor (){
				//this.coin=0;
				//玩家身上的金币数量
				//this.fcount=0;
				//奖金池捕获的鱼的数量
				//this.fcoin=0;
				//fish_coin
				//this.exp=0;
				//experience
				//this.diamond=0;
				//this.bcoin=0;
				//绑定金币
				//this.cscore=0;
			}
		}

		proto.S2c_10008=Laya.S2c_10008=S2c_10008;	

		class S2c_10009{
			constructor (){
				//this.level=0;
			}
		}

		proto.S2c_10009=Laya.S2c_10009=S2c_10009;	

		class S2c_12015{
			constructor (){
				//this.code=0;
				//this.coin=0;
				//this.ac=0;
				//this.dbCount=0;
				//this.awardScore=NaN;
				//this.prize=NaN;
				//this.bcoin=0;
				//this.ccoin=0;
			}
		}

		proto.S2c_12015=Laya.S2c_12015=S2c_12015;	

		class S2c_12023{
			constructor (){
				//this.d=0;
				//this.t=NaN;
			}
		}

		proto.S2c_12023=Laya.S2c_12023=S2c_12023;	

		class S2c_12026{
			constructor (){
				//this.seat_id=0;
				//this.scene_id=0;
				//this.ccoin=0;
				//contest_coin
				//this.cscore=0;
				//contest_score
				//this.end_time=0;
				//this.closeRoom=false;
			}
		}

		proto.S2c_12026=Laya.S2c_12026=S2c_12026;	

		class S2c_12027{
			constructor (){
				//this.seat_id=0;
				//this.battery=0;
				//this.cskin=0;
			}
		}

		proto.S2c_12027=Laya.S2c_12027=S2c_12027;	

		class S2c_12028{
			constructor (){
				//this.time=NaN;
			}
		}

		proto.S2c_12028=Laya.S2c_12028=S2c_12028;	

		class S2c_12029{
			constructor (){
				//this.sid=0;
				//this.uid=0;
				//this.x=NaN;
				//this.y=NaN;
				//this.seat_id=0;
				//this.coin=0;
				//this.agent=0;
			}
		}

		proto.S2c_12029=Laya.S2c_12029=S2c_12029;	

		class S2c_12030{
			constructor (){
				//this.seat_id=0;
				//this.sid=0;
				//this.lvet=NaN;
			}
		}

		proto.S2c_12030=Laya.S2c_12030=S2c_12030;	

		class S2c_12033{
			constructor (){
				//this.seat_id=0;
				//this.lock_et=NaN;
				//this.lock_uid=0;
				//this.lock_sid=0;
			}
		}

		proto.S2c_12033=Laya.S2c_12033=S2c_12033;	

		class S2c_13002{
			constructor (){
				//this.code=0;
				//this.battery=0;
			}
		}

		proto.S2c_13002=Laya.S2c_13002=S2c_13002;	

		class S2c_16001{
			constructor (){
				//this.blist=null;
			}
		}

		proto.S2c_16001=Laya.S2c_16001=S2c_16001;	

		class S2c_17002{
			constructor (){
				//this.code=0;
				//this.id=0;
			}
		}

		proto.S2c_17002=Laya.S2c_17002=S2c_17002;	

		class S2c_17003{
			constructor (){
				//this.info=null;
			}
		}

		proto.S2c_17003=Laya.S2c_17003=S2c_17003;	

		class S2c_18001{
			constructor (){
				//this.goods=0;
				//this.num=0;
			}
		}

		proto.S2c_18001=Laya.S2c_18001=S2c_18001;	

		class S2c_20001{
			constructor (){
				//this.day=0;
				//this.award_get=0;
			}
		}

		proto.S2c_20001=Laya.S2c_20001=S2c_20001;	

		class S2c_20003{
			constructor (){
				//this.code=0;
				//this.day=0;
				//this.award_get=0;
			}
		}

		proto.S2c_20003=Laya.S2c_20003=S2c_20003;	

		class S2c_21000{
			constructor (){
				//this.id=0;
				//this.agent=null;
				//this.a1=null;
				//this.a2=null;
				//this.a3=null;
				//this.a4=null;
				//this.a5=null;
				//this.a6=null;
				//this.a7=null;
			}
		}

		proto.S2c_21000=Laya.S2c_21000=S2c_21000;	

		class S2c_22000{
			constructor (){
				//this.id=0;
			}
		}

		proto.S2c_22000=Laya.S2c_22000=S2c_22000;	

		class S2c_22001{
			constructor (){
				//this.code=0;
				//this.id=0;
				//this.lt=NaN;
				//this.awardId=0;
				//this.awardNum=0;
			}
		}

		proto.S2c_22001=Laya.S2c_22001=S2c_22001;	

		class S2c_22003{
			constructor (){
				//this.id=0;
				//this.lt=NaN;
			}
		}

		proto.S2c_22003=Laya.S2c_22003=S2c_22003;	

		class S2c_22004{
			constructor (){
				//this.id=0;
				//this.lt=NaN;
			}
		}

		proto.S2c_22004=Laya.S2c_22004=S2c_22004;	

		class S2c_fightSync{
			constructor (){
				//this.bulletH=null;
				//this.bullet=null;
				//this.fish=null;
				//this.cInfo=null;
				//this.bac=0;
				//boss accu coin boos积累的金币
				//this.cut=0;
				//clearUpTotalTime
				//this.cuut=0;
				//clearUpUseTime
				//this.cud=0;
				//clearUpDirTime
				//this.tick=0;
				//当前服务器上面的tick
				//this.maxTick=0;
			}
		}

		proto.S2c_fightSync=Laya.S2c_fightSync=S2c_fightSync;	

		class S2c_handshake{
			constructor (){
				//this.code=NaN;
				//this.uuid=null;
				//this.in_fight=false;
				//public var gold_pool_award:int;
				//this.time=0;
				//this.gold_pool_value=NaN;
				//this.enter_main=0;
				//this.uid=NaN;
				//this.shop_rate=NaN;
			}
		}

		proto.S2c_handshake=Laya.S2c_handshake=S2c_handshake;	

		class S2c_playercreate{
			constructor (){
				//this.code=0;
			}
		}

		proto.S2c_playercreate=Laya.S2c_playercreate=S2c_playercreate;	

		class S2c_profile{
			constructor (){
				//this.name=null;
				//this.level=0;
				//this.vip=0;
				//this.vip_exp=0;
				//this.coin=0;
				//this.diamond=0;
				//this.fish_coin=null;
				//this.exp=0;
				//this.battery=0;
				//this.cskin=0;
				//this.skins=null;
				//this.goods=null;
				//this.purchased_items=null;
				//this.task_new=null;
				//this.task_daily=null;
				//this.create_time=NaN;
				//this.day_index=0;
				//this.task_daily_ids=null;
				//this.charge_times=0;
				//this.charge_total=0;
				//this.first_charge_reward_accepted=0;
				//this.skill_res_tip=0;
				//this.award_score=0;
				//this.avatar=null;
				//this.exchange=0;
				//this.bcoin=0;
				//this.at_coin=0;
				//this.wxmini_balance=0;
				//this.is_set_bank_password=0;
				//this.bank_gold=0;
				//this.contest_coin=0;
				//this.contest_score=0;
			}
		}

		proto.S2c_profile=Laya.S2c_profile=S2c_profile;	

		class S2c_roomGetIn{
			constructor (){
				//this.code=0;
				//this.seat_id=0;
			}
		}

		proto.S2c_roomGetIn=Laya.S2c_roomGetIn=S2c_roomGetIn;	

		class S2c_shootBullet{
			constructor (){
				// public var m:int;//是否主子弹，决定炮台动作
				//this.p=null;
			}
			getStartX(){
				return this.p[0];
				}getStartY(){
				return this.p[1];
				}getEndX(){
				return this.p[2];
				}getEndY(){
				return this.p[3];
				}getSk(){
				return this.p[4];
				}getBt(){
				return this.p[5];
				}getUniId(){
				return this.p[6];
				}getIndex(){
				return this.p[7];
				}getCoin(){
				return this.p[8];
				}getAgent(){
				return this.p[9];
				}getSr(){
				return this.p[10];
				}getFuid(){
				return this.p[11];
				}getM(){
				return this.p[12];
				}getHitCount(){
				return this.p[13];
				}getTick(){
				return this.p[14];
			}
		}

		proto.S2c_shootBullet=Laya.S2c_shootBullet=S2c_shootBullet;	

		class SharePro{
			constructor (){
				//this.imgUrl=null;
				//this.titleName=null;
			}
		}

		proto.SharePro=Laya.SharePro=SharePro;	window.struct={};

		class CertificationInfo{
			constructor (){
				//this.quitInfo=null;
				//this.buyInfo=null;
				//login shop main month Gift
				//this.openFrom=null;
				this.realForciblySwithState=LoginInfoM.instance.openCertification;
				this.realState=LoginM.instance.isCompleteCertification;
				this.bindState=RoleInfoM.instance.is_bind_tel;
				this.ageState=LoginInfoM.instance.ageType;
			}
		}

		struct.CertificationInfo=Laya.CertificationInfo=CertificationInfo;	

		class FriendInfo{
			constructor (){
				//this.rank=NaN;
				//this.id=null;
				//this.name=null;
				//this.icon=null;
				//this.level=NaN;
				//this.online=NaN;
				this.signature;
			}
		}

		struct.FriendInfo=Laya.FriendInfo=FriendInfo;	

		class QuitTipInfo{
			constructor (){
				//this.content=null;
				//this.confirmMsg=null;
				//this.conFirmArgs=null;
				//this.commonMsg=null;
				//this.commonArgs=null;
				//this.cancelMsg=null;
				//this.state=0;
				//this.autoCloseTime=0;
				//this.closeCallback=null;
				//this.cancelArgs=null;
				//this.confirmCallback=null;
				this.isHaveTime=true;
				//this.quitMsg=null;
				//this.quitArgs=null;
				//this.confirmEvent=null;
				//this.confirmEventArgs=null;
				//this.cancelEvent=null;
				//this.cancelEventArgs=null;
				//this.cancelCallback=null;
				this.middleTxt="确定";
				this.leftTxt="取消";
				this.rightTxt="确定";
				this.middileTxtColor="green";
				this.leftTxtColor="green";
				this.rightTxtColor="red";
			}
		}

		struct.QuitTipInfo=Laya.QuitTipInfo=QuitTipInfo;	

		class ShowGetCoinInfo{
			constructor (){
				//this.pos_x=NaN;
				//this.pos_y=NaN;
				//this.seat_id=0;
				//this.goodId=0;
				//this.delay=NaN;
				//this.useTime=NaN;
				//this.isOwn=false;
				//this.rnd=null;
			}
		}

		struct.ShowGetCoinInfo=Laya.ShowGetCoinInfo=ShowGetCoinInfo;	window.view={};view.fish={};

		class BackBox{
			constructor (){
				//this._view=null;
				this.reEndX=-359;
				this.reStartX=-100;
			}
			init(view){
				this._view=view;
				this._view.on(Event.MOUSE_DOWN,this,this.downSkip);
				this._view.checkBtn.on(Event.MOUSE_DOWN,this,this.downSkip);
				this._view.settingBtn.on(Event.MOUSE_DOWN,this,this.downSkip);
				this._view.returnBtn.on(Event.MOUSE_DOWN,this,this.downSkip);
				this._view.taskNewBtn.on(Event.MOUSE_DOWN,this,this.downSkip);
				this._view.fanBtn.on(Event.MOUSE_DOWN,this,this.downSkip);
				this._view.zhenBtn.on(Event.MOUSE_DOWN,this,this.downSkip);
				this._view.barBox.on(Event.CLICK,this,this.clickBar);
				this._view.checkBtn.on(Event.CLICK,this,this.clickCheck);
				this._view.settingBtn.on(Event.CLICK,this,this.onChangeSettingBtn);
				this._view.returnBtn.on(Event.CLICK,this,this.clickClose);
				this._view.taskNewBtn.on(Event.CLICK,this,this.taskNew);
				this._view.zhenBtn.visible=false;
				this._view.fanBtn.visible=true;
				this.showTaskNewIcon();
				}downSkip(event){
				event.stopPropagation();
				}tip(){
				var info=new QuitTipInfo();
				info.state=1;
				if (FightM.instance.isMatchingGame()&& (MatchM.instance.isMatchSart==1 && MatchResultBox.instance.view().visible==false)){
					info.content="现在退出比赛，系统将扣除报名费的60%作为惩罚";
					}else{
					info.content="是否退出房间？";
				}
				info.confirmMsg="ReturnConfirm";
				info.autoCloseTime=10;
				GameEventDispatch.instance.event("QuitTip",info);
				}clickClose(event){
				event.stopPropagation();
				this.tip();
				}onChangeSettingBtn(event){
				if (!this._view){
					return;
				}
				if (this._view.left==-359+GameTools.iphoneXOffset){
					}else{
					GameEventDispatch.instance.event("CloseOtherBar");
					UiManager.instance.loadView("Setting",null,"SMALL_TO_BIG");
				}
				}taskNew(event){
				var a=new C2s_19002();
				WebSocketManager.instance.send(19002,a);
				UiManager.instance.loadView("TaskNew",null,"SMALL_TO_BIG");
				}clickBar(){
				if (!this._view){
					return
				}
				if (this._view.zhenBtn.visible==true && this._view.fanBtn.visible==false){
					this._view.zhenBtn.visible=false;
					this._view.fanBtn.visible=true;
					this.barInFunc();
					}else if (this._view.zhenBtn.visible==false && this._view.fanBtn.visible==true){
					this._view.zhenBtn.visible=true;
					this._view.fanBtn.visible=false;
					this.barGoFunc();
				}
				}clickCheck(){
				if (!this._view){
					return
				}
				GameTools.buttonEffect(this._view.checkBtn);
				GameEventDispatch.instance.event("FishTypeC");
				}barInFunc(){
				if (!this._view){
					return
				};
				var endLeftX=-359;
				if (GameTools.isIphoneXCrossScreen()&& ScreenAdaptManager.instance.notch=="left"){
					endLeftX+=GameTools.iphoneXOffset;
				}
				Tween.to(this._view,{left:endLeftX},300,null);
				}barGoFunc(){
				if (!this._view){
					return
				}
				this.showTaskNewIcon();
				var startLeftX=-20;
				if (GameTools.isIphoneXCrossScreen()&& ScreenAdaptManager.instance.notch=="left"){
					startLeftX+=GameTools.iphoneXOffset;
				}
				if (this._view.taskNewBtn.visible==false){
					this._view.checkBtn.pos(134,16);
					startLeftX=-100;
					if (GameTools.isIphoneXCrossScreen()&& ScreenAdaptManager.instance.notch=="left"){
						startLeftX+=GameTools.iphoneXOffset;
					}
					}else{
					this._view.checkBtn.pos(53,17);
				}
				Tween.to(this._view,{left:startLeftX},300,null);
				}showTaskNewIcon(){
				if (!this._view){
					return
				};
				var day_index=RoleInfoM.instance.getDayIndex();
				var red_points=RoleInfoM.instance.getRedPoints();
				if (!FightM.instance.coinShootScene()){
					this.reEndX=-180;
					this.reStartX=-359;
					this._view.taskNewBtn.visible=false;
					}else if (RuleM.instance.isShowScene){
					this._view.taskNewBtn.visible=false;
					}else{
					if (day_index > 7){
						if (1 & red_points){
							this.reEndX=-95;
							this.reStartX=-359;
							this._view.taskNewBtn.visible=ENV.isShowDied()? false :true;
							}else{
							this.reEndX=-180;
							this.reStartX=-359;
							this._view.taskNewBtn.visible=false;
						}
						}else{
						this.reEndX=-95;
						this.reStartX=-359;
						this._view.taskNewBtn.visible=ENV.isShowDied()? false :true;
					}
				}
				}register(){
				GameEventDispatch.instance.on("NoviceGuideClickBar",this,this.clickBar);
				}unRegister(){
				if (!this._view){
					return
				}
				if (this._view.zhenBtn.visible==true && this._view.fanBtn.visible==false){
					this._view.zhenBtn.visible=false;
					this._view.fanBtn.visible=true;
					view.fish.BackBox.instance.barInFunc();
				}
				GameEventDispatch.instance.off("NoviceGuideClickBar",this,this.clickBar);
				}resetUi(){
				if (this._view){
					this._view.checkBtn.visible=FightM.instance.coinShootScene();
				}
				}showRedPoint(){
				if (!this._view){
					return;
				};
				var red_points=RoleInfoM.instance.getRedPoints();
				if (1 & red_points){
					RedpointC.instance.removeRedPoint(this._view.taskNewBtn);
					RedpointC.instance.addRedPointToIcon(this._view.taskNewBtn,0.75,6);
					}else{
					RedpointC.instance.removeRedPoint(this._view.taskNewBtn);
				};
				var scene_arr=[1,2,3];
				if (scene_arr.indexOf(FightM.instance.getSceneId())>-1){
					if ((1 & red_points)|| (2 & red_points)){
						RedpointC.instance.removeRedPoint(this._view.pull_box_bg);
						RedpointC.instance.addRedPointToIcon(this._view.pull_box_bg,0.97,4);
						}else{
						RedpointC.instance.removeRedPoint(this._view.pull_box_bg);
					}
					}else{
					if ((2 & red_points)){
						RedpointC.instance.removeRedPoint(this._view.pull_box_bg);
						RedpointC.instance.addRedPointToIcon(this._view.pull_box_bg,0.97,4);
						}else{
						RedpointC.instance.removeRedPoint(this._view.pull_box_bg);
					}
				}
			}
			static get instance (){
				return BackBox._instance || (BackBox._instance=new BackBox());
			}
		}

		view.fish.BackBox=Laya.BackBox=BackBox;
		BackBox._instance=null;	

		class GoodsFlyEffect{
			constructor (goodsId,startX,startY,endX,endY,delay,parent,isOwn,rnd){
				//this._delay=NaN;
				//this._startX=NaN;
				//this._startY=NaN;
				//this._endX=NaN;
				//this._endY=NaN;
				//this._goodsId=0;
				//this._image=null;
				//this._bezierX=NaN;
				//this._bezierY=NaN;
				//this._bezierStartX=NaN;
				//this._bezierStartY=NaN;
				//this._bezierEndX=NaN;
				//this._bezierEndY=NaN;
				//this._bezierTotalTime=NaN;
				//this._bezierUseTime=NaN;
				//this._lineDelay=NaN;
				//this._lineDeltaX=NaN;
				//this._lineDeltaY=NaN;
				//this._lineLeftTime=NaN;
				//this._lineTotalTime=NaN;
				this._isAni=false;
				this._isOwn=false;
				this._lineSpeed=1000;
				this.init(goodsId,startX,startY,endX,endY,delay,parent,isOwn,rnd);
			}
			init(goodsId,startX,startY,endX,endY,delay,parent,isOwn,rnd){
				var goodsIcon=ConfigManager.getConfValue("cfg_goods",goodsId,"waceIcon");
				if (!rnd){
					rnd=[];
					for (var i=0;i < 8;i++){
						rnd.push(Math.random());
					}
				}
				this._isOwn=isOwn;
				if (!this._image){
					if (1==goodsId){
						var aniName="coin";
						var ani;
						if (this._isOwn){
							aniName="coin";
						}
						this._isAni=true;
						ani=AnimalManger.instance.load(aniName);
						this._image=ani;
						this._image.pivot(ConfigManager.getConfValue("cfg_anicollision",aniName,"pivotX"),
						ConfigManager.getConfValue("cfg_anicollision",aniName,"pivotY"));
						ani.play(0,true);
					}
					else{
						this._image=new Image(goodsIcon);
					}
				}
				else{
					if (1==goodsId){
						var aniTmp;
						aniTmp=this._image;
						aniTmp.play(0,true);
					}
					else{
						var tmpImage=this._image;
						tmpImage.skin=goodsIcon;
					}
				}
				parent.addChild(this._image);
				this._image.x=startX;
				this._image.y=startY;
				this._delay=delay;
				this._startX=startX;
				this._startY=startY;
				this._bezierStartX=startX;
				this._bezierStartY=startY;
				this._endX=endX;
				this._endY=endY;
				this._image.visible=this._delay <=0;
				var minX=60;
				var deltaX=60;
				var minY=60;
				var deltaY=60;
				var rndX=NaN;
				var rndY=NaN;
				var rndIndex=0;
				if (rnd[rndIndex++] < 0.5){
					rndX=minX+rnd[rndIndex++] *deltaX;
					rndY=rnd[rndIndex++] *(minY+deltaY);
				}
				else{
					rndY=minY+rnd[rndIndex++] *deltaY;
					rndX=rnd[rndIndex++] *(minX+deltaX);
				}
				if (rnd[rndIndex++] < 0.5){
					this._bezierEndX=startX+rndX;
				}
				else{
					this._bezierEndX=startX-rndX;
				}
				if (rnd[rndIndex++] < 0.5){
					this._bezierEndY=startY+rndY;
				}
				else{
					this._bezierEndY=startY-rndY;
				}
				if (this._bezierEndX < 0){
					this._bezierEndX=-this._bezierEndX;
				}
				else if (this._bezierEndX > Laya.stage.width){
					this._bezierEndX=startX+startX-this._bezierEndX;
				}
				if (this._bezierEndY < 0){
					this._bezierEndY=-this._bezierEndY;
				}
				else if (this._bezierEndY > Laya.stage.height){
					this._bezierEndY=startY+startY-this._bezierEndY;
				};
				var angle=NaN;
				var len=NaN;
				var radian=NaN;
				this._bezierX=(startX+this._bezierEndX)/ 2;
				this._bezierY=Math.min(startY,this._bezierEndY)-40-80 *rnd[rndIndex++];
				this._bezierUseTime=0;
				this._bezierTotalTime=0.2;
				this._lineDelay=0.5;
				len=GameTools.CalPointLen(new Point(this._bezierEndX,this._bezierEndY),new Point(this._endX,this._endY));
				this._lineLeftTime=len / this._lineSpeed;
				this._lineTotalTime=this._lineLeftTime;
				angle=GameTools.CalLineAngle(new Point(this._bezierEndX,this._bezierEndY),new Point(this._endX,this._endY));
				radian=angle *Math.PI / 180;
				this._lineDeltaX=Math.cos(radian);
				this._lineDeltaY=Math.sin(radian);
				this._image.scale(1,1);
				}getEffectTime(){
				return this._delay+this._bezierTotalTime+this._lineTotalTime+this._lineDelay;
				}update(delta){
				if (this._delay > 0){
					this._delay-=delta;
					if (this._delay <=0){
						this._image.visible=true;
					}
					return;
				};
				var pos_x=NaN;
				var pos_y=NaN;
				if (this._bezierUseTime < this._bezierTotalTime){
					this._bezierUseTime+=delta;
					if (this._bezierUseTime > this._bezierTotalTime){
						this._bezierUseTime=this._bezierTotalTime;
					};
					var t=this._bezierUseTime / this._bezierTotalTime;
					var minusT=1-t;
					pos_x=minusT *minusT *this._bezierStartX+2 *t *minusT *this._bezierX+t *t *this._bezierEndX;
					pos_y=minusT *minusT *this._bezierStartY+2 *t *minusT *this._bezierY+t *t *this._bezierEndY;
					this._image.x=pos_x;
					this._image.y=pos_y;
				}
				else{
					if (this._lineDelay > 0){
						this._lineDelay-=delta;
						return;
					}
					this._lineLeftTime-=delta;
					if (this._lineLeftTime < 0){
						this._lineLeftTime=0;
					}
					this._image.x=this._image.x+this._lineDeltaX *delta *this._lineSpeed;
					this._image.y=this._image.y+this._lineDeltaY *delta *this._lineSpeed;
				}
			}
			//_image.scale(_lineLeftTime *1 / _lineTotalTime+1,_lineLeftTime *1 / _lineTotalTime+1);
			destroy(){
				this._image.visible=false;
				if (this._isAni){
					var ani;
					ani=this._image;
					ani.stop();
					GoodsFlyEffect._aniCacheArray.push(this);
				}
				else{
					GoodsFlyEffect._iconCacheArray.push(this);
				}
				}isEnd(){
				return this._lineLeftTime <=0;
			}
			static Create (goodsId,startX,startY,endX,endY,delay,parent,isOwn,rnd){
				var ret;
				if (!GoodsFlyEffect._aniCacheArray){
					GoodsFlyEffect._aniCacheArray=[];
					GoodsFlyEffect._iconCacheArray=[];
				};
				var goodsIcon=ConfigManager.getConfValue("cfg_goods",goodsId,"waceIcon");
				if (1==goodsId){
					if (GoodsFlyEffect._aniCacheArray.length > 0){
						for (var i=0;i < GoodsFlyEffect._aniCacheArray.length;i++){
							ret=GoodsFlyEffect._aniCacheArray [i];
							if (ret._isOwn==isOwn){
								GoodsFlyEffect._aniCacheArray.splice(i,1);
								ret.init(goodsId,startX,startY,endX,endY,delay,parent,isOwn,rnd);
								break ;
							}
							ret=null;
						}
					}
					if (!ret){
						ret=new GoodsFlyEffect(goodsId,startX,startY,endX,endY,delay,parent,isOwn,rnd);
					}
				}
				else{
					if (GoodsFlyEffect._iconCacheArray.length > 0){
						ret=GoodsFlyEffect._iconCacheArray [0];
						GoodsFlyEffect._iconCacheArray.splice(0,1);
						ret.init(goodsId,startX,startY,endX,endY,delay,parent,isOwn,rnd);
					}
					else{
						ret=new GoodsFlyEffect(goodsId,startX,startY,endX,endY,delay,parent,isOwn,rnd);
					}
				}
				return ret;
			}
		}

		view.fish.GoodsFlyEffect=Laya.GoodsFlyEffect=GoodsFlyEffect;
		GoodsFlyEffect._aniCacheArray=null;
		GoodsFlyEffect._iconCacheArray=null;	

		class GoodsFlyManager{
			constructor (){
				//this._flyEffectArray=null;
				this._flyEffectArray=[];
				Laya.timer.frameLoop(1,this,this.loop);
			}
			removeInvalidEffect(removeAll=false){
				var invalidEffect=[];
				for (var i=0;i < this._flyEffectArray.length;i++){
					var flyEffect=this._flyEffectArray [i];
					if (flyEffect.isEnd()|| removeAll){
						invalidEffect.push(flyEffect);
					}
				};
				var count=invalidEffect.length;
				for (var j=0;j < count;j++){
					var removeEffect=invalidEffect [j];
					removeEffect.destroy();
					for (var k=0;k < this._flyEffectArray.length;k++){
						if (this._flyEffectArray[k]===removeEffect){
							this._flyEffectArray.splice(k,1);
							break ;
						}
					}
				}
				}loop(){
				var delta=Laya.timer.delta / 1000;
				var flyEffect;
				for (var i=0;i < this._flyEffectArray.length;i++){
					flyEffect=this._flyEffectArray[i];
					flyEffect.update(delta);
				}
				if (this._flyEffectArray.length > 0){
					this.removeInvalidEffect();
				}
				}addFlyEffect(effect){
				this._flyEffectArray.push(effect);
			}
			static get instance (){
				return GoodsFlyManager._instance || (GoodsFlyManager._instance=new GoodsFlyManager());
			}
		}

		view.fish.GoodsFlyManager=Laya.GoodsFlyManager=GoodsFlyManager;
		GoodsFlyManager._instance=null;	

		class MatchInfoBox{
			constructor (){
				//this._view=null;
				//[{name:我是玩家,num:111,me:0}]
				//this._listInfo=null;
				this._listInfo=[];
			}
			init(view){
				this._view=view;
				this._view.on(Event.MOUSE_DOWN,this,this.downSkip);
				this._view.list.renderHandler=new Handler(this,this.renderHandlerList);
				}renderHandlerList(cell,index){
				var config=cell.dataSource;
				var ele_myselfImg=cell.getChildByName("myselfImg");
				var ele_firstImg=cell.getChildByName("firstImg");
				var ele_rank=cell.getChildByName("rank");
				var ele_name=cell.getChildByName("name");
				var ele_money=cell.getChildByName("money");
				ele_firstImg.visible=false;
				ele_myselfImg.visible=false;
				ele_rank.color="#ffffff";
				ele_name.color="#ffffff";
				ele_money.color="#ffffff";
				if (index==0){
					ele_firstImg.visible=true;
				}
				if (config.me==1){
					ele_rank.color="#fbff80";
					ele_name.color="#fbff80";
					ele_money.color="#fbff80";
					ele_myselfImg.visible=true;
				}
				ele_rank.text=(index+1)+"";
				ele_name.text=config.name+"";
				ele_money.text=config.num+"";
				}downSkip(event){
				event.stopPropagation();
				}matchingSynRoomData(){
				var roomCount=(MatchM.instance.contestFee / 10000).toFixed(0);
				if (roomCount.length <=2){
					this._view.title.fontSize=23;
					}else{
					this._view.title.fontSize=19;
				}
				this._view.title.text=roomCount+"万";
				this._view.roomText.text="创建者:"+LoginInfoM.instance.filterName(GameTools.formatNickName(MatchM.instance.matchNameRule(MatchM.instance.roomName),16));
				FightM.instance.initCountDown(MatchM.instance.roomTime,this._view.countDownLabel);
				}countPlayerRankInfo(){
				var seatInfo;
				var listTemp=[];
				var seatId=0;
				var objTemp={};
				for (var i=1;i <=4;i++){
					objTemp={};
					seatInfo=new ProtoSeatInfo();
					seatId=FightM.instance.getSeatIdByShowSeatId(i);
					if (MatchM.instance.offLineSeatIndex && MatchM.instance.offLineSeatIndex.indexOf(seatId)>=0){
						objTemp.name=MatchM.instance.offLineInfoMsg[seatId].name;
						objTemp.me=MatchM.instance.offLineInfoMsg[seatId].me;
						objTemp.num=MatchM.instance.offLineInfoMsg[seatId].num;
						listTemp.push(objTemp);
						}else{
						seatInfo=FightM.instance.getSeatInfo(seatId);
						if (seatInfo){
							objTemp.name=LoginInfoM.instance.filterName(GameTools.formatNickName(MatchM.instance.matchNameRule(seatInfo.name),8));
							if (i==1){
								objTemp.me=1;
								objTemp.num=RoleInfoM.instance.getContestScore()-FightM.instance.getGoodsUnreachNum(seatInfo.agent,201);
								}else{
								objTemp.me=0;
								objTemp.num=seatInfo.contestScore;
							}
							listTemp.push(objTemp);
						}
					}
				}
				if (MatchM.instance.isMatchSart==1){
					this._listInfo=listTemp.sort(this.sortContestScore);
					}else{
					this._listInfo=listTemp;
				}
				this._view.list.array=this._listInfo;
				}sortContestScore(a,b){
				if (a.num >=b.num){
					return -1;
					}else{
					return 1;
				}
				}register(){
				if (!this._view){
					return
				}
				GameEventDispatch.instance.on("MatchingSynRoomData",this,this.matchingSynRoomData);
				GameEventDispatch.instance.on("MatchingGameSynState",this,this.countPlayerRankInfo);
				}unRegister(){
				if (!this._view){
					return
				}
				GameEventDispatch.instance.off("MatchingSynRoomData",this,this.matchingSynRoomData);
				GameEventDispatch.instance.off("MatchingGameSynState",this,this.countPlayerRankInfo);
				}resetUi(){
				if (!this._view){
					return
				}
				this._view.visible=FightM.instance.isMatchingGame();
				if (this._view.visible){
					FightM.instance.initCountDown(FightM.instance.getContestEndTime(),this._view.countDownLabel);
				}
				}updateTime(){
				if (!this._view){
					return
				}
				if (this._view.visible && MatchM.instance.isMatchSart==1){
					FightM.instance.contestEndTimeSub();
					FightM.instance.initCountDown(FightM.instance.getContestEndTime(),this._view.countDownLabel);
				}
			}
			static get instance (){
				return MatchInfoBox._instance || (MatchInfoBox._instance=new MatchInfoBox());
			}
		}

		view.fish.MatchInfoBox=Laya.MatchInfoBox=MatchInfoBox;
		MatchInfoBox._instance=null;	

		class MatchResultBox{
			constructor (){
				//this._view=null;
				//[{name:我是玩家,num:111,me:0}]
				//this._listInfo=null;
				this._count=10;
				this._listInfo=[];
			}
			init(view){
				this._view=view;
				this._view.visible=false;
				this._view.on(Event.MOUSE_DOWN,this,this.downSkip);
				this._view.againBtn.on(Event.CLICK,this,this.onAgainBtn);
				this._view.list.renderHandler=new Handler(this,this.renderList);
				}view(){
				return this._view
				}onAgainBtn(){
				if (FightM.instance.isMatchingGame()&& MatchM.instance.isMatchSart==0){
					WebSocketManager.instance.send(12112,null);
					this._view.visible=false;
				}
				}renderList(cell,index){
				var config=cell.dataSource;
				var ele_myselfImg=cell.getChildByName("myselfImg");
				var ele_firstImg=cell.getChildByName("firstImg");
				var ele_name=cell.getChildByName("name");
				var ele_num=cell.getChildByName("num");
				var activityImg=cell.getChildByName("activity");
				var activity_num=activityImg.getChildByName("activity_num");
				ele_firstImg.visible=false;
				ele_myselfImg.visible=false;
				ele_name.color="#ffffff";
				ele_num.color="#ffffff";
				if (index==0){
					ele_firstImg.visible=true;
				}
				if (config.me==1){
					ele_myselfImg.visible=true;
					ele_name.color="#fff36b";
					ele_num.color="#fff36b";
				}
				ele_name.text=LoginInfoM.instance.filterName(GameTools.formatNickName(MatchM.instance.matchNameRule(config.name),8));
				ele_num.text=config.reward[1]+"";
				var extra_award=config.extra_award;
				if(extra_award && extra_award.length>0){
					activityImg.visible=true;
					activityImg.skin=cfg_goods.instance(extra_award[0][0]).icon;
					activity_num.value="x"+extra_award[0][1];
					}else {
					activityImg.visible=false;
				}
				}downSkip(event){
				event.stopPropagation();
				}matchingSynResultMsg(){
				this._view.list.array=MatchM.instance.resultMsg.data;
				this._view.visible=true;
				this._count=10;
				this._view.againBtn.label="再玩一场"+this._count+"s";
				Laya.timer.loop(1000,this,this.update);
				}update(){
				if (FightM.instance.isMatchingGame()&& this._view.visible==true){
					if (this._count==0){
						Laya.timer.clear(this,this.update);
						GameEventDispatch.instance.event("ReturnConfirm");
						}else{
						this._count-=1;
						this._view.againBtn.label="再玩一场"+this._count+"s";
					}
				}
				}register(){
				if (!this._view){
					return
				}
				GameEventDispatch.instance.on("MatchingSynRusultMsg",this,this.matchingSynResultMsg);
				}unRegister(){
				if (!this._view){
					return
				}
				GameEventDispatch.instance.off("MatchingSynRusultMsg",this,this.matchingSynResultMsg);
			}
			static get instance (){
				return MatchResultBox._instance || (MatchResultBox._instance=new MatchResultBox());
			}
		}

		view.fish.MatchResultBox=Laya.MatchResultBox=MatchResultBox;
		MatchResultBox._instance=null;	view.levelup={};

		class LevelBox{
			constructor (url,point,rewardview,count){
				//this.skin=null;
				//this._rewardView=null;
				//this._url=null;
				//this.beiImg=null;
				//this._count=0;
				//this._countClip=null;
				this._count=count;
				this.beiImg=new Image("ui/common_ex/bei.png");
				this.beiImg.anchorX=0.5;
				this.beiImg.anchorY=0.5;
				this.beiImg.width=120;
				this.beiImg.height=120;
				this.beiImg.sizeGrid="26,24,36,24,1";
				this.beiImg.x=point.x;
				this.beiImg.y=point.y+5;
				this._rewardView=rewardview;
				this.skin=new Image(url);
				this.skin.anchorX=0.5;
				this.skin.anchorY=0.5;
				this.skin.scaleX=0.9;
				this.skin.scaleY=0.9;
				this.skin.x=point.x;
				this.skin.y=point.y;
				this._countClip=new FontClip("ui/common_ex/nums.png","0123456789");
				this._countClip.value=this._count+"";
				this._countClip.anchorX=0.5;
				this._countClip.anchorY=0.5;
				this._countClip.x=point.x;
				this._countClip.y=point.y+40;
			}
			start(){
				this._rewardView.addChild(this.beiImg);
				this._rewardView.addChild(this.skin);
				this._rewardView.addChild(this._countClip);
				}stop(){
				this._rewardView.removeChild(this.beiImg);
				this._rewardView.removeChild(this.skin);
				this._rewardView.removeChild(this._countClip);
			}
		}

		view.levelup.LevelBox=Laya.LevelBox=LevelBox;	view.rewardPage={};

		class Card{
			constructor (box,image,back,front){
				//this.backImage=null;
				//this.frontBox=null;
				//this.txt=null;
				//this.coinCount=null;
				//this.rewardImage=null;
				//this.commonImg=null;
				//this.commonClip=null;
				//this.backAni=null;
				//this.frontAni=null;
				this.isClik=false;
				//this.c2s=null;
				//this.backX=NaN;
				this.isIn=false;
				this.arr=[];
				this.frontBox=box;
				this.backImage=image;
				this.backImage.visible=false;
				this.frontBox.visible=true;
				this.isClik=false;
				this.txt=this.frontBox.getChildByName("txt");
				this.coinCount=this.frontBox.getChildByName("count");
				this.rewardImage=this.frontBox.getChildByName("image");
				this.commonImg=this.frontBox.getChildByName("common");
				this.commonClip=this.commonImg.getChildByName("common_num");
				this.commonImg.visible=false;
				this.backAni=back;
				this.frontAni=front;
				this.c2s=new C2s_15001();
				this.c2s.type=101;
				this.backX=box.x;
				GameEventDispatch.instance.on("ZhenFan",this,this.zhen);
				GameEventDispatch.instance.on("TypeChange",this,this.typeChange);
				GameEventDispatch.instance.on("PlayCard",this,this.playCard);
				GameEventDispatch.instance.on("HeClick",this,this.heClick);
				this.backImage.mouseEnabled=false;
				this.backImage.on(Event.CLICK,this,this.clickback);
				GameEventDispatch.instance.on("SetFishCoin",this,this.setFishCoin);
			}
			setFishCoin(){
				this.isClik=false;
				this.backImage.mouseEnabled=false;
				}heClick(){
				this.backImage.mouseEnabled=true;
				this.isClik=true;
				}playCard(id,url,count,rewardName){
				if (this.isIn){
					this.isIn=false;
					this.frontAni.play(0,false);
					this.frontAni.on(Event.COMPLETE,this,this.playComplete);
					this.rewardImage.skin=url;
					this.coinCount.text=count+"";
					this.txt.text=rewardName+"";
					var extraReward=ActivityM.instance.getRewardPageExtra(id);
					if (extraReward && ActivityM.instance.isShowRewRebate){
						this.commonImg.visible=true;
						this.commonImg.skin=cfg_goods.instance(extraReward[0]).icon;
						this.commonClip.value=extraReward[1];
						}else{
						this.commonImg.visible=false;
					}
				}
				}typeChange(index){
				this.c2s.type=index;
				}clickback(){
				if (this.isClik){
					GameEventDispatch.instance.event("StopTime");
					GameEventDispatch.instance.event("SetFishCoin");
					WebSocketManager.instance.send(15001,this.c2s);
					this.isIn=true;
					this.isClik=false;
				}
				}reveice(data){
				}playComplete(){
				Laya.timer.once(5000,this,this.endComplete);
				}endComplete(){
				UiManager.instance.closePanel("RewardPage",false);
				}zhen(){
				this.backAni.play(0,false);
				this.backAni.on(Event.COMPLETE,this,this.bakcComplete);
				}bakcComplete(){
				this.backImage.visible=true;
				Laya.timer.once(500,this,this.startHe);
				}startHe(){
				GameEventDispatch.instance.event("He");
			}
			//Laya.timer.once(300,this,he);
			he(){
				this.isClik=true;
				}complete(){
				}end(){
				}setInfo(info){
				var extraReward=ActivityM.instance.getRewardPageExtra(info.id);
				this.txt.text=info.txt;
				this.rewardImage.skin=info.image;
				this.arr=info.count;
				if (this.arr[0]==60){
					this.coinCount.text=ActivityM.instance.exchangeConversion(60,this.arr[1])+"";
					}else{
					this.coinCount.text=this.arr[1];
				}
				if (extraReward && ActivityM.instance.isShowRewRebate){
					this.commonImg.visible=true;
					this.commonImg.skin=cfg_goods.instance(extraReward[0]).icon;
					this.commonClip.value=extraReward[1];
					}else{
					this.commonImg.visible=false;
				}
			}
			//isClik=false;
			initEvent(){
				this.backImage.on(Event.CLICK,this,this.clickImage);
				}clearCLik(){
				this.frontAni.off(Event.COMPLETE,this,this.playComplete);
				this.backAni.off(Event.COMPLETE,this,this.bakcComplete);
				Laya.timer.clear(this,this.startHe);
				Laya.timer.clear(this,this.endComplete);
				this.backImage.off(Event.CLICK,this,this.clickback);
				GameEventDispatch.instance.off("ZhenFan",this,this.zhen);
				GameEventDispatch.instance.off("TypeChange",this,this.typeChange);
				GameEventDispatch.instance.off("PlayCard",this,this.playCard);
			}clickImage(){}
		}

		view.rewardPage.Card=Laya.Card=Card;	view.rewardTip={};

		class ReardBox{
			constructor (url,point,rewardview,count){
				//this.skin=null;
				//this.ani=null;
				//this._rewardView=null;
				//this.countTxt=null;
				//this.clip=null;
				//this.spineRoot=null;
				//this.spine=null;
				this.clip=new FontClip("font/shuzi.png","+-x/.0123456789");
				this.clip.anchorX=0.5;
				this.clip.anchorY=0.5;
				this.clip.x=point.x;
				this.clip.y=point.y+50;
				this.clip.value="x"+count;
				this._rewardView=rewardview;
				this.skin=new Image(url);
				this.skin.anchorX=0.5;
				this.skin.anchorY=0.5;
				this.skin.x=point.x;
				this.skin.y=point.y;
				this.spineRoot=new Sprite();
				this.spine=new SpineTemplet("linjiang");
				this.spine.setPivot(this.spine.spineWidth / 2,this.spine.spineHeight / 2);
				this.spineRoot.addChild(this.spine);
				this.spineRoot.zOrder=1;
				this.spineRoot.pos(point.x,point.y);
				this.skin.scaleX=0;
				this.skin.zOrder=10;
				this.clip.zOrder=10;
				this.skin.scaleY=0;
				this.clip.scaleX=0;
				this.clip.scaleY=0;
			}
			test(){
				this.spine=new SpineTemplet("linjiang");
				this.spine.play(0,false,Handler.create(this,this.playComte));
				this.spine.setPos(500,500);
				this.spine.setPivot(this.spine.spineWidth / 2,this.spine.spineHeight / 2);
				}playComte(){
				this.spine.play(1,true);
				}start(){
				this._rewardView.addChild(this.spineRoot);
				this._rewardView.addChild(this.skin);
				this._rewardView.addChild(this.clip);
				this.spine.play(0,false,Handler.create(this,this.playComte));
				Tween.to(this.skin,{scaleX:1.5,scaleY:1.5},150,null,Handler.create(this,this.playComplete));
				Tween.to(this.clip,{scaleX:1.5,scaleY:1.5},150,null,Handler.create(this,this.playComplete));
				}playComplete(){
				Tween.to(this.skin,{scaleX:1,scaleY:1},150,null);
				Tween.to(this.clip,{scaleX:1,scaleY:1},150,null);
				}stop(){
				Tween.to(this.skin,{scaleX:0,scaleY:0},150,null,Handler.create(this,this.stopComplete));
				Tween.to(this.clip,{scaleX:0,scaleY:0},150,null,Handler.create(this,this.stopComplete));
			}
			//_rewardView.removeChild(clip);
			stopComplete(){
				GameEventDispatch.instance.event("CloseRewardTip");
				this._rewardView.removeChild(this.spineRoot);
				this._rewardView.removeChild(this.skin);
				this._rewardView.removeChild(this.clip);
			}
		}

		view.rewardTip.ReardBox=Laya.ReardBox=ReardBox;	view.share={};

		class EveryItem{
			constructor (box){
				//this._img=null;
				//this._countTxt=null;
				//this._box=null;
				//this._imgUrl=null;
				//this._count=NaN;
				this._box=box;
				this._img=box.getChildByName("icon");
				this._countTxt=box.getChildByName("count");
			}
			setItemInfo(obj,type){
				if (type==1){
					this._imgUrl=OnLineM.instance.imageUrl(obj.rewardId_Junior);
					this._count=obj.rewardCount_Junior;
					this._img.skin=this._imgUrl;
					this._countTxt.text=ActivityM.instance.exchangeConversion(obj.rewardId_Junior,this._count)+"";
					}else if (type==2){
					this._imgUrl=OnLineM.instance.imageUrl(obj.rewardId_Medium);
					this._count=obj.rewardCount_Medium;
					this._img.skin=this._imgUrl;
					this._countTxt.text=ActivityM.instance.exchangeConversion(obj.rewardId_Medium,this._count)+"";
				}
			}
		}

		view.share.EveryItem=Laya.EveryItem=EveryItem;	

		class Head{
			constructor (box){
				//this._headDiImg=null;
				//this._headImg=null;
				//this._yaoImg=null;
				//this._diTxt=null;
				//this._imgUrl=null;
				//this._box=null;
				this._box=box;
				this._headDiImg=box.getChildByName("di");
				this._headImg=box.getChildByName("head");
				this._yaoImg=box.getChildByName("yao");
				this._diTxt=box.getChildByName("lottery");
				this._headDiImg.visible=false;
				this._headImg.visible=false;
				this._yaoImg.visible=true;
				this._diTxt.text="点击邀请";
				this._yaoImg.on(Event.CLICK,this,this.clickShare);
			}
			clickShare(){
				WxC.wx_share();
				}setHeadInfo(obj){
				if (obj==null){
					this.Caninvited();
					}else{
					this.noinvited();
					var url=obj["avatar"];
					this.drawMask(20,this._headImg,url);
				}
			}
			//可以邀请
			Caninvited(){
				this._diTxt.text="点击邀请";
				this._headDiImg.visible=false;
				this._headImg.visible=false;
				this._yaoImg.visible=true;
			}
			//不可以邀请
			noinvited(){
				this._diTxt.text="可以抽奖";
				this._headDiImg.visible=true;
				this._headImg.visible=true;
				this._yaoImg.visible=false;
				}haveLottery(){
				this._box.gray=true;
				this._diTxt.text="已经抽奖";
				this._headDiImg.visible=true;
				this._headImg.visible=true;
				this._yaoImg.visible=false;
				}drawMask(r,img,url){
				if(url.length > 0){
					img.skin=url;
				}
				else{
					img.skin="ui/common/nan.png";
				}
			}
		}

		view.share.Head=Laya.Head=Head;	

		class Item{
			constructor (box){
				//this._img=null;
				//this._countTxt=null;
				//this._imgUrl=null;
				//this._count=NaN;
				//this._box=null;
				this.id=-1;
				this._box=box;
				this._img=box.getChildByName("icon");
				this._countTxt=box.getChildByName("count");
			}
			setItemInfo(obj){
				this.id=obj.id;
				if (ActivityM.instance.isShowShareRebate){
					this._count=ActivityM.instance.exchangeConversion(obj.activity_rewardId,obj.activity_rewardCount);
					this._imgUrl=OnLineM.instance.imageUrl(obj.activity_rewardId);
					}else{
					this._count=ActivityM.instance.exchangeConversion(obj.rewardId,obj.rewardCount);
					this._imgUrl=OnLineM.instance.imageUrl(obj.rewardId);
				}
				this._countTxt.text=this._count+"";
				this._img.skin=this._imgUrl;
				}isDray(){
				this._box.gray=true;
			}
		}

		view.share.Item=Laya.Item=Item;	
		

		class SoundManagerRe extends SoundManager{
			constructor(){
				super();
			}
			static initRewrite (){
				SoundManager.playSound=function (url,loops=1,complete=null,soundClass=null,startTime=0){
					if (!SoundManager._isActive || !url)
						return null;
					if (SoundManager._muted)
						return null;
					if (url.indexOf("wxlocal")>=0 && WxC.isInMiniGame()){
						if (Render.isConchApp){
							var ext=Utils.getFileExtension(url);
							if (ext !="wav" && ext !="ogg"){
								alert("The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document.");
								return null;
							}
						}
						if (SoundManager._soundMuted)
							return null;
						}else{
						SoundManager._recoverWebAudio();
						url=URL.formatURL(url);
						if (url==SoundManager._bgMusic){
							if (SoundManager._musicMuted)
								return null;
						}
						else{
							if (Render.isConchApp){
								var ext=Utils.getFileExtension(url);
								if (ext !="wav" && ext !="ogg"){
									alert("The sound only supports wav or ogg format,for optimal performance reason,please refer to the official website document.");
									return null;
								}
							}
							if (SoundManager._soundMuted)
								return null;
						}
					};
					var tSound;
					if (!Browser.onBDMiniGame && !Browser.onMiniGame && !Browser.onKGMiniGame && !Browser.onQGMiniGame && !Browser.onVVMiniGame && !Browser.onAlipayMiniGame && !Browser.onQQMiniGame){
						tSound=Laya.loader.getRes(url);
					}
					if (!soundClass)
						soundClass=SoundManager._soundClass;
					if (!tSound){
						tSound=new soundClass();
						tSound.load(url);
						if (!Browser.onBDMiniGame && !Browser.onMiniGame && !Browser.onKGMiniGame && !Browser.onQGMiniGame && !Browser.onVVMiniGame && !Browser.onAlipayMiniGame && !Browser.onQQMiniGame){
							Loader.cacheRes(url,tSound);
						}
					};
					var channel;
					channel=tSound.play(startTime,loops);
					if (!channel)
						return null;
					channel.url=url;
					channel.volume=(url==SoundManager._bgMusic)? SoundManager.musicVolume :SoundManager.soundVolume;
					channel.completeHandler=complete;
					return channel;
				};
			}
		}

		engine.ui.component.SoundManagerRe=Laya.SoundManagerRe=SoundManagerRe;	
		

		class GameEventDispatch extends EventDispatcher{
			constructor (){
				super();
			}
			static get instance (){
				return GameEventDispatch._instance || (GameEventDispatch._instance=new EventDispatcher());
			}
		}

		manager.GameEventDispatch=Laya.GameEventDispatch=GameEventDispatch;
		GameEventDispatch._instance=null;	
		view.addFriend={};

		class AddFriend extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(AddFriendPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.addFriend.AddFriend=Laya.AddFriend=AddFriend;	
		view.bank={};

		class Bank extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(BankPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.bank.Bank=Laya.Bank=Bank;	
		view.bossShare={};

		class BossShare extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(BossSharePage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.bossShare.BossShare=Laya.BossShare=BossShare;	
		view.brokePage={};

		class BrokePage extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(BrokePageIVew,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedisconnect";
			}
			set uiType(value){super.uiType=value;}
		}

		view.brokePage.BrokePage=Laya.BrokePage=BrokePage;	
		view.certification={};

		class Certification extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(CertificationView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.certification.Certification=Laya.Certification=Certification;	
		view.changeSkin={};

		class ChangeSkin extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(ChangeSkinPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.changeSkin.ChangeSkin=Laya.ChangeSkin=ChangeSkin;	
		view.ciFu={};

		class CiFu extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(CiFuPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.ciFu.CiFu=Laya.CiFu=CiFu;	
		view.collectLead={};

		class CollectLead extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(CollectLeadPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.collectLead.CollectLead=Laya.CollectLead=CollectLead;	
		view.compenstate={};

		class Compenstate extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(CompenstateView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.compenstate.Compenstate=Laya.Compenstate=Compenstate;	
		view.exchange={};

		class Exchange extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(ExchangePage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.exchange.Exchange=Laya.Exchange=Exchange;	
		view.feedBack={};

		class FeedBack extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(FeedBackPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.feedBack.FeedBack=Laya.FeedBack=FeedBack;	
		view.firstCharge={};

		class FirstCharge extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(FirstChargePage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.firstCharge.FirstCharge=Laya.FirstCharge=FirstCharge;	
		

		class Fish$1 extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(FishPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypefightpage";
			}
			set uiType(value){super.uiType=value;}
		}

		view.fish.Fish=Laya.Fish$1=Fish$1;	
		view.fishType={};

		class FishType extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(FishTypeView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.fishType.FishType=Laya.FishType=FishType;	
		view.friend={};

		class Friend extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(FriendPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.friend.Friend=Laya.Friend=Friend;	
		view.goldTip={};

		class GoldTip extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(GoldView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypemsgtip";
			}
			set uiType(value){super.uiType=value;}
		}

		view.goldTip.GoldTip=Laya.GoldTip=GoldTip;	
		view.horseTip={};

		class HorseTip extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(HorseTipView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypemsgtip";
			}
			set uiType(value){super.uiType=value;}
		}

		view.horseTip.HorseTip=Laya.HorseTip=HorseTip;	
		view.insideNotice={};

		class InsideNotice extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(InsidePage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypemsgtip";
			}
			set uiType(value){super.uiType=value;}
		}

		view.insideNotice.InsideNotice=Laya.InsideNotice=InsideNotice;	
		

		class Levelup extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(LevelupView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypemsgtip";
			}
			set uiType(value){super.uiType=value;}
		}

		view.levelup.Levelup=Laya.Levelup=Levelup;	
		view.load={};

		class Load extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(LoadPageView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypeerrortip";
			}
			set uiType(value){super.uiType=value;}
		}

		view.load.Load=Laya.Load=Load;	
		view.login={};

		class Login extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(LoginView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.login.Login=Laya.Login=Login;	
		view.mainPage={};

		class MainPage extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(MainPageView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypenormal";
			}
			set uiType(value){super.uiType=value;}
		}

		view.mainPage.MainPage=Laya.MainPage=MainPage;	
		view.mask={};

		class Mask extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(MaskView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypemsgtip";
			}
			set uiType(value){super.uiType=value;}
		}

		view.mask.Mask=Laya.Mask=Mask;	
		window.shader={};

		/**
		*着色器的变量定义。
		*/
		class myShaderValue extends Value2D{
			constructor (){
				super(0,0);
				//this.texcoord=null;
				//this.u_time=null;
				//this.range=null;
				//this.sin_off=null;
				//this.yrate=null;
				//this.xrate=null;
				var _vlen=8 *CONST3D2D.BYTES_PE;
				this.position=[2,WebGLContext.FLOAT,false,_vlen,0];
				this.texcoord=[2,WebGLContext.FLOAT,false,_vlen,2 *CONST3D2D.BYTES_PE];
				this.color=[4,WebGLContext.FLOAT,false,_vlen,4 *CONST3D2D.BYTES_PE];
				this.u_time=0.1;
				this.range=0.1;
				this.sin_off=0;
				this.yrate=4.0;
				this.xrate=0.5;
			}
		}

		shader.myShaderValue=Laya.myShaderValue=myShaderValue;	
		view.match={};

		class Match extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(MatchPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.match.Match=Laya.Match=Match;	
		view.matchSettle={};

		class MatchSettle extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(MatchSettlePage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.matchSettle.MatchSettle=Laya.MatchSettle=MatchSettle;	
		view.mate={};

		class Mate extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(MateView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.mate.Mate=Laya.Mate=Mate;	
		view.monthCard={};

		class MonthCard extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(MonthCardPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.monthCard.MonthCard=Laya.MonthCard=MonthCard;	
		view.newMatch={};

		class NewMatch extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(NewMatchPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.newMatch.NewMatch=Laya.NewMatch=NewMatch;	
		view.noviceGuide={};

		class NoviceGuide extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(NoviceGuidePage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypeguide";
			}
			set uiType(value){super.uiType=value;}
		}

		view.noviceGuide.NoviceGuide=Laya.NoviceGuide=NoviceGuide;	
		view.pack={};

		class Pack extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(PackPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.pack.Pack=Laya.Pack=Pack;	
		view.pathEditor={};

		class PathEditor extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(PathEditorView,parm,name);
			}
			get pngNum (){
				return 1;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypenormal";
			}
			set uiType(value){super.uiType=value;}
		}

		view.pathEditor.PathEditor=Laya.PathEditor=PathEditor;	
		view.prize={};

		class Prize extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(PrizeView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.prize.Prize=Laya.Prize=Prize;	
		view.publicAccount={};

		class PublicAccount extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(PublicAccountPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedisconnect";
			}
			set uiType(value){super.uiType=value;}
		}

		view.publicAccount.PublicAccount=Laya.PublicAccount=PublicAccount;	
		view.quickRegister={};

		class QuickRegister extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(QuickRegisterView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.quickRegister.QuickRegister=Laya.QuickRegister=QuickRegister;	
		view.quitTip={};

		class QuitTip extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(QuitTipView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedisconnect";
			}
			set uiType(value){super.uiType=value;}
		}

		view.quitTip.QuitTip=Laya.QuitTip=QuitTip;	
		view.rank={};

		class Rank extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(RankPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.rank.Rank=Laya.Rank=Rank;	
		view.redActivity={};

		class RedActivity extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(RedActivityPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.redActivity.RedActivity=Laya.RedActivity=RedActivity;	
		view.register={};

		class Register extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(RegisterPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.register.Register=Laya.Register=Register;	
		view.resetLoad={};

		class ResetLoad extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(ResetLoadPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.resetLoad.ResetLoad=Laya.ResetLoad=ResetLoad;	
		view.resetLogin={};

		class ResetLogin extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(ResetPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.resetLogin.ResetLogin=Laya.ResetLogin=ResetLogin;	
		

		class RewardPage extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(RewardPageView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.rewardPage.RewardPage=Laya.RewardPage=RewardPage;	
		

		class RewardTip extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(RewardTipView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypemsgtip";
			}
			set uiType(value){super.uiType=value;}
		}

		view.rewardTip.RewardTip=Laya.RewardTip=RewardTip;	
		view.rule={};

		class Rule extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(RuleView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.rule.Rule=Laya.Rule=Rule;	
		view.setting={};

		class Setting extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(SettingPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.setting.Setting=Laya.Setting=Setting;	
		view.sgBrokePage={};

		class SgBrokePage extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(SgBrokeView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedisconnect";
			}
			set uiType(value){super.uiType=value;}
		}

		view.sgBrokePage.SgBrokePage=Laya.SgBrokePage=SgBrokePage;	
		

		class Share extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(SharePage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.share.Share=Laya.Share=Share;	
		view.shop={};

		class Shop extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(ShopPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.shop.Shop=Laya.Shop=Shop;	
		view.shortGift={};

		class ShortGift extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(ShortGiftPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.shortGift.ShortGift=Laya.ShortGift=ShortGift;	
		view.subscription={};

		/**
		*...
		*@author ...
		*/
		class Subscription extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(SubscriptionPage,parm,name);
			}
			/*INTERFACE manager.PanelVo */
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.subscription.Subscription=Laya.Subscription=Subscription;	
		view.taskDaily={};

		class TaskDaily extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(TaskDailyPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.taskDaily.TaskDaily=Laya.TaskDaily=TaskDaily;	
		view.taskNew={};

		class TaskNew extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(TaskNewPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.taskNew.TaskNew=Laya.TaskNew=TaskNew;	
		view.testImpact={};

		class TestImpact extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(ImpactVIew,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypenormal";
			}
			set uiType(value){super.uiType=value;}
		}

		view.testImpact.TestImpact=Laya.TestImpact=TestImpact;	
		view.userBan={};

		class UserBan extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(UserBanView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypemsgtip";
			}
			set uiType(value){super.uiType=value;}
		}

		view.userBan.UserBan=Laya.UserBan=UserBan;	
		view.useTicket={};

		class UseTicket extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(UseTicketPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.useTicket.UseTicket=Laya.UseTicket=UseTicket;	
		view.wait={};

		class Wait extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(WaitPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypemsgtip";
			}
			set uiType(value){super.uiType=value;}
		}

		view.wait.Wait=Laya.Wait=Wait;	
		view.wdlogin={};

		class Wdlogin extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(WdloginPageView,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.wdlogin.Wdlogin=Laya.Wdlogin=Wdlogin;	
		view.wxInfo={};

		class WxInfo extends BaseView{
			constructor (){
				super();
			}
			startGame(parm=null,name=null){
				this.creatPanel(WxInfoPage,parm,name);
			}
			get pngNum (){
				return 0;
			}
			set pngNum(value){super.pngNum=value;}
			get uiType (){
				return "uitypedlg";
			}
			set uiType(value){super.uiType=value;}
		}

		view.wxInfo.WxInfo=Laya.WxInfo=WxInfo;	
		

		class LoaderRe extends Loader{
			constructor(){
				super();
			}
			static initRewrite (){
				Loader.prototype._loadImage=function (url,isformatURL=true){
					var _this=this;
					if (url.indexOf("wxlocal")< 0){
						url=URL.formatURL(url);
					};
					var onLoaded;
					var onError=function (){
						_this.event(Event.ERROR,"Load image failed");
					};
					if (this._type==="nativeimage"){
						onLoaded=function (image){
							this.onLoaded(image);
						};
						this._loadHtmlImage(url,this,onLoaded,this,onError);
					}
					else{
						var ext=Utils.getFileExtension(url);
						if (ext==="ktx" || ext==="pvr"){
							onLoaded=function (imageData){
								var format;
								switch (ext){
									case "ktx":
										format=TextureFormat.ETC1RGB;
										break ;
									case "pvr":
										format=TextureFormat.PVRTCRGBA_4BPPV;
										break ;
									default :{
											console.error('unknown format',ext);
											return;
										}
									};
								var tex=new Texture2D(0,0,format,false,false);
								tex.wrapModeU=BaseTexture.WARPMODE_CLAMP;
								tex.wrapModeV=BaseTexture.WARPMODE_CLAMP;
								tex.setCompressData(imageData);
								tex._setCreateURL(url);
								_this.onLoaded(tex);
							};
							this._loadHttpRequest(url,Loader.BUFFER,this,onLoaded,null,null,this,onError);
						}
						else{
							onLoaded=function (image){
								var tex=new Texture2D(image.width,image.height,1,false,false);
								tex.wrapModeU=BaseTexture.WARPMODE_CLAMP;
								tex.wrapModeV=BaseTexture.WARPMODE_CLAMP;
								tex.loadImageSource(image,true);
								tex._setCreateURL(url);
								_this.onLoaded(tex);
							};
							this._loadHtmlImage(url,this,onLoaded,this,onError);
						}
					}
				};
			}
		}

		engine.ui.component.LoaderRe=Laya.LoaderRe=LoaderRe;	
		

		class GameAnimationPlayerBase extends Sprite{
			constructor (){
				super();
				/**
				*是否循环播放，调用play(...)方法时，会将此值设置为指定的参数值。
				*/
				//this.loop=false;
				/**
				*<p>播放顺序类型：AnimationPlayerBase.WRAP_POSITIVE为正序播放，AnimationPlayerBase.WRAP_REVERSE为倒序播放，AnimationPlayerBase.WRAP_PINGPONG为pingpong播放(当按指定顺序播放完结尾后，如果继续播发，则会改变播放顺序)。</p>
				*<p>默认为正序播放。</p>
				*/
				this.wrapMode=0;
				/**@private */
				//this._index=0;
				/**@private */
				//this._count=0;
				/**@private */
				//this._isPlaying=false;
				/**@private */
				//this._labels=null;
				/**是否是逆序播放*/
				this._isReverse=false;
				/**@private */
				this._frameRateChanged=false;
				/**@private */
				//this._controlNode=null;
				/**@private */
				//this._actionName=null;
				this._timeTotal=0;
				this._interval=Config.animationInterval;
			}
			/**
			*<p>开始播放动画。play(...)方法被设计为在创建实例后的任何时候都可以被调用，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否正在播放中，如果是，则进行播放。</p>
			*<p>配合wrapMode属性，可设置动画播放顺序类型。</p>
			*@param start （可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。
			*@param loop （可选）是否循环播放。
			*@param name （可选）动画名称。
			*@param showWarn（可选）是否动画不存在时打印警告
			*/
			play(start=0,loop=true,name="",showWarn=true){
				this._isPlaying=true;
				this.index=((typeof start=='string'))? this._getFrameByLabel(start):start;
				this.loop=loop;
				this._actionName=name;
				this._timeTotal=0;
				this._isReverse=this.wrapMode==1;
				if (this.interval > 0){
					this.frameLoop(1,this,this._frameLoop,null,true);
				}
			}
			/**@private */
			_getFrameByLabel(label){
				var i=0;
				for (i=0;i < this._count;i++){
					if (this._labels[i] && (this._labels [i]).indexOf(label)>=0)return i;
				}
				return 0;
				}_frameLoop(){
				this._timeTotal+=Laya.timer.delta;
				while (this._isPlaying && this._timeTotal >=this._interval){
					this._timeTotal-=this._interval;
					if (this._timeTotal > this._interval){
						this._timeTotal=0;
					}
					this._doFrame();
					break ;
				}
			}
			/**@private */
			_doFrame(){
				if (this._isReverse){
					this._index--;
					if (this._index < 0){
						if (this.loop){
							if (this.wrapMode==2){
								this._index=this._count > 0 ? 1 :0;
								this._isReverse=false;
								}else{
								this._index=this._count-1;
							}
							this.event(Event.COMPLETE);
							}else{
							this._index=0;
							this.stop();
							this.event(Event.COMPLETE);
							return;
						}
					}
					}else{
					this._index++;
					if (this._index >=this._count){
						if (this.loop){
							if (this.wrapMode==2){
								this._index=this._count-2 >=0 ? this._count-2 :0;
								this._isReverse=true;
								}else{
								this._index=0;
							}
							this.event(Event.COMPLETE);
							}else{
							this._index--;
							this.stop();
							this.event(Event.COMPLETE);
							return;
						}
					}
				}
				this.index=this._index;
			}
			/**@private */
			_setControlNode(node){
				if (this._controlNode){
					this._controlNode.off(Event.DISPLAY,this,this._checkResumePlaying);
					this._controlNode.off(Event.UNDISPLAY,this,this._checkResumePlaying);
				}
				this._controlNode=node;
				if (node && node !=this){
					node.on(Event.DISPLAY,this,this._checkResumePlaying);
					node.on(Event.UNDISPLAY,this,this._checkResumePlaying);
				}
			}
			/**@private */
			_setDisplay(value){
				super._setDisplay(value);
				this._checkResumePlaying();
			}
			/**@private */
			_checkResumePlaying(){
				if (this._isPlaying){
					if (this._controlNode.displayedInStage)this.play(this._index,this.loop,this._actionName);
					else this.clearTimer(this,this._frameLoop);
				}
			}
			/**
			*停止动画播放。
			*/
			stop(){
				this._isPlaying=false;
				this.clearTimer(this,this._frameLoop);
			}
			/**
			*增加一个帧标签到指定索引的帧上。当动画播放到此索引的帧时会派发Event.LABEL事件，派发事件是在完成当前帧画面更新之后。
			*@param label 帧标签名称
			*@param index 帧索引
			*/
			addLabel(label,index){
				if (!this._labels)this._labels={};
				if (!this._labels[index])this._labels[index]=[];
				this._labels[index].push(label);
			}
			/**
			*删除指定的帧标签。
			*@param label 帧标签名称。注意：如果为空，则删除所有帧标签！
			*/
			removeLabel(label){
				if (!label)this._labels=null;
				else if (this._labels){
					for (var name in this._labels){
						this._removeLabelFromLabelList(this._labels[name],label);
					}
				}
			}
			/**@private */
			_removeLabelFromLabelList(list,label){
				if (!list)return;
				for (var i=list.length-1;i >=0;i--){
					if (list[i]==label){
						list.splice(i,1);
					}
				}
			}
			/**
			*将动画切换到指定帧并停在那里。
			*@param position 帧索引或帧标签
			*/
			gotoAndStop(position){
				this.index=((typeof position=='string'))? this._getFrameByLabel(position):position;
				this.stop();
			}
			/**
			*@private
			*显示到某帧
			*@param value 帧索引
			*/
			_displayToIndex(value){}
			/**
			*停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。
			*/
			clear(){
				this.stop();
				this._labels=null;
			}
			/**
			*<p>动画播放的帧间隔时间(单位：毫秒)。默认值依赖于Config.animationInterval=50，通过Config.animationInterval可以修改默认帧间隔时间。</p>
			*<p>要想为某动画设置独立的帧间隔时间，可以使用set interval，注意：如果动画正在播放，设置后会重置帧循环定时器的起始时间为当前时间，也就是说，如果频繁设置interval，会导致动画帧更新的时间间隔会比预想的要慢，甚至不更新。</p>
			*/
			get interval (){
				return this._interval;
			}
			set interval (value){
				if (this._interval !=value){
					this._frameRateChanged=true;
					this._interval=value;
					if (this._isPlaying && value > 0){
					}
				}
			}
			/**
			*是否正在播放中。
			*/
			get isPlaying (){
				return this._isPlaying;
			}
			set isPlaying(value){super.isPlaying=value;}
			/**
			*动画当前帧的索引。
			*/
			get index (){
				return this._index;
			}
			set index (value){
				this._index=value;
				this._displayToIndex(value);
				if (this._labels && this._labels[value]){
					var tArr=this._labels[value];
					for (var i=0,len=tArr.length;i < len;i++){
						this.event(Event.LABEL,tArr[i]);
					}
				}
			}
			/**
			*当前动画中帧的总数。
			*/
			get count (){
				return this._count;
			}
			set count(value){super.count=value;}
		}

		manager.GameAnimationPlayerBase=Laya.GameAnimationPlayerBase=GameAnimationPlayerBase;
		GameAnimationPlayerBase.WRAP_POSITIVE=0;
		GameAnimationPlayerBase.WRAP_REVERSE=1;
		GameAnimationPlayerBase.WRAP_PINGPONG=2;	
		

		class GameParticle extends Sprite{
			constructor (name){
				super();
				this._particle=null;
				this._setting=null;
				Laya.loader.load(name,Handler.create(this,this.onAssetsLoaded),null,Loader.JSON);
			}
			onAssetsLoaded(settings){
				this._setting=settings;
				this.replay();
				}replay(){
				if (this._setting && !this._particle){
					this._particle=new Particle2D(this._setting);
					this._particle.emitter.start();
					this._particle.play();
					this.addChild(this._particle);
				}
				}stop(){
				if (this._particle){
					this._particle.removeSelf();
					this._particle=null;
				}
			}
		}

		manager.GameParticle=Laya.GameParticle=GameParticle;	
		

		class SpineTemplet extends Sprite{
			constructor (spineName){
				super();
				this._aniName=0;
				//this._path=null;
				//this._parent=null;
				//this._mFactory=null;
				this._sketleton=null;
				//this._isLoad=false;
				this._isLoop=true;
				this._x=0;
				this._y=0;
				this._scaleX=1;
				this._scaleY=1;
				this._pivotX=0;
				this._pivotY=0;
				this._speed=1;
				//this._spineName=null;
				//this._isComplete=false;
				this._startTime=0;
				this._handler=null;
				if (!SpineTemplet._spineTempletCache){
					SpineTemplet._spineTempletCache=new Object();
				};
				var cfg_ani=cfg_anicollision.instance(spineName);
				this._pivotX=cfg_ani.pivotX;
				this._pivotY=cfg_ani.pivotY;
				this._scaleX=cfg_ani.scale;
				this._scaleY=cfg_ani.scale;
				this._spineName=spineName;
				this._path=cfg_ani.spinePath;
				this._speed=cfg_ani.aniSpeed;
				if (SpineTemplet._spineTempletCache[this._path]){
					this._mFactory=SpineTemplet._spineTempletCache [this._path];
					this.parseComplete();
				}
				else{
					this._mFactory=new Templet();
					this._mFactory.on(Event.COMPLETE,this,this.parseComplete);
					this._mFactory.loadAni(this._path);
				}
			}
			getSpineName(){
				return this._spineName;
				}parseComplete(){
				if (!SpineTemplet._spineTempletCache[this._path]){
					SpineTemplet._spineTempletCache[this._path]=this._mFactory;
				}
				this._sketleton=this._mFactory.buildArmature(0);
				this._sketleton.showSkinByIndex(1);
				this.addChild(this._sketleton);
				this.play(this._aniName,this._isLoop,this._handler,this._startTime);
				this.setPos(this._x,this._y);
				this.setPivot(this._pivotX,this._pivotY);
				this._sketleton.scale(this._scaleX,this._scaleY);
				}play(aniName,isLoop=false,handler=null,start=0){
				this._handler=handler;
				this._aniName=aniName;
				this._isLoop=isLoop;
				this._startTime=start;
				if (this._sketleton !=null){
					if (aniName==1)
						this._sketleton.playbackRate(this._speed);
					this._sketleton.play(aniName,isLoop,true,this._startTime);
					this._sketleton.on(Event.STOPPED,this,this.complete,[handler]);
				}
				}complete(handler){
				if (handler !=null){
					handler.run();
				}
				}isPlaying(){
				if (this._sketleton){
					return this._sketleton.player.currentAnimationClipIndex >=0;
				}
				return true;
				}stop(){
				if (this._sketleton){
					this._sketleton.stop();
				}
				}setFilters(filters){
				if (this._sketleton){
					this._sketleton.filters=filters;
				}
				}paused(){
				if (this._sketleton){
					this._sketleton.paused();
				}
				}resume(){
				if (this._sketleton){
					this._sketleton.resume();
				}
				}setPos(x,y){
				this._x=x;
				this._y=y;
				if (this._sketleton !=null){
					this._sketleton.x=this._x;
					this._sketleton.y=this._y;
				}
				}setScale(x,y){
				this._scaleX=x;
				this._scaleY=y;
				if (null !=this._sketleton){
					this._sketleton.scale(x,y);
				}
				}setPivot(pivotX,pivotY){
				this._pivotX=pivotX;
				this._pivotY=pivotY;
				if (this._sketleton !=null){
					this._sketleton.pivotX=pivotX;
					this._sketleton.pivotY=pivotY;
				}
			}
			get total (){
				return null;
			}
			set total(value){super.total=value;}
			get spineWidth (){
				if (this._sketleton !=null){
					return this._sketleton.width;
					}else{
					return 0;
				}
			}
			set spineWidth(value){super.spineWidth=value;}
			get spineHeight (){
				if (this._sketleton !=null){
					return this._sketleton.height;
					}else{
					return 0;
				}
			}
			set spineHeight(value){super.spineHeight=value;}
			static addFactoryCache (factory,path){
				if (!SpineTemplet._spineTempletCache){
					SpineTemplet._spineTempletCache=new Object();
				}
				SpineTemplet._spineTempletCache[path]=factory;
			}
			static isPathCache (path){
				if (SpineTemplet._spineTempletCache){
					return SpineTemplet._spineTempletCache[path];
				}
				return false;
			}
		}

		manager.SpineTemplet=Laya.SpineTemplet=SpineTemplet;
		SpineTemplet._spineTempletCache=null;	
		

		/**
		*此类需继承自显示对象类。
		*在此类中使用了自定义的着色器程序。
		*注意：使用自定义着色器时，需要设置此显示对象类的渲染模式： this._renderType |=RenderSprite.CUSTOM;并且需要重写此类的渲染处理函数。
		*
		*/
		class myShaderSprite extends Sprite{
			constructor (){
				super();
				/**顶点缓冲区。 */
				//this.vBuffer=null;
				/**片元缓冲区。 */
				//this.iBuffer=null;
				//this.vbData=null;
				//this.ibData=null;
				this.iNum=0;
				/**着色器变量。 */
				//this.shaderValue=null;
				this.loopUTime=0;
			}
			/**
			*初始化此类。
			*@param texture 纹理对象。
			*@param vb 顶点数组。
			*@param ib 顶点索引数组。
			*/
			init(texture,vb=null,ib=null){
				this.vBuffer=VertexBuffer2D.create();
				this.iBuffer=IndexBuffer2D.create();
				this.ibData=new Uint16Array();
				var vbArray;
				var ibArray;
				if (vb){
					vbArray=vb;
				}
				else{
					vbArray=[];
					var texWidth=texture.width;
					var texHeight=texture.height;
					var red=1;
					var greed=1;
					var blue=1;
					var alpha=1;
					vbArray.push(0,0,0,0,red,greed,blue,alpha);
					vbArray.push(texWidth,0,1,0,red,greed,blue,alpha);
					vbArray.push(texWidth,texHeight,1,1,red,greed,blue,alpha);
					vbArray.push(0,texHeight,0,1,red,greed,blue,alpha);
				}
				if (ib){
					ibArray=ib;
				}
				else{
					ibArray=[];
					ibArray.push(0,1,3);
					ibArray.push(1,2,3);
				}
				this.iNum=ibArray.length;
				this.vbData=new Float32Array(vbArray);
				this.ibData=new Uint16Array(ibArray);
				this.vBuffer.append(this.vbData);
				this.iBuffer.append(this.ibData);
				this.shaderValue.textureHost=texture;
				this._renderType |=RenderSprite.CUSTOM;
			}
			// Laya.timer.frameLoop(1,this,timeTick);
			timeTick(){
				this.shaderValue.u_time+=Laya.timer.delta;
				}update(){
				this.shaderValue.u_time+=GameConst.fixed_update_time;
				if(this.shaderValue.u_time > this.loopUTime){
					this.shaderValue.u_time-=this.loopUTime;
				}
				}setRange(range){
				this.shaderValue.range=range;
				}setTime(time){
				this.shaderValue.u_time=time;
				}setXrate(rate){
				this.shaderValue.xrate=rate;
				this.loopUTime=2 *Math.PI / this.shaderValue.xrate;
				}setYrate(rate){
				this.shaderValue.yrate=rate;
			}
			//弧度
			setSinOff(off){
				this.shaderValue.sin_off=off;
			}
		}

		shader.myShaderSprite=Laya.myShaderSprite=myShaderSprite;	
		

		class BatteryImgAction extends Sprite{
			constructor (){
				super();
				this._playIndex=0;
				this._playName="";
				this._runTime=0;
				this._frameInterval=80;
				this.pivotX=50;
				this.pivotY=90;
			}
			play(name,loop=true){
				this._playName=name;
				this._playIndex=0;
				this._runTime=0;
				}isPlaying(){
				if(this._playName=="born"){
					return this._playIndex < BatteryImgAction._born.length;
				}
				else if(this._playName=="attack"){
					return this._playIndex < BatteryImgAction._attack.length;
				}
				return true;
				}update(){
				this._runTime=this._runTime+Laya.timer.delta;
				if(this._runTime >=this._frameInterval){
					if(this._playName=="born"){
						if(this._playIndex < BatteryImgAction._born.length){
							this.pos(BatteryImgAction._born[this._playIndex][0],BatteryImgAction._born[this._playIndex][1]);
						}
					}
					else if(this._playName=="stand"){
						if(this._playIndex >=BatteryImgAction._stand.length){
							this._playIndex=0;
						}
						if(this._playIndex < BatteryImgAction._stand.length){
							this.pos(BatteryImgAction._stand[this._playIndex][0],BatteryImgAction._stand[this._playIndex][1]);
						}
					}
					else if(this._playName=="attack"){
						if(this._playIndex < BatteryImgAction._attack.length){
							this.pos(BatteryImgAction._attack[this._playIndex][0],BatteryImgAction._attack[this._playIndex][1]);
						}
					}
					this._runTime-=this._frameInterval;
					this._playIndex++;
				}
			}
		}

		view.fish.BatteryImgAction=Laya.BatteryImgAction=BatteryImgAction;
		Laya.static(BatteryImgAction,
		['_born',function(){return this._born=[[-1,0],[-2,0],[1,0],[2,0]];},'_stand',function(){return this._stand=[[-0.5,0],[-0.5,0],[-0.5,0],[0.5,0],[0.5,0],[0.5,0]];},'_attack',function(){return this._attack=[[-5,0],[-10,0],[5,0],[10,0]];}
		]);	
		

		class StageRe extends Stage{
			constructor(){
				super();
			}
			static initRewrite (){
				Stage.prototype._resetCanvas=function (){
					if (!this.screenAdaptationEnabled)
						return;
					var canvas=Render._mainCanvas;
					canvas.size(1,1);
					Laya.timer.once(100,this,this._changeCanvasSize);
				};
			}
		}

		engine.ui.component.StageRe=Laya.StageRe=StageRe;	
		

		class GameAnimation extends GameAnimationPlayerBase{
			constructor (){
				super();
				/**@private */
				//this._frames=null;
				/**@private */
				//this._url=null;
				this._setControlNode(this);
			}
			/**@inheritDoc */
			destroy(destroyChild=true){
				this.stop();
				super.destroy(destroyChild);
				this._frames=null;
				this._labels=null;
			}
			/**
			*<p>开始播放动画。会在动画模版缓存池中查找key值为name的动画模版，存在则用此动画模版初始化当前序列帧， 如果不存在，则使用当前序列帧。</p>
			*<p>play(...)方法被设计为在创建实例后的任何时候都可以被调用，调用后就处于播放状态，当相应的资源加载完毕、调用动画帧填充方法(set frames)或者将实例显示在舞台上时，会判断是否处于播放状态，如果是，则开始播放。</p>
			*<p>配合wrapMode属性，可设置动画播放顺序类型。</p>
			*@param start （可选）指定动画播放开始的索引(int)或帧标签(String)。帧标签可以通过addLabel(...)和removeLabel(...)进行添加和删除。
			*@param loop （可选）是否循环播放。
			*@param name （可选）动画模板在动画模版缓存池中的key，也可认为是动画名称。如果name为空，则播放当前动画序列帧；如果不为空，则在动画模版缓存池中寻找key值为name的动画模版，如果存在则用此动画模版初始化当前序列帧并播放，如果不存在，则仍然播放当前动画序列帧；如果没有当前动画的帧数据，则不播放，但该实例仍然处于播放状态。
			*@param showWarn（可选）是否动画不存在时打印警告
			*/
			play(start=0,loop=true,name="",showWarn=true){
				if (name)this._setFramesFromCache(name,showWarn);
				this._isPlaying=true;
				this.index=((typeof start=='string'))? this._getFrameByLabel(start):start;
				this.loop=loop;
				this._actionName=name;
				this._isReverse=this.wrapMode==1;
				if (this._frames && this.interval > 0){
					this.frameLoop(1,this,this._frameLoop,null,true);
				}
			}
			/**@private */
			_setFramesFromCache(name,showWarn=false){
				if (this._url)name=this._url+"#"+name;
				if (name && GameAnimation.framesMap[name]){
					var tAniO;
					tAniO=GameAnimation.framesMap[name];
					if ((tAniO instanceof Array)){
						this._frames=GameAnimation.framesMap[name];
						this._count=this._frames.length;
						}else{
						if (tAniO.nodeRoot){
							GameAnimation.framesMap[name]=this._parseGraphicAnimationByData(tAniO);
							tAniO=GameAnimation.framesMap[name];
						}
						this._frames=tAniO.frames;
						this._count=this._frames.length;
						if (!this._frameRateChanged)this._interval=tAniO.interval;
						this._labels=this._copyLabels(tAniO.labels);
					}
					return true;
					}else{
					if (showWarn)console.log("ani not found:",name);
				}
				return false;
			}
			/**@private */
			_copyLabels(labels){
				if (!labels)return null;
				var rst;
				rst={};
				var key;
				for (key in labels){
					rst[key]=Utils.copyArray([],labels[key]);
				}
				return rst;
			}
			/**@private */
			_frameLoop(){
				if (/*no*/this._style && /*no*/this._style.alpha > 0.01){
					super._frameLoop();
				}
			}
			/**@private */
			_displayToIndex(value){
				if (this._frames)this.graphics=this._frames[value];
			}
			/**
			*停止动画播放，并清理对象属性。之后可存入对象池，方便对象复用。
			*/
			clear(){
				this.stop();
				this.graphics=null;
				this._frames=null;
				this._labels=null;
			}
			/**
			*<p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图片集合并创建动画模版。注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>
			*<p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>
			*<p>因为返回值为Animation对象本身，所以可以使用如下语法：ani.loadImages(...).loadImages(...).play(...);。</p>
			*@param urls 图片路径集合。需要创建动画模版时，会以此为数据源。参数形如：[url1,url2,url3,...]。
			*@param cacheName （可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。
			*@return 返回Animation对象本身。
			*/
			loadImages(urls,cacheName=""){
				this._url="";
				if (!this._setFramesFromCache(cacheName)){
					this.frames=GameAnimation.framesMap[cacheName] ? GameAnimation.framesMap[cacheName] :GameAnimation.createFrames(urls,cacheName);
				}
				return this;
			}
			/**
			*<p>根据指定的动画模版初始化当前动画序列帧。选择动画模版的过程如下：1. 动画模版缓存池中key为cacheName的动画模版；2. 如果不存在，则加载指定的图集并创建动画模版。</p>
			*<p>注意：只有指定不为空的cacheName，才能将创建好的动画模版以此为key缓存到动画模版缓存池，否则不进行缓存。</p>
			*<p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>
			*<p>因为返回值为Animation对象本身，所以可以使用如下语法：ani.loadAtlas(...).loadAtlas(...).play(...);。</p>
			*@param url 图集路径。需要创建动画模版时，会以此为数据源。
			*@param loaded （可选）使用指定图集初始化动画完毕的回调。
			*@param cacheName （可选）动画模板在动画模版缓存池中的key。如果此参数不为空，表示使用动画模版缓存池。如果动画模版缓存池中存在key为cacheName的动画模版，则使用此模版。否则，创建新的动画模版，如果cacheName不为空，则以cacheName为key缓存到动画模版缓存池中，如果cacheName为空，不进行缓存。
			*@return 返回动画本身。
			*/
			loadAtlas(url,loaded=null,cacheName=""){
				this._url="";
				var _this_=this;
				function onLoaded (loadUrl){
					if (url===loadUrl){
						_this_.frames=GameAnimation.framesMap[cacheName] ? GameAnimation.framesMap[cacheName] :GameAnimation.createFrames(url,cacheName);
						if (loaded)loaded.run();
					}
				}
				if (!_this_._setFramesFromCache(cacheName)){
					if (Loader.getAtlas(url))onLoaded(url);
					else Laya.loader.load(url,Handler.create(null,onLoaded,[url]),null,Loader.ATLAS);
				}
				return this;
			}
			/**
			*<p>加载并解析由LayaAir IDE制作的动画文件，此文件中可能包含多个动画。默认帧率为在IDE中设计的帧率，如果调用过set interval，则使用此帧间隔对应的帧率。加载后创建动画模版，并缓存到动画模版缓存池，key "url#动画名称" 对应相应动画名称的动画模板，key "url#" 对应动画模版集合的默认动画模版。</p>
			*<p>注意：如果调用本方法前，还没有预加载动画使用的图集，请将atlas参数指定为对应的图集路径，否则会导致动画创建失败。</p>
			*<p>动画模版缓存池是以一定的内存开销来节省CPU开销，当相同的动画模版被多次使用时，相比于每次都创建新的动画模版，使用动画模版缓存池，只需创建一次，缓存之后多次复用，从而节省了动画模版创建的开销。</p>
			*<p>因为返回值为Animation对象本身，所以可以使用如下语法：ani.loadAnimation(...).loadAnimation(...).play(...);。</p>
			*@param url 动画文件路径。可由LayaAir IDE创建并发布。
			*@param loaded （可选）使用指定动画资源初始化动画完毕的回调。
			*@param atlas （可选）动画用到的图集地址（可选）。
			*@return 返回动画本身。
			*/
			loadAnimation(url,loaded=null,atlas=null){
				this._url=url;
				var _this_=this;
				if (!this._actionName)this._actionName="";
				if (!_this_._setFramesFromCache("")){
					if (!atlas || Loader.getAtlas(atlas)){
						this._loadAnimationData(url,loaded,atlas);
						}else{
						Laya.loader.load(atlas,Handler.create(this,this._loadAnimationData,[url,loaded,atlas]),null,Loader.ATLAS);
					}
					}else{
					_this_._setFramesFromCache(this._actionName,true);
					if (loaded)loaded.run();
				}
				return this;
			}
			/**@private */
			_loadAnimationData(url,loaded=null,atlas=null){
				var _$this=this;
				if (atlas && !Loader.getAtlas(atlas)){
					console.warn("atlas load fail:"+atlas);
					return;
				};
				var _this_=this;
				function onLoaded (loadUrl){
					if (!Loader.getRes(loadUrl))return;
					if (url===loadUrl){
						var tAniO;
						if (!GameAnimation.framesMap[url+"#"]){
							var aniData=_this_._parseGraphicAnimation(Loader.getRes(url));
							if (!aniData)return;
							var aniList=aniData.animationList;
							var i=0,len=aniList.length;
							var defaultO;
							for (i=0;i < len;i++){
								tAniO=aniList[i];
								GameAnimation.framesMap[url+"#"+tAniO.name]=tAniO;
								if (!defaultO)defaultO=tAniO;
							}
							if (defaultO){
								GameAnimation.framesMap[url+"#"]=defaultO;
								_this_._setFramesFromCache(_$this._actionName,true);
								_$this.index=0;
							}
							_$this._checkResumePlaying();
							}else{
							_this_._setFramesFromCache(_$this._actionName,true);
							_$this.index=0;
							_$this._checkResumePlaying();
						}
						if (loaded)loaded.run();
					}
				}
				if (Loader.getRes(url))onLoaded(url);
				else Laya.loader.load(url,Handler.create(null,onLoaded,[url]),null,Loader.JSON);
				Loader.clearRes(url);
			}
			/**@private */
			_parseGraphicAnimation(animationData){
				return GraphicAnimation.parseAnimationData(animationData);
			}
			/**@private */
			_parseGraphicAnimationByData(animationObject){
				return GraphicAnimation.parseAnimationByData(animationObject);
			}
			/**
			*当前动画的帧图像数组。本类中，每个帧图像是一个Graphics对象，而动画播放就是定时切换Graphics对象的过程。
			*/
			get frames (){
				return this._frames;
			}
			set frames (value){
				this._frames=value;
				if (value){
					this._count=value.length;
					if (this._isPlaying)this.play(this._index,this.loop,this._actionName);
					else this.index=this._index;
				}
			}
			/**
			*是否自动播放，默认为false。如果设置为true，则动画被创建并添加到舞台后自动播放。
			*/
			set autoPlay (value){
				if (value)this.play();
				else this.stop();
			}
			/*GET*/get autoPlay(){return super.autoPlay;}
			/**
			*<p>动画数据源。</p>
			*<p>类型如下：<br/>
			*1. LayaAir IDE动画文件路径：使用此类型需要预加载所需的图集资源，否则会创建失败，如果不想预加载或者需要创建完毕的回调，请使用loadAnimation(...)方法；<br/>
			*2. 图集路径：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存或者创建完毕的回调，请使用loadAtlas(...)方法；<br/>
			*3. 图片路径集合：使用此类型创建的动画模版不会被缓存到动画模版缓存池中，如果需要缓存，请使用loadImages(...)方法。</p>
			*@param value 数据源。比如：图集："xx/a1.atlas"；图片集合："a1.png,a2.png,a3.png"；LayaAir IDE动画"xx/a1.ani"。
			*/
			set source (value){
				if (value.indexOf(".ani")>-1)this.loadAnimation(value);
				else if (value.indexOf(".json")>-1 || value.indexOf("als")>-1 || value.indexOf("atlas")>-1)this.loadAtlas(value);
				else this.loadImages(value.split(","));
			}
			/*GET*/get source(){return super.source;}
			/**
			*设置自动播放的动画名称，在LayaAir IDE中可以创建的多个动画组成的动画集合，选择其中一个动画名称进行播放。
			*/
			set autoAnimation (value){
				this.play(0,true,value,false);
			}
			/*GET*/get autoAnimation(){return super.autoAnimation;}
			static createFrames (url,name){
				var arr,i=0,n=0,g;
				if ((typeof url=='string')){
					var atlas=Loader.getAtlas(url);
					if (atlas && atlas.length){
						arr=[];
						for (i=0,n=atlas.length;i < n;i++){
							g=new Graphics();
							g.drawTexture(Loader.getRes(atlas[i]),0,0);
							arr.push(g);
						}
					}
					}else if ((url instanceof Array)){
					arr=[];
					for (i=0,n=url.length;i < n;i++){
						g=new Graphics();
						g.loadImage(url[i],0,0);
						arr.push(g);
					}
				}
				if (name)GameAnimation.framesMap[name]=arr;
				return arr;
			}
			static clearCache (key){
				var cache=GameAnimation.framesMap;
				var val;
				var key2=key+"#";
				for (val in cache){
					if (val===key || val.indexOf(key2)==0){
						delete GameAnimation.framesMap[val];
					}
				}
			}
		}

		manager.GameAnimation=Laya.GameAnimation=GameAnimation;
		GameAnimation.framesMap={};	
		window.ui={};ui.abbey={};

		class AddFriendPageUI extends Scene{
			constructor (){
				super();
				//this.bmask=null;
				//this.icon=null;
				//this.level=null;
				//this.idLabel=null;
				//this.nameLabel=null;
				//this.cancelBtn=null;
				//this.confirmBtn=null;
				//this.desInput=null;
				//this.changeDesBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(AddFriendPageUI.uiView);
			}
		}

		ui.abbey.AddFriendPageUI=Laya.AddFriendPageUI=AddFriendPageUI;
		AddFriendPageUI.uiView={"type":"Scene","props":{"width":1280,"height":720},"compId":2,"child":[{"type":"Image","props":{"y":-275,"x":-309,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":23},{"type":"Box","props":{"centerY":-35,"centerX":0},"compId":21,"child":[{"type":"Image","props":{"y":81,"width":648,"skin":"ui/common_ex/bg_index3.png","height":453,"sizeGrid":"50,50,50,50"},"compId":4},{"type":"Image","props":{"y":81,"x":1,"width":647,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":5},{"type":"Sprite","props":{"x":227,"texture":"ui/common_ex/title_border.png","scaleX":-1},"compId":8},{"type":"Sprite","props":{"x":429,"texture":"ui/common_ex/title_border.png"},"compId":7},{"type":"Image","props":{"y":55,"x":198,"skin":"ui/addFriend/img_bt_tjhy.png"},"compId":6},{"type":"Sprite","props":{"y":146,"x":195,"width":115,"texture":"ui/common_ex/touxiang.png","height":118},"compId":9},{"type":"Image","props":{"y":148,"x":197,"width":111,"var":"icon","skin":"ui/common/nan.png","height":109},"compId":10},{"type":"Sprite","props":{"y":146,"x":193,"width":117,"texture":"ui/common_ex/touxiang2.png","height":118},"compId":11},{"type":"Label","props":{"y":170,"x":320,"width":105,"var":"level","text":"LV.23","strokeColor":"#be3f00","stroke":1,"height":19,"fontSize":22,"color":"#ffb400"},"compId":12},{"type":"Label","props":{"y":205,"x":319,"width":187,"var":"idLabel","text":"ID:5641234","height":19,"fontSize":24,"font":"Microsoft YaHei","color":"#3f49c5"},"compId":13},{"type":"Label","props":{"y":238,"x":318,"width":187,"var":"nameLabel","text":"玩家的名字","height":19,"fontSize":24,"font":"Microsoft YaHei","color":"#3f49c5"},"compId":14},{"type":"Label","props":{"y":354,"x":122,"width":404,"text":"最多支持16个汉字","height":19,"fontSize":24,"font":"Microsoft YaHei","color":"#3f49c5","align":"center"},"compId":15},{"type":"Button","props":{"y":408,"x":118,"width":164,"var":"cancelBtn","strokeColors":"#056da3,#056da3,#056da3","stateNum":2,"skin":"ui/common_ex/btn_blue.png","labelStroke":2,"labelSize":26,"labelColors":"#ffffff,#ffffff,#ffffff","label":"取消","height":60},"compId":16},{"type":"Button","props":{"y":408,"x":367,"width":164,"var":"confirmBtn","strokeColors":"#c75900,#c75900,#c75900","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","labelStroke":2,"labelSize":26,"labelColors":"#ffffff,#ffffff,#ffffff","label":"发送","height":60},"compId":17},{"type":"Image","props":{"y":284,"x":168,"width":290,"skin":"ui/addFriend/img_k_04.png","height":44,"sizeGrid":"12,31,14,32"},"compId":18},{"type":"TextInput","props":{"y":284,"x":177,"width":243,"var":"desInput","valign":"middle","promptColor":"#ffffff","prompt":"加个好友一起捕鱼吧","maxChars":16,"height":44,"fontSize":24,"align":"center"},"compId":20},{"type":"Button","props":{"y":276,"x":421,"var":"changeDesBtn","stateNum":1,"skin":"ui/addFriend/btn_bi.png"},"compId":19}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/common_ex/title_border.png","ui/addFriend/img_bt_tjhy.png","ui/common_ex/touxiang.png","ui/common/nan.png","ui/common_ex/touxiang2.png","ui/common_ex/btn_blue.png","ui/common_ex/btn_yellow.png","ui/addFriend/img_k_04.png","ui/addFriend/btn_bi.png"],"loadList3D":[]};	
		

		class CiFuPageUI extends Scene{
			constructor (){
				super();
				//this.bmask=null;
				//this.lableNum=null;
				//this.confirmBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(CiFuPageUI.uiView);
			}
		}

		ui.abbey.CiFuPageUI=Laya.CiFuPageUI=CiFuPageUI;
		CiFuPageUI.uiView={"type":"Scene","props":{"width":1280,"height":720},"compId":2,"child":[{"type":"Image","props":{"y":-230,"x":-310,"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":3},{"type":"Image","props":{"y":170,"x":350,"width":600,"skin":"ui/common_ex/bg_index3.png","height":400,"sizeGrid":"50,50,50,50"},"compId":4},{"type":"Image","props":{"y":170,"x":350,"width":600,"skin":"ui/common_ex/head_2.png","height":72,"sizeGrid":"0,180,0,180"},"compId":5},{"type":"Label","props":{"y":259,"x":651,"width":500,"text":"本次捕鱼，获得额外珍珠赐福","height":30,"fontSize":30,"color":"#136673","bold":true,"anchorX":0.5,"align":"center"},"compId":6},{"type":"Image","props":{"y":78,"x":680,"skin":"ui/common_ex/title_border.png"},"compId":8},{"type":"Image","props":{"y":78,"x":616,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":9},{"type":"Image","props":{"y":180,"x":650,"width":134,"skin":"ui/common/tt_cifu.png","height":68,"anchorY":0.5,"anchorX":0.5},"compId":10},{"type":"Sprite","props":{"y":310,"x":601,"texture":"ui/common/exchange.png"},"compId":16},{"type":"Label","props":{"y":422,"x":654.5,"width":253,"var":"lableNum","text":"1","height":30,"fontSize":30,"color":"#136673","bold":true,"anchorX":0.5,"align":"center"},"compId":17},{"type":"Box","props":{"y":499,"x":656.5,"var":"confirmBtn","anchorY":0.5,"anchorX":0.5},"compId":18,"child":[{"type":"Button","props":{"stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":19},{"type":"Image","props":{"skin":"ui/common_ex/confirm.png","centerY":0.5,"centerX":0.5},"compId":20}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/common_ex/title_border.png","ui/common/tt_cifu.png","ui/common/exchange.png","ui/common_ex/btn_green.png","ui/common_ex/confirm.png"],"loadList3D":[]};	
		

		class FriendPageUI extends Scene{
			constructor (){
				super();
				//this.bmask=null;
				//this.bgImg=null;
				//this.addFriendBtn=null;
				//this.friendBtn=null;
				//this.numPercent=null;
				//this.box1=null;
				//this.friendList=null;
				//this.checkOnLineBox=null;
				//this.idLabel=null;
				//this.copyBtn=null;
				//this.noFriendBox=null;
				//this.noFriendLabel=null;
				//this.noOnLineLabel=null;
				//this.signatureInput=null;
				//this.signatureBtn=null;
				//this.box2=null;
				//this.findBtn=null;
				//this.findIdInput=null;
				//this.addFriendList=null;
				//this.nothingBox=null;
				//this.allRejectBtn=null;
				//this.allAgreeBtn=null;
				//this.quitBtn=null;
				//this.tip_box=null;
				//this.giftbox1=null;
				//this.title_txt=null;
				//this.useBtn=null;
				//this.fontClip2=null;
				//this.grantBtn=null;
				//this.fontClip1=null;
				//this.giftbox2=null;
				//this.userinfo_box=null;
				//this.userimg=null;
				//this.username=null;
				//this.gift_icon=null;
				//this.gift_name=null;
				//this.item_count=null;
				//this.count_jia=null;
				//this.count_jian=null;
				//this.gift_confirm=null;
				//this.quit_gift_box=null;
				//this.writegiftcode=null;
				//this.bmask0=null;
				//this.codeconfirmBtn=null;
				//this.writegiftInput=null;
				//this.codequiteBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(FriendPageUI.uiView);
			}
		}

		ui.abbey.FriendPageUI=Laya.FriendPageUI=FriendPageUI;
		FriendPageUI.uiView={"type":"Scene","props":{"width":1280,"height":720},"compId":2,"child":[{"type":"Image","props":{"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":66},{"type":"Box","props":{"centerY":-26,"centerX":-53},"compId":65,"child":[{"type":"Image","props":{"y":87,"x":73,"width":928,"skin":"ui/common_ex/bg_index4.png","height":582,"sizeGrid":"50,50,50,50"},"compId":5},{"type":"Image","props":{"y":89,"x":74,"width":926,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":6},{"type":"Image","props":{"y":166,"x":274,"width":690,"var":"bgImg","skin":"ui/common_ex/bg_index2.png","height":428,"sizeGrid":"40,40,40,40"},"compId":15},{"type":"Sprite","props":{"y":492,"x":949,"texture":"ui/common_ex/grass2.png"},"compId":7},{"type":"Sprite","props":{"y":453,"texture":"ui/common_ex/grass1.png"},"compId":8},{"type":"Sprite","props":{"x":574,"texture":"ui/common_ex/title_border.png"},"compId":9},{"type":"Sprite","props":{"x":503,"texture":"ui/common_ex/title_border.png","scaleX":-1},"compId":10},{"type":"Image","props":{"y":58,"x":474,"skin":"ui/friend/img_bt_hy.png"},"compId":11},{"type":"Button","props":{"y":289,"x":84,"width":211,"var":"addFriendBtn","strokeColors":"#043e63,#653a00,#653a00","skin":"ui/common_ex/bg.png","labelStroke":2,"labelSize":25,"labelColors":"#ffffff,#ffffff,#ffffff","label":"添加好友","height":94},"compId":13},{"type":"Button","props":{"y":194,"x":84,"width":211,"var":"friendBtn","strokeColors":"#043e63,#653a00,#653a00","skin":"ui/common_ex/bg.png","labelStroke":2,"labelSize":25,"labelPadding":"0,0,0,-23","labelColors":"#ffffff,#ffffff,#ffffff","label":"好友","height":94},"compId":12,"child":[{"type":"Label","props":{"y":36,"x":112,"width":59,"var":"numPercent","valign":"middle","text":"(5/10)","strokeColor":"#043e63","stroke":2,"height":22,"fontSize":18,"color":"#ffffff","align":"left"},"compId":126}]},{"type":"Box","props":{"y":168,"x":286,"width":668,"var":"box1","height":479},"compId":41,"child":[{"type":"List","props":{"y":60,"x":15,"width":653,"var":"friendList","repeatX":1,"height":350},"compId":16,"child":[{"type":"Box","props":{"y":0,"x":0,"width":630,"renderType":"render","height":81},"compId":17,"child":[{"type":"Image","props":{"y":3,"x":1,"width":629,"skin":"ui/common_ex/task.png","name":"bg","height":79,"sizeGrid":"30,30,30,30"},"compId":18},{"type":"Image","props":{"y":39,"x":60,"skin":"ui/friend/rank1.png","name":"rankImg","anchorY":0.5,"anchorX":0.5},"compId":21},{"type":"Label","props":{"y":19,"x":47,"width":45,"text":"4","strokeColor":"#000000","stroke":1,"name":"rankLabel","height":42,"fontSize":43,"font":"Arial","color":"#ffffff","align":"left"},"compId":68},{"type":"Image","props":{"y":7,"x":132,"width":66,"skin":"ui/common_ex/touxiang.png","height":67},"compId":22},{"type":"Image","props":{"y":9,"x":134,"width":62,"skin":"ui/common/nan.png","name":"icon","height":60},"compId":23},{"type":"Image","props":{"y":7,"x":132,"width":66,"skin":"ui/common_ex/touxiang2.png","height":67},"compId":24},{"type":"Label","props":{"y":16,"x":210,"width":122,"valign":"middle","text":"玩家的名字","name":"name","height":18,"fontSize":22,"font":"Microsoft YaHei","color":"#0e4178","align":"left"},"compId":25},{"type":"Label","props":{"y":16,"x":388,"width":67,"valign":"middle","text":"LV.23","strokeColor":"#be3f00","stroke":1,"name":"level","height":15,"fontSize":22,"font":"Microsoft YaHei","color":"#ffb400","align":"left"},"compId":26},{"type":"Button","props":{"y":35,"x":529,"stateNum":1,"skin":"ui/friend/img_tb_01.png","scaleY":0.8,"scaleX":0.8,"name":"deleteBtn"},"compId":27},{"type":"Button","props":{"y":34,"x":580,"stateNum":1,"skin":"ui/friend/img_tb_03.png","scaleY":0.8,"scaleX":0.8,"name":"giftBtn"},"compId":29},{"type":"Image","props":{"y":42,"x":209,"width":311,"skin":"ui/common_ex/img_grxxd_ziji.png","height":34,"sizeGrid":"13,10,15,11"},"compId":125},{"type":"Label","props":{"y":51,"x":213,"width":304,"valign":"middle","text":"这个好友很懒，没有留下自己的签名啊啊啊啊","name":"signature","height":18,"fontSize":15,"font":"Microsoft YaHei","color":"#ffffff","align":"left"},"compId":113},{"type":"Image","props":{"y":19,"x":276,"width":299,"skin":"ui/friend/img_k_03.png","name":"giftListBg","height":68,"sizeGrid":"13,27,16,22"},"compId":31},{"type":"List","props":{"y":23,"x":281,"width":281,"spaceX":-1,"name":"giftList","height":57},"compId":30,"child":[{"type":"Box","props":{"width":57,"renderType":"render","height":57},"compId":32,"child":[{"type":"Image","props":{"y":1,"x":0,"width":57,"skin":"ui/common_ex/ptdk.png","height":57},"compId":33},{"type":"Image","props":{"x":83,"skin":"ui/common/icon_yulei_01.png","scaleY":0.5,"scaleX":0.5,"name":"giftIcon","centerY":-3,"centerX":0,"anchorY":0.5,"anchorX":0.5},"compId":34},{"type":"Image","props":{"y":40,"x":2,"width":83,"skin":"ui/common_ex/reward_mask.png","scaleY":0.61,"scaleX":0.64,"height":25,"sizeGrid":"3,15,13,15"},"compId":35},{"type":"Label","props":{"y":42,"x":0,"width":54,"text":"X999","name":"giftLabel","height":12,"fontSize":13,"font":"Microsoft YaHei","color":"#ffffff","align":"center"},"compId":36}]}]},{"type":"Label","props":{"y":11,"x":531,"width":73,"valign":"middle","text":"在线","name":"onlineLabel","height":18,"fontSize":18,"font":"Microsoft YaHei","color":"#28b555","align":"right"},"compId":112}]},{"type":"VScrollBar","props":{"y":1,"x":644,"width":9,"skin":"ui/common_ex/vscroll.png","showButtons":false,"right":0,"name":"scrollBar","height":407},"compId":105}]},{"type":"CheckBox","props":{"y":-5,"x":27,"var":"checkOnLineBox","stateNum":2,"skin":"ui/friend/checkOnlineBox.png","labelSize":22,"labelPadding":"13,0,0,5","labelColors":"#ffe400","label":"只显示在线好友"},"compId":38},{"type":"Label","props":{"y":10,"x":401,"width":185,"var":"idLabel","text":"我的ID:451458763","height":22,"fontSize":22,"color":"#ffe400"},"compId":39},{"type":"Button","props":{"y":-2,"x":599,"var":"copyBtn","strokeColors":"#c75900,#c75900,#c75900","stateNum":1,"skin":"ui/friend/btn_hy_fuzhiaidi.png","scaleY":0.7,"scaleX":0.7,"labelStroke":2,"labelSize":26,"labelColors":"#ffffff,#ffffff,#ffffff"},"compId":40},{"type":"Image","props":{"y":107,"x":169,"var":"noFriendBox","skin":"ui/friend/img_myhy.png"},"compId":103,"child":[{"type":"Label","props":{"y":48,"x":165,"wordWrap":true,"width":195,"var":"noFriendLabel","text":"你还没有好友哦！快去添加好友吧！","strokeColor":"#2d75c1","stroke":2,"height":65,"fontSize":24,"color":"#ffffff","align":"center"},"compId":104},{"type":"Label","props":{"y":48,"x":189,"wordWrap":true,"width":148,"var":"noOnLineLabel","text":"  当前没有\\n好友在线哦！","strokeColor":"#2d75c1","stroke":2,"height":65,"fontSize":24,"color":"#ffffff"},"compId":111}]},{"type":"Image","props":{"y":432,"x":11,"width":589,"visible":false,"skin":"ui/common_ex/img_grxxd_taren.png","height":44,"sizeGrid":"12,13,14,15"},"compId":114},{"type":"Label","props":{"y":434,"x":11,"width":590,"visible":false,"var":"signatureInput","valign":"middle","text":"留下你的个性签名，让好友们更好的认识你吧","promptColor":"#ffffff","prompt":"留下你的个性签名，让好友们更好的认识你吧","height":44,"fontSize":20,"color":"#79edff","align":"center"},"compId":116},{"type":"Button","props":{"y":439,"x":612,"visible":false,"var":"signatureBtn","stateNum":1,"skin":"ui/friend/btn_hy_xiugaiqianming.png","scaleY":0.7,"scaleX":0.7},"compId":115}]},{"type":"Box","props":{"y":172,"x":291,"width":665,"var":"box2","height":478},"compId":64,"child":[{"type":"Image","props":{"y":1,"width":629,"skin":"ui/common_ex/img_k_05.png","height":54,"sizeGrid":"19,20,22,16"},"compId":43},{"type":"Button","props":{"x":505,"width":146,"var":"findBtn","strokeColors":"#c75900,#c75900,#c75900","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","labelStroke":2,"labelSize":26,"labelColors":"#ffffff,#ffffff,#ffffff","label":"搜索","height":54},"compId":44},{"type":"TextInput","props":{"y":1,"width":500,"var":"findIdInput","promptColor":"#ffe400","prompt":"输入好友ID添加好友","padding":"6,0,0,0","height":54,"fontSize":22,"font":"Microsoft YaHei","color":"#ffe400","align":"center"},"compId":45},{"type":"List","props":{"y":64,"x":10,"width":655,"var":"addFriendList","height":341},"compId":46,"child":[{"type":"Box","props":{"width":629,"renderType":"render","height":84},"compId":47,"child":[{"type":"Image","props":{"y":4,"x":1,"width":628,"skin":"ui/common_ex/task.png","height":80,"sizeGrid":"30,30,30,30"},"compId":48},{"type":"Image","props":{"y":8,"x":9,"width":67,"skin":"ui/common_ex/touxiang.png","height":67},"compId":49},{"type":"Image","props":{"y":9,"x":11,"width":63,"skin":"ui/common/nan.png","name":"icon","height":63},"compId":50},{"type":"Image","props":{"y":8,"x":9,"width":67,"skin":"ui/common_ex/touxiang2.png","height":67},"compId":51},{"type":"Label","props":{"y":38,"x":92,"width":105,"valign":"middle","text":"玩家的名字","name":"name","height":21,"fontSize":18,"font":"Microsoft YaHei","color":"#0e4178","align":"left"},"compId":52},{"type":"Label","props":{"y":41,"x":206,"width":77,"valign":"middle","text":"LV.23","strokeColor":"#be3f00","stroke":1,"name":"level","height":16,"fontSize":22,"font":"Microsoft YaHei","color":"#ffb400","align":"left"},"compId":53},{"type":"Label","props":{"y":13,"x":302,"width":322,"valign":"middle","text":"加个好友一起来捕鱼吧","name":"des","height":21,"fontSize":18,"font":"Microsoft YaHei","color":"#0e4178","align":"left"},"compId":54},{"type":"Button","props":{"y":35,"x":296,"width":104,"strokeColors":"#656fa1","stateNum":1,"skin":"ui/common_ex/btn_silver.png","name":"shieldBtn","labelStroke":2,"labelSize":22,"labelColors":"#ffffff,#ffffff,#ffffff","label":"屏蔽","height":42},"compId":56},{"type":"Button","props":{"y":35,"x":405,"width":104,"strokeColors":"#0c770a","stateNum":2,"skin":"ui/common_ex/btn_small_green_1.png","name":"rejectBtn","labelStroke":2,"labelSize":22,"labelColors":"#ffffff,#ffffff,#ffffff","label":"拒绝","height":42},"compId":58},{"type":"Button","props":{"y":35,"x":513,"strokeColors":"#c75900,#c75900,#c75900","stateNum":2,"skin":"ui/common_ex/btn_small_yellow_1.png","name":"agreeBtn","labelStroke":2,"labelSize":22,"labelColors":"#ffffff,#ffffff,#ffffff","label":"同意"},"compId":59}]},{"type":"VScrollBar","props":{"y":1,"x":646,"width":9,"skin":"ui/common_ex/vscroll.png","showButtons":false,"right":0,"name":"scrollBar","height":341},"compId":106}]},{"type":"Image","props":{"y":103,"x":164,"var":"nothingBox","skin":"ui/friend/img_myhy.png"},"compId":62,"child":[{"type":"Label","props":{"y":48,"x":189,"wordWrap":true,"width":148,"text":"  当前没有\\n好友添加哦！","strokeColor":"#2d75c1","stroke":2,"height":65,"fontSize":24,"color":"#ffffff"},"compId":63}]},{"type":"Button","props":{"y":420,"x":85,"width":158,"var":"allRejectBtn","strokeColors":"#0c770a,#0c770a,#0c770a","stateNum":2,"skin":"ui/common_ex/btn_green.png","labelStroke":2,"labelSize":26,"labelColors":"#ffffff,#ffffff,#ffffff","label":"全部拒绝","height":58},"compId":60},{"type":"Button","props":{"y":420,"x":382,"width":158,"var":"allAgreeBtn","strokeColors":"#c75900,#c75900,#c75900","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","labelStroke":2,"labelSize":26,"labelColors":"#ffffff,#ffffff,#ffffff","label":"全部同意","height":58},"compId":61}]}]},{"type":"Button","props":{"y":0,"x":0,"var":"quitBtn","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":0},"compId":14},{"type":"Box","props":{"y":360,"x":640,"width":1280,"var":"tip_box","height":720,"centerY":0,"centerX":0,"anchorY":0.5,"anchorX":0.5},"compId":69,"child":[{"type":"Image","props":{"y":-290,"x":-310,"width":1900,"skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":70},{"type":"Image","props":{"y":185,"x":340,"width":600,"skin":"ui/common_ex/bg_index3.png","height":400,"sizeGrid":"50,50,50,50"},"compId":71},{"type":"Image","props":{"y":180,"x":340,"width":600,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":72},{"type":"Image","props":{"y":85,"x":672,"skin":"ui/common_ex/title_border.png"},"compId":73},{"type":"Image","props":{"y":85,"x":605,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":74},{"type":"Box","props":{"y":158,"x":446,"var":"giftbox1"},"compId":75,"child":[{"type":"Label","props":{"y":189,"x":199,"wordWrap":true,"width":396,"var":"title_txt","text":"       使用赠送功能需要激活月卡，是否立即购买？","strokeColor":"#37ca54","leading":10,"height":79,"fontSize":26,"font":"Microsoft YaHei","color":"#136673","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"left"},"compId":76},{"type":"Box","props":{"y":286,"width":150,"var":"useBtn","height":46},"compId":77,"child":[{"type":"Button","props":{"y":0,"x":0,"width":150,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":46},"compId":78},{"type":"FontClip","props":{"y":8,"x":45,"var":"fontClip2","value":"取消","skin":"font/word_red.png","sheet":"取出立即购买获得消确定继 续搜索同意拒绝复制升级解 锁游戏领前往充放置全部加 入房间重抽报名免费","scaleY":0.6,"scaleX":0.6},"compId":79}]},{"type":"Box","props":{"y":287,"x":240,"width":150,"var":"grantBtn","height":46},"compId":80,"child":[{"type":"Button","props":{"width":150,"stateNum":2,"skin":"ui/common_ex/btn_green.png","height":46},"compId":81},{"type":"FontClip","props":{"y":8,"x":45,"var":"fontClip1","value":"购买","skin":"font/word_green.png","sheet":"存入取消查看确定装备邀请 一键升级返回大厅反馈分享 礼包码炫耀下领奖励提交开 启使用完成布置规则询赠送 购买个观看广告订阅","scaleY":0.6,"scaleX":0.6},"compId":82}]},{"type":"Image","props":{"x":127,"width":134,"skin":"ui/common/title_prompt.png","height":68},"compId":83}]},{"type":"Box","props":{"y":146,"x":396,"var":"giftbox2"},"compId":84,"child":[{"type":"Image","props":{"y":-1,"x":176,"skin":"ui/pack/beib_zs.png"},"compId":85},{"type":"Box","props":{"y":159,"x":170,"var":"userinfo_box"},"compId":90,"child":[{"type":"Sprite","props":{"y":-40,"x":-40,"width":115,"texture":"ui/common_ex/touxiang.png","height":118},"compId":107},{"type":"Image","props":{"y":-39,"x":-39,"width":111,"var":"userimg","skin":"ui/common/nan.png","height":109},"compId":108},{"type":"Sprite","props":{"y":-41,"x":-43,"width":117,"texture":"ui/common_ex/touxiang2.png","height":118},"compId":109},{"type":"Text","props":{"y":-4,"x":97,"var":"username","text":"用户名","fontSize":22,"color":"#116780","bold":true,"align":"left","runtime":"laya.display.Text"},"compId":93}]},{"type":"Image","props":{"y":284,"x":48,"var":"gift_icon","anchorY":0.5,"anchorX":0.5},"compId":94},{"type":"Text","props":{"y":274,"x":118,"width":100,"var":"gift_name","text":"普通鱼雷","fontSize":22,"color":"#116780","bold":true,"align":"left","runtime":"laya.display.Text"},"compId":95},{"type":"Image","props":{"y":269,"x":298,"width":120,"skin":"ui/pack/beib_di5.png","sizeGrid":"15,15,15,15","height":38},"compId":96},{"type":"FontClip","props":{"y":288,"x":360,"var":"item_count","value":"1234","skin":"ui/common_ex/rmb.png","sheet":"0123456789","anchorY":0.5,"anchorX":0.5},"compId":97},{"type":"Image","props":{"y":254,"x":418,"var":"count_jia","skin":"ui/pack/beib_jiah.png"},"compId":98},{"type":"Image","props":{"y":254,"x":238,"var":"count_jian","skin":"ui/pack/beib_jianha.png"},"compId":99},{"type":"Button","props":{"y":348,"x":161,"var":"gift_confirm","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":100,"child":[{"type":"Image","props":{"y":8,"x":52,"skin":"ui/pack/beib_bwn_zc.png"},"compId":101}]}]}]},{"type":"Button","props":{"y":0,"x":0,"var":"quit_gift_box","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":0},"compId":102},{"type":"Box","props":{"width":1280,"visible":false,"var":"writegiftcode","height":720,"centerY":0,"centerX":0},"compId":117,"child":[{"type":"Image","props":{"x":-310,"width":1900,"var":"bmask0","skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":118},{"type":"Image","props":{"y":284,"x":192,"width":895,"skin":"ui/common_ex/bg_index3.png","height":134,"sizeGrid":"50,50,50,50"},"compId":119},{"type":"Button","props":{"y":328,"x":950,"var":"codeconfirmBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","scaleX":0.7},"compId":121,"child":[{"type":"Image","props":{"y":9,"x":35,"skin":"ui/common_ex/confirm.png","scaleX":1.5},"compId":122}]},{"type":"TextInput","props":{"y":331,"x":236,"width":705,"var":"writegiftInput","skin":"ui/common_ex/yhsztiao.png","sizeGrid":"0,14,0,13","promptColor":"#ffffff","prompt":"留下你的个性签名，让好友们更好的认识你吧","maxChars":20,"height":41,"fontSize":20,"color":"#ffffff","bold":true,"align":"center"},"compId":123}]},{"type":"Button","props":{"var":"codequiteBtn","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":0},"compId":120}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index4.png","ui/common_ex/head_2.png","ui/common_ex/bg_index2.png","ui/common_ex/grass2.png","ui/common_ex/grass1.png","ui/common_ex/title_border.png","ui/friend/img_bt_hy.png","ui/common_ex/bg.png","ui/common_ex/task.png","ui/friend/rank1.png","ui/common_ex/touxiang.png","ui/common/nan.png","ui/common_ex/touxiang2.png","ui/friend/img_tb_01.png","ui/friend/img_tb_03.png","ui/common_ex/img_grxxd_ziji.png","ui/friend/img_k_03.png","ui/common_ex/ptdk.png","ui/common/icon_yulei_01.png","ui/common_ex/reward_mask.png","ui/common_ex/vscroll.png","ui/friend/checkOnlineBox.png","ui/friend/btn_hy_fuzhiaidi.png","ui/friend/img_myhy.png","ui/common_ex/img_grxxd_taren.png","ui/friend/btn_hy_xiugaiqianming.png","ui/common_ex/img_k_05.png","ui/common_ex/btn_yellow.png","ui/common_ex/btn_silver.png","ui/common_ex/btn_small_green_1.png","ui/common_ex/btn_small_yellow_1.png","ui/common_ex/btn_green.png","ui/common_ex/quit.png","ui/common_ex/bg_index3.png","font/word_red.png","font/word_green.png","ui/common/title_prompt.png","ui/pack/beib_zs.png","ui/pack/beib_di5.png","ui/common_ex/rmb.png","ui/pack/beib_jiah.png","ui/pack/beib_jianha.png","ui/pack/beib_bwn_zc.png","ui/common_ex/confirm.png","ui/common_ex/yhsztiao.png"],"loadList3D":[]};	
		

		class PublicAccountPageUI extends Scene{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.noWXBro=null;
				//this.WXBro=null;
				//this.goToBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(PublicAccountPageUI.uiView);
			}
		}

		ui.abbey.PublicAccountPageUI=Laya.PublicAccountPageUI=PublicAccountPageUI;
		PublicAccountPageUI.uiView={"type":"Scene","props":{"width":1280,"height":720},"compId":2,"child":[{"type":"Image","props":{"y":-230,"x":-310,"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":3},{"type":"Image","props":{"y":151,"x":312,"width":652,"skin":"ui/common_ex/bg_index3.png","height":443,"sizeGrid":"50,50,50,50"},"compId":4},{"type":"Image","props":{"y":136,"x":314,"width":645,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":5},{"type":"Image","props":{"y":57,"x":739,"skin":"ui/common_ex/title_border.png"},"compId":8},{"type":"Image","props":{"y":57,"x":555,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":9},{"type":"Image","props":{"y":152,"x":651,"skin":"ui/publicAccount/img_tt_guanzhu.png","anchorY":0.5,"anchorX":0.5},"compId":10},{"type":"Button","props":{"y":0,"x":0,"var":"quitBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":19},{"type":"Image","props":{"y":207,"x":343.5,"var":"noWXBro","skin":"ui/common_ex/img_01.png"},"compId":22},{"type":"Box","props":{"y":207,"x":343.5,"width":590,"var":"WXBro","height":326},"compId":24,"child":[{"type":"Image","props":{"x":0,"width":590,"skin":"ui/publicAccount/img_02.png","height":326},"compId":23},{"type":"Button","props":{"y":40,"x":416,"var":"goToBtn","stateNum":1,"skin":"ui/publicAccount/btn_go.png"},"compId":25}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/common_ex/title_border.png","ui/publicAccount/img_tt_guanzhu.png","ui/common_ex/quit.png","ui/common_ex/img_01.png","ui/publicAccount/img_02.png","ui/publicAccount/btn_go.png"],"loadList3D":[]};	
		ui.item={};

		class FesDailyGiftItemUI extends Scene{
			constructor (){
				super();
				//this.itemImg=null;
				//this.itemName=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(FesDailyGiftItemUI.uiView);
			}
		}

		ui.item.FesDailyGiftItemUI=Laya.FesDailyGiftItemUI=FesDailyGiftItemUI;
		FesDailyGiftItemUI.uiView={"type":"Scene","props":{"width":264,"height":324},"compId":2,"child":[{"type":"Image","props":{"skin":"ui/useTicket/img_wupind.png","centerY":0,"centerX":0},"compId":3},{"type":"Image","props":{"var":"itemImg","skin":"ui/common/coin1.png","centerY":0,"centerX":0},"compId":4},{"type":"Image","props":{"top":38,"skin":"ui/useTicket/img_mingchengd.png","centerX":0},"compId":7,"child":[{"type":"Label","props":{"var":"itemName","text":"道具名称","strokeColor":"#4828d2","stroke":2,"fontSize":24,"color":"#ffffff","centerY":0,"centerX":0},"compId":5}]}],"loadList":["ui/useTicket/img_wupind.png","ui/common/coin1.png","ui/useTicket/img_mingchengd.png"],"loadList3D":[]};	
		

		/**
		*自定义着色器
		*
		*/
		class myShader extends Shader{
			constructor (){
				super(vs,ps,"myShader");
				var vs="attribute vec2 position;\nattribute vec2 texcoord;\nuniform vec2 size;\nuniform mat4 mmat;\nvarying vec2 v_texcoord;\nvoid main(){\n    vec4 pos =mmat*vec4(position.x,position.y,0,1);\n    gl_Position = vec4((pos.x/size.x-0.5)*2.0, (0.5-pos.y/size.y)*2.0, pos.z, 1.0);\n    v_texcoord = texcoord;\n}";
				var ps="precision mediump float;\nvarying vec2 v_texcoord;\nuniform sampler2D texture;\nuniform float u_time;\nuniform float range;\nuniform float sin_off;\nuniform float yrate;\nuniform float xrate;\nvoid main(){\n	float offset = sin(yrate * 3.141516 * v_texcoord.y + sin_off);\n	offset *= (sin(u_time * xrate) * range);\n	vec2 uv = fract(vec2(v_texcoord.x + offset, v_texcoord.y));\n    gl_FragColor = texture2D(texture, uv);\n}";
			}
		}

		shader.myShader=Laya.myShader=myShader;
		Laya.static(myShader,
		['shader',function(){return this.shader=new myShader();}
		]);	
		

		class InputRe extends Input{
			constructor(){
				super();
			}
			static initRewrite (){
				Input.__init__=function (){
					Input._createInputElement();
					if (Browser.onMobile){
						var isTrue=false;
						if (Browser.onMiniGame || Browser.onBDMiniGame || Browser.onQGMiniGame || Browser.onKGMiniGame || Browser.onVVMiniGame || Browser.onAlipayMiniGame || Browser.onQQMiniGame){
							isTrue=true;
						}
						if (WxC.isInMiniGame()){
							Render.canvas.addEventListener(Input.IOS_IFRAME ? (isTrue ? "touchend" :"click"):"touchend",Input._popupInputMethod);
							}else{
							Render.canvas.addEventListener(Input.IOS_IFRAME ? (isTrue ? "touchend" :"touchend"):"touchend",Input._popupInputMethod);
						}
					}
				};
			}
		}

		engine.ui.component.InputRe=Laya.InputRe=InputRe;	
		

		class BankPageUI extends View{
			constructor (){
				super();
				//this.mask1=null;
				//this.quitBtn=null;
				//this.bank_box=null;
				//this.carryCoin=null;
				//this.depositBtn=null;
				//this.bankCoin=null;
				//this.takeBtn=null;
				//this.telLabel=null;
				//this.jjhIdLable=null;
				//this.resetPasswordBtn=null;
				//this.depositTxt=null;
				//this.bankpassword=null;
				//this.takeTxt=null;
				//this.infoBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(BankPageUI.uiView);
			}
		}

		ui.abbey.BankPageUI=Laya.BankPageUI=BankPageUI;
		BankPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":0,"x":0,"width":1280,"var":"mask1","skin":"ui/common_ex/jl_bg.png","height":720,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":54},{"type":"Button","props":{"var":"quitBtn","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":0},"compId":59},{"type":"Box","props":{"width":939,"var":"bank_box","height":628,"centerY":0,"centerX":0},"compId":53,"child":[{"type":"Image","props":{"y":49,"x":0,"width":940,"skin":"ui/common_ex/bg_index4.png","height":576,"sizeGrid":"50,50,50,50"},"compId":2},{"type":"Image","props":{"y":46,"x":0,"width":943,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":3},{"type":"Box","props":{"y":-46,"x":293},"compId":7,"child":[{"type":"Image","props":{"y":-1,"x":203,"skin":"ui/common_ex/title_border.png"},"compId":5},{"type":"Image","props":{"y":-1,"x":146,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":6},{"type":"Image","props":{"y":62,"x":102,"skin":"ui/bank/yinghang.png"},"compId":4}]},{"type":"Image","props":{"y":187,"x":58,"skin":"ui/bank/yhdiban.png"},"compId":10},{"type":"Image","props":{"y":187,"x":493,"skin":"ui/bank/yhdiban.png"},"compId":11},{"type":"Box","props":{"y":145,"x":114},"compId":17,"child":[{"type":"Image","props":{"skin":"ui/bank/btou.png"},"compId":12},{"type":"Image","props":{"y":20,"x":73,"skin":"ui/bank/xiedaijibi.png"},"compId":13}]},{"type":"Box","props":{"y":145,"x":545},"compId":18,"child":[{"type":"Image","props":{"skin":"ui/bank/btou.png"},"compId":15},{"type":"Image","props":{"y":23,"x":77,"skin":"ui/bank/yinhangjinbi.png"},"compId":16}]},{"type":"Box","props":{"y":237,"x":110},"compId":25,"child":[{"type":"Image","props":{"y":3,"x":25,"width":269,"skin":"ui/common_ex/yhsztiao.png","height":49,"sizeGrid":"0,11,0,13"},"compId":22},{"type":"Image","props":{"skin":"ui/common_ex/unit_coin.png"},"compId":20},{"type":"Label","props":{"y":9,"x":50,"width":230,"var":"carryCoin","text":"1200000","height":34,"fontSize":34,"color":"#e7cc09","bold":false,"align":"center"},"compId":24}]},{"type":"Label","props":{"y":426,"x":143,"width":230,"text":"存入无需输入密码","fontSize":20,"color":"#c2f4ee","align":"center"},"compId":32},{"type":"Box","props":{"y":502,"x":157,"var":"depositBtn"},"compId":36,"child":[{"type":"Button","props":{"stateNum":2,"skin":"ui/common_ex/btn_green.png","scaleY":1.5,"scaleX":1.2},"compId":33},{"type":"Image","props":{"y":15,"x":65,"skin":"ui/bank/deposit.png"},"compId":34}]},{"type":"Box","props":{"y":237,"x":531},"compId":37,"child":[{"type":"Image","props":{"y":3,"x":25,"width":269,"skin":"ui/common_ex/yhsztiao.png","height":49,"sizeGrid":"0,11,0,13"},"compId":38},{"type":"Image","props":{"skin":"ui/bank/gui.png"},"compId":39},{"type":"Label","props":{"y":9,"x":50,"width":230,"var":"bankCoin","text":"1200000","height":34,"fontSize":34,"color":"#e7cc09","bold":false,"align":"center"},"compId":40}]},{"type":"Box","props":{"y":295,"x":113},"compId":41,"child":[{"type":"Label","props":{"x":95,"text":"存入金币","fontSize":24,"color":"#ffffff","bold":true},"compId":26},{"type":"Image","props":{"y":10,"skin":"ui/bank/tuceng.png"},"compId":27},{"type":"Image","props":{"y":11,"x":212,"skin":"ui/bank/tuceng.png"},"compId":28}]},{"type":"Box","props":{"y":295,"x":538},"compId":42,"child":[{"type":"Label","props":{"x":95,"width":93,"text":"取出金币","height":29,"fontSize":24,"color":"#ffffff","bold":true},"compId":43},{"type":"Image","props":{"y":10,"skin":"ui/bank/tuceng.png"},"compId":44},{"type":"Image","props":{"y":11,"x":212,"skin":"ui/bank/tuceng.png"},"compId":45}]},{"type":"Box","props":{"y":502,"x":593,"var":"takeBtn"},"compId":50,"child":[{"type":"Button","props":{"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","scaleY":1.3},"compId":48},{"type":"Image","props":{"y":18,"x":60,"skin":"ui/bank/quchu.png"},"compId":49}]},{"type":"Image","props":{"y":413,"x":-77,"skin":"ui/common_ex/grass1.png"},"compId":51},{"type":"Image","props":{"y":453,"x":889,"skin":"ui/common_ex/grass2.png"},"compId":52},{"type":"Label","props":{"y":583,"x":161,"text":"每次最少存入5万金币","fontSize":20,"color":"#c2f4ee"},"compId":76},{"type":"Label","props":{"y":583,"x":591,"text":"每次最少取出5万金币","fontSize":20,"color":"#c2f4ee"},"compId":77},{"type":"Label","props":{"y":94,"x":306,"width":330,"var":"telLabel","text":"已绑定手机号：15005819916","height":41,"fontSize":24,"font":"Microsoft YaHei","color":"#54c0e3","bold":true,"align":"center"},"compId":277},{"type":"Label","props":{"y":127,"x":308,"width":330,"var":"jjhIdLable","text":"ID：15005819916","height":41,"fontSize":24,"font":"Microsoft YaHei","color":"#54c0e3","bold":true,"align":"center"},"compId":425},{"type":"Button","props":{"y":141,"x":386,"visible":false,"var":"resetPasswordBtn","stateNum":1,"skin":"ui/bank/xg.png"},"compId":279},{"type":"Box","props":{"y":333,"x":131},"compId":422,"child":[{"type":"Image","props":{"width":270,"skin":"ui/common_ex/yhsztiao.png","sizeGrid":"20,20,20,20","name":"di","height":49},"compId":354},{"type":"TextInput","props":{"y":5,"x":11,"width":251,"var":"depositTxt","promptColor":"#c2f4ee","prompt":"请输入存入金币数量","height":38,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF"},"compId":421}]},{"type":"Box","props":{"y":392,"x":555},"compId":423,"child":[{"type":"Image","props":{"width":270,"skin":"ui/common_ex/yhsztiao.png","name":"di","height":49,"sizeGrid":"0,11,0,13"},"compId":361},{"type":"TextInput","props":{"y":5,"x":12,"width":251,"var":"bankpassword","type":"password","promptColor":"#c2f4ee","prompt":"请输入密码","height":38,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF"},"compId":418}]},{"type":"Box","props":{"y":333,"x":555},"compId":424,"child":[{"type":"Image","props":{"width":270,"skin":"ui/common_ex/yhsztiao.png","name":"di","height":49,"sizeGrid":"0,11,0,13"},"compId":359},{"type":"TextInput","props":{"y":6,"x":11,"width":251,"var":"takeTxt","promptColor":"#c2f4ee","prompt":"请输入取出金币数量","height":38,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF"},"compId":420}]},{"type":"Button","props":{"y":113.5,"x":782.123046875,"width":127,"var":"infoBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":40},"compId":426,"child":[{"type":"Label","props":{"y":6,"x":14,"text":"账号信息","strokeColor":"#088413","stroke":2,"fontSize":24,"font":"SimHei","color":"#ffffff","bold":true},"compId":427}]}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/quit.png","ui/common_ex/bg_index4.png","ui/common_ex/head_2.png","ui/common_ex/title_border.png","ui/bank/yinghang.png","ui/bank/yhdiban.png","ui/bank/btou.png","ui/bank/xiedaijibi.png","ui/bank/yinhangjinbi.png","ui/common_ex/yhsztiao.png","ui/common_ex/unit_coin.png","ui/common_ex/btn_green.png","ui/bank/deposit.png","ui/bank/gui.png","ui/bank/tuceng.png","ui/common_ex/btn_yellow.png","ui/bank/quchu.png","ui/common_ex/grass1.png","ui/common_ex/grass2.png","ui/bank/xg.png"],"loadList3D":[]};	
		

		class BossShareUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.shareImg=null;
				//this.shareSprite=null;
				//this.cancelBtn=null;
				//this.confirmBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(BossShareUI.uiView);
			}
		}

		ui.abbey.BossShareUI=Laya.BossShareUI=BossShareUI;
		BossShareUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-271,"x":-323,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1300,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":3},{"type":"Image","props":{"width":768,"var":"shareImg","height":432,"centerY":-50,"centerX":0},"compId":2,"child":[{"type":"Sprite","props":{"width":768,"var":"shareSprite","height":432},"compId":10}]},{"type":"Button","props":{"width":200,"var":"cancelBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":70,"centerX":-200,"bottom":40},"compId":4,"child":[{"type":"Image","props":{"y":15,"x":69,"skin":"ui/common_ex/cancel.png"},"compId":8}]},{"type":"Button","props":{"width":200,"var":"confirmBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":70,"centerX":200,"bottom":40},"compId":7,"child":[{"type":"Image","props":{"y":15,"x":34,"skin":"ui/common_ex/share.png"},"compId":6}]},{"type":"Image","props":{"y":126,"x":838,"width":176,"skin":"ui/common_ex/logo.png","height":176},"compId":12},{"type":"Image","props":{"y":92,"x":251,"width":774,"skin":"ui/common_ex/head_2.png","height":57,"sizeGrid":"0,180,0,180"},"compId":13},{"type":"Image","props":{"y":411,"x":274,"skin":"ui/common_ex/ptdk.png"},"compId":14},{"type":"Sprite","props":{"y":429,"x":289,"width":70,"height":70},"compId":15}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/btn_yellow.png","ui/common_ex/cancel.png","ui/common_ex/btn_green.png","ui/common_ex/share.png","ui/common_ex/logo.png","ui/common_ex/head_2.png","ui/common_ex/ptdk.png"],"loadList3D":[]};	
		

		class CertificationPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.box1=null;
				//this.nameInput=null;
				//this.idCardInput=null;
				//this.confirmBtn=null;
				//this.confirmClip=null;
				//this.cancelBtn=null;
				//this.cancelClip=null;
				//this.desLabel=null;
				//this.telephoneInput=null;
				//this.box2=null;
				//this.exitBtn=null;
				//this.bindBox=null;
				//this.bindTitle=null;
				//this.getvcode=null;
				//this.jjhNumber=null;
				//this.jjhID=null;
				//this.cipher=null;
				//this.telephone=null;
				//this.vCode=null;
				//this.bindBtn=null;
				//this.bindCountDown=null;
				//this.quickRegister=null;
				//this.prompt_box=null;
				//this.promptBtn=null;
				//this.quitBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(CertificationPageUI.uiView);
			}
		}

		ui.abbey.CertificationPageUI=Laya.CertificationPageUI=CertificationPageUI;
		CertificationPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-217,"x":-305,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":3},{"type":"Box","props":{"y":128,"x":312,"width":656,"var":"box1","height":463},"compId":9,"child":[{"type":"Image","props":{"y":3,"x":0,"width":649,"skin":"ui/common_ex/bg_index3.png","height":518,"sizeGrid":"50,50,50,50"},"compId":4},{"type":"Image","props":{"y":0,"x":0,"width":656,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":6},{"type":"TextInput","props":{"y":167,"x":243,"width":353,"var":"nameInput","skin":"ui/common_ex/textinput.png","promptColor":"#7a7777","prompt":"请输入真实姓名","height":49,"fontSize":26,"font":"Microsoft YaHei","color":"#000000"},"compId":10},{"type":"TextInput","props":{"y":257,"x":243,"width":353,"var":"idCardInput","skin":"ui/common_ex/textinput.png","promptColor":"#7a7777","prompt":"请输入身份证号码","height":49,"fontSize":26,"font":"Microsoft YaHei","color":"#000000"},"compId":12},{"type":"Label","props":{"y":173,"x":55,"text":"真实姓名：","fontSize":30,"font":"Microsoft YaHei","color":"#000000"},"compId":13},{"type":"Label","props":{"y":262,"x":55,"text":"身份证号码：","fontSize":30,"font":"Microsoft YaHei","color":"#000000"},"compId":14},{"type":"Button","props":{"y":403,"x":350,"width":197,"var":"confirmBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":77},"compId":15,"child":[{"type":"FontClip","props":{"y":13,"x":48,"var":"confirmClip","value":"确定","skin":"font/word_red.png","sheet":"取出立即购买获得消确定继 续搜索同意拒绝复制升级解 锁游戏领前往充放置全部加 入房间重抽报名免费","centerY":0,"centerX":0},"compId":18}]},{"type":"Button","props":{"y":403,"x":85,"width":197,"var":"cancelBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":77},"compId":17,"child":[{"type":"FontClip","props":{"y":13,"x":48,"var":"cancelClip","value":"取消","skin":"font/word_green.png","sheet":"存入取消查看确定装备邀请 一键升级返回大厅反馈分享 礼包码炫耀下领奖励提交开 启使用完成布置规则询赠送 购买个观看广告订阅"},"compId":19}]},{"type":"Label","props":{"y":72,"x":47,"wordWrap":true,"width":561,"var":"desLabel","text":"请进行实名认证请进行实名认证请进行实名认证请进行实名认证","height":78,"fontSize":30,"font":"Microsoft YaHei","color":"#000000"},"compId":20},{"type":"TextInput","props":{"y":336.5,"x":243,"width":353,"var":"telephoneInput","skin":"ui/common_ex/textinput.png","promptColor":"#7a7777","prompt":"请输入手机号码","height":49,"fontSize":26,"font":"Microsoft YaHei","color":"#000000"},"compId":40},{"type":"Label","props":{"y":343,"x":55,"text":"手机号码：","fontSize":30,"font":"Microsoft YaHei","color":"#000000"},"compId":41}]},{"type":"Box","props":{"y":128.5,"x":312,"width":656,"var":"box2","height":463},"compId":26,"child":[{"type":"Image","props":{"y":102,"x":0,"width":649,"skin":"ui/common_ex/bg_index3.png","height":313,"sizeGrid":"50,50,50,50"},"compId":27},{"type":"Image","props":{"y":92,"x":0,"width":656,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":28},{"type":"Button","props":{"y":284,"x":196,"width":271,"var":"exitBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":75},"compId":35,"child":[{"type":"Label","props":{"y":20,"x":65.5,"text":"退出游戏","strokeColor":"#d66207","stroke":3,"fontSize":35,"font":"Microsoft YaHei","color":"#fbfbfb"},"compId":36}]},{"type":"Label","props":{"y":183,"x":47,"wordWrap":true,"width":561,"text":"       当前未满18周岁，很遗憾不能为您提供服务","leading":10,"height":87,"fontSize":35,"font":"Microsoft YaHei","color":"#000000","bold":true},"compId":39}]},{"type":"Box","props":{"y":81,"x":289,"width":701,"visible":false,"var":"bindBox","height":558},"compId":42,"child":[{"type":"Image","props":{"y":11,"x":3,"width":700,"skin":"ui/common_ex/bg_index3.png","height":547,"sizeGrid":"50,50,50,50"},"compId":43},{"type":"Image","props":{"y":10,"x":0,"width":700,"skin":"ui/common_ex/head_2.png","height":72,"sizeGrid":"0,180,0,180"},"compId":44},{"type":"Image","props":{"y":-83,"x":285,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":45},{"type":"Image","props":{"y":-84,"x":450,"skin":"ui/common_ex/title_border.png"},"compId":46},{"type":"Image","props":{"y":18,"x":373,"var":"bindTitle","skin":"ui/common/zhbd.png","anchorY":0.5,"anchorX":0.5},"compId":47},{"type":"Button","props":{"y":364,"x":440,"width":126,"var":"getvcode","stateNum":1,"skin":"ui/common/hq.png","height":44},"compId":48},{"type":"Box","props":{"y":87,"x":106,"width":460},"compId":49,"child":[{"type":"Image","props":{"y":4,"x":150,"width":310,"skin":"ui/common_ex/yhsztiao.png","sizeGrid":"16,14,14,11","name":"di","height":55},"compId":50},{"type":"Label","props":{"y":23,"x":-7,"width":156,"text":"集结号账号：","height":32,"fontSize":26,"font":"Microsoft YaHei","color":"#116780"},"compId":51},{"type":"TextInput","props":{"y":4,"x":150,"width":310,"var":"jjhNumber","valign":"middle","prompt":"请输入集结号账号","height":55,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF","align":"center"},"compId":52}]},{"type":"Box","props":{"y":154,"x":112,"width":0,"height":0},"compId":53,"child":[{"type":"Image","props":{"y":5,"x":143,"width":310,"skin":"ui/common_ex/yhsztiao.png","sizeGrid":"16,14,14,11","name":"di","height":55},"compId":54},{"type":"Label","props":{"y":23,"x":-12,"width":113,"text":"集 结 号 ID：","height":31,"fontSize":26,"font":"Microsoft YaHei","color":"#116780"},"compId":55},{"type":"TextInput","props":{"y":5,"x":143,"width":310,"var":"jjhID","valign":"middle","prompt":"请输入集结号ID","height":55,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF","align":"center"},"compId":56}]},{"type":"Box","props":{"y":223,"x":119},"compId":57,"child":[{"type":"Image","props":{"y":4,"x":135,"width":310,"skin":"ui/common_ex/yhsztiao.png","sizeGrid":"16,14,14,11","name":"di","height":55},"compId":58},{"type":"Label","props":{"y":20,"x":-19,"width":130,"text":"账 号 密 码：","height":32,"fontSize":26,"font":"Microsoft YaHei","color":"#116780"},"compId":59},{"type":"TextInput","props":{"y":5,"x":135,"width":310,"var":"cipher","valign":"middle","type":"password","prompt":"请输入账号对应密码","height":55,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF","align":"center"},"compId":60}]},{"type":"Box","props":{"y":290,"x":89,"width":492,"height":56},"compId":61,"child":[{"type":"Label","props":{"y":22,"x":11,"width":144,"text":"手 机 号 码：","height":31,"fontSize":26,"font":"Microsoft YaHei","color":"#116780"},"compId":62},{"type":"Image","props":{"y":5,"x":165,"width":310,"skin":"ui/common_ex/yhsztiao.png","sizeGrid":"16,14,14,11","name":"di","height":55},"compId":63},{"type":"TextInput","props":{"y":5,"x":165,"width":310,"var":"telephone","valign":"middle","prompt":"请输入账号对应手机号","height":55,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF","align":"center"},"compId":64}]},{"type":"Box","props":{"y":355,"x":103},"compId":65,"child":[{"type":"Image","props":{"y":6,"x":153,"width":184,"skin":"ui/common_ex/yhsztiao.png","sizeGrid":"16,14,14,11","name":"di","height":55},"compId":66},{"type":"Label","props":{"y":24,"x":-2,"width":150,"text":"验   证   码：","height":30,"fontSize":26,"font":"Microsoft YaHei","color":"#116780"},"compId":67},{"type":"TextInput","props":{"y":5,"x":153,"width":184,"var":"vCode","valign":"middle","prompt":"请输入验证码","height":55,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF","align":"center"},"compId":68}]},{"type":"Button","props":{"y":440,"x":245,"var":"bindBtn","stateNum":1,"skin":"ui/common/qrbd.png"},"compId":69},{"type":"Label","props":{"y":415,"x":472,"width":67,"visible":false,"var":"bindCountDown","text":"60s","height":28,"fontSize":20,"color":"#116780","align":"center"},"compId":70},{"type":"Button","props":{"width":212,"visible":false,"var":"quickRegister","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":64,"centerX":-143,"bottom":54},"compId":83,"child":[{"type":"Label","props":{"y":18,"x":48,"text":"快速注册","strokeColor":"#9C4F16","stroke":3,"fontSize":28,"font":"SimHei","color":"#ffffff","bold":true},"compId":85}]}]},{"type":"Box","props":{"y":122,"x":288,"width":704,"visible":false,"var":"prompt_box","height":475},"compId":71,"child":[{"type":"Image","props":{"y":35,"x":0,"width":700,"skin":"ui/common_ex/bg_index3.png","height":440,"sizeGrid":"50,50,50,50"},"compId":72},{"type":"Image","props":{"y":37,"x":1,"width":700,"skin":"ui/common_ex/head_2.png","height":72,"sizeGrid":"0,180,0,180"},"compId":73},{"type":"Image","props":{"y":7,"x":284,"skin":"ui/common/title_prompt.png"},"compId":74},{"type":"Image","props":{"y":-55,"x":281,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":75},{"type":"Image","props":{"y":-56,"x":446,"skin":"ui/common_ex/title_border.png"},"compId":76},{"type":"Box","props":{"y":390,"x":291,"var":"promptBtn"},"compId":77,"child":[{"type":"Button","props":{"stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":78},{"type":"Image","props":{"y":7,"x":49,"skin":"ui/common_ex/confirm.png"},"compId":79}]},{"type":"Label","props":{"y":156,"x":30,"wordWrap":true,"width":652,"text":"1.银行功能需要和集结号账号进行绑定。\\n2.绑定成功后，可以把金币存入绑定的集结号账号银行，或者从银行取出金币。\\n3.存入金币需要月卡，不需要输入银行密码，每次最少存入5万金币。\\n4.取出金币不需要月卡，需要输入银行密码，每次最少取出5万金币。\\n5.绑定成功后，不可解除或更改，绑定前请进行确认。","leading":12,"height":220,"fontSize":20,"font":"Microsoft YaHei","color":"#045a73"},"compId":80},{"type":"Label","props":{"y":110,"x":30,"width":580,"text":"银行功能说明：","leading":8,"height":30,"fontSize":24,"font":"Microsoft YaHei","color":"#13667e"},"compId":81}]},{"type":"Button","props":{"visible":false,"var":"quitBtn","top":10,"stateNum":1,"skin":"ui/common_ex/quit.png","left":10},"compId":82}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/common_ex/textinput.png","ui/common_ex/btn_yellow.png","font/word_red.png","ui/common_ex/btn_green.png","font/word_green.png","ui/common_ex/title_border.png","ui/common/zhbd.png","ui/common/hq.png","ui/common_ex/yhsztiao.png","ui/common/qrbd.png","ui/common/title_prompt.png","ui/common_ex/confirm.png","ui/common_ex/quit.png"],"loadList3D":[]};	
		

		class ChangeSkinPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.list1=null;
				//this.img=null;
				//this.status=null;
				//this.item_label=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(ChangeSkinPageUI.uiView);
			}
		}

		ui.abbey.ChangeSkinPageUI=Laya.ChangeSkinPageUI=ChangeSkinPageUI;
		ChangeSkinPageUI.uiView={"type":"View","props":{"width":1280,"height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"y":-240,"x":-310,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":127},{"type":"Image","props":{"y":110,"x":140,"width":1000,"skin":"ui/common_ex/bg_index4.png","height":500,"sizeGrid":"50,50,50,50"},"compId":106},{"type":"Image","props":{"y":94,"x":138,"skin":"ui/common_ex/head_2.png","sizeGrid":"0,180,0,180"},"compId":117},{"type":"Button","props":{"y":0,"x":0,"var":"quitBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":107},{"type":"List","props":{"y":150,"x":196,"width":888,"var":"list1","spaceX":15,"repeatY":1,"repeatX":6,"renderType":"render","height":420},"compId":102,"child":[{"type":"HScrollBar","props":{"y":4,"x":-1,"width":207,"name":"scrollBar","height":1,"elasticDistance":50,"elasticBackTime":200},"compId":103},{"type":"Box","props":{"y":33,"x":0,"width":204,"name":"render","height":388},"compId":109,"child":[{"type":"Image","props":{"y":187,"x":100,"skin":"ui/changeSkin/item_bg.png","anchorY":0.5,"anchorX":0.5},"compId":110},{"type":"Image","props":{"y":131,"x":104,"width":179,"var":"img","name":"img","height":132,"anchorY":0.5,"anchorX":0.5},"compId":111},{"type":"Button","props":{"y":301,"x":31,"var":"status","stateNum":1,"skin":"ui/changeSkin/equipped.png","name":"status"},"compId":112},{"type":"Text","props":{"y":8,"x":61,"width":79,"var":"item_label","text":"普通炮","strokeColor":"#01214e","stroke":2,"name":"item_label","height":22,"fontSize":18,"color":"#ffffff","bold":true,"align":"center","runtime":"laya.display.Text"},"compId":115},{"type":"Label","props":{"y":52,"x":103,"width":131,"visible":false,"text":"100","strokeColor":"#2d864d","stroke":5,"name":"remain","height":28,"fontSize":20,"color":"#e0ff00","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":128},{"type":"Label","props":{"y":250,"x":12,"width":180,"text":"llll\\n1111","name":"desc","leading":5,"height":40,"fontSize":16,"color":"#fbfbfb","bold":true,"align":"center"},"compId":126}]}]},{"type":"Box","props":{"y":-3,"x":425,"width":430,"height":150},"compId":120,"child":[{"type":"Image","props":{"y":5,"x":250,"skin":"ui/common_ex/title_border.png"},"compId":121},{"type":"Image","props":{"y":5,"x":180,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":122},{"type":"Image","props":{"y":99,"x":215,"skin":"ui/changeSkin/title.png","anchorY":0.5,"anchorX":0.5},"compId":123}]},{"type":"Image","props":{"y":397,"x":65,"skin":"ui/common_ex/grass1.png"},"compId":108},{"type":"Image","props":{"y":437,"x":1086,"skin":"ui/common_ex/grass2.png"},"compId":119}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index4.png","ui/common_ex/head_2.png","ui/common_ex/quit.png","ui/changeSkin/item_bg.png","ui/changeSkin/equipped.png","ui/common_ex/title_border.png","ui/changeSkin/title.png","ui/common_ex/grass1.png","ui/common_ex/grass2.png"],"loadList3D":[]};	
		

		class CollectLeadPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.getPrizeBtn=null;
				//this.drawTips=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(CollectLeadPageUI.uiView);
			}
		}

		ui.abbey.CollectLeadPageUI=Laya.CollectLeadPageUI=CollectLeadPageUI;
		CollectLeadPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-230,"x":-300,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":3},{"type":"Button","props":{"y":0,"x":0,"var":"quitBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":2},{"type":"Image","props":{"y":145,"x":239,"skin":"ui/common_ex/img_di.png"},"compId":5},{"type":"Image","props":{"y":30,"x":366,"skin":"ui/collectLead/bt_mrlb.png"},"compId":6},{"type":"Image","props":{"y":219,"x":297,"width":428,"skin":"ui/common_ex/shengji_heikuai.png","height":318,"sizeGrid":"24,24,24,24"},"compId":14},{"type":"Button","props":{"y":482,"x":782,"width":180,"var":"getPrizeBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","labelSize":40,"labelFont":"SimHei","labelColors":"#ffffff,#ffffff","labelBold":true,"height":68},"compId":4,"child":[{"type":"Label","props":{"y":8,"x":22,"width":136,"var":"drawTips","text":"领取奖励","strokeColor":"#965625","stroke":3,"height":43,"fontSize":34,"color":"#ffffff","bold":true,"align":"center"},"compId":36}]},{"type":"Image","props":{"y":220,"x":333,"width":229,"skin":"ui/collectLead/img_kuan.png","height":70,"sizeGrid":"0,28,0,29"},"compId":19,"child":[{"type":"Label","props":{"y":10,"x":48,"text":"点击","fontSize":19,"color":"#2c7bbc","bold":true},"compId":25},{"type":"Label","props":{"y":10,"x":87,"text":"\"右上角三个点\"","strokeColor":"#ffffff","stroke":1,"fontSize":19,"color":"#ff7200","bold":true},"compId":26}]},{"type":"Image","props":{"y":229,"x":349,"skin":"ui/collectLead/img_01.png"},"compId":7},{"type":"Image","props":{"y":293,"x":451,"width":229,"skin":"ui/collectLead/img_kuan.png","height":70,"sizeGrid":"0,28,0,29"},"compId":22,"child":[{"type":"Label","props":{"y":8,"x":95,"text":"点击","fontSize":19,"color":"#2c7bbc","bold":true},"compId":27},{"type":"Label","props":{"y":34,"x":38,"text":"\"添加我的小程序\"","strokeColor":"#ffffff","stroke":1,"fontSize":19,"color":"#ff7200","bold":true},"compId":28}]},{"type":"Image","props":{"y":302,"x":467,"skin":"ui/collectLead/img_02.png"},"compId":9},{"type":"Image","props":{"y":366,"x":314,"width":195,"skin":"ui/collectLead/img_kuan.png","height":70,"sizeGrid":"0,28,0,29"},"compId":23,"child":[{"type":"Label","props":{"y":10,"x":52,"text":"点击","fontSize":19,"color":"#2c7bbc","bold":true},"compId":29},{"type":"Label","props":{"y":10,"x":91,"text":"\"关闭圆圈\"","strokeColor":"#ffffff","stroke":1,"fontSize":19,"color":"#ff7200","bold":true},"compId":30}]},{"type":"Image","props":{"y":375,"x":330,"skin":"ui/collectLead/img_03.png"},"compId":10},{"type":"Image","props":{"y":452,"x":314,"width":230,"skin":"ui/collectLead/img_kuan.png","height":70,"sizeGrid":"0,28,0,29"},"compId":24,"child":[{"type":"Label","props":{"y":10,"x":57,"text":"点击我的小程序","fontSize":19,"color":"#2c7bbc","bold":true},"compId":31},{"type":"Label","props":{"y":34,"x":12,"text":"“集结号捕鱼”","strokeColor":"#ffffff","stroke":1,"fontSize":19,"color":"#ff7200","bold":true},"compId":32},{"type":"Label","props":{"y":34,"x":138,"text":"开启游戏","fontSize":19,"color":"#2c7bbc","bold":true},"compId":33}]},{"type":"Image","props":{"y":459,"x":330,"skin":"ui/collectLead/img_04.png"},"compId":11},{"type":"Image","props":{"y":257,"x":410,"skin":"ui/collectLead/img_dian_01.png"},"compId":15},{"type":"Image","props":{"y":405,"x":375,"skin":"ui/collectLead/img_dian_02.png"},"compId":16},{"type":"Image","props":{"y":326,"x":420,"skin":"ui/collectLead/img_jiantou_01.png"},"compId":17},{"type":"Image","props":{"y":417,"x":513,"skin":"ui/collectLead/img_jiantou_02.png"},"compId":18},{"type":"Image","props":{"y":216,"x":736,"skin":"ui/common_ex/img_qipao.png"},"compId":21},{"type":"Image","props":{"y":274,"x":800,"skin":"ui/collectLead/img_lb.png"},"compId":20},{"type":"Image","props":{"y":245,"x":570,"skin":"ui/collectLead/img_jiantou_02.png"},"compId":37},{"type":"Image","props":{"y":380,"x":560,"skin":"ui/collectLead/img_icon_xz.png"},"compId":39,"child":[{"type":"Image","props":{"y":15,"x":14,"skin":"ui/collectLead/img_icon.png"},"compId":38},{"type":"Image","props":{"y":68,"x":62,"skin":"ui/collectLead/img_icon_shou.png"},"compId":40}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/quit.png","ui/common_ex/img_di.png","ui/collectLead/bt_mrlb.png","ui/common_ex/shengji_heikuai.png","ui/common_ex/btn_yellow.png","ui/collectLead/img_kuan.png","ui/collectLead/img_01.png","ui/collectLead/img_02.png","ui/collectLead/img_03.png","ui/collectLead/img_04.png","ui/collectLead/img_dian_01.png","ui/collectLead/img_dian_02.png","ui/collectLead/img_jiantou_01.png","ui/collectLead/img_jiantou_02.png","ui/common_ex/img_qipao.png","ui/collectLead/img_lb.png","ui/collectLead/img_icon_xz.png","ui/collectLead/img_icon.png","ui/collectLead/img_icon_shou.png"],"loadList3D":[]};	
		

		class CompensateUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.makeName=null;
				//this.receiveBtn=null;
				//this.rewardlist=null;
				//this.coinCount=null;
				//this.priziIcon=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(CompensateUI.uiView);
			}
		}

		ui.abbey.CompensateUI=Laya.CompensateUI=CompensateUI;
		CompensateUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-240,"x":-320,"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":2},{"type":"Box","props":{"y":31,"x":214},"compId":26,"child":[{"type":"Image","props":{"y":124,"x":76,"width":700,"skin":"ui/common_ex/bg_index4.png","height":450,"sizeGrid":"50,50,50,50"},"compId":10,"child":[{"type":"Image","props":{"y":145,"x":5,"width":690,"skin":"ui/prize/di.png","height":200},"compId":16}]},{"type":"Image","props":{"y":41,"x":160,"skin":"ui/prize/title.png"},"compId":4},{"type":"Box","props":{"x":131,"width":579,"height":246},"compId":5,"child":[{"type":"Image","props":{"y":100,"x":15,"skin":"ui/prize/star.png","scaleY":0.8,"scaleX":0.8},"compId":3},{"type":"Image","props":{"y":83,"x":137,"skin":"ui/prize/star.png","scaleY":0.3,"scaleX":0.3},"compId":6},{"type":"Image","props":{"y":71,"x":255,"skin":"ui/prize/star.png","scaleY":0.5,"scaleX":0.5},"compId":7},{"type":"Image","props":{"y":107,"x":367,"skin":"ui/prize/star.png","scaleY":0.3,"scaleX":0.3},"compId":8},{"type":"Image","props":{"y":79,"x":494,"skin":"ui/prize/star.png"},"compId":9}]},{"type":"Image","props":{"y":352,"skin":"ui/common_ex/grass1.png"},"compId":11},{"type":"Image","props":{"y":392,"x":709,"skin":"ui/common_ex/grass2.png"},"compId":12},{"type":"Text","props":{"y":225,"x":126,"width":600,"var":"makeName","text":"恭喜获得万年巨鳄奖金","height":30,"fontSize":24,"color":"#2eceff","align":"center","runtime":"laya.display.Text"},"compId":15},{"type":"Button","props":{"y":490,"x":426,"width":160,"var":"receiveBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":50,"anchorX":0.5},"compId":13,"child":[{"type":"Image","props":{"y":8,"x":54,"skin":"ui/common_ex/confirm.png"},"compId":14}]},{"type":"List","props":{"y":302,"x":127,"var":"rewardlist","repeatX":4},"compId":23,"child":[{"type":"Box","props":{"y":0.10000000000002274,"x":-0.10000000000002274,"renderType":"render"},"compId":22,"child":[{"type":"Label","props":{"y":111.30000000000007,"x":7.699999999999932,"width":100,"var":"coinCount","text":"x999999","name":"count","fontSize":24,"color":"#ffffff","align":"center"},"compId":19},{"type":"Image","props":{"y":55.30000000000007,"x":53.69999999999993,"width":98,"skin":"ui/common_ex/touxiang.png","scaleY":1.1,"scaleX":1.1,"height":102,"anchorY":0.5,"anchorX":0.5},"compId":17},{"type":"Image","props":{"y":53.30000000000007,"x":51.69999999999993,"var":"priziIcon","skin":"ui/common/coin1.png","name":"icon","anchorY":0.5,"anchorX":0.5},"compId":18}]}]}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index4.png","ui/prize/di.png","ui/prize/title.png","ui/prize/star.png","ui/common_ex/grass1.png","ui/common_ex/grass2.png","ui/common_ex/btn_green.png","ui/common_ex/confirm.png","ui/common_ex/touxiang.png","ui/common/coin1.png"],"loadList3D":[]};	
		

		class ExchangePageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.list1=null;
				//this.img=null;
				//this.price_unit=null;
				//this.wait_ani=null;
				//this.haveScoreBox=null;
				//this.nomalBox=null;
				//this.mask1=null;
				//this.exchangeBox=null;
				//this.exchangeBtn=null;
				//this.tel_confirm=null;
				//this.tel=null;
				//this.list2=null;
				//this.box_labels=null;
				//this.quitExchange=null;
				//this.descBox=null;
				//this.desTwo=null;
				//this.provider_tel=null;
				//this.desOne=null;
				//this.desThree=null;
				//this.provider_tel1=null;
				//this.box_score=null;
				//this.getvcode=null;
				//this.jjhNumber=null;
				//this.jjhID=null;
				//this.cipher=null;
				//this.telephone=null;
				//this.vCode=null;
				//this.bindBtn=null;
				//this.bindCountDown=null;
				//this.quickRegister=null;
				//this.labaNumBox=null;
				//this.findIntegralBtn=null;
				//this.labaNum=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(ExchangePageUI.uiView);
			}
		}

		ui.abbey.ExchangePageUI=Laya.ExchangePageUI=ExchangePageUI;
		ExchangePageUI.uiView={"type":"View","props":{"width":1280,"skin":"ui/exchange/tab_diamond.png","height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"y":-227,"x":-315,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":184},{"type":"Image","props":{"y":99,"x":167,"width":985,"skin":"ui/common_ex/bg_index0.png","height":598,"sizeGrid":"50,50,50,50"},"compId":116},{"type":"Image","props":{"y":116,"x":192,"width":950,"skin":"ui/common_ex/bg_index1.png","height":560,"sizeGrid":"30,30,30,30"},"compId":117},{"type":"Image","props":{"y":78,"x":166,"width":984,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":194},{"type":"Image","props":{"y":481,"x":97,"skin":"ui/common_ex/grass1.png"},"compId":150},{"type":"Image","props":{"y":522,"x":1095,"skin":"ui/common_ex/grass2.png"},"compId":151},{"type":"Button","props":{"y":0,"x":0,"var":"quitBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":120},{"type":"List","props":{"y":196.5,"x":665,"width":840,"var":"list1","spaceX":40,"scaleY":1.1,"scaleX":1.1,"repeatY":1,"repeatX":6,"renderType":"render","height":373,"anchorX":0.5},"compId":102,"child":[{"type":"Box","props":{"y":0,"x":0,"width":250,"name":"render","height":368},"compId":93,"child":[{"type":"Image","props":{"skin":"ui/exchange/item_bg.png","scaleY":1.4,"scaleX":1.4},"compId":86},{"type":"Image","props":{"y":125,"x":125,"var":"img","name":"img","anchorY":0.5,"anchorX":0.5},"compId":107},{"type":"Image","props":{"y":35,"x":125,"width":180,"skin":"ui/common_ex/txt_bg.png","height":35,"anchorX":0.5,"sizeGrid":"10,10,10,10"},"compId":259},{"type":"Image","props":{"y":198,"x":125,"width":150,"skin":"ui/common_ex/txt_bg.png","height":28,"anchorX":0.5,"sizeGrid":"10,10,10,10"},"compId":263},{"type":"Label","props":{"y":56,"x":125,"width":180,"text":"100元话费券","name":"title","fontSize":20,"font":"Microsoft YaHei","color":"#f1e6e6","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":260},{"type":"Button","props":{"y":267,"x":30,"width":190,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","name":"btn","height":60},"compId":115},{"type":"FontClip","props":{"y":276,"x":150,"value":"1000万","skin":"font/font_1.png","sheet":"/.+-0123456789枚万亿","scaleY":0.8,"scaleX":0.8,"name":"price","anchorX":0.5},"compId":111},{"type":"Image","props":{"y":292,"x":26,"var":"price_unit","skin":"ui/common_ex/unit_exchange.png","name":"price_unit","anchorY":0.5},"compId":112},{"type":"Label","props":{"y":250,"x":125,"width":200,"text":"20元充值卡，兑换后\\n直接到账哦！","name":"desc","leading":3,"height":40,"fontSize":16,"font":"Microsoft YaHei","color":"#02478a","anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":195},{"type":"Label","props":{"y":214,"x":125,"width":170,"text":"今日剩余：222","name":"remain","fontSize":18,"font":"Microsoft YaHei","color":"#f1e6e6","anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":196},{"type":"Label","props":{"y":325,"x":83,"text":"倒计时：10s","name":"countDownLabel","fontSize":15,"color":"#f8d209"},"compId":384}]},{"type":"HScrollBar","props":{"y":4,"x":0,"name":"scrollBar"},"compId":103}]},{"type":"Animation","props":{"y":374,"x":635,"visible":false,"var":"wait_ani","source":"abbey/wait.ani"},"compId":187},{"type":"Box","props":{"y":81,"x":365,"width":716,"var":"haveScoreBox","height":64},"compId":188,"child":[{"type":"Image","props":{"y":-78,"x":-1,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":160},{"type":"Image","props":{"y":-77,"x":591,"skin":"ui/common_ex/title_border.png"},"compId":159},{"type":"Image","props":{"y":-6,"x":-44,"width":675,"skin":"ui/exchange/duihuan_1.png","height":70,"sizeGrid":"30,80,30,80"},"compId":264},{"type":"Button","props":{"y":0,"x":-38,"stateNum":2,"skin":"ui/exchange/tab_real.png","name":"tab_real"},"compId":190},{"type":"Button","props":{"y":0,"x":130,"stateNum":2,"skin":"ui/exchange/tab_virtual.png","name":"tab_virtual"},"compId":193},{"type":"Button","props":{"y":0,"x":293,"stateNum":2,"skin":"ui/exchange/pfScoreBtn.png","name":"tab_pf_score"},"compId":532},{"type":"Button","props":{"y":0,"x":456,"stateNum":2,"skin":"ui/exchange/tab_order.png","name":"tab_order"},"compId":191}]},{"type":"Box","props":{"y":3,"x":315,"width":716,"var":"nomalBox","height":64},"compId":375,"child":[{"type":"Image","props":{"y":0,"x":123.99999999999929,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":376},{"type":"Image","props":{"y":1,"x":560.9999999999993,"skin":"ui/common_ex/title_border.png"},"compId":377},{"type":"Image","props":{"y":72,"x":80.99999999999929,"width":515,"skin":"ui/exchange/duihuan_1.png","height":70,"sizeGrid":"30,80,30,80"},"compId":378},{"type":"Button","props":{"y":78,"x":88.99999999999929,"stateNum":2,"skin":"ui/exchange/tab_real.png","name":"tab_real"},"compId":379},{"type":"Button","props":{"y":78,"x":256.9999999999993,"stateNum":2,"skin":"ui/exchange/tab_virtual.png","name":"tab_virtual"},"compId":380},{"type":"Button","props":{"y":78,"x":419.9999999999993,"stateNum":2,"skin":"ui/exchange/tab_order.png","name":"tab_order"},"compId":382}]},{"type":"Image","props":{"y":-217,"x":-305,"width":1900,"visible":false,"var":"mask1","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":262},{"type":"Box","props":{"y":160,"x":340,"width":599,"visible":false,"var":"exchangeBox","height":400},"compId":216,"child":[{"type":"Image","props":{"width":600,"visible":true,"skin":"ui/common_ex/bg_index3.png","height":400,"sizeGrid":"50,50,50,50"},"compId":198},{"type":"Image","props":{"width":600,"skin":"ui/common_ex/head_2.png","sizeGrid":"0,180,0,180"},"compId":199},{"type":"Image","props":{"y":-98,"x":365,"skin":"ui/common_ex/title_border.png"},"compId":202,"child":[{"type":"Image","props":{"y":0,"x":-120,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":203},{"type":"Image","props":{"y":72,"x":-150,"skin":"ui/exchange/title.png"},"compId":201}]},{"type":"Button","props":{"y":306,"x":254,"width":229,"var":"exchangeBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","scaleY":0.5,"scaleX":0.5,"height":107},"compId":214},{"type":"Image","props":{"y":315,"x":275,"skin":"ui/exchange/duihuan.png"},"compId":215},{"type":"TextInput","props":{"y":202,"x":220,"width":320,"var":"tel_confirm","skin":"ui/exchange/kuang1.png","promptColor":"#fbfbfb","prompt":"请再次输入手机号","height":35,"fontSize":26,"font":"SimSun","bold":true,"align":"center","sizeGrid":"10,20,10,20"},"compId":213},{"type":"TextInput","props":{"y":112,"x":220,"width":320,"var":"tel","skin":"ui/exchange/kuang1.png","promptColor":"#fbfbfb","prompt":"请输入手机号","height":35,"fontSize":26,"font":"SimSun","bold":true,"align":"center","sizeGrid":"10,20,10,20"},"compId":255},{"type":"Text","props":{"y":205,"x":50,"width":150,"text":"确认手机号:","fontSize":26,"font":"Microsoft YaHei","color":"#116780","align":"right","runtime":"laya.display.Text"},"compId":205},{"type":"Text","props":{"y":115,"x":50,"width":150,"text":"手机号:","fontSize":26,"font":"Microsoft YaHei","color":"#116780","align":"right","runtime":"laya.display.Text"},"compId":204},{"type":"Text","props":{"y":244,"x":230,"width":300,"text":"请再次输入手机号","fontSize":20,"font":"Microsoft YaHei","color":"#57c0e0","align":"left","runtime":"laya.display.Text"},"compId":257},{"type":"Text","props":{"y":155,"x":230,"width":300,"text":"为了您的财产安全，请输入手机号","fontSize":20,"font":"Microsoft YaHei","color":"#57c0e0","align":"left","runtime":"laya.display.Text"},"compId":258}]},{"type":"List","props":{"y":219,"x":170,"width":890,"var":"list2","scaleY":1.1,"scaleX":1.1,"renderType":"render","height":338},"compId":227,"child":[{"type":"Box","props":{"y":10,"x":30,"width":830,"name":"render","height":115},"compId":228,"child":[{"type":"Image","props":{"width":830,"skin":"ui/common_ex/task.png","height":99,"sizeGrid":"30,30,30,30"},"compId":229},{"type":"Label","props":{"y":24,"x":20,"width":150,"text":"20元话费券","name":"item_name","fontSize":26,"font":"Microsoft YaHei","color":"#112ae1","align":"left"},"compId":244},{"type":"Image","props":{"y":40,"x":220,"skin":"ui/common_ex/unit_exchange.png","name":"price_unit","anchorY":0.5},"compId":245},{"type":"Label","props":{"y":25,"x":280,"text":"2000","name":"item_cost","fontSize":24,"font":"Microsoft YaHei","color":"#1690e6","bold":true},"compId":246},{"type":"Label","props":{"y":25,"x":450,"text":"2017.9.2","name":"item_date","fontSize":24,"font":"Microsoft YaHei","color":"#1690e6","bold":true},"compId":247},{"type":"Image","props":{"y":25,"x":735,"skin":"ui/exchange/status_pending.png","name":"item_status","anchorX":0.5},"compId":234}]},{"type":"VScrollBar","props":{"y":0,"x":880,"width":0,"showButtons":false,"name":"scrollBar","height":0},"compId":243}]},{"type":"Box","props":{"y":171,"x":218,"var":"box_labels","scaleY":1.1,"scaleX":1.1},"compId":253,"child":[{"type":"Label","props":{"x":0,"width":122,"text":"兑换物品","height":39,"fontSize":28,"font":"Microsoft YaHei","color":"#edf1fd"},"compId":248},{"type":"Label","props":{"x":224,"width":122,"text":"消耗物品","height":39,"fontSize":28,"font":"Microsoft YaHei","color":"#edf1fd"},"compId":249},{"type":"Label","props":{"x":449,"width":122,"text":"兑换时间","height":39,"fontSize":28,"font":"Microsoft YaHei","color":"#edf1fd"},"compId":250},{"type":"Label","props":{"x":673,"width":122,"text":"兑换状态","height":39,"fontSize":28,"font":"Microsoft YaHei","color":"#edf1fd"},"compId":251}]},{"type":"Button","props":{"y":0,"x":0,"var":"quitExchange","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":200},{"type":"Box","props":{"y":630,"x":220,"var":"descBox"},"compId":324,"child":[{"type":"Box","props":{"y":0,"x":0,"var":"desTwo"},"compId":560,"child":[{"type":"Label","props":{"y":0,"x":0,"width":665,"text":" 实物兑换成功后，将有我们客服人员依次在1～5个工作日为您发放。兑换状态请\\n在兑换记录中查看。若有疑问请咨询客服电话:","leading":5,"height":50,"fontSize":18,"font":"Microsoft YaHei","color":"#50e9ff","align":"left"},"compId":197},{"type":"Label","props":{"y":23,"x":368,"width":152,"var":"provider_tel","text":"0579-8372-7777","leading":5,"height":50,"fontSize":18,"font":"Microsoft YaHei","color":"#50e9ff","align":"left"},"compId":265}]},{"type":"Label","props":{"y":1,"x":64,"width":477,"var":"desOne","text":"积分可前往《集结号娱乐中心》公众号，兑换更丰富的奖励","leading":5,"height":50,"fontSize":18,"font":"Microsoft YaHei","color":"#50e9ff","align":"center"},"compId":559},{"type":"Box","props":{"y":0,"x":0,"var":"desThree"},"compId":581,"child":[{"type":"Label","props":{"y":0,"x":0,"width":873,"text":" 实物兑换成功后，将有我们客服人员依次在1～5个工作日为您发放。兑换状态请在兑换记录中查看。若有疑问\\n请咨询客服电话:","leading":5,"height":50,"fontSize":18,"font":"Microsoft YaHei","color":"#50e9ff","align":"left"},"compId":582},{"type":"Label","props":{"y":23,"x":135,"width":152,"var":"provider_tel1","text":"0579-8372-7777","leading":5,"height":50,"fontSize":18,"font":"Microsoft YaHei","color":"#50e9ff","align":"left"},"compId":583}]}]},{"type":"Box","props":{"y":159,"x":210,"width":900,"var":"box_score","height":500},"compId":335,"child":[{"type":"Label","props":{"y":16,"x":3,"width":893,"text":"使用积分兑换需要绑定集结号账号，珍珠兑换为积分后，可前往《集结号娱乐中心》公众号，换取更多奖励","leading":5,"height":23,"fontSize":19,"font":"Microsoft YaHei","color":"#ffff00","align":"left"},"compId":558},{"type":"Button","props":{"y":344,"x":563,"width":126,"var":"getvcode","stateNum":1,"skin":"ui/common/hq.png","height":44},"compId":533},{"type":"Box","props":{"y":67,"x":223,"width":460},"compId":534,"child":[{"type":"Image","props":{"y":4,"x":150,"width":310,"skin":"ui/common_ex/yhsztiao.png","sizeGrid":"16,14,14,11","name":"di","height":55},"compId":542},{"type":"Label","props":{"y":23,"x":-7,"width":156,"text":"集结号账号：","height":32,"fontSize":26,"font":"Microsoft YaHei","color":"#ffffff"},"compId":543},{"type":"TextInput","props":{"y":4,"x":150,"width":310,"var":"jjhNumber","valign":"middle","prompt":"请输入集结号账号","height":55,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF","align":"center"},"compId":544}]},{"type":"Box","props":{"y":134,"x":229,"width":0,"height":0},"compId":535,"child":[{"type":"Image","props":{"y":5,"x":143,"width":310,"skin":"ui/common_ex/yhsztiao.png","sizeGrid":"16,14,14,11","name":"di","height":55},"compId":545},{"type":"Label","props":{"y":23,"x":-12,"width":113,"text":"集 结 号 ID：","height":31,"fontSize":26,"font":"Microsoft YaHei","color":"#ffffff"},"compId":546},{"type":"TextInput","props":{"y":5,"x":143,"width":310,"var":"jjhID","valign":"middle","prompt":"请输入集结号ID","height":55,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF","align":"center"},"compId":547}]},{"type":"Box","props":{"y":203,"x":236},"compId":536,"child":[{"type":"Image","props":{"y":4,"x":135,"width":310,"skin":"ui/common_ex/yhsztiao.png","sizeGrid":"16,14,14,11","name":"di","height":55},"compId":548},{"type":"Label","props":{"y":20,"x":-19,"width":130,"text":"账 号 密 码：","height":32,"fontSize":26,"font":"Microsoft YaHei","color":"#ffffff"},"compId":549},{"type":"TextInput","props":{"y":5,"x":135,"width":310,"var":"cipher","valign":"middle","type":"password","prompt":"请输入账号对应密码","height":55,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF","align":"center"},"compId":550}]},{"type":"Box","props":{"y":270,"x":206,"width":492,"height":56},"compId":537,"child":[{"type":"Label","props":{"y":22,"x":11,"width":144,"text":"手 机 号 码：","height":31,"fontSize":26,"font":"Microsoft YaHei","color":"#ffffff"},"compId":551},{"type":"Image","props":{"y":5,"x":165,"width":310,"skin":"ui/common_ex/yhsztiao.png","sizeGrid":"16,14,14,11","name":"di","height":55},"compId":552},{"type":"TextInput","props":{"y":5,"x":165,"width":310,"var":"telephone","valign":"middle","prompt":"请输入账号对应手机号","height":55,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF","align":"center"},"compId":553}]},{"type":"Box","props":{"y":335,"x":220},"compId":538,"child":[{"type":"Image","props":{"y":6,"x":153,"width":184,"skin":"ui/common_ex/yhsztiao.png","sizeGrid":"16,14,14,11","name":"di","height":55},"compId":554},{"type":"Label","props":{"y":24,"x":-2,"width":150,"text":"验   证   码：","height":30,"fontSize":26,"font":"Microsoft YaHei","color":"#ffffff"},"compId":555},{"type":"TextInput","props":{"y":5,"x":153,"width":184,"var":"vCode","valign":"middle","prompt":"请输入验证码","height":55,"fontSize":18,"font":"Microsoft YaHei","color":"#FFFFFF","align":"center"},"compId":556}]},{"type":"Button","props":{"y":434,"x":344,"var":"bindBtn","stateNum":1,"skin":"ui/common/qrbd.png"},"compId":539},{"type":"Label","props":{"y":395,"x":589,"width":67,"visible":false,"var":"bindCountDown","text":"60s","height":28,"fontSize":20,"color":"#ffffff","align":"center"},"compId":540},{"type":"Button","props":{"width":212,"visible":false,"var":"quickRegister","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":64,"centerX":-139,"bottom":2},"compId":541,"child":[{"type":"Label","props":{"y":18,"x":48,"text":"快速注册","strokeColor":"#9C4F16","stroke":3,"fontSize":28,"font":"SimHei","color":"#ffffff","bold":true},"compId":557}]}]},{"type":"Box","props":{"y":605,"x":688,"var":"labaNumBox"},"compId":568,"child":[{"type":"Button","props":{"y":7,"x":-455,"var":"findIntegralBtn","stateNum":2,"skin":"ui/common_ex/btn_wenhao.png","labelStroke":1,"labelSize":22,"labelColors":"#ffffff"},"compId":563},{"type":"Image","props":{"y":11,"x":198,"width":199,"skin":"ui/shop/currency_bg.png","height":43,"sizeGrid":"13,30,13,30"},"compId":566},{"type":"Image","props":{"x":179,"skin":"ui/common_ex/unit_exchange.png"},"compId":565},{"type":"Label","props":{"y":12,"x":198,"width":192,"var":"labaNum","valign":"middle","text":"123456","height":43,"fontSize":23,"color":"#ffffff","align":"center"},"compId":567}]}],"loadList":["ui/exchange/tab_diamond.png","ui/common_ex/jl_bg.png","ui/common_ex/bg_index0.png","ui/common_ex/bg_index1.png","ui/common_ex/head_2.png","ui/common_ex/grass1.png","ui/common_ex/grass2.png","ui/common_ex/quit.png","ui/exchange/item_bg.png","ui/common_ex/txt_bg.png","ui/common_ex/btn_yellow.png","font/font_1.png","ui/common_ex/unit_exchange.png","abbey/wait.ani","ui/common_ex/title_border.png","ui/exchange/duihuan_1.png","ui/exchange/tab_real.png","ui/exchange/tab_virtual.png","ui/exchange/pfScoreBtn.png","ui/exchange/tab_order.png","ui/common_ex/bg_index3.png","ui/exchange/title.png","ui/exchange/duihuan.png","ui/exchange/kuang1.png","ui/common_ex/task.png","ui/exchange/status_pending.png","ui/common/hq.png","ui/common_ex/yhsztiao.png","ui/common/qrbd.png","ui/common_ex/btn_wenhao.png","ui/shop/currency_bg.png"],"loadList3D":[]};	
		

		class FeedBackPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.feedBox=null;
				//this.feedBtn=null;
				//this.feedInput=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(FeedBackPageUI.uiView);
			}
		}

		ui.abbey.FeedBackPageUI=Laya.FeedBackPageUI=FeedBackPageUI;
		FeedBackPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":0,"x":0,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":17},{"type":"Button","props":{"var":"quitBtn","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":0},"compId":13},{"type":"Box","props":{"width":560,"var":"feedBox","height":450,"centerY":0,"centerX":0},"compId":15,"child":[{"type":"Image","props":{"y":64,"x":2,"width":558,"skin":"ui/common_ex/bg_index3.png","height":389,"sizeGrid":"50,50,50,50"},"compId":2},{"type":"Image","props":{"y":60,"x":0,"width":560,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":12},{"type":"Box","props":{"y":-30,"x":110},"compId":8,"child":[{"type":"Image","props":{"y":-1,"x":203,"skin":"ui/common_ex/title_border.png"},"compId":9},{"type":"Image","props":{"y":-1,"x":146,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":10},{"type":"Image","props":{"y":61,"x":102,"skin":"ui/common/fk.png","scaleY":0.8,"scaleX":0.8},"compId":11}]},{"type":"Button","props":{"y":367,"x":206,"var":"feedBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":3,"child":[{"type":"Image","props":{"y":5,"x":44,"skin":"ui/common_ex/tijiao.png"},"compId":14}]},{"type":"Image","props":{"y":136,"x":53,"width":460,"skin":"ui/common_ex/bg_index1.png","height":220,"sizeGrid":"30,30,30,30"},"compId":16},{"type":"TextInput","props":{"y":147,"x":63,"wordWrap":true,"width":440,"var":"feedInput","valign":"top","type":"text","promptColor":"#ffffff","prompt":"请输入您的宝贵意见","overflow":"scroll","multiline":true,"maxChars":300,"height":200,"fontSize":20,"color":"#ffffff","bold":true,"align":"left"},"compId":7}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/quit.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/common_ex/title_border.png","ui/common/fk.png","ui/common_ex/btn_green.png","ui/common_ex/tijiao.png","ui/common_ex/bg_index1.png"],"loadList3D":[]};	
		

		class FirstChargePageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.chargeBtn=null;
				//this.list_reward=null;
				//this.txt=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(FirstChargePageUI.uiView);
			}
		}

		ui.abbey.FirstChargePageUI=Laya.FirstChargePageUI=FirstChargePageUI;
		FirstChargePageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-240,"x":-310,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":193},{"type":"Image","props":{"y":156,"x":237,"skin":"ui/common_ex/img_di.png"},"compId":194},{"type":"Image","props":{"y":395,"x":549,"width":445,"skin":"ui/common_ex/shengji_heikuai.png","height":104,"sizeGrid":"24,24,24,24"},"compId":198},{"type":"Image","props":{"y":232,"x":448,"skin":"ui/firstCharge/font_czryje.png"},"compId":197},{"type":"Image","props":{"y":329,"x":271,"skin":"ui/common_ex/img_qipao.png"},"compId":195},{"type":"Image","props":{"y":41,"x":378,"skin":"ui/firstCharge/bt_sj.png"},"compId":196},{"type":"Button","props":{"y":0,"x":0,"var":"quitBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":120},{"type":"Button","props":{"y":527,"x":460,"width":360,"var":"chargeBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":106},"compId":174},{"type":"List","props":{"y":393,"x":563,"width":428,"var":"list_reward","repeatX":4,"renderType":"render","name":"list_reward","height":102},"compId":185,"child":[{"type":"Box","props":{"y":0,"x":0,"width":105,"name":"render","height":102},"compId":186,"child":[{"type":"Image","props":{"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":187},{"type":"Image","props":{"y":7,"x":12,"width":80,"skin":"ui/common/diamond2.png","name":"reward_type","height":80},"compId":188},{"type":"Image","props":{"y":68,"x":51,"width":89,"skin":"ui/common_ex/reward_mask.png","height":25,"anchorX":0.5,"sizeGrid":"3,15,13,15"},"compId":189},{"type":"Label","props":{"y":69,"x":14,"width":75,"text":"x 99","name":"reward_text","height":25,"fontSize":20,"color":"#f6e9e9","bold":true,"align":"center"},"compId":190}]}]},{"type":"Image","props":{"y":395,"x":312,"skin":"ui/firstCharge/b3.png"},"compId":191},{"type":"Image","props":{"y":553,"x":582,"var":"txt","skin":"ui/firstCharge/charge_txt.png"},"compId":192}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/img_di.png","ui/common_ex/shengji_heikuai.png","ui/firstCharge/font_czryje.png","ui/common_ex/img_qipao.png","ui/firstCharge/bt_sj.png","ui/common_ex/quit.png","ui/common_ex/btn_yellow.png","ui/common_ex/touxiang.png","ui/common/diamond2.png","ui/common_ex/reward_mask.png","ui/firstCharge/b3.png","ui/firstCharge/charge_txt.png"],"loadList3D":[]};	
		

		class FishTypeUI extends View{
			constructor (){
				super();
				//this.smallFishlist=null;
				//this.bmask=null;
				//this.bigFishList=null;
				//this.closeBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(FishTypeUI.uiView);
			}
		}

		ui.abbey.FishTypeUI=Laya.FishTypeUI=FishTypeUI;
		FishTypeUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"List","props":{"y":201,"x":269,"var":"smallFishlist","spaceY":1,"spaceX":1,"repeatY":1,"repeatX":1},"compId":66,"child":[{"type":"Box","props":{"width":1,"renderType":"render","name":"render","height":1},"compId":42,"child":[{"type":"Image","props":{"width":102,"skin":"ui/common_ex/bei.png","name":"bei","height":102,"sizeGrid":"20,20,20,20"},"compId":38},{"type":"Image","props":{"y":-6,"x":-2,"skin":"ui/common/1.png","name":"image"},"compId":54},{"type":"Label","props":{"y":65,"x":16,"width":74,"text":"6","strokeColor":"#04185c","stroke":5,"name":"txt","height":30,"fontSize":22,"color":"#fdf8f8","bold":true,"align":"right"},"compId":60}]}]},{"type":"Image","props":{"y":-240,"x":-320,"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":71},{"type":"Image","props":{"y":102,"x":220,"width":840,"skin":"ui/common_ex/bg_index4.png","height":515,"sizeGrid":"50,50,50,50"},"compId":21},{"type":"Image","props":{"y":170,"x":252,"width":775,"skin":"ui/common_ex/bg_index2.png","height":385,"sizeGrid":"40,40,40,40"},"compId":57},{"type":"Image","props":{"y":423,"x":164,"skin":"ui/common_ex/grass1.png"},"compId":64},{"type":"Image","props":{"y":105,"x":220,"width":840,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":22},{"type":"Image","props":{"y":445,"x":1006,"skin":"ui/common_ex/grass2.png"},"compId":65},{"type":"List","props":{"y":183,"x":265,"width":750,"var":"bigFishList","spaceY":25,"spaceX":20,"repeatY":3,"repeatX":3,"height":360},"compId":51,"child":[{"type":"Box","props":{"y":0,"x":0,"width":237,"renderType":"render","name":"render","height":110},"compId":50,"child":[{"type":"Image","props":{"y":60,"x":0,"width":240,"skin":"ui/fishType/bei.png","name":"bei","anchorY":0.5,"sizeGrid":"30,30,30,30"},"compId":44},{"type":"Image","props":{"y":70,"x":120,"skin":"ui/common/1.png","name":"image","anchorY":0.5,"anchorX":0.5},"compId":49},{"type":"Label","props":{"y":3,"x":30,"width":92,"text":"灯笼鱼","name":"name","height":24,"fontSize":22,"color":"#fdf8f8","align":"left"},"compId":46},{"type":"Label","props":{"y":4,"x":132,"width":68,"text":"900","name":"beishu","height":24,"fontSize":22,"color":"#f3e9e9","bold":true,"align":"right"},"compId":58}]}]},{"type":"Button","props":{"y":0,"x":0,"var":"closeBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":56},{"type":"Image","props":{"y":565,"x":541,"skin":"ui/fishType/text  -yajun.png"},"compId":61},{"type":"Label","props":{"y":568,"x":655,"width":140,"text":"图标表示奖金鱼","height":20,"fontSize":20,"color":"#55ef78","bold":true},"compId":62},{"type":"Box","props":{"y":-8,"x":428,"width":423,"height":156},"compId":67,"child":[{"type":"Image","props":{"y":16,"x":250,"skin":"ui/common_ex/title_border.png"},"compId":68},{"type":"Image","props":{"y":16,"x":175,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":69},{"type":"Image","props":{"y":87,"x":212,"skin":"ui/fishType/title.png","anchorX":0.5},"compId":70}]}],"loadList":["ui/common_ex/bei.png","ui/common/1.png","ui/common_ex/jl_bg.png","ui/common_ex/bg_index4.png","ui/common_ex/bg_index2.png","ui/common_ex/grass1.png","ui/common_ex/head_2.png","ui/common_ex/grass2.png","ui/fishType/bei.png","ui/common_ex/quit.png","ui/fishType/text  -yajun.png","ui/common_ex/title_border.png","ui/fishType/title.png"],"loadList3D":[]};	
		

		class goldTipUI extends View{
			constructor(){
				super();
			}
			createChildren(){
				super.createChildren();
				this.createView(goldTipUI.uiView);
			}
		}

		ui.abbey.goldTipUI=Laya.goldTipUI=goldTipUI;
		goldTipUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"loadList":[],"loadList3D":[]};	
		

		class HoureTipUI extends View{
			constructor (){
				super();
				//this.panel=null;
				//this.htmlDiv=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(HoureTipUI.uiView);
			}
		}

		ui.abbey.HoureTipUI=Laya.HoureTipUI=HoureTipUI;
		HoureTipUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":112,"width":1000,"skin":"ui/common_ex/tuceng.png","centerX":0,"sizeGrid":"10,0,10,0"},"compId":6,"child":[{"type":"Panel","props":{"y":11,"x":240,"width":673,"var":"panel","height":53},"compId":2,"child":[{"type":"HTMLDivElement","props":{"y":20,"x":726,"width":183,"var":"htmlDiv","innerHTML":"我很好的啊啊啊 啊啊啊","height":17,"runtime":"laya.html.dom.HTMLDivElement"},"compId":4}]},{"type":"Image","props":{"y":35,"x":900,"skin":"ui/common_ex/yuanjiao.png","scaleY":-1,"scaleX":-1},"compId":8}]}],"loadList":["ui/common_ex/tuceng.png","ui/common_ex/yuanjiao.png"],"loadList3D":[]};	
		

		class InsidePageUI extends View{
			constructor (){
				super();
				//this.masking=null;
				//this.confirmBtn=null;
				//this.insideBox=null;
				//this.contentPanel=null;
				//this.content=null;
				//this.waitAni=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(InsidePageUI.uiView);
			}
		}

		ui.abbey.InsidePageUI=Laya.InsidePageUI=InsidePageUI;
		InsidePageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-290,"x":-310,"width":1900,"skin":"ui/common_ex/jl_bg.png","height":1300,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":12},{"type":"Image","props":{"y":0,"x":0,"width":1280,"var":"masking","skin":"ui/common_ex/jl_bg.png","height":720,"alpha":0,"sizeGrid":"22,22,22,22"},"compId":17},{"type":"Button","props":{"y":3,"x":1,"var":"confirmBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":9},{"type":"Box","props":{"y":139,"x":310,"width":639,"var":"insideBox","height":419},"compId":16,"child":[{"type":"Image","props":{"y":19,"width":640,"skin":"ui/load/bg_index3.png","height":400,"sizeGrid":"50,50,50,50"},"compId":2},{"type":"Image","props":{"y":24,"x":0,"width":640,"skin":"ui/load/head_2.png","height":73,"sizeGrid":"0,200,0,200"},"compId":3},{"type":"Image","props":{"y":0,"x":243,"skin":"ui/load/gongg.png"},"compId":4},{"type":"Panel","props":{"y":91,"x":65,"width":510,"var":"contentPanel","height":250},"compId":13,"child":[{"type":"HTMLDivElement","props":{"y":0,"x":0,"width":510,"var":"content","height":0,"runtime":"laya.html.dom.HTMLDivElement"},"compId":14}]},{"type":"Animation","props":{"y":221,"x":320,"var":"waitAni","source":"abbey/wait.ani"},"compId":15}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/quit.png","ui/load/bg_index3.png","ui/load/head_2.png","ui/load/gongg.png","abbey/wait.ani"],"loadList3D":[]};	
		

		class LevelUpPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.coinImg=null;
				//this.confimBtn=null;
				//this.beiImg=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(LevelUpPageUI.uiView);
			}
		}

		ui.abbey.LevelUpPageUI=Laya.LevelUpPageUI=LevelUpPageUI;
		LevelUpPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-240,"x":-310,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":2},{"type":"Image","props":{"y":330,"x":640,"var":"coinImg","anchorY":0.5,"anchorX":0.5},"compId":5},{"type":"Box","props":{"y":586,"x":604,"var":"confimBtn"},"compId":8,"child":[{"type":"Button","props":{"y":0,"x":0,"width":180,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","scaleY":0.4,"scaleX":0.5,"height":107},"compId":6},{"type":"Image","props":{"y":9,"x":23,"skin":"ui/common_ex/t_accept.png"},"compId":7}]},{"type":"Image","props":{"y":500,"x":640,"var":"beiImg","skin":"ui/common_ex/shengji_heikuai.png","height":140,"anchorY":0.5,"anchorX":0.5,"sizeGrid":"24,24,24,24"},"compId":9}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/btn_yellow.png","ui/common_ex/t_accept.png","ui/common_ex/shengji_heikuai.png"],"loadList3D":[]};	
		

		class LoadPageUI extends View{
			constructor (){
				super();
				//this.bg_img=null;
				//this.progressBar=null;
				//this.loadTxt=null;
				//this.game_version=null;
				//this.sideobox=null;
				//this.contenturl=null;
				//this.confirmBtn=null;
				//this.quitBtn=null;
				//this.conTxt=null;
				//this.linkBox=null;
				//this.groupBox=null;
				//this.linkLabel=null;
				//this.startGameBtn=null;
				//this.linkCheck=null;
				//this.gameLable=null;
				//this.tipText=null;
				//this.tishiBox=null;
				//this.tishiBtn=null;
				//this.linkPanel=null;
				//this.gamePanel=null;
				//this.waitBox=null;
				//this.waitImage=null;
				//this.closeWeb=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(LoadPageUI.uiView);
			}
		}

		ui.abbey.LoadPageUI=Laya.LoadPageUI=LoadPageUI;
		LoadPageUI.uiView={"type":"View","props":{"y":0,"x":0,"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":0,"x":0,"var":"bg_img","skin":"ui/load/load.png"},"compId":3},{"type":"ProgressBar","props":{"width":900,"var":"progressBar","skin":"ui/load/progress.png","centerX":0,"bottom":80,"anchorX":0.5},"compId":2,"child":[{"type":"Label","props":{"y":-46,"width":900,"var":"loadTxt","height":32,"fontSize":22,"color":"#42baf8","centerX":0.5,"align":"center"},"compId":21}]},{"type":"Label","props":{"width":1080,"var":"game_version","text":"本网络游戏适合6周岁以上用户使用；请您确定已如实进行实名注册；为了您的健康，请合理控制游戏时间。\\n抵制不良游戏，拒绝盗版游戏。 注意自我保护，谨防受骗上当。 适度游戏益脑，沉迷游戏伤身。 合理安排时间，享受健康生活。","name":"game_version","fontSize":16,"color":"#ffffff","centerX":0,"bottom":14,"align":"center"},"compId":23},{"type":"Image","props":{"centerY":50,"centerX":0},"compId":26,"child":[{"type":"SkeletonPlayer","props":{"y":0,"x":0,"url":"spine/loading/YX_Loading.sk","runtime":"laya.ani.bone.Skeleton"},"compId":24}]},{"type":"Box","props":{"y":149,"x":320,"width":640,"var":"sideobox","centerY":0,"centerX":0},"compId":17,"child":[{"type":"Image","props":{"y":23,"width":640,"skin":"ui/load/bg_index3.png","height":400,"sizeGrid":"50,50,50,50"},"compId":6},{"type":"Image","props":{"y":7,"x":0,"width":640,"skin":"ui/load/head_2.png","sizeGrid":"0,200,0,200"},"compId":20},{"type":"Image","props":{"y":-25,"x":248,"skin":"ui/load/gongg.png"},"compId":19},{"type":"Label","props":{"y":300,"x":325,"width":560,"var":"contenturl","text":"http://www.597w.com/","height":24,"fontSize":20,"color":"#e85e02","anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":12},{"type":"Button","props":{"y":330,"x":260,"var":"confirmBtn","stateNum":2,"skin":"ui/load/btn_green.png"},"compId":13,"child":[{"type":"Image","props":{"y":7,"x":52,"skin":"ui/load/confirm.png"},"compId":18}]},{"type":"Button","props":{"y":329,"x":261,"visible":false,"var":"quitBtn","stateNum":2,"skin":"ui/load/btn_blue.png"},"compId":29,"child":[{"type":"Image","props":{"y":7,"x":52,"skin":"ui/load/tuichu.png"},"compId":30}]},{"type":"Label","props":{"y":75,"x":325,"wordWrap":true,"width":560,"var":"conTxt","text":"                              欢迎来到集结号捕鱼\\n\\n集结号感谢所有玩家的支持和配合，祝您游戏愉快！\\n如果在游戏中遇到任何问题，欢迎您咨询客服寻求帮助。\\n您不仅可以通过公众号平台登录游戏，还可以点击下方网页链接进行游戏。\\n\\n客服联系方式：XXXXXX","leading":3,"height":200,"fontSize":22,"color":"#0e5665","anchorX":0.5,"align":"left"},"compId":15}]},{"type":"Box","props":{"width":639,"visible":false,"var":"linkBox","height":280,"centerY":0,"centerX":0},"compId":31,"child":[{"type":"Image","props":{"y":23,"x":64,"width":510,"skin":"ui/load/bg_index3.png","height":257,"sizeGrid":"50,50,50,50"},"compId":32},{"type":"Image","props":{"y":7,"x":57,"width":524,"skin":"ui/load/head_2.png","height":58,"sizeGrid":"0,200,0,200"},"compId":33},{"type":"Box","props":{"y":75,"x":117,"width":407,"var":"groupBox","height":171},"compId":64,"child":[{"type":"Label","props":{"y":73,"x":185,"width":109,"var":"linkLabel","underline":true,"text":"\"隐私协议\"","height":24,"fontSize":22,"color":"#e85e02","align":"center"},"compId":35},{"type":"Button","props":{"y":125,"x":127,"var":"startGameBtn","stateNum":2,"skin":"ui/load/btn_green.png"},"compId":36,"child":[{"type":"Label","props":{"y":10,"x":25,"valign":"middle","text":"开始游戏","strokeColor":"#679E6A","stroke":2,"fontSize":25,"color":"#ffffff","align":"center"},"compId":41}]},{"type":"Label","props":{"x":202,"wordWrap":true,"width":345,"text":"       欢迎来到捕鱼游戏，请阅读并确认以下内容：","leading":3,"height":60,"fontSize":25,"color":"#0e5665","anchorX":0.5,"align":"left"},"compId":40},{"type":"CheckBox","props":{"y":75,"var":"linkCheck","skin":"ui/load/checkbox.png","scaleY":1.7,"scaleX":1.7,"labelSize":13,"labelColors":"#0e5665","label":"我已阅读并接受"},"compId":43},{"type":"Label","props":{"y":73,"x":302,"width":109,"var":"gameLable","underline":true,"text":"\"用户协议\"","height":24,"fontSize":22,"color":"#e85e02","align":"center"},"compId":50}]}]},{"type":"Text","props":{"y":39,"x":36,"width":87,"var":"tipText","text":"text","height":21,"runtime":"laya.display.Text"},"compId":27},{"type":"Box","props":{"y":192,"x":380,"width":519,"visible":false,"var":"tishiBox","height":336,"centerY":0,"centerX":0},"compId":51,"child":[{"type":"Image","props":{"y":16,"x":-11,"width":540,"skin":"ui/load/bg_index3.png","height":325,"sizeGrid":"50,50,50,50"},"compId":52},{"type":"Image","props":{"y":0,"x":-16,"width":550,"skin":"ui/load/head_2.png","height":72,"sizeGrid":"0,200,0,200"},"compId":53},{"type":"Button","props":{"y":235,"x":184,"var":"tishiBtn","stateNum":2,"skin":"ui/load/btn_green.png"},"compId":54,"child":[{"type":"Sprite","props":{"y":8,"x":48,"texture":"ui/load/confirm.png"},"compId":56}]},{"type":"Sprite","props":{"y":-25,"x":183,"texture":"ui/load/title_prompt.png"},"compId":57},{"type":"Label","props":{"y":138,"x":259,"wordWrap":true,"width":410,"text":"温馨提示：请勾选同意下方的“用户协议”和“隐私协议”，即可进入游戏哦","leading":3,"height":60,"fontSize":25,"color":"#0e5665","anchorX":0.5,"align":"left"},"compId":58}]},{"type":"Panel","props":{"width":900,"var":"linkPanel","height":500,"centerY":0,"centerX":0},"compId":60},{"type":"Panel","props":{"y":110,"x":190,"width":900,"var":"gamePanel","height":500,"centerY":0,"centerX":0},"compId":61},{"type":"Box","props":{"var":"waitBox","centerY":0,"centerX":0},"compId":28,"child":[{"type":"Label","props":{"y":56,"x":36,"text":"加载中。。。","fontSize":24,"color":"#0e5665"},"compId":62},{"type":"Image","props":{"y":0,"x":0,"var":"waitImage","skin":"wxlocal/loding.png","centerY":-20,"centerX":0},"compId":63}]},{"type":"Button","props":{"x":1029,"visible":false,"var":"closeWeb","top":50,"stateNum":2,"skin":"ui/load/btn_blue.png","right":100},"compId":45,"child":[{"type":"Image","props":{"y":11,"x":53,"skin":"ui/load/tuichu.png"},"compId":47}]}],"loadList":["ui/load/load.png","ui/load/progress.png","spine/loading/YX_Loading.sk","ui/load/bg_index3.png","ui/load/head_2.png","ui/load/gongg.png","ui/load/btn_green.png","ui/load/confirm.png","ui/load/btn_blue.png","ui/load/tuichu.png","ui/load/checkbox.png","ui/load/title_prompt.png","wxlocal/loding.png"],"loadList3D":[]};	
		

		class LoginUI extends View{
			constructor (){
				super();
				//this.name_input=null;
				//this.btn_login=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(LoginUI.uiView);
			}
		}

		ui.abbey.LoginUI=Laya.LoginUI=LoginUI;
		LoginUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"width":598,"skin":"ui/login/bg.png","height":405,"centerY":0,"centerX":0},"compId":2},{"type":"Image","props":{"width":242,"skin":"ui/login/laya_monkey.png","height":321,"centerY":0,"centerX":-150},"compId":3},{"type":"Label","props":{"y":171,"x":474,"width":258,"text":"Abbey","styleSkin":"login/label.png","height":49,"fontSize":30,"color":"#f60a06","bold":true,"align":"center"},"compId":4},{"type":"TextInput","props":{"var":"name_input","skin":"ui/login/textinput.png","centerY":-10,"centerX":80},"compId":5},{"type":"Label","props":{"text":"用 户 名：","styleSkin":"login/label.png","fontSize":20,"centerY":-50,"centerX":60},"compId":6},{"type":"Button","props":{"width":101,"var":"btn_login","skin":"ui/login/button.png","label":"登陆","height":35,"centerY":30,"centerX":65},"compId":7}],"loadList":["ui/login/bg.png","ui/login/laya_monkey.png","login/label.png","ui/login/textinput.png","ui/login/button.png"],"loadList3D":[]};	
		

		class MainPageUI extends View{
			constructor (){
				super();
				//this.ani1=null;
				//this.bg_img=null;
				//this.pathBtn=null;
				//this.settingBtn=null;
				//this.playimg=null;
				//this.levelCount=null;
				//this.nickname=null;
				//this.user_id=null;
				//this.btnCopy=null;
				//this.shopBtn=null;
				//this.exchangeBtn=null;
				//this.registerBtn=null;
				//this.levelList=null;
				//this.scrollBar=null;
				//this.month_icon=null;
				//this.packBtn=null;
				//this.ranking_btn=null;
				//this.bankBtn=null;
				//this.activityBtn=null;
				//this.activity_count_down=null;
				//this.firstChargeBtn=null;
				//this.shareBtn=null;
				//this.friendBtn=null;
				//this.shortGiftBtn=null;
				//this.useTicketBtn=null;
				//this.redPackBtn=null;
				//this.subscriptionBtn=null;
				//this.certificationBtn=null;
				//this.wxInfoBtn=null;
				//this.diamond_box=null;
				//this.diamondCount=null;
				//this.addDiamondBtn=null;
				//this.goldBox=null;
				//this.goldCount=null;
				//this.addCoinBtn=null;
				//this.miniBox=null;
				//this.miniCount=null;
				//this.addMiniBtn=null;
				//this.collectGift_box=null;
				//this.collectBtn=null;
				//this.mini_btn=null;
				//this.mini_name_bg=null;
				//this.mini_name=null;
				//this.maskNovice=null;
				//this.noviceBox=null;
				//this.novicePlay=null;
				//this.noviceNotPlay=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(MainPageUI.uiView);
			}
		}

		ui.abbey.MainPageUI=Laya.MainPageUI=MainPageUI;
		MainPageUI.uiView={"type":"View","props":{"width":1280,"visible":true,"height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"y":0,"x":0,"var":"bg_img","skin":"ui/mainPage/bg.png","cacheAs":"bitmap"},"compId":33},{"type":"Image","props":{"y":194,"x":734,"skin":"ui/mainPage/coll4.png"},"compId":87},{"type":"Image","props":{"y":138,"x":340,"skin":"ui/mainPage/coll3.png"},"compId":86},{"type":"Image","props":{"y":2,"x":-1,"skin":"ui/mainPage/coll2.png"},"compId":85},{"type":"Image","props":{"y":7,"x":761,"skin":"ui/mainPage/coll1.png"},"compId":84},{"type":"Button","props":{"y":648,"x":27,"width":157,"var":"pathBtn","stateNum":2,"skin":"ui/mainPage/coin_plus.png","labelSize":35,"label":"路径编辑","height":56},"compId":16},{"type":"Button","props":{"var":"settingBtn","stateNum":1,"skin":"ui/mainPage/setting.png","left":10,"bottom":20,"anchorY":0.5,"anchorX":0.5},"compId":67},{"type":"Box","props":{"top":4,"right":1020,"name":"headImg","mouseThrough":true,"left":5,"height":86},"compId":41,"child":[{"type":"Image","props":{"y":2,"x":75,"width":184,"skin":"ui/mainPage/name_bg.png","height":41},"compId":59},{"type":"Image","props":{"y":45,"x":75,"width":183,"skin":"ui/mainPage/name_bg.png","height":41},"compId":122},{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png"},"compId":42},{"type":"Image","props":{"y":2,"x":2,"width":80,"var":"playimg","skin":"ui/common/nan.png","height":80},"compId":43},{"type":"Image","props":{"y":2,"x":1,"skin":"ui/common_ex/touxiang2.png","scaleY":0.98,"scaleX":0.98},"compId":88},{"type":"Image","props":{"y":59,"x":3,"skin":"ui/mainPage/level_bg.png"},"compId":91},{"type":"Label","props":{"y":60,"x":5,"width":70,"var":"levelCount","text":"lv.12","height":23,"fontSize":18,"color":"#ffffff","bold":true,"align":"right"},"compId":56},{"type":"Label","props":{"y":10,"x":83,"width":151,"var":"nickname","text":"杭州鱼王","height":26,"fontSize":22,"color":"#f6eeee","bold":true,"align":"left"},"compId":58},{"type":"Label","props":{"y":56,"x":83,"width":152,"var":"user_id","text":"请绑定银行","height":20,"fontSize":20,"color":"#f6eeee","bold":true,"align":"left"},"compId":89},{"type":"Button","props":{"y":55,"x":258,"var":"btnCopy","stateNum":2,"skin":"ui/mainPage/btn_fuzhi.png","scaleY":0.8,"scaleX":0.8},"compId":144}]},{"type":"Button","props":{"var":"shopBtn","stateNum":1,"skin":"ui/mainPage/icon_shop.png","right":20,"bottom":10,"anchorY":0.5,"anchorX":0.5},"compId":69},{"type":"Button","props":{"visible":true,"var":"exchangeBtn","stateNum":1,"skin":"ui/mainPage/icon_exchange.png","right":280,"bottom":10,"anchorY":0.5,"anchorX":0.5},"compId":51},{"type":"Button","props":{"var":"registerBtn","stateNum":1,"skin":"ui/mainPage/icon_sign.png","right":410,"bottom":10,"anchorY":0.5,"anchorX":0.5},"compId":50},{"type":"List","props":{"x":0,"width":1280,"var":"levelList","spaceX":-250,"repeatX":4,"height":476,"centerY":-20,"anchorY":0.5},"compId":47,"child":[{"type":"Box","props":{"x":200,"width":800,"renderType":"render","name":"render","height":400,"centerY":-20},"compId":48,"child":[{"type":"Image","props":{"y":238,"x":213,"width":380,"name":"sp","height":380,"anchorY":0.5,"anchorX":0.5},"compId":79},{"type":"Image","props":{"y":189,"x":76,"visible":false,"skin":"ui/mainPage/unlock.png","name":"unlockImageBg"},"compId":64},{"type":"FontClip","props":{"y":272,"x":204,"visible":false,"value":"1000倍炮解锁","skin":"ui/mainPage/unlock1.png","sheet":"解锁倍炮0123456789","name":"unlockTxt","anchorX":0.5},"compId":72},{"type":"Image","props":{"y":64,"x":356,"name":"activityImg"},"compId":146}]},{"type":"HScrollBar","props":{"var":"scrollBar","name":"scrollBar"},"compId":63}]},{"type":"Button","props":{"var":"month_icon","stateNum":1,"skin":"ui/mainPage/icon_yueka.png","right":150,"bottom":10,"anchorY":0.5,"anchorX":0.5},"compId":81},{"type":"Button","props":{"var":"packBtn","stateNum":1,"skin":"ui/mainPage/icon_pack.png","right":540,"bottom":10,"anchorY":0.5,"anchorX":0.5},"compId":92},{"type":"Button","props":{"visible":false,"var":"ranking_btn","stateNum":1,"skin":"ui/mainPage/icon_ranking.png","right":283,"bottom":-245,"anchorY":0.5,"anchorX":0.5},"compId":71},{"type":"Button","props":{"var":"bankBtn","stateNum":1,"skin":"ui/mainPage/icon_bank.png","right":670,"bottom":10,"anchorY":0.5,"anchorX":0.5},"compId":98},{"type":"Button","props":{"visible":false,"var":"activityBtn","top":110,"stateNum":2,"skin":"ui/mainPage/icon_bomb.png","right":50},"compId":99},{"type":"Label","props":{"width":85,"visible":false,"var":"activity_count_down","top":208,"right":65,"height":30,"fontSize":18,"color":"#ffffff","align":"center"},"compId":100},{"type":"Button","props":{"visible":false,"var":"firstChargeBtn","stateNum":1,"skin":"ui/mainPage/icon_first_charge.png","right":800,"bottom":10,"anchorY":0.5,"anchorX":0.5},"compId":104},{"type":"Button","props":{"width":100,"visible":false,"var":"shareBtn","top":140,"stateNum":1,"skin":"ui/mainPage/icon_share.png","left":70,"height":110,"anchorY":0.5,"anchorX":0.5},"compId":105},{"type":"Button","props":{"width":100,"visible":false,"var":"friendBtn","stateNum":1,"skin":"ui/mainPage/btn_hy.png","right":1060,"height":110,"bottom":10},"compId":162},{"type":"Button","props":{"var":"shortGiftBtn","top":140,"stateNum":1,"skin":"ui/mainPage/btn_m.png","left":173,"anchorY":0.5,"anchorX":0.5},"compId":156},{"type":"Button","props":{"var":"useTicketBtn","top":100,"stateNum":1,"skin":"ui/mainPage/icon_fuli.png","right":60,"anchorY":0.5,"anchorX":0.5},"compId":145},{"type":"Button","props":{"y":265,"x":1170,"var":"redPackBtn","top":210,"stateNum":1,"skin":"ui/mainPage/icon_redpack.png","right":60,"anchorY":0.5,"anchorX":0.5},"compId":161},{"type":"Button","props":{"var":"subscriptionBtn","stateNum":1,"skin":"ui/mainPage/icon_gongzhongh.png","right":930,"bottom":10,"anchorY":0.5,"anchorX":0.5},"compId":124},{"type":"Button","props":{"width":90,"visible":false,"var":"certificationBtn","top":95,"stateNum":2,"skin":"ui/common_ex/btn_green.png","left":80,"hitTestPrior":true,"height":40},"compId":157,"child":[{"type":"Label","props":{"width":63,"text":"实名认证","height":25,"fontSize":16,"font":"Microsoft YaHei","color":"#ffffff","centerY":0,"centerX":0,"bold":true},"compId":158}]},{"type":"Button","props":{"width":90,"visible":false,"var":"wxInfoBtn","top":95,"stateNum":2,"skin":"ui/common_ex/btn_green.png","left":190,"hitTestPrior":true,"height":40},"compId":159,"child":[{"type":"Label","props":{"width":63,"text":"微信授权","height":25,"fontSize":16,"font":"Microsoft YaHei","color":"#ffffff","centerY":0,"centerX":0,"bold":true},"compId":160}]},{"type":"Box","props":{"y":10,"x":760,"width":275,"var":"diamond_box","top":10,"name":"diamond_box","left":760},"compId":127,"child":[{"type":"Image","props":{"y":0,"x":30,"width":220,"skin":"ui/common_ex/coin_bg.png","height":45,"sizeGrid":"18,32,16,32"},"compId":137},{"type":"Label","props":{"y":9,"x":227,"width":200,"var":"diamondCount","text":"1234567890","strokeColor":"#0a0202","stroke":3,"fontSize":28,"color":"#f4ebeb","bold":true,"anchorX":1,"align":"right"},"compId":138},{"type":"Image","props":{"y":-5,"x":12,"skin":"ui/common_ex/unit_diamond.png"},"compId":139},{"type":"Button","props":{"y":0,"x":225,"var":"addDiamondBtn","stateNum":2,"skin":"ui/mainPage/coin_plus.png"},"compId":140}]},{"type":"Box","props":{"y":10,"x":505,"width":270,"var":"goldBox","top":10,"name":"goldBox","left":505,"height":48},"compId":126,"child":[{"type":"Image","props":{"y":0,"x":30,"width":220,"skin":"ui/common_ex/coin_bg.png","height":45,"sizeGrid":"18,32,16,32"},"compId":133},{"type":"Label","props":{"y":9,"x":229,"width":176,"var":"goldCount","text":"1234567890","strokeColor":"#0a0202","stroke":3,"height":28,"fontSize":28,"color":"#f4ebeb","bold":true,"anchorX":1,"align":"right"},"compId":134},{"type":"Image","props":{"y":-4,"x":12,"skin":"ui/common_ex/unit_coin.png"},"compId":135},{"type":"Button","props":{"y":0,"x":225,"var":"addCoinBtn","stateNum":2,"skin":"ui/mainPage/coin_plus.png"},"compId":136}]},{"type":"Box","props":{"y":10,"x":245,"width":270,"var":"miniBox","top":10,"name":"miniBox","left":245,"height":48},"compId":125,"child":[{"type":"Image","props":{"y":0,"x":30,"width":220,"skin":"ui/common_ex/coin_bg.png","height":45,"sizeGrid":"18,32,16,32"},"compId":129},{"type":"Label","props":{"y":10,"x":228,"width":160,"var":"miniCount","text":"1234567890","strokeColor":"#0a0202","stroke":3,"fontSize":28,"color":"#f4ebeb","bold":true,"anchorX":1,"align":"right"},"compId":130},{"type":"Image","props":{"y":-5,"x":12,"skin":"ui/common_ex/unit_jjb.png"},"compId":131},{"type":"Button","props":{"y":-1,"x":223,"visible":true,"var":"addMiniBtn","stateNum":2,"skin":"ui/mainPage/coin_plus.png"},"compId":132}]},{"type":"Box","props":{"y":0,"x":1092,"var":"collectGift_box"},"compId":151,"child":[{"type":"Image","props":{"y":0,"x":15,"width":10,"top":0,"skin":"ui/mainPage/gift_line.png","skewX":15,"height":217},"compId":149},{"type":"Image","props":{"y":157.5,"x":-22.5,"var":"collectBtn","skin":"ui/mainPage/gift_icon.png","skewY":-15,"skewX":15},"compId":150}]},{"type":"Image","props":{"width":85,"visible":false,"var":"mini_btn","top":273,"left":78,"height":85},"compId":152,"child":[{"type":"Label","props":{"y":88,"x":-20,"width":125,"var":"mini_name_bg","text":"钩飞大战","height":18,"fontSize":18,"color":"#000000","bold":true,"align":"center"},"compId":154},{"type":"Label","props":{"y":86,"x":-20,"width":125,"var":"mini_name","text":"钩飞大战","stroke":1,"fontSize":18,"color":"#ffffff","bold":true,"align":"center"},"compId":153}]},{"type":"Image","props":{"y":0,"x":0,"width":1280,"visible":false,"var":"maskNovice","skin":"ui/common_ex/jl_bg.png","mouseThrough":false,"mouseEnabled":true,"height":720,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":121},{"type":"Box","props":{"y":183,"x":215,"visible":false,"var":"noviceBox","centerY":0,"centerX":0},"compId":120,"child":[{"type":"Image","props":{"y":35,"width":850,"skin":"ui/mainPage/fishandpaopao.png","sizeGrid":"0,200,0,200"},"compId":109},{"type":"Image","props":{"x":211,"skin":"ui/mainPage/title_xinshou.png"},"compId":110},{"type":"Label","props":{"y":121,"x":255,"text":"欢迎来到集结号海底世界！","fontSize":30,"color":"#baeefd","bold":false},"compId":113},{"type":"Label","props":{"y":180,"x":238,"text":"你以前是否玩过捕鱼游戏呢？","fontSize":30,"color":"#baeefd","bold":false},"compId":114},{"type":"Button","props":{"y":255,"x":160,"var":"novicePlay","stateNum":1,"skin":"ui/mainPage/wanguo.png"},"compId":117},{"type":"Button","props":{"y":255,"x":500,"var":"noviceNotPlay","stateNum":1,"skin":"ui/mainPage/meiwanguo.png"},"compId":119}]}],"animations":[{"nodes":[{"target":150,"keyframes":{"y":[{"value":150,"tweenMethod":"linearNone","tween":true,"target":150,"key":"y","index":0},{"value":100,"tweenMethod":"linearNone","tween":true,"target":150,"key":"y","index":20},{"value":100,"tweenMethod":"linearNone","tween":true,"target":150,"key":"y","index":24},{"value":150,"tweenMethod":"linearNone","tween":true,"target":150,"key":"y","index":42},{"value":160,"tweenMethod":"linearNone","tween":true,"target":150,"key":"y","index":60},{"value":160,"tweenMethod":"linearNone","tween":true,"target":150,"key":"y","index":64},{"value":150,"tweenMethod":"linearNone","tween":true,"target":150,"key":"y","index":84}],"x":[{"value":-62,"tweenMethod":"linearNone","tween":true,"target":150,"key":"x","index":0},{"value":-103,"tweenMethod":"linearNone","tween":true,"target":150,"key":"x","index":20},{"value":-103,"tweenMethod":"linearNone","tween":true,"target":150,"key":"x","index":24},{"value":-62,"tweenMethod":"linearNone","tween":true,"target":150,"key":"x","index":42},{"value":-10,"tweenMethod":"linearNone","tween":true,"target":150,"key":"x","index":60},{"value":-10,"tweenMethod":"linearNone","tween":true,"target":150,"key":"x","index":64},{"value":-60,"tweenMethod":"linearNone","tween":true,"target":150,"key":"x","index":84}],"var":[{"value":"collectBtn","tweenMethod":"linearNone","tween":false,"target":150,"key":"var","index":0},{"value":"collectBtn","tweenMethod":"linearNone","tween":false,"target":150,"key":"var","index":84}],"skewY":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":150,"key":"skewY","index":0},{"value":20,"tweenMethod":"linearNone","tween":true,"target":150,"key":"skewY","index":20},{"value":20,"tweenMethod":"linearNone","tween":true,"target":150,"key":"skewY","index":24},{"value":-20,"tweenMethod":"linearNone","tween":true,"target":150,"key":"skewY","index":60},{"value":-20,"tweenMethod":"linearNone","tween":true,"target":150,"key":"skewY","index":64},{"value":0,"tweenMethod":"linearNone","tween":true,"target":150,"key":"skewY","index":84}],"skewX":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":150,"key":"skewX","index":0},{"value":-20,"tweenMethod":"linearNone","tween":true,"target":150,"key":"skewX","index":20},{"value":-20,"tweenMethod":"linearNone","tween":true,"target":150,"key":"skewX","index":24},{"value":20,"tweenMethod":"linearNone","tween":true,"target":150,"key":"skewX","index":60},{"value":20,"tweenMethod":"linearNone","tween":true,"target":150,"key":"skewX","index":64},{"value":0,"tweenMethod":"linearNone","tween":true,"target":150,"key":"skewX","index":84}]}},{"target":149,"keyframes":{"y":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":149,"key":"y","index":0},{"value":0,"tweenMethod":"linearNone","tween":true,"target":149,"key":"y","index":60}],"x":[{"value":15,"tweenMethod":"linearNone","tween":true,"target":149,"key":"x","index":0},{"value":15,"tweenMethod":"linearNone","tween":true,"target":149,"key":"x","index":20},{"value":15,"tweenMethod":"linearNone","tween":true,"target":149,"key":"x","index":24},{"value":15,"tweenMethod":"linearNone","tween":true,"target":149,"key":"x","index":42},{"value":15,"tweenMethod":"linearNone","tween":true,"target":149,"key":"x","index":60},{"value":15,"tweenMethod":"linearNone","tween":true,"target":149,"key":"x","index":64},{"value":15,"tweenMethod":"linearNone","tween":true,"target":149,"key":"x","index":84}],"top":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":149,"key":"top","index":60}],"skin":[{"value":"ui/mainPage/gift_line.png","tweenMethod":"linearNone","tween":false,"target":149,"key":"skin","index":0},{"value":"ui/mainPage/gift_line.png","tweenMethod":"linearNone","tween":false,"target":149,"key":"skin","index":84}],"skewX":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":149,"key":"skewX","index":0},{"value":-20,"tweenMethod":"linearNone","tween":true,"target":149,"key":"skewX","index":20},{"value":-20,"tweenMethod":"linearNone","tween":true,"target":149,"key":"skewX","index":24},{"value":0,"tweenMethod":"linearNone","tween":true,"target":149,"key":"skewX","index":42},{"value":20,"tweenMethod":"linearNone","tween":true,"target":149,"key":"skewX","index":60},{"value":20,"tweenMethod":"linearNone","tween":true,"target":149,"key":"skewX","index":64},{"value":0,"tweenMethod":"linearNone","tween":true,"target":149,"key":"skewX","index":84}]}}],"name":"ani1","id":1,"frameRate":18,"action":2}],"loadList":["ui/mainPage/bg.png","ui/mainPage/coll4.png","ui/mainPage/coll3.png","ui/mainPage/coll2.png","ui/mainPage/coll1.png","ui/mainPage/coin_plus.png","ui/mainPage/setting.png","ui/mainPage/name_bg.png","ui/common_ex/touxiang.png","ui/common/nan.png","ui/common_ex/touxiang2.png","ui/mainPage/level_bg.png","ui/mainPage/btn_fuzhi.png","ui/mainPage/icon_shop.png","ui/mainPage/icon_exchange.png","ui/mainPage/icon_sign.png","ui/mainPage/unlock.png","ui/mainPage/unlock1.png","ui/mainPage/icon_yueka.png","ui/mainPage/icon_pack.png","ui/mainPage/icon_ranking.png","ui/mainPage/icon_bank.png","ui/mainPage/icon_bomb.png","ui/mainPage/icon_first_charge.png","ui/mainPage/icon_share.png","ui/mainPage/btn_hy.png","ui/mainPage/btn_m.png","ui/mainPage/icon_fuli.png","ui/mainPage/icon_redpack.png","ui/mainPage/icon_gongzhongh.png","ui/common_ex/btn_green.png","ui/common_ex/coin_bg.png","ui/common_ex/unit_diamond.png","ui/common_ex/unit_coin.png","ui/common_ex/unit_jjb.png","ui/mainPage/gift_line.png","ui/mainPage/gift_icon.png","ui/common_ex/jl_bg.png","ui/mainPage/fishandpaopao.png","ui/mainPage/title_xinshou.png","ui/mainPage/wanguo.png","ui/mainPage/meiwanguo.png"],"loadList3D":[]};	
		

		class MaskUI extends View{
			constructor(){
				super();
			}
			createChildren(){
				super.createChildren();
				this.createView(MaskUI.uiView);
			}
		}

		ui.abbey.MaskUI=Laya.MaskUI=MaskUI;
		MaskUI.uiView={"type":"View","props":{"width":1280,"mouseThrough":true,"height":720},"compId":1,"loadList":[],"loadList3D":[]};	
		

		class MatchPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.list1_bg=null;
				//this.list1=null;
				//this.match_name=null;
				//this.tab_box=null;
				//this.tab1=null;
				//this.tab2=null;
				//this.tab3=null;
				//this.tab4=null;
				//this.tab5=null;
				//this.joinBox=null;
				//this.joinBtn=null;
				//this.roomInput=null;
				//this.rank_box=null;
				//this.match_title=null;
				//this.daily_box=null;
				//this.myrank=null;
				//this.list_rank=null;
				//this.challenge_box=null;
				//this.list_rank2=null;
				//this.rule_btn=null;
				//this.rank_sign_box=null;
				//this.rankQuitBtn=null;
				//this.wait_ani=null;
				//this.rule_box=null;
				//this.rule_match_type=null;
				//this.rule_match_time=null;
				//this.rule_match_long=null;
				//this.rule_match_battery=null;
				//this.rule_match_desc=null;
				//this.ruleQuitBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(MatchPageUI.uiView);
			}
		}

		ui.abbey.MatchPageUI=Laya.MatchPageUI=MatchPageUI;
		MatchPageUI.uiView={"type":"View","props":{"width":1280,"name":"reward","height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"y":-290,"x":-310,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1300,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":228},{"type":"Image","props":{"y":77,"x":149,"width":980,"skin":"ui/common_ex/bg_index0.png","height":617,"anchorX":0,"sizeGrid":"50,50,50,50"},"compId":116},{"type":"Image","props":{"y":103,"x":640,"width":932,"skin":"ui/common_ex/bg_index1.png","height":570,"anchorX":0.5,"sizeGrid":"30,30,30,30"},"compId":117},{"type":"Image","props":{"y":88,"x":150,"width":980,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":119},{"type":"Button","props":{"var":"quitBtn","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":3},"compId":120},{"type":"Image","props":{"y":188,"x":350,"width":750,"var":"list1_bg","skin":"ui/common_ex/bg_index2.png","height":440,"sizeGrid":"40,40,40,40"},"compId":180},{"type":"List","props":{"y":200,"x":363,"width":720,"var":"list1","spaceY":10,"renderType":"render","height":320},"compId":159,"child":[{"type":"Box","props":{"x":0,"width":720,"name":"render","height":100},"compId":161,"child":[{"type":"Image","props":{"y":0,"x":0,"width":720,"skin":"ui/common_ex/task.png","name":"bg","height":100,"sizeGrid":"30,30,30,30"},"compId":229},{"type":"Image","props":{"y":41,"x":47,"skin":"ui/match/yuan.png","anchorY":0.5,"anchorX":0.5},"compId":396},{"type":"Image","props":{"y":9,"x":125,"width":200,"skin":"ui/match/ditiao1.png","sizeGrid":"12,12,12,12"},"compId":399},{"type":"Image","props":{"y":44,"x":48,"width":60,"skin":"ui/common/coin2.png","name":"match_head_icon","height":60,"anchorY":0.5,"anchorX":0.5},"compId":400},{"type":"List","props":{"spaceX":-10,"scaleY":0.8,"scaleX":0.8,"repeatY":1,"repeatX":2,"renderType":"render","name":"list_reward","centerY":8,"centerX":100},"compId":275,"child":[{"type":"Box","props":{"y":0,"x":0,"width":100,"scaleY":0.8,"scaleX":0.8,"name":"render","height":100},"compId":276,"child":[{"type":"Image","props":{"y":12,"x":12,"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":398},{"type":"Image","props":{"y":60,"x":61,"skin":"ui/common/coin2.png","scaleY":0.9,"scaleX":0.9,"name":"reward_type","anchorY":0.5,"anchorX":0.5},"compId":278},{"type":"Label","props":{"y":80,"x":16,"width":90,"text":"x 999","name":"reward_text","fontSize":24,"color":"#ffffff","align":"center"},"compId":280}]}]},{"type":"Image","props":{"y":46,"x":150,"skin":"ui/match/shujian.png","name":"clock"},"compId":401},{"type":"Button","props":{"y":23,"x":563,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","scaleY":0.8,"scaleX":0.8,"name":"join_btn"},"compId":326},{"type":"Image","props":{"y":42,"x":570,"width":30,"skin":"ui/common_ex/unit_coin.png","name":"sign_price_unit","height":30,"anchorY":0.5},"compId":330},{"type":"FontClip","props":{"y":32,"x":650,"width":100,"value":"10000","skin":"ui/common_ex/rmb.png","sheet":"0123456789","name":"sign_price","anchorX":0.5,"align":"center"},"compId":329},{"type":"Image","props":{"y":43,"x":640,"skin":"ui/match/mianfei.png","name":"sign_text","anchorY":0.5,"anchorX":0.5},"compId":403},{"type":"Image","props":{"y":43,"x":640,"skin":"ui/common_ex/t_accept.png","name":"accept_text","anchorY":0.5,"anchorX":0.5},"compId":404},{"type":"Label","props":{"y":10,"x":225,"width":224,"var":"match_name","text":"30万金币挑战赛","name":"match_name","height":26,"fontSize":20,"color":"#ffffff","anchorX":0.5,"align":"center"},"compId":243},{"type":"Label","props":{"y":0,"x":458,"width":180,"text":"最高奖励","strokeColor":"#055d8d","stroke":2,"height":20,"fontSize":20,"color":"#ffffff","bold":true,"anchorX":0.5,"align":"center"},"compId":274},{"type":"Label","props":{"y":53,"x":243,"width":120,"text":"15:00开赛","name":"time_label","height":26,"fontSize":18,"color":"#055d8d","anchorX":0.5,"align":"center"},"compId":402},{"type":"Button","props":{"y":-2,"x":303,"stateNum":2,"skin":"ui/common_ex/btn_wenhao.png"},"compId":458}]},{"type":"VScrollBar","props":{"y":0,"x":710,"showButtons":false,"name":"scrollBar","height":380},"compId":227}]},{"type":"Box","props":{"y":-17,"x":367,"width":549,"height":153},"compId":168,"child":[{"type":"Image","props":{"y":6,"x":330,"skin":"ui/common_ex/title_border.png"},"compId":165},{"type":"Image","props":{"y":6,"x":220,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":166},{"type":"Image","props":{"y":76,"x":185,"skin":"ui/match/bisc.png"},"compId":167}]},{"type":"Box","props":{"y":182,"x":172,"var":"tab_box"},"compId":264,"child":[{"type":"Button","props":{"y":0,"x":4,"var":"tab1","stateNum":3,"skin":"ui/match/bg.png"},"compId":261,"child":[{"type":"Image","props":{"y":22,"x":55,"skin":"ui/match/rcahngs.png"},"compId":395}]},{"type":"Button","props":{"y":90,"x":2,"var":"tab2","stateNum":3,"skin":"ui/match/bg.png"},"compId":262,"child":[{"type":"Image","props":{"y":22,"x":55,"skin":"ui/match/tiaoxs.png"},"compId":394}]},{"type":"Button","props":{"y":180,"x":2,"var":"tab3","stateNum":3,"skin":"ui/match/bg.png"},"compId":263,"child":[{"type":"Image","props":{"y":22,"x":55,"skin":"ui/match/pips.png"},"compId":392}]},{"type":"Button","props":{"y":270,"x":2,"visible":false,"var":"tab4","stateNum":3,"skin":"ui/match/bg.png"},"compId":288,"child":[{"type":"Image","props":{"y":22,"x":55,"skin":"ui/match/qiangdcs.png"},"compId":393}]},{"type":"Button","props":{"y":270,"x":2,"visible":false,"var":"tab5","stateNum":3,"skin":"ui/match/bg.png"},"compId":459,"child":[{"type":"Image","props":{"y":22,"x":44,"skin":"ui/match/jiangli.png"},"compId":460}]}]},{"type":"Image","props":{"y":516,"x":1073,"skin":"ui/common_ex/grass2.png"},"compId":151},{"type":"Image","props":{"y":484,"x":67,"skin":"ui/common_ex/grass1.png"},"compId":150},{"type":"Box","props":{"y":533,"x":362,"var":"joinBox"},"compId":485,"child":[{"type":"Image","props":{"y":0,"x":0,"width":723,"skin":"ui/common_ex/img_di_02.png","sizeGrid":"13,20,22,19","height":92},"compId":486},{"type":"Box","props":{"y":24,"x":548,"width":151,"height":54},"compId":487,"child":[{"type":"Button","props":{"y":1,"x":4,"var":"joinBtn","stateNum":2,"skin":"ui/common_ex/btn_blue.png"},"compId":488,"child":[{"type":"Image","props":{"y":6,"x":50,"skin":"ui/common_ex/t_i.png"},"compId":492}]}]},{"type":"Label","props":{"y":30,"x":18,"wordWrap":true,"width":169,"text":"输入房间号：","strokeColor":"#053c73","stroke":2,"overflow":"visible","leading":5,"height":39,"fontSize":26,"color":"#ffffff","bold":true,"align":"left"},"compId":490},{"type":"TextInput","props":{"y":33,"x":172,"width":327,"var":"roomInput","skin":"ui/common_ex/img_di_03.png","sizeGrid":"0,14,0,13","promptColor":"#ffffff","prompt":"房间号","height":36,"fontSize":20,"color":"#ffffff","bold":true,"align":"center"},"compId":491}]},{"type":"Box","props":{"width":1280,"var":"rank_box","height":720},"compId":484,"child":[{"type":"Box","props":{"y":-44,"x":-107,"width":854,"visible":true,"height":545,"centerY":0,"centerX":0},"compId":349,"child":[{"type":"Image","props":{"y":-406,"x":-563,"width":1900,"skin":"ui/common_ex/jl_bg.png","height":1300,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":451},{"type":"Image","props":{"y":21,"x":422,"width":838,"skin":"ui/common_ex/bg_index4.png","height":549,"anchorX":0.5,"sizeGrid":"50,50,50,50"},"compId":350},{"type":"Image","props":{"y":23,"x":0,"width":850,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":382},{"type":"Image","props":{"y":119,"x":51,"width":750,"skin":"ui/common_ex/bg_index1.png","height":380,"sizeGrid":"30,30,30,30"},"compId":389},{"type":"Image","props":{"y":0,"x":161,"width":500,"skin":"ui/match/biaotoudikaung.png","sizeGrid":"35,75,35,80"},"compId":384,"child":[{"type":"Label","props":{"y":15,"x":55,"width":400,"var":"match_title","text":"30万金币赛","stroke":2,"fontSize":30,"color":"#fdf4b7","bold":true,"align":"center"},"compId":387},{"type":"Image","props":{"y":26,"x":80,"skin":"ui/match/xingx.png"},"compId":390},{"type":"Image","props":{"y":26,"x":410,"skin":"ui/match/xingx.png"},"compId":391}]},{"type":"Box","props":{"y":90,"x":630,"var":"daily_box"},"compId":448,"child":[{"type":"Image","props":{"y":-2,"x":207,"width":250,"skin":"ui/match/rank_bg.png","scaleX":-1,"sizeGrid":"10,30,10,30"},"compId":406},{"type":"Image","props":{"skin":"ui/match/rank.png"},"compId":409},{"type":"Label","props":{"y":-2,"x":87,"width":100,"var":"myrank","text":"50","height":20,"fontSize":20,"color":"#ffffff","align":"center"},"compId":407},{"type":"List","props":{"y":44,"x":-564,"width":720,"var":"list_rank","spaceY":10,"renderType":"render","height":350},"compId":331,"child":[{"type":"Box","props":{"x":0,"width":720,"name":"render","height":100},"compId":332,"child":[{"type":"Image","props":{"y":0,"x":0,"width":700,"skin":"ui/common_ex/task.png","name":"bg","height":100,"sizeGrid":"30,30,30,30"},"compId":333},{"type":"Label","props":{"y":27,"x":80,"width":80,"text":"5","strokeColor":"#000000","stroke":2,"name":"rank","fontSize":28,"color":"#fdf4b7","bold":true,"anchorX":0.5,"align":"center"},"compId":334},{"type":"Label","props":{"y":52,"x":614,"width":160,"text":"88888","strokeColor":"#055d8d","stroke":3,"name":"point","height":20,"fontSize":22,"color":"#ffffff","bold":true,"anchorX":0.5,"align":"center"},"compId":335},{"type":"Label","props":{"y":18,"x":605,"width":160,"text":"wx_18644123562","name":"player_name","fontSize":20,"color":"#055d8d","anchorX":0.5,"align":"center"},"compId":336},{"type":"Image","props":{"y":56,"x":528,"skin":"ui/common_ex/jifen.png"},"compId":449},{"type":"Box","props":{"y":8,"x":444,"scaleY":0.9,"scaleX":0.9,"name":"imgBox"},"compId":338,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png"},"compId":339},{"type":"Image","props":{"y":3,"x":2,"width":80,"skin":"ui/common/nan.png","name":"playimg","height":80},"compId":340},{"type":"Image","props":{"y":1,"x":1,"skin":"ui/common_ex/touxiang2.png","scaleY":0.98,"scaleX":0.98},"compId":341},{"type":"Image","props":{"y":62,"x":5,"skin":"ui/common_ex/level_bg.png"},"compId":342},{"type":"Label","props":{"y":65,"x":6,"width":70,"text":"lv.12","name":"level","fontSize":12,"color":"#ffffff","bold":true,"align":"right"},"compId":343}]},{"type":"List","props":{"y":5,"x":210,"width":180,"repeatY":1,"repeatX":2,"renderType":"render","name":"list_reward","height":85},"compId":344,"child":[{"type":"Box","props":{"y":0,"x":0,"width":100,"scaleY":0.8,"scaleX":0.8,"name":"render","height":100},"compId":345,"child":[{"type":"Image","props":{"y":0,"x":0,"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":386},{"type":"Image","props":{"y":50,"x":50,"width":90,"skin":"ui/common/coin2.png","name":"reward_type","height":90,"anchorY":0.5,"anchorX":0.5},"compId":346},{"type":"Label","props":{"y":68,"x":6,"width":90,"text":"x 999","name":"reward_text","fontSize":24,"color":"#ffffff","align":"center"},"compId":347}]}]},{"type":"Image","props":{"y":9,"x":38,"skin":"ui/match/rank1.png","name":"rank_icon"},"compId":388}]},{"type":"VScrollBar","props":{"y":0,"x":710,"showButtons":false,"name":"scrollBar","height":380},"compId":348}]}]},{"type":"Box","props":{"y":144,"x":76,"var":"challenge_box"},"compId":450,"child":[{"type":"List","props":{"width":723,"visible":true,"var":"list_rank2","spaceY":10,"renderType":"render","height":350},"compId":410,"child":[{"type":"Box","props":{"x":0,"width":720,"name":"render","height":100},"compId":411,"child":[{"type":"Image","props":{"y":0,"width":700,"skin":"ui/common_ex/task.png","name":"bg","left":0,"height":100,"sizeGrid":"30,30,30,30"},"compId":412},{"type":"Label","props":{"y":23,"x":156,"width":180,"text":"第1轮","strokeColor":"#000000","stroke":2,"name":"rank","fontSize":28,"color":"#fdf4b7","bold":true,"anchorX":0.5,"align":"center"},"compId":413},{"type":"List","props":{"y":3,"x":385,"width":180,"spaceX":0,"repeatY":1,"repeatX":2,"renderType":"render","name":"list_reward","height":85},"compId":422,"child":[{"type":"Box","props":{"y":0,"x":0,"width":100,"scaleY":0.8,"scaleX":0.8,"name":"render","height":100},"compId":423,"child":[{"type":"Image","props":{"y":0,"x":0,"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":424},{"type":"Image","props":{"y":50,"x":50,"width":90,"skin":"ui/common/coin2.png","name":"reward_type","height":90,"anchorY":0.5,"anchorX":0.5},"compId":425},{"type":"Label","props":{"y":69,"x":4,"width":90,"text":"x 10000","name":"reward_text","fontSize":24,"color":"#ffffff","align":"center"},"compId":426}]}]}]},{"type":"VScrollBar","props":{"y":0,"x":710,"showButtons":false,"name":"scrollBar","height":380},"compId":428}]}]},{"type":"Box","props":{"y":144,"x":76,"visible":false},"compId":461,"child":[{"type":"List","props":{"width":723,"visible":true,"spaceY":10,"renderType":"render","height":350},"compId":462,"child":[{"type":"Box","props":{"x":0,"width":720,"name":"render","height":100},"compId":463,"child":[{"type":"Image","props":{"y":0,"width":700,"skin":"ui/common_ex/task.png","name":"bg","left":0,"height":100,"sizeGrid":"30,30,30,30"},"compId":464},{"type":"Label","props":{"y":32,"x":40,"width":60,"text":"10","strokeColor":"#000000","stroke":2,"name":"rank","fontSize":28,"color":"#fdf4b7","bold":true,"anchorX":0.5,"align":"center"},"compId":465},{"type":"Label","props":{"y":38,"x":104,"width":100,"text":"88888","strokeColor":"#055d8d","stroke":3,"name":"point","height":20,"fontSize":22,"color":"#ffffff","bold":true,"anchorX":0.5,"align":"center"},"compId":482},{"type":"List","props":{"y":6,"x":520,"width":180,"spaceX":-10,"repeatY":1,"repeatX":2,"renderType":"render","name":"list_reward","height":85},"compId":466,"child":[{"type":"Box","props":{"y":0,"x":0,"width":100,"scaleY":0.8,"scaleX":0.8,"name":"render","height":100},"compId":467,"child":[{"type":"Image","props":{"y":0,"x":0,"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":468},{"type":"Image","props":{"y":50,"x":50,"width":90,"skin":"ui/common/coin2.png","name":"reward_type","height":90,"anchorY":0.5,"anchorX":0.5},"compId":469},{"type":"Label","props":{"y":69,"x":4,"width":90,"text":"x 10000","name":"reward_text","fontSize":24,"color":"#ffffff","align":"center"},"compId":470}]}]},{"type":"List","props":{"y":3,"x":332,"width":360,"repeatX":4,"name":"imgBox","height":100,"anchorX":0.5},"compId":481,"child":[{"type":"Box","props":{"y":0,"x":0,"width":90,"scaleY":0.7,"scaleX":0.7,"name":"render","height":130},"compId":472,"child":[{"type":"Image","props":{"y":20,"x":20,"skin":"ui/common_ex/touxiang.png"},"compId":473},{"type":"Image","props":{"y":23,"x":22,"width":80,"skin":"ui/common/nan.png","name":"playimg","height":80},"compId":474},{"type":"Image","props":{"y":21,"x":21,"skin":"ui/common_ex/touxiang2.png","scaleY":0.98,"scaleX":0.98},"compId":475},{"type":"Image","props":{"y":82,"x":25,"skin":"ui/common_ex/level_bg.png"},"compId":476},{"type":"Label","props":{"y":81,"x":26,"width":70,"text":"lv.12","name":"level","fontSize":12,"color":"#ffffff","bold":true,"align":"right"},"compId":477},{"type":"Label","props":{"y":0,"x":66,"width":120,"text":"wx_186411...","name":"player_name","fontSize":20,"color":"#055d8d","anchorX":0.5,"align":"center"},"compId":479},{"type":"Label","props":{"y":102,"x":80,"width":100,"text":"88888","strokeColor":"#055d8d","stroke":3,"name":"point","height":20,"fontSize":22,"color":"#ffffff","bold":true,"anchorX":0.5,"align":"center"},"compId":478},{"type":"Image","props":{"y":106,"x":15,"skin":"ui/common_ex/jifen.png"},"compId":480}]}]}]},{"type":"VScrollBar","props":{"y":0,"x":710,"showButtons":false,"name":"scrollBar","height":380},"compId":471}]}]},{"type":"Button","props":{"y":505,"x":155,"var":"rule_btn","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":353,"child":[{"type":"Image","props":{"y":9,"x":53,"skin":"ui/match/guiz.png","scaleY":0.8,"scaleX":0.8},"compId":385}]},{"type":"Box","props":{"y":507,"x":525,"var":"rank_sign_box"},"compId":452,"child":[{"type":"Button","props":{"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","scaleY":0.8,"scaleX":0.8,"name":"join_btn"},"compId":453},{"type":"Image","props":{"y":19,"x":15,"width":25,"skin":"ui/common_ex/unit_coin.png","name":"sign_price_unit","height":25,"anchorY":0.5},"compId":454},{"type":"FontClip","props":{"y":9,"x":80,"width":100,"value":"1000","skin":"ui/common_ex/rmb.png","sheet":"0123456789","name":"sign_price","height":21,"anchorX":0.5,"align":"center"},"compId":455},{"type":"Image","props":{"y":20,"x":77,"skin":"ui/match/mianfei.png","name":"sign_text","anchorY":0.5,"anchorX":0.5},"compId":456},{"type":"Image","props":{"y":20,"x":75,"skin":"ui/common_ex/t_accept.png","name":"accept_text","anchorY":0.5,"anchorX":0.5},"compId":457}]}]},{"type":"Button","props":{"y":0,"x":0,"var":"rankQuitBtn","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":0},"compId":351}]},{"type":"Animation","props":{"y":384,"x":658,"visible":false,"var":"wait_ani","source":"abbey/wait.ani"},"compId":258},{"type":"Box","props":{"y":0,"x":0,"width":1280,"var":"rule_box","height":720},"compId":483,"child":[{"type":"Box","props":{"y":-26,"x":-108,"width":851,"visible":true,"height":618,"centerY":0,"centerX":0},"compId":356,"child":[{"type":"Image","props":{"y":-326,"x":-497,"width":1900,"skin":"ui/common_ex/jl_bg.png","height":1300,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":405},{"type":"Image","props":{"y":93,"x":424,"width":838,"skin":"ui/common_ex/bg_index3.png","height":524,"anchorX":0.5,"sizeGrid":"50,50,50,50"},"compId":358},{"type":"Image","props":{"y":86,"x":0,"width":850,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":363},{"type":"Box","props":{"y":0,"x":139,"width":549,"height":153},"compId":359,"child":[{"type":"Image","props":{"y":6,"x":400,"skin":"ui/common_ex/title_border.png"},"compId":360},{"type":"Image","props":{"y":6,"x":220,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":361},{"type":"Image","props":{"y":68,"x":183,"skin":"ui/match/bisgz.png"},"compId":362}]},{"type":"Label","props":{"y":168,"x":80,"width":125,"text":"比赛类型：","height":30,"fontSize":24,"color":"#055175"},"compId":364},{"type":"Label","props":{"y":221,"x":80,"width":200,"text":"比赛时间：","height":30,"fontSize":24,"color":"#055175"},"compId":375},{"type":"Label","props":{"y":274,"x":80,"width":200,"text":"比赛时长：","height":30,"fontSize":24,"color":"#055175"},"compId":373},{"type":"Label","props":{"y":327,"x":80,"width":200,"text":"炮台等级：","height":30,"fontSize":24,"color":"#055175"},"compId":374},{"type":"Label","props":{"y":380,"x":80,"width":200,"text":"赛事介绍：","height":30,"fontSize":24,"color":"#055175"},"compId":376},{"type":"Label","props":{"y":168,"x":213,"width":500,"var":"rule_match_type","text":"我是规则","height":30,"fontSize":24,"color":"#ec5300"},"compId":377},{"type":"Label","props":{"y":221,"x":213,"width":500,"var":"rule_match_time","text":"我是规则","height":30,"fontSize":24,"color":"#ec5300"},"compId":378},{"type":"Label","props":{"y":274,"x":213,"width":500,"var":"rule_match_long","text":"我是规则","height":30,"fontSize":24,"color":"#ec5300"},"compId":379},{"type":"Label","props":{"y":327,"x":213,"width":500,"var":"rule_match_battery","text":"我是规则","height":30,"fontSize":24,"color":"#ec5300"},"compId":380},{"type":"Label","props":{"y":380,"x":214,"width":587,"var":"rule_match_desc","text":"挑战赛需连续进行比赛，每轮比赛由两名玩家进行比拼,\\n在规定时间内发射子弹捕获屏幕中的鱼获得更多珍珠，\\n获得珍珠多的玩家获得此轮比赛胜利，并晋级至下一轮\\n胜利轮次越多获得奖励越丰厚，比赛结束立即发放奖励。","leading":5,"height":128,"fontSize":24,"color":"#ec5300"},"compId":355}]},{"type":"Button","props":{"y":2,"x":2,"visible":true,"var":"ruleQuitBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":357}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index0.png","ui/common_ex/bg_index1.png","ui/common_ex/head_2.png","ui/common_ex/quit.png","ui/common_ex/bg_index2.png","ui/common_ex/task.png","ui/match/yuan.png","ui/match/ditiao1.png","ui/common/coin2.png","ui/common_ex/touxiang.png","ui/match/shujian.png","ui/common_ex/btn_yellow.png","ui/common_ex/unit_coin.png","ui/common_ex/rmb.png","ui/match/mianfei.png","ui/common_ex/t_accept.png","ui/common_ex/btn_wenhao.png","ui/common_ex/title_border.png","ui/match/bisc.png","ui/match/bg.png","ui/match/rcahngs.png","ui/match/tiaoxs.png","ui/match/pips.png","ui/match/qiangdcs.png","ui/match/jiangli.png","ui/common_ex/grass2.png","ui/common_ex/grass1.png","ui/common_ex/img_di_02.png","ui/common_ex/btn_blue.png","ui/common_ex/t_i.png","ui/common_ex/img_di_03.png","ui/common_ex/bg_index4.png","ui/match/biaotoudikaung.png","ui/match/xingx.png","ui/match/rank_bg.png","ui/match/rank.png","ui/common_ex/jifen.png","ui/common/nan.png","ui/common_ex/touxiang2.png","ui/common_ex/level_bg.png","ui/match/rank1.png","ui/common_ex/btn_green.png","ui/match/guiz.png","abbey/wait.ani","ui/common_ex/bg_index3.png","ui/match/bisgz.png"],"loadList3D":[]};	
		

		class MatchSettlePageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.challenge_box=null;
				//this.win_fight_box=null;
				//this.win_rount_txt1=null;
				//this.win_txt1=null;
				//this.win_txt2=null;
				//this.fail_fight_box=null;
				//this.roundTxt=null;
				//this.win_title=null;
				//this.reward_bg=null;
				//this.list_reward=null;
				//this.challenge_btn=null;
				//this.daily_box=null;
				//this.max_score=null;
				//this.rank_label=null;
				//this.coin_box=null;
				//this.retry_coin=null;
				//this.score=null;
				//this.confirm_btn=null;
				//this.retry_btn=null;
				//this.retry_text=null;
				//this.matchResultBox=null;
				//this.matchFallBox=null;
				//this.matchMaxLabel=null;
				//this.matchRankLabel=null;
				//this.matchWinBox=null;
				//this.rewardListBg=null;
				//this.matchRewardList=null;
				//this.againBtn=null;
				//this.cancelMatchBtn=null;
				//this.matchCostImage=null;
				//this.matchCostLabel=null;
				//this.resultTimeBox=null;
				//this.resultTimeLabel=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(MatchSettlePageUI.uiView);
			}
		}

		ui.abbey.MatchSettlePageUI=Laya.MatchSettlePageUI=MatchSettlePageUI;
		MatchSettlePageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-282,"x":-300,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1300,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":2},{"type":"Box","props":{"y":81,"x":413,"var":"challenge_box"},"compId":39,"child":[{"type":"Image","props":{"y":256,"x":93,"width":300,"var":"win_fight_box","skin":"ui/matchSettle/wenzdi.png","height":40,"sizeGrid":"15,25,15,25"},"compId":35,"child":[{"type":"Image","props":{"y":-330,"x":-97,"skin":"ui/matchSettle/shenglidi.png"},"compId":77},{"type":"Label","props":{"y":8,"x":71,"width":156,"var":"win_rount_txt1","text":"点击确定继续挑战","height":24,"fontSize":20,"color":"#ffffff","bold":true},"compId":45},{"type":"Label","props":{"y":8,"x":40,"var":"win_txt1","text":"恭喜获得","fontSize":20,"color":"#ffffff","bold":true},"compId":28},{"type":"Label","props":{"y":8,"x":140,"var":"win_txt2","text":"挑战赛冠军","fontSize":20,"color":"#fff053","bold":true},"compId":32}]},{"type":"Image","props":{"y":0,"x":0,"var":"fail_fight_box","skin":"ui/matchSettle/shibkuang.png"},"compId":36,"child":[{"type":"Label","props":{"y":256,"x":97,"text":"本场比赛结束点击确定领取奖励","fontSize":20,"color":"#ffffff","bold":true},"compId":37}]},{"type":"Label","props":{"y":310,"x":276,"var":"roundTxt","text":"1/6","fontSize":20,"color":"#fff053","bold":true},"compId":34},{"type":"Label","props":{"y":309,"x":150,"text":"当前轮次：","fontSize":20,"color":"#ffffff","bold":true},"compId":29},{"type":"Image","props":{"y":154,"x":164,"var":"win_title","skin":"ui/matchSettle/shengli.png"},"compId":4},{"type":"Image","props":{"y":341,"x":121,"width":250,"var":"reward_bg","skin":"ui/matchSettle/wupdi.png","height":100,"sizeGrid":"15,15,15,15"},"compId":7},{"type":"List","props":{"y":396,"x":252,"width":190,"var":"list_reward","spaceX":0,"repeatY":1,"repeatX":2,"renderType":"render","height":90,"anchorY":0.5,"anchorX":0.5},"compId":10,"child":[{"type":"Box","props":{"y":0,"x":0,"width":100,"scaleY":0.8,"scaleX":0.8,"name":"render","height":100},"compId":11,"child":[{"type":"Image","props":{"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":12},{"type":"Image","props":{"y":50,"x":50,"skin":"ui/common/coin2.png","scaleY":0.9,"scaleX":0.9,"name":"reward_type","anchorY":0.5,"anchorX":0.5},"compId":13},{"type":"Label","props":{"y":72,"x":5,"width":90,"text":"x 99999","name":"reward_text","fontSize":20,"color":"#ffffff","align":"center"},"compId":14}]}]},{"type":"Button","props":{"y":451,"x":173,"var":"challenge_btn","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":41},{"type":"Image","props":{"y":460,"x":225,"skin":"ui/matchSettle/uied.png","scaleY":0.8,"scaleX":0.8},"compId":42}]},{"type":"Box","props":{"y":378,"x":504,"var":"daily_box"},"compId":40,"child":[{"type":"Image","props":{"y":-369,"x":-94,"skin":"ui/matchSettle/shenglidi.png"},"compId":3},{"type":"Image","props":{"width":300,"skin":"ui/matchSettle/wenzdi.png","height":40,"sizeGrid":"15,25,15,25"},"compId":6,"child":[{"type":"Label","props":{"y":-43,"x":44,"var":"max_score","text":"本场比赛最高得分8888","fontSize":20,"color":"#ffffff","bold":true},"compId":38},{"type":"Label","props":{"y":7,"x":80,"text":"排名：","fontSize":20,"color":"#ffffff","bold":true},"compId":31},{"type":"Label","props":{"y":8,"x":162,"var":"rank_label","text":"3/200","fontSize":20,"color":"#fff053","bold":true},"compId":33}]},{"type":"Image","props":{"y":90,"x":190,"var":"coin_box","skin":"ui/matchSettle/toumxiaob1.png"},"compId":15,"child":[{"type":"Image","props":{"y":-1,"x":29,"width":35,"skin":"ui/common_ex/unit_coin.png","height":35},"compId":18},{"type":"Label","props":{"y":3,"x":79,"var":"retry_coin","text":"10000","fontSize":20,"color":"#ffffff","bold":true},"compId":19}]},{"type":"Image","props":{"y":-134,"x":200,"skin":"ui/matchSettle/fen.png"},"compId":5},{"type":"FontClip","props":{"y":-132,"x":84,"var":"score","value":"8888","skin":"ui/matchSettle/z.png","sheet":"0123456789"},"compId":9},{"type":"Button","props":{"y":129,"x":-56,"var":"confirm_btn","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":16},{"type":"Image","props":{"y":136,"x":-4,"skin":"ui/matchSettle/uied.png","scaleY":0.8,"scaleX":0.8},"compId":27},{"type":"Button","props":{"y":128,"x":207,"var":"retry_btn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","scaleY":0.8,"scaleX":0.8},"compId":17},{"type":"Image","props":{"y":134,"x":257,"var":"retry_text","skin":"ui/matchSettle/chengs.png","scaleY":0.8,"scaleX":0.8},"compId":26}]},{"type":"Box","props":{"y":-130,"x":36,"var":"matchResultBox"},"compId":46,"child":[{"type":"Box","props":{"y":127,"x":372,"width":468,"var":"matchFallBox","height":377},"compId":48,"child":[{"type":"Image","props":{"y":0,"x":0,"skin":"ui/matchSettle/shibkuang.png"},"compId":49,"child":[{"type":"Image","props":{"y":152,"x":167,"skin":"ui/matchSettle/shib.png"},"compId":75}]},{"type":"Image","props":{"y":288,"x":86,"width":300,"skin":"ui/matchSettle/wenzdi.png","height":40,"sizeGrid":"15,25,15,25"},"compId":50,"child":[{"type":"Label","props":{"y":-43,"x":44,"var":"matchMaxLabel","text":"本场比赛最高得分8888","fontSize":20,"color":"#ffffff","bold":true},"compId":51},{"type":"Label","props":{"y":7,"x":80,"text":"排名：","fontSize":20,"color":"#ffffff","bold":true},"compId":52},{"type":"Label","props":{"y":8,"x":162,"var":"matchRankLabel","text":"3/200","fontSize":20,"color":"#fff053","bold":true},"compId":53}]}]},{"type":"Box","props":{"y":126,"x":369,"width":478,"var":"matchWinBox","height":496},"compId":54,"child":[{"type":"Image","props":{"y":0,"x":0,"skin":"ui/matchSettle/shenglidi.png"},"compId":55},{"type":"Image","props":{"y":384,"width":119,"var":"rewardListBg","skin":"ui/matchSettle/wupdi.png","height":100,"centerX":0,"anchorY":0.5,"anchorX":0.5,"sizeGrid":"15,15,15,15"},"compId":56},{"type":"List","props":{"y":396,"var":"matchRewardList","spaceX":0,"repeatY":1,"renderType":"render","centerX":0,"anchorY":0.5,"anchorX":0.5},"compId":57,"child":[{"type":"Box","props":{"y":0,"x":0,"width":100,"scaleY":0.8,"scaleX":0.8,"name":"render","height":100},"compId":58,"child":[{"type":"Image","props":{"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":59},{"type":"Image","props":{"y":50,"x":50,"skin":"ui/common/coin2.png","scaleY":0.9,"scaleX":0.9,"name":"reward_type","anchorY":0.5,"anchorX":0.5},"compId":60},{"type":"Label","props":{"y":72,"x":5,"width":90,"text":"x 99999","rotation":0,"name":"reward_text","height":20,"fontSize":20,"color":"#ffffff","align":"center"},"compId":61}]}]},{"type":"Image","props":{"y":225,"x":166,"skin":"ui/matchSettle/shengli.png"},"compId":62},{"type":"Label","props":{"y":308,"x":145,"text":"恭喜获得","fontSize":20,"color":"#ffffff","bold":true},"compId":63},{"type":"Label","props":{"y":308,"x":247,"text":"匹配赛冠军","fontSize":20,"color":"#fff053","bold":true},"compId":64}]},{"type":"Button","props":{"y":616,"x":656,"width":146,"var":"againBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":45},"compId":65,"child":[{"type":"Image","props":{"y":6,"x":50,"skin":"ui/common_ex/continue.png"},"compId":66}]},{"type":"Button","props":{"y":615,"x":398,"var":"cancelMatchBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":67,"child":[{"type":"Image","props":{"y":8,"x":52,"skin":"ui/common_ex/t_quit.png"},"compId":68}]},{"type":"Image","props":{"y":576,"x":644,"skin":"ui/matchSettle/toumxiaob1.png"},"compId":69,"child":[{"type":"Image","props":{"y":-1,"x":29,"width":35,"var":"matchCostImage","skin":"ui/common_ex/unit_coin.png","height":35},"compId":70},{"type":"Label","props":{"y":3,"x":79,"var":"matchCostLabel","text":"10000","fontSize":20,"color":"#ffffff","bold":true},"compId":71}]},{"type":"Box","props":{"y":672,"x":495,"visible":false,"var":"resultTimeBox"},"compId":72,"child":[{"type":"Image","props":{"y":8,"x":128,"width":600,"skin":"ui/common_ex/tuceng.png","anchorX":0.5,"sizeGrid":"10,0,10,0"},"compId":76},{"type":"Label","props":{"y":13,"x":12,"wordWrap":true,"width":226,"var":"resultTimeLabel","underlineColor":"#fbfbfb","underline":true,"text":"60秒......","leading":10,"layoutEnabled":true,"italic":true,"height":50,"fontSize":24,"color":"#fbfbfb","align":"center"},"compId":74}]}]}],"loadList":["ui/common_ex/jl_bg.png","ui/matchSettle/wenzdi.png","ui/matchSettle/shenglidi.png","ui/matchSettle/shibkuang.png","ui/matchSettle/shengli.png","ui/matchSettle/wupdi.png","ui/common_ex/touxiang.png","ui/common/coin2.png","ui/common_ex/btn_green.png","ui/matchSettle/uied.png","ui/matchSettle/toumxiaob1.png","ui/common_ex/unit_coin.png","ui/matchSettle/fen.png","ui/matchSettle/z.png","ui/common_ex/btn_yellow.png","ui/matchSettle/chengs.png","ui/matchSettle/shib.png","ui/common_ex/continue.png","ui/common_ex/t_quit.png","ui/common_ex/tuceng.png"],"loadList3D":[]};	
		

		class MonthCardPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.card_title=null;
				//this.quitBtn=null;
				//this.scroll_right=null;
				//this.scroll_left=null;
				//this.list=null;
				//this.price=null;
				//this.price_unit=null;
				//this.tip_box=null;
				//this.input_userid=null;
				//this.query_btn=null;
				//this.userinfo_box=null;
				//this.userimg=null;
				//this.username=null;
				//this.gift_confirm=null;
				//this.quit_gift_box=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(MonthCardPageUI.uiView);
			}
		}

		ui.abbey.MonthCardPageUI=Laya.MonthCardPageUI=MonthCardPageUI;
		MonthCardPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-226,"x":-310,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":193},{"type":"Image","props":{"y":70,"x":290,"width":700,"skin":"ui/monthCard/yuek_di1.png","height":600,"sizeGrid":"250,70,250,70"},"compId":217},{"type":"Box","props":{"y":-20,"x":397},"compId":209,"child":[{"type":"Image","props":{"y":81,"x":0,"skin":"ui/monthCard/x.png","scaleY":0.8,"scaleX":0.8},"compId":210},{"type":"Image","props":{"y":20,"x":263,"skin":"ui/monthCard/x.png","scaleY":0.3,"scaleX":0.3},"compId":211},{"type":"Image","props":{"y":39,"x":116,"skin":"ui/monthCard/x.png","scaleY":0.5,"scaleX":0.5},"compId":212},{"type":"Image","props":{"y":45,"x":342,"skin":"ui/monthCard/x.png","scaleY":0.3,"scaleX":0.3},"compId":213},{"type":"Image","props":{"y":18,"x":399,"skin":"ui/monthCard/x.png"},"compId":214},{"type":"Image","props":{"y":32,"x":32,"skin":"ui/monthCard/sdai.png"},"compId":215},{"type":"Image","props":{"y":52,"x":162,"var":"card_title","skin":"ui/monthCard/yuek_sxlb.png"},"compId":216}]},{"type":"Button","props":{"y":1,"x":7,"var":"quitBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":120},{"type":"Image","props":{"y":558,"x":892,"skin":"ui/monthCard/yuek_sc1.png"},"compId":219},{"type":"Image","props":{"y":576,"x":253,"skin":"ui/monthCard/yuek_sc2.png"},"compId":220},{"type":"Button","props":{"y":310,"x":990,"var":"scroll_right","stateNum":2,"skin":"ui/common/scroll_right.png","scaleY":2,"scaleX":2},"compId":247},{"type":"Button","props":{"y":300,"x":285,"var":"scroll_left","stateNum":2,"skin":"ui/common/scroll_right.png","scaleY":2,"scaleX":-2},"compId":248},{"type":"List","props":{"y":116,"x":372,"width":552,"var":"list","spaceX":20,"repeatY":1,"height":535},"compId":250,"child":[{"type":"Box","props":{"y":0,"x":4,"width":554,"name":"render","height":543},"compId":249,"child":[{"type":"Image","props":{"y":74,"x":-7,"width":200,"skin":"ui/monthCard/yuek_di2.png","sizeGrid":"24,13,12,13"},"compId":221,"child":[{"type":"Text","props":{"y":10,"x":18,"text":"购买时，立即获得：","strokeColor":"#04196a","stroke":4,"fontSize":19,"color":"#ffffff","bold":true,"align":"left","runtime":"laya.display.Text"},"compId":239}]},{"type":"Image","props":{"y":75,"x":277,"width":274,"skin":"ui/monthCard/yuek_di2.png","height":44,"sizeGrid":"24,13,12,13"},"compId":222,"child":[{"type":"Text","props":{"y":10,"x":34,"text":"并持续       天，可以领取：","strokeColor":"#04196a","stroke":4,"fontSize":19,"color":"#ffffff","bold":true,"align":"left","runtime":"laya.display.Text"},"compId":240}]},{"type":"Image","props":{"y":329,"x":270,"width":692,"skin":"ui/monthCard/yuek_di4.png","height":146,"anchorY":0.5,"anchorX":0.5,"sizeGrid":"1,0,1,0"},"compId":228,"child":[{"type":"Text","props":{"y":9,"x":118,"text":"总计可获得：","strokeColor":"#04196a","stroke":4,"fontSize":19,"color":"#ffffff","bold":true,"align":"left","runtime":"laya.display.Text"},"compId":241}]},{"type":"Image","props":{"y":432,"x":267,"visible":false,"skin":"ui/monthCard/yuek_di4.png","height":50,"anchorY":0.5,"anchorX":0.5,"sizeGrid":"1,0,1,0"},"compId":229,"child":[{"type":"Text","props":{"y":13,"x":190,"text":"激活期间拥有特权：","strokeColor":"#04196a","stroke":4,"fontSize":19,"color":"#ffffff","bold":true,"align":"left","runtime":"laya.display.Text"},"compId":242},{"type":"Image","props":{"y":-19,"x":374,"skin":"ui/monthCard/yuek_pp.png","scaleY":1.2,"scaleX":1.2},"compId":232},{"type":"Image","props":{"y":-11,"x":387,"skin":"ui/common_ex/zd.png"},"compId":244}]},{"type":"Text","props":{"y":84,"x":371,"width":32,"text":"30","strokeColor":"#04196a","stroke":4,"name":"day_num","height":22,"fontSize":22,"color":"#ffffff","bold":true,"align":"center","runtime":"laya.display.Text"},"compId":243},{"type":"List","props":{"y":128,"x":18,"width":180,"spaceX":10,"repeatY":1,"repeatX":2,"renderType":"render","name":"list_reward1","height":102},"compId":201,"child":[{"type":"Box","props":{"y":5,"x":0,"width":80,"scaleY":0.8,"scaleX":0.8,"name":"render"},"compId":202,"child":[{"type":"Image","props":{"skin":"ui/common/coin2.png","scaleY":0.8,"scaleX":0.8,"name":"reward_type"},"compId":203},{"type":"Image","props":{"y":75,"width":80,"skin":"ui/monthCard/yuek_di3.png","height":20,"sizeGrid":"8,10,8,10"},"compId":204},{"type":"Label","props":{"y":74,"width":80,"text":"x 999","name":"reward_text","fontSize":18,"color":"#fefff1","bold":false,"align":"center"},"compId":205}]}]},{"type":"List","props":{"y":128,"x":348,"width":180,"spaceX":10,"repeatY":1,"repeatX":2,"renderType":"render","name":"list_reward2","height":102},"compId":223,"child":[{"type":"Box","props":{"y":5,"x":0,"width":80,"scaleY":0.8,"scaleX":0.8,"name":"render"},"compId":224,"child":[{"type":"Image","props":{"skin":"ui/common/coin2.png","scaleY":0.8,"scaleX":0.8,"name":"reward_type"},"compId":225},{"type":"Image","props":{"y":75,"width":80,"skin":"ui/monthCard/yuek_di3.png","height":20,"sizeGrid":"8,10,8,10"},"compId":226},{"type":"Label","props":{"y":74,"width":80,"text":"x 999","name":"reward_text","fontSize":18,"color":"#fefff1","bold":false,"align":"center"},"compId":227}]}]},{"type":"List","props":{"y":276,"x":150,"spaceX":30,"repeatY":1,"repeatX":2,"renderType":"render","name":"list_reward3"},"compId":233,"child":[{"type":"Box","props":{"y":5,"x":0,"width":109,"name":"render","height":117},"compId":234,"child":[{"type":"Image","props":{"y":0,"x":0,"skin":"ui/monthCard/yuek_pp.png","scaleY":1.3,"scaleX":1.3},"compId":238},{"type":"Image","props":{"y":90,"x":10,"width":100,"skin":"ui/monthCard/yuek_di3.png","height":20,"sizeGrid":"8,10,8,10"},"compId":236},{"type":"Image","props":{"y":90,"x":10,"width":100,"skin":"ui/monthCard/yuek_di3.png","height":20,"sizeGrid":"8,10,8,10"},"compId":245},{"type":"Image","props":{"y":-10,"x":5,"skin":"ui/common/coin2.png","name":"reward_type"},"compId":235},{"type":"Label","props":{"y":90,"x":20,"width":80,"text":"x 999","name":"reward_text","height":30,"fontSize":18,"color":"#fefff1","bold":false,"align":"center"},"compId":237}]}]},{"type":"Button","props":{"y":456,"x":72,"width":150,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","name":"buy_box","height":46},"compId":197,"child":[{"type":"FontClip","props":{"y":19,"x":86,"visible":false,"var":"price","value":"30","skin":"ui/common_ex/rmb.png","sheet":"0123456789","name":"price","anchorY":0.5,"anchorX":0.5},"compId":198},{"type":"Image","props":{"y":10,"x":46,"width":20,"visible":false,"var":"price_unit","skin":"ui/common_ex/unit_rmb.png","name":"price_unit","height":20},"compId":199},{"type":"Sprite","props":{"y":7,"x":47,"width":51,"texture":"ui/pack/useGoods.png","height":27},"compId":287}]},{"type":"Button","props":{"y":456,"x":338,"width":150,"stateNum":2,"skin":"ui/common_ex/btn_green.png","name":"send_box","height":46},"compId":252,"child":[{"type":"Sprite","props":{"y":8.5,"x":47.5,"texture":"ui/pack/beib_bwn_zc.png"},"compId":286}]}]},{"type":"HScrollBar","props":{"y":10,"x":10,"touchScrollEnable":false,"name":"scrollBar","mouseWheelEnable":false,"mouseEnabled":false},"compId":251}]},{"type":"Box","props":{"y":0,"x":0,"width":1280,"var":"tip_box","height":720},"compId":255,"child":[{"type":"Image","props":{"y":-290,"x":-310,"width":1900,"skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":256},{"type":"Image","props":{"y":185,"x":340,"width":600,"skin":"ui/common_ex/bg_index3.png","height":400,"sizeGrid":"50,50,50,50"},"compId":257},{"type":"Image","props":{"y":180,"x":340,"width":600,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":258},{"type":"Image","props":{"y":85,"x":672,"skin":"ui/common_ex/title_border.png"},"compId":259},{"type":"Image","props":{"y":85,"x":605,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":260},{"type":"Text","props":{"y":266,"x":396,"width":150,"text":"赠送人ID：","fontSize":26,"color":"#116780","align":"left","runtime":"laya.display.Text"},"compId":274},{"type":"TextInput","props":{"y":266,"x":555,"width":220,"var":"input_userid","skin":"ui/pack/kuang1.png","promptColor":"#fbfbfb","prompt":"请输入用户ID","height":38,"fontSize":26,"color":"#ffffff","bold":true,"align":"center","sizeGrid":"15,15,15,15"},"compId":275},{"type":"Button","props":{"y":271,"x":785,"width":80,"var":"query_btn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":30},"compId":276,"child":[{"type":"Image","props":{"y":5,"x":25,"skin":"ui/pack/beib_bwn_chax.png"},"compId":277}]},{"type":"Box","props":{"y":323,"x":559,"visible":false,"var":"userinfo_box"},"compId":278,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":279},{"type":"Image","props":{"y":2,"x":2,"width":62,"var":"userimg","skin":"ui/common/nan.png","height":62},"compId":280},{"type":"Text","props":{"y":20,"x":110,"var":"username","text":"用户名","fontSize":22,"color":"#116780","bold":true,"align":"left","runtime":"laya.display.Text"},"compId":281}]},{"type":"Button","props":{"y":489,"x":565,"var":"gift_confirm","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":282,"child":[{"type":"Image","props":{"y":8,"x":52,"skin":"ui/pack/beib_bwn_zc.png"},"compId":283}]},{"type":"Image","props":{"y":146,"x":560,"skin":"ui/pack/beib_zs.png"},"compId":284},{"type":"Button","props":{"var":"quit_gift_box","top":3,"stateNum":1,"skin":"ui/common_ex/quit.png","left":4},"compId":285}]}],"loadList":["ui/common_ex/jl_bg.png","ui/monthCard/yuek_di1.png","ui/monthCard/x.png","ui/monthCard/sdai.png","ui/monthCard/yuek_sxlb.png","ui/common_ex/quit.png","ui/monthCard/yuek_sc1.png","ui/monthCard/yuek_sc2.png","ui/common/scroll_right.png","ui/monthCard/yuek_di2.png","ui/monthCard/yuek_di4.png","ui/monthCard/yuek_pp.png","ui/common_ex/zd.png","ui/common/coin2.png","ui/monthCard/yuek_di3.png","ui/common_ex/btn_yellow.png","ui/common_ex/rmb.png","ui/common_ex/unit_rmb.png","ui/pack/useGoods.png","ui/common_ex/btn_green.png","ui/pack/beib_bwn_zc.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/common_ex/title_border.png","ui/pack/kuang1.png","ui/pack/beib_bwn_chax.png","ui/common_ex/touxiang.png","ui/common/nan.png","ui/pack/beib_zs.png"],"loadList3D":[]};	
		

		class NewMatchPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.list1_bg=null;
				//this.waitTips=null;
				//this.list1=null;
				//this.joinBox=null;
				//this.ruleBtn=null;
				//this.lastBtn=null;
				//this.nextBtn=null;
				//this.pageNum=null;
				//this.createBtn=null;
				//this.activityTip=null;
				//this.tab_box=null;
				//this.tab1=null;
				//this.tab2=null;
				//this.create_box=null;
				//this.createBg=null;
				//this.create_btn=null;
				//this.timeRadio=null;
				//this.numRadio=null;
				//this.maxValue=null;
				//this.arrowBtn=null;
				//this.maxValueTips=null;
				//this.chipList=null;
				//this.selectedChip=null;
				//this.createQuitBtn=null;
				//this.wait_ani=null;
				//this.rule_box=null;
				//this.rule_match_type=null;
				//this.ruleQuitBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(NewMatchPageUI.uiView);
			}
		}

		ui.abbey.NewMatchPageUI=Laya.NewMatchPageUI=NewMatchPageUI;
		NewMatchPageUI.uiView={"type":"View","props":{"width":1280,"name":"reward","height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"y":-290,"x":-310,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1300,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":228},{"type":"Image","props":{"y":104.5,"x":160.5,"width":995,"skin":"ui/common_ex/bg_index0.png","height":559,"anchorX":0,"sizeGrid":"50,50,50,50"},"compId":116},{"type":"Image","props":{"y":119,"x":659,"width":959,"skin":"ui/common_ex/bg_index1.png","height":524,"anchorX":0.5,"sizeGrid":"30,30,30,30"},"compId":117},{"type":"Image","props":{"y":100,"x":161,"width":995,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":119},{"type":"Button","props":{"var":"quitBtn","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":3},"compId":120},{"type":"Image","props":{"y":173,"x":362,"width":750,"var":"list1_bg","skin":"ui/common_ex/bg_index2.png","height":353,"sizeGrid":"40,40,40,40"},"compId":180},{"type":"Image","props":{"y":228,"x":631,"var":"waitTips","skin":"ui/newMatch/img_px.png"},"compId":584,"child":[{"type":"Label","props":{"y":202,"x":-31,"width":249,"text":"请等待玩家创建比赛······","height":29,"fontSize":22,"font":"Microsoft YaHei","color":"#32beff"},"compId":585}]},{"type":"List","props":{"y":191,"x":376,"width":722,"var":"list1","spaceY":15,"spaceX":5,"height":316},"compId":558,"child":[{"type":"Box","props":{"name":"render"},"compId":557,"child":[{"type":"Image","props":{"skin":"ui/newMatch/img_di_l.png","name":"boxBg"},"compId":497},{"type":"Sprite","props":{"y":5,"x":13.5,"width":66,"texture":"ui/common_ex/touxiang.png","height":69},"compId":561},{"type":"Sprite","props":{"y":-10,"x":21.5,"texture":"ui/common/jijib.png"},"compId":563},{"type":"Image","props":{"y":46,"x":15,"width":63,"skin":"ui/common_ex/reward_mask.png","height":25,"sizeGrid":"3,15,13,15"},"compId":562},{"type":"Text","props":{"y":50,"x":13,"width":66,"valign":"middle","text":"4万","name":"coinNums","height":21,"fontSize":18,"font":"Microsoft YaHei","color":"#ffffff","bold":true,"align":"center","runtime":"laya.display.Text"},"compId":564},{"type":"Text","props":{"y":74,"x":7,"width":85,"valign":"middle","text":"时长：30秒","name":"time","height":19,"fontSize":15,"font":"Microsoft YaHei","color":"#e73a2b","align":"center","runtime":"laya.display.Text"},"compId":501},{"type":"Text","props":{"y":15,"x":106,"width":122,"text":"4万比赛房间","name":"name","height":21,"fontSize":20,"font":"Microsoft YaHei","color":"#0765b3","align":"center","runtime":"laya.display.Text"},"compId":502},{"type":"ProgressBar","props":{"y":69,"x":106,"width":129,"value":0.5,"skin":"ui/newMatch/bar2.png","scaleY":0.7,"name":"pro","height":28,"sizeGrid":"0,13,0,8"},"compId":559},{"type":"Image","props":{"y":72,"x":113,"skin":"ui/newMatch/img_jdt_04.png","sizeGrid":"3,12,13,13"},"compId":589},{"type":"Text","props":{"y":46,"x":130,"width":71,"text":"1/4","name":"playerCount","height":21,"fontSize":22,"font":"Microsoft YaHei","color":"#0765b3","align":"center","runtime":"laya.display.Text"},"compId":503}]}]},{"type":"Box","props":{"y":537,"x":350,"width":712,"var":"joinBox","height":92},"compId":485,"child":[{"type":"Button","props":{"y":19,"x":17,"var":"ruleBtn","stateNum":1,"skin":"ui/newMatch/btn_wh.png"},"compId":506},{"type":"Image","props":{"y":31,"x":305,"width":151,"skin":"ui/common_ex/img_k_05.png","height":37,"sizeGrid":"19,20,22,16"},"compId":566},{"type":"Button","props":{"y":24,"x":281,"var":"lastBtn","stateNum":1,"skin":"ui/newMatch/img_ljt_y.png"},"compId":510},{"type":"Button","props":{"y":24,"x":484,"var":"nextBtn","stateNum":1,"skin":"ui/newMatch/img_ljt_y.png","scaleX":-1},"compId":509},{"type":"Text","props":{"y":35.5,"x":335,"width":92,"var":"pageNum","valign":"middle","text":"1/1","height":31,"fontSize":27,"font":"Microsoft YaHei","color":"#ffffff","align":"center","runtime":"laya.display.Text"},"compId":511},{"type":"Button","props":{"y":24,"x":616,"width":137,"var":"createBtn","stateNum":2,"skin":"ui/common_ex/btn_small_yellow_1.png","height":54},"compId":512,"child":[{"type":"Text","props":{"y":12.5,"x":13,"width":113,"valign":"middle","text":"创建比赛 ","strokeColor":"#974504","stroke":3,"height":31,"fontSize":22,"color":"#ffffff","align":"center","runtime":"laya.display.Text"},"compId":565}]}]},{"type":"Label","props":{"y":518,"x":366,"width":746,"var":"activityTip","valign":"middle","text":"活动期间四人赛场每日首次胜利可以获得活动券哦！","stroke":0,"height":50,"fontSize":20,"color":"#fff44a","align":"center"},"compId":590},{"type":"Box","props":{"y":4,"x":367,"width":549,"height":153},"compId":168,"child":[{"type":"Image","props":{"y":17,"x":337,"skin":"ui/common_ex/title_border.png"},"compId":165},{"type":"Image","props":{"y":16,"x":209,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":166},{"type":"Image","props":{"y":77,"x":185,"skin":"ui/newMatch/font_bsc.png"},"compId":167}]},{"type":"Box","props":{"y":183,"x":172,"width":207,"var":"tab_box","height":172},"compId":264,"child":[{"type":"Button","props":{"y":-12,"x":2,"width":205,"var":"tab1","stateNum":3,"skin":"ui/match/bg.png","labelStrokeColor":"#664d12","labelStroke":3,"labelSize":25,"labelColors":"#feffff,#feffff,#feffff","label":"二人赛场 ","height":90},"compId":261},{"type":"Button","props":{"y":83,"x":2,"width":205,"var":"tab2","stateNum":3,"skin":"ui/match/bg.png","labelStrokeColor":"#664d12","labelStroke":3,"labelSize":25,"labelColors":"#feffff,#feffff,#feffff","label":"四人赛场 ","height":90},"compId":262}]},{"type":"Image","props":{"y":482.5,"x":1086,"skin":"ui/common_ex/grass2.png"},"compId":151},{"type":"Image","props":{"y":434.5,"x":96,"skin":"ui/common_ex/grass1.png"},"compId":150},{"type":"Box","props":{"width":1280,"var":"create_box","height":720},"compId":484,"child":[{"type":"Box","props":{"width":854,"visible":true,"height":545,"centerY":22,"centerX":13},"compId":349,"child":[{"type":"Image","props":{"y":-406,"x":-563,"width":1900,"skin":"ui/common_ex/jl_bg.png","height":1300,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":451},{"type":"Image","props":{"y":21,"x":427,"width":697,"var":"createBg","skin":"ui/common_ex/bg_index3.png","height":504,"anchorX":0.5,"sizeGrid":"50,50,50,50"},"compId":350},{"type":"Image","props":{"y":23,"x":79,"width":696,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":382},{"type":"Box","props":{"y":-51,"x":202},"compId":573,"child":[{"type":"Sprite","props":{"x":325,"texture":"ui/common_ex/title_border.png"},"compId":569},{"type":"Sprite","props":{"y":3,"x":124,"texture":"ui/common_ex/title_border.png","scaleX":-1},"compId":571},{"type":"Sprite","props":{"y":56,"x":97,"texture":"ui/newMatch/font_cjss.png"},"compId":570}]},{"type":"Button","props":{"y":420,"x":340,"width":180,"var":"create_btn","stateNum":2,"skin":"ui/common_ex/btn_small_yellow_1.png","height":74},"compId":567,"child":[{"type":"Text","props":{"y":16,"x":29.5,"width":125,"valign":"middle","text":"创建比赛 ","strokeColor":"#974504","stroke":3,"height":40,"fontSize":30,"color":"#ffffff","align":"center","runtime":"laya.display.Text"},"compId":568}]},{"type":"Box","props":{"y":145,"x":168},"compId":539,"child":[{"type":"Label","props":{"width":135,"valign":"middle","text":"比赛时长:","height":38,"fontSize":26,"font":"Microsoft YaHei","color":"#13667e"},"compId":518},{"type":"Label","props":{"y":87,"width":124,"valign":"middle","text":"比赛人数:","height":38,"fontSize":26,"font":"Microsoft YaHei","color":"#13667e"},"compId":526},{"type":"Label","props":{"y":175,"width":124,"valign":"middle","text":"场      次:","height":38,"fontSize":26,"font":"Microsoft YaHei","color":"#13667e"},"compId":529}]},{"type":"RadioGroup","props":{"y":150,"x":318,"width":358,"var":"timeRadio","skin":"ui/newMatch/btn_ls_01.png","selectedIndex":0,"scaleY":1,"scaleX":1,"labels":"  30秒    ,  3分钟    ,  5分钟","labelSize":25,"labelPadding":"3","labelFont":"Microsoft YaHei","labelColors":"#e85e02,#e85e02,#e85e02","labelBold":true,"height":29},"compId":547},{"type":"RadioGroup","props":{"y":239,"x":318,"width":224,"var":"numRadio","skin":"ui/newMatch/btn_ls_01.png","selectedIndex":0,"labels":"  2         ,  4","labelSize":25,"labelPadding":"3","labelFont":"Microsoft YaHei","labelColors":"#e85e02,#e85e02,#e85e02","labelBold":true,"height":27},"compId":548},{"type":"CheckBox","props":{"y":327,"x":590,"width":160,"var":"maxValue","skin":"ui/newMatch/checkbox.png","scaleY":0.7,"scaleX":0.7,"labelSize":30,"labelPadding":"5","labelFont":"Microsoft YaHei","labelColors":"#e85e02,#e85e02,#e85e02","labelBold":true,"label":"  最大值 ","height":38},"compId":550},{"type":"Image","props":{"y":322,"x":318,"skin":"ui/newMatch/img_di_1.png"},"compId":575},{"type":"Button","props":{"y":323,"x":499,"var":"arrowBtn","stateNum":1,"skin":"ui/newMatch/btn_xs.png"},"compId":576},{"type":"Image","props":{"y":381,"x":102,"width":693,"var":"maxValueTips","skin":"ui/common_ex/tuceng.png","height":29,"sizeGrid":"10,0,10,0"},"compId":587,"child":[{"type":"Label","props":{"y":-11,"x":83,"wordWrap":true,"width":530,"valign":"middle","text":"身上金币大于200万时创建200万场次，少于200万时为身上全部金币的场次","height":50,"fontSize":15,"font":"Microsoft YaHei","color":"#dcea3c"},"compId":586}]},{"type":"List","props":{"y":164,"x":345,"width":153,"var":"chipList","height":154},"compId":581,"child":[{"type":"Box","props":{"y":1,"x":0,"width":148,"name":"render","height":39},"compId":580,"child":[{"type":"Image","props":{"y":0,"x":0,"width":148,"skin":"ui/newMatch/img_di_2.png","height":40,"sizeGrid":"8,26,5,19"},"compId":578},{"type":"Button","props":{"y":3,"x":14,"strokeColors":"#17a1dd,#cf7116","stateNum":2,"skin":"ui/newMatch/btn_ls.png","name":"btn","labelStroke":3,"labelSize":22,"labelPadding":"4","labelFont":"Microsoft YaHei","labelColors":"#ffffff,#ffffff,#ffffff","labelAlign":"center","label":"1万 "},"compId":579}]}]},{"type":"Button","props":{"y":324,"x":358,"var":"selectedChip","stateNum":1,"skin":"ui/newMatch/btn_hs.png","labelStrokeColor":"#cf7116","labelStroke":3,"labelSize":22,"labelPadding":"4","labelFont":"Microsoft YaHei","labelColors":"#ffffff","label":"label"},"compId":582}]},{"type":"Button","props":{"width":73,"var":"createQuitBtn","top":125,"stateNum":2,"skin":"ui/common_ex/quitX.png","left":941,"height":73},"compId":351}]},{"type":"Animation","props":{"y":384,"x":658,"visible":false,"var":"wait_ani","source":"abbey/wait.ani"},"compId":258},{"type":"Box","props":{"y":0,"x":0,"width":1280,"var":"rule_box","height":720},"compId":483,"child":[{"type":"Box","props":{"y":-26,"x":-108,"width":851,"visible":true,"height":618,"centerY":0,"centerX":0},"compId":356,"child":[{"type":"Image","props":{"y":-326,"x":-497,"width":1900,"skin":"ui/common_ex/jl_bg.png","height":1300,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":405},{"type":"Image","props":{"y":93,"x":424,"width":838,"skin":"ui/common_ex/bg_index0.png","height":524,"anchorX":0.5,"sizeGrid":"50,50,50,50"},"compId":358},{"type":"Image","props":{"y":168,"x":50,"width":753,"skin":"ui/common_ex/bg_index2.png","height":354,"sizeGrid":"40,40,40,40"},"compId":514},{"type":"Image","props":{"y":86,"x":0,"width":850,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":363},{"type":"Box","props":{"y":0,"x":139,"width":549,"height":153},"compId":359,"child":[{"type":"Image","props":{"y":6,"x":400,"skin":"ui/common_ex/title_border.png"},"compId":360},{"type":"Image","props":{"y":6,"x":220,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":361},{"type":"Image","props":{"y":68,"x":183,"skin":"ui/match/bisgz.png"},"compId":362}]},{"type":"Label","props":{"y":218,"x":97,"wordWrap":true,"width":657,"var":"rule_match_type","text":"1、报名比赛后，每个玩家有2400比赛币，发射子弹消耗比赛币。捕获鱼后可获得鱼倍数对应的宝珠。\\n\\n2、比赛时间截止后，根据宝珠进行排名。宝珠最高的玩家将赢得对应场次的金币。\\n\\n3、若在比赛过程中提前离场，系统将扣除报名费的60%作为惩罚。","leading":10,"height":304,"fontSize":24,"font":"Microsoft YaHei","color":"#FFFFFF","bold":true},"compId":377},{"type":"Button","props":{"y":532,"x":341,"width":169,"var":"ruleQuitBtn","stateNum":2,"skin":"ui/common_ex/btn_small_green_1.png","height":66},"compId":515,"child":[{"type":"Sprite","props":{"y":18.5,"x":57,"texture":"ui/common_ex/confirm.png"},"compId":516}]}]}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index0.png","ui/common_ex/bg_index1.png","ui/common_ex/head_2.png","ui/common_ex/quit.png","ui/common_ex/bg_index2.png","ui/newMatch/img_px.png","ui/newMatch/img_di_l.png","ui/common_ex/touxiang.png","ui/common/jijib.png","ui/common_ex/reward_mask.png","ui/newMatch/bar2.png","ui/newMatch/img_jdt_04.png","ui/newMatch/btn_wh.png","ui/common_ex/img_k_05.png","ui/newMatch/img_ljt_y.png","ui/common_ex/btn_small_yellow_1.png","ui/common_ex/title_border.png","ui/newMatch/font_bsc.png","ui/match/bg.png","ui/common_ex/grass2.png","ui/common_ex/grass1.png","ui/common_ex/bg_index3.png","ui/newMatch/font_cjss.png","ui/newMatch/btn_ls_01.png","ui/newMatch/checkbox.png","ui/newMatch/img_di_1.png","ui/newMatch/btn_xs.png","ui/common_ex/tuceng.png","ui/newMatch/img_di_2.png","ui/newMatch/btn_ls.png","ui/newMatch/btn_hs.png","ui/common_ex/quitX.png","abbey/wait.ani","ui/match/bisgz.png","ui/common_ex/btn_small_green_1.png","ui/common_ex/confirm.png"],"loadList3D":[]};	
		

		class NoviceGuidePageUI extends View{
			constructor (){
				super();
				//this.mask2=null;
				//this.addedBox=null;
				//this.list1=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(NoviceGuidePageUI.uiView);
			}
		}

		ui.abbey.NoviceGuidePageUI=Laya.NoviceGuidePageUI=NoviceGuidePageUI;
		NoviceGuidePageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":0,"x":0,"width":1280,"var":"mask2","skin":"ui/common_ex/jl_bg.png","height":720,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":54},{"type":"Box","props":{"y":0,"x":0,"width":1280,"var":"addedBox","height":720},"compId":56},{"type":"Box","props":{"width":1280,"name":"steps1","height":720},"compId":57,"child":[{"type":"Box","props":{"x":230,"visible":false,"name":"step_fight","centerY":50},"compId":59,"child":[{"type":"Image","props":{"x":60,"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":60},{"type":"Image","props":{"y":300,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":61},{"type":"Label","props":{"y":325,"x":22,"width":280,"text":"点击深海巨鲸进入鱼场","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":66}]},{"type":"Box","props":{"y":510,"x":360,"visible":false,"name":"step_click1"},"compId":62,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/weizhi.png"},"compId":65}]},{"type":"Box","props":{"y":513,"x":60,"visible":false,"name":"step_click2"},"compId":67,"child":[{"type":"Image","props":{"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":68},{"type":"Label","props":{"y":25,"x":15,"text":"此处显示您的金币和钻石","fontSize":26,"color":"#ffffff"},"compId":69},{"type":"Image","props":{"y":74,"x":125,"skin":"ui/noviceGuide/jiantou.png"},"compId":140}]},{"type":"Box","props":{"visible":false,"name":"step_click3","centerY":0,"centerX":0},"compId":84,"child":[{"type":"Image","props":{"y":-100,"x":150,"skin":"ui/noviceGuide/shouzhi.png"},"compId":82},{"type":"Image","props":{"skin":"ui/noviceGuide/tishi_fp.png"},"compId":83}]},{"type":"Box","props":{"width":759,"visible":false,"name":"yzcb","height":621,"centerY":-16,"centerX":13},"compId":91,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/yzcb.png"},"compId":92},{"type":"Button","props":{"y":16,"x":687,"stateNum":2,"skin":"ui/common_ex/quit.png"},"compId":142},{"type":"Image","props":{"y":-45,"x":630,"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":143}]},{"type":"Box","props":{"visible":false,"name":"step_slider","left":-10,"centerY":220},"compId":70,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":71},{"type":"Image","props":{"y":50,"x":200,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":73},{"type":"Label","props":{"y":75,"x":220,"width":276,"text":"点击向右的箭头","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":72}]},{"type":"Box","props":{"y":489,"visible":false,"name":"step_new","left":60,"centerY":220},"compId":93,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":94},{"type":"Image","props":{"y":50,"x":200,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":95},{"type":"Label","props":{"y":75,"x":220,"width":276,"text":"点击福利按钮","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":96}]},{"type":"Box","props":{"visible":false,"name":"step_linqu","centerY":20,"centerX":330},"compId":97,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":98},{"type":"Image","props":{"y":50,"x":-350,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":99},{"type":"Label","props":{"y":75,"x":-330,"width":276,"text":"点击领取","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":100}]},{"type":"Box","props":{"visible":false,"top":-50,"name":"step_close1","left":-50},"compId":101,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":102},{"type":"Image","props":{"y":134,"x":187,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":103},{"type":"Label","props":{"y":159,"x":207,"width":276,"text":"点击关闭","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":104}]},{"type":"Box","props":{"visible":false,"name":"step_up","left":130,"centerY":-200},"compId":105,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":106},{"type":"Image","props":{"y":180,"x":-70,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":107},{"type":"Label","props":{"y":205,"x":-50,"width":276,"text":"点击解锁","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":108}]},{"type":"Box","props":{"y":578,"x":225,"visible":false,"name":"step_change"},"compId":109,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":110},{"type":"Image","props":{"y":-100,"x":-70,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":111},{"type":"Label","props":{"y":-75,"x":-50,"width":276,"text":"点击切换炮台倍率","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":112}]},{"type":"Box","props":{"visible":false,"top":-40,"name":"step_task1","centerX":60},"compId":113,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":114},{"type":"Image","props":{"y":180,"x":-70,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":115},{"type":"Label","props":{"y":205,"x":-50,"width":276,"text":"点击打开任务面板","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":116}]},{"type":"Box","props":{"visible":false,"name":"step_task2","centerY":-30,"centerX":350},"compId":117,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":118},{"type":"Image","props":{"y":50,"x":-350,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":119},{"type":"Label","props":{"y":75,"x":-330,"width":276,"text":"点击前往使用道具","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":120}]},{"type":"Box","props":{"visible":false,"right":10,"name":"step_task3","centerY":-135},"compId":202,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":203},{"type":"Image","props":{"y":46,"x":-319,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":204},{"type":"Label","props":{"y":71,"x":-299,"width":276,"text":"点击使用冰冻道具","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":205}]},{"type":"Box","props":{"visible":false,"top":-40,"name":"step_task4","centerX":60},"compId":206,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":207},{"type":"Image","props":{"y":180,"x":-70,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":208},{"type":"Label","props":{"y":205,"x":-50,"width":276,"text":"点击打开领取任务奖励","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":209}]},{"type":"Box","props":{"visible":false,"name":"step_xsyd1","centerY":0,"centerX":0},"compId":121,"child":[{"type":"Image","props":{"width":900,"skin":"ui/noviceGuide/xsyd.png","sizeGrid":"0,240,0,240"},"compId":123},{"type":"Image","props":{"y":-41,"x":248,"skin":"ui/noviceGuide/title_xinshou.png"},"compId":122},{"type":"Label","props":{"y":78,"x":202,"width":530,"text":"每次开炮都消耗金币，成功捕鱼也能获得金币，\\n请注意自己的金币变化。","height":60,"fontSize":30,"color":"#ffffff"},"compId":130}]},{"type":"Box","props":{"visible":false,"name":"step_xsyd2","centerY":0,"centerX":0},"compId":124,"child":[{"type":"Image","props":{"x":0,"width":900,"skin":"ui/noviceGuide/xsyd.png","sizeGrid":"0,240,0,240"},"compId":132},{"type":"Image","props":{"y":-42,"x":248,"skin":"ui/noviceGuide/title_xinshou.png"},"compId":133},{"type":"Label","props":{"y":78,"x":200,"width":530,"text":"使用更大倍数的炮捕获鱼将会获得更多的金币，\\n同时也将消耗成倍的金币。","height":60,"fontSize":30,"color":"#ffffff"},"compId":134}]},{"type":"Box","props":{"visible":false,"name":"step_xsyd3","centerY":0,"centerX":0},"compId":136,"child":[{"type":"Image","props":{"x":0,"width":900,"skin":"ui/noviceGuide/xsyd.png","sizeGrid":"0,240,0,240"},"compId":137},{"type":"Image","props":{"y":-42,"x":248,"skin":"ui/noviceGuide/title_xinshou.png"},"compId":138},{"type":"Label","props":{"y":78,"x":200,"width":530,"text":"开始愉快地捕鱼吧。解锁更高倍率的炮可以\\n前往更高等级的鱼场。千万金币等您来爆！","height":60,"fontSize":30,"color":"#ffffff"},"compId":139}]},{"type":"Box","props":{"y":10,"visible":false,"name":"step_quitfight","left":140,"centerY":220},"compId":229,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":230},{"type":"Image","props":{"y":50,"x":200,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":231},{"type":"Label","props":{"y":75,"x":220,"width":276,"text":"点击返回","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":232}]},{"type":"Box","props":{"width":184,"visible":false,"right":976,"name":"step_follow","height":182,"bottom":-20},"compId":233,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":234},{"type":"Image","props":{"y":-107,"x":-61,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":235},{"type":"Label","props":{"y":-85,"x":-41,"width":276,"text":"关注公众号","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":236}]}]},{"type":"Box","props":{"y":0,"x":0,"width":1280,"name":"steps2","height":720},"compId":145,"child":[{"type":"Box","props":{"visible":false,"right":630,"name":"step_rank","bottom":-30},"compId":146,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":147},{"type":"Image","props":{"y":50,"x":-350,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":148},{"type":"Label","props":{"y":75,"x":-330,"width":276,"text":"点击排行榜","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":149}]},{"type":"Box","props":{"visible":false,"top":-50,"name":"step_rankQuit","left":-50},"compId":150,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":151},{"type":"Image","props":{"y":119,"x":209,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":152},{"type":"Label","props":{"y":144,"x":229,"width":276,"text":"点击关闭","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":153}]},{"type":"Box","props":{"visible":false,"name":"step_xsyd4","centerY":0,"centerX":0},"compId":172,"child":[{"type":"Image","props":{"x":0,"width":900,"skin":"ui/noviceGuide/xsyd.png","sizeGrid":"0,240,0,240"},"compId":173},{"type":"Image","props":{"y":-42,"x":248,"skin":"ui/noviceGuide/title_xinshou.png"},"compId":174},{"type":"Label","props":{"y":78,"x":200,"width":530,"text":"恭喜您解锁100倍炮，接下来将为您介绍\\n更多玩法。","height":60,"fontSize":30,"color":"#ffffff"},"compId":175}]},{"type":"Box","props":{"visible":false,"name":"step_slider","centerY":0,"centerX":231},"compId":154,"child":[{"type":"Image","props":{"y":-89,"x":-116,"skin":"ui/noviceGuide/jiantou2.png"},"compId":171},{"type":"Image","props":{"y":201,"x":-219,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":156},{"type":"Image","props":{"y":194,"x":103,"skin":"ui/noviceGuide/shouzhi.png"},"compId":177},{"type":"Label","props":{"y":226,"x":-199,"width":276,"text":"滑动到竞技场","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":157}]},{"type":"Box","props":{"visible":false,"right":300,"name":"step_open","centerY":-20},"compId":158,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":159},{"type":"Image","props":{"y":205,"x":-89,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":160},{"type":"Label","props":{"y":230,"x":-69,"width":276,"text":"点击进入比赛场","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":161}]},{"type":"Box","props":{"visible":false,"name":"step_contest","centerY":-50,"centerX":420},"compId":162,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":163},{"type":"Image","props":{"y":199,"x":-64,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":164},{"type":"Label","props":{"y":224,"x":-44,"width":276,"text":"点击免费报名","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":165}]},{"type":"Box","props":{"visible":false,"name":"step_confirm","centerY":90,"centerX":150},"compId":166,"child":[{"type":"Image","props":{"y":52,"x":0,"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":167},{"type":"Image","props":{"y":205,"x":-83,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":168},{"type":"Label","props":{"y":230,"x":-63,"width":276,"text":"点击确定","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":169}]},{"type":"Box","props":{"visible":false,"name":"step_xsyd5","centerY":0,"centerX":0},"compId":178,"child":[{"type":"Image","props":{"x":0,"width":900,"skin":"ui/noviceGuide/xsyd.png","sizeGrid":"0,240,0,240"},"compId":179},{"type":"Image","props":{"y":-42,"x":248,"skin":"ui/noviceGuide/title_xinshou.png"},"compId":180},{"type":"Label","props":{"y":78,"x":200,"width":530,"text":"欢迎来到竞技场。在竞技场中发射子弹\\n不需要消耗金币。","height":60,"fontSize":30,"color":"#ffffff"},"compId":181}]},{"type":"Box","props":{"y":513,"x":61,"visible":false,"name":"step_click4"},"compId":190,"child":[{"type":"Image","props":{"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":191},{"type":"Label","props":{"y":25,"x":15,"text":"此处显示您的子弹和积分","fontSize":26,"color":"#ffffff"},"compId":192},{"type":"Image","props":{"y":74,"x":125,"skin":"ui/noviceGuide/jiantou.png"},"compId":193}]},{"type":"Box","props":{"visible":false,"top":100,"name":"step_click5","centerX":0},"compId":194,"child":[{"type":"Image","props":{"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":120,"sizeGrid":"20,20,20,20"},"compId":195},{"type":"Label","props":{"y":25,"x":15,"text":"此处显示本场比赛倒计时\\n倒计时结束直接进行结算","leading":5,"fontSize":26,"color":"#ffffff"},"compId":196},{"type":"Image","props":{"x":125,"skin":"ui/noviceGuide/jiantou.png","scaleY":-1},"compId":197}]},{"type":"Box","props":{"visible":false,"name":"step_xsyd6","centerY":0,"centerX":0},"compId":182,"child":[{"type":"Image","props":{"x":0,"width":900,"skin":"ui/noviceGuide/xsyd.png","sizeGrid":"0,240,0,240"},"compId":183},{"type":"Image","props":{"y":-42,"x":248,"skin":"ui/noviceGuide/title_xinshou.png"},"compId":184},{"type":"Label","props":{"y":78,"x":200,"width":530,"text":"日常赛将根据每天获得的最高分进行排名。\\n每天都有一次免费的比赛机会，请开始捕鱼吧。","leading":5,"height":60,"fontSize":30,"color":"#ffffff"},"compId":185}]},{"type":"List","props":{"width":1280,"visible":false,"var":"list1","spaceX":-250,"repeatY":1,"height":476,"centerY":-20,"anchorY":0.5},"compId":210,"child":[{"type":"Box","props":{"width":3060,"renderType":"render","name":"render","height":400,"centerY":-20},"compId":211},{"type":"HScrollBar","props":{"name":"scrollBar"},"compId":212}]}]},{"type":"Box","props":{"width":1280,"name":"steps3","height":720},"compId":241,"child":[{"type":"Box","props":{"width":182,"visible":false,"right":630,"name":"step_rank","height":182,"bottom":-30,"anchorY":0.5,"anchorX":0.5},"compId":221,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":222},{"type":"Image","props":{"y":50,"x":-350,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":223},{"type":"Label","props":{"y":75,"x":-330,"width":276,"text":"点击排行榜","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":224}]},{"type":"Box","props":{"visible":false,"top":-50,"name":"step_quit_rank","left":-50},"compId":237,"child":[{"type":"Image","props":{"skin":"ui/noviceGuide/tishi.png","name":"click"},"compId":238},{"type":"Image","props":{"y":60,"x":190,"width":318,"skin":"ui/noviceGuide/kuang_wz.png","height":85,"sizeGrid":"20,20,20,20"},"compId":239},{"type":"Label","props":{"y":81,"x":206,"width":276,"text":"退出排行榜","height":42,"fontSize":26,"color":"#ffffff","align":"center"},"compId":240}]}]}],"loadList":["ui/common_ex/jl_bg.png","ui/noviceGuide/tishi.png","ui/noviceGuide/kuang_wz.png","ui/noviceGuide/weizhi.png","ui/noviceGuide/jiantou.png","ui/noviceGuide/shouzhi.png","ui/noviceGuide/tishi_fp.png","ui/noviceGuide/yzcb.png","ui/common_ex/quit.png","ui/noviceGuide/xsyd.png","ui/noviceGuide/title_xinshou.png","ui/noviceGuide/jiantou2.png"],"loadList3D":[]};	
		

		class PackPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.list1=null;
				//this.detail_box=null;
				//this.detail_icon=null;
				//this.detail_name=null;
				//this.detail_desc=null;
				//this.gift_records_btn=null;
				//this.gift_record_txt_1=null;
				//this.gift_record_txt_2=null;
				//this.gift_btn=null;
				//this.use_prop=null;
				//this.usePropFontClip=null;
				//this.use_all_prop=null;
				//this.useAllPropClip=null;
				//this.mask1=null;
				//this.mask2=null;
				//this.order_view=null;
				//this.box_labels=null;
				//this.list2=null;
				//this.quitOrder=null;
				//this.tip_box=null;
				//this.box1=null;
				//this.title_txt=null;
				//this.useBtn=null;
				//this.grantBtn=null;
				//this.box2=null;
				//this.input_userid=null;
				//this.query_btn=null;
				//this.userinfo_box=null;
				//this.userimg=null;
				//this.username=null;
				//this.gift_icon=null;
				//this.gift_name=null;
				//this.item_count=null;
				//this.count_jia=null;
				//this.count_jian=null;
				//this.gift_confirm=null;
				//this.quit_gift_box=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(PackPageUI.uiView);
			}
		}

		ui.abbey.PackPageUI=Laya.PackPageUI=PackPageUI;
		PackPageUI.uiView={"type":"View","props":{"width":1280,"skin":"ui/exchange/tab_diamond.png","height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"y":-227,"x":-315,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":184},{"type":"Image","props":{"y":106,"x":180,"width":930,"skin":"ui/common_ex/bg_index0.png","height":521,"sizeGrid":"50,50,50,50"},"compId":116},{"type":"Image","props":{"y":150,"x":205,"width":885,"skin":"ui/common_ex/bg_index1.png","height":455,"sizeGrid":"30,30,30,30"},"compId":117},{"type":"Image","props":{"y":160,"x":663,"width":400,"skin":"ui/pack/beib_di1.png","height":430,"sizeGrid":"25,25,25,25"},"compId":342},{"type":"Image","props":{"y":160,"x":228,"width":400,"skin":"ui/pack/beib_di2.png","height":430,"sizeGrid":"25,25,25,25"},"compId":341},{"type":"Image","props":{"y":103,"x":176,"width":942,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":194},{"type":"Box","props":{"y":0,"x":428},"compId":320,"child":[{"type":"Image","props":{"y":5,"x":265,"skin":"ui/common_ex/title_border.png"},"compId":321},{"type":"Image","props":{"y":5,"x":156,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":322},{"type":"Image","props":{"y":50,"x":120,"skin":"ui/pack/beib_beob.png"},"compId":323}]},{"type":"Image","props":{"y":413,"x":92,"skin":"ui/common_ex/grass1.png"},"compId":150},{"type":"Image","props":{"y":446,"x":1066,"skin":"ui/common_ex/grass2.png"},"compId":151},{"type":"Button","props":{"y":0,"x":0,"var":"quitBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":120},{"type":"List","props":{"y":170,"x":228,"width":398,"var":"list1","spaceY":9,"spaceX":6,"repeatY":4,"repeatX":4,"renderType":"render","height":407},"compId":102,"child":[{"type":"Box","props":{"y":10,"x":10,"width":90,"name":"render","height":90},"compId":93,"child":[{"type":"Image","props":{"y":0,"x":0,"width":100,"skin":"ui/common_ex/touxiang.png","scaleY":0.9,"scaleX":0.9,"height":100},"compId":324},{"type":"Image","props":{"y":5,"x":8,"width":75,"skin":"ui/common/yulei1.png","name":"img","height":75},"compId":86},{"type":"Label","props":{"y":60,"x":3,"width":80,"text":"5","name":"item_count","fontSize":20,"color":"#ffffff","bold":true,"align":"right"},"compId":264},{"type":"Image","props":{"y":-11,"x":-10,"width":110,"skin":"ui/pack/beib_di3.png","name":"select_bg","height":110,"sizeGrid":"30,30,30,30"},"compId":343}]}]},{"type":"Box","props":{"y":190,"x":808,"var":"detail_box"},"compId":267,"child":[{"type":"Image","props":{"y":130,"x":-25,"width":160,"skin":"ui/pack/beib_di5.png","sizeGrid":"0,0,0,0"},"compId":345},{"type":"Image","props":{"y":75,"x":55,"var":"detail_icon","scaleY":1.5,"scaleX":1.5,"anchorY":0.5,"anchorX":0.5},"compId":266},{"type":"Image","props":{"y":215,"x":-100,"width":320,"skin":"ui/pack/beib_di4.png","height":100,"sizeGrid":"25,25,25,25"},"compId":344},{"type":"Label","props":{"y":180,"x":-18,"width":150,"var":"detail_name","text":"普通鱼雷","height":40,"fontSize":25,"color":"#ff3000","align":"center"},"compId":268},{"type":"Label","props":{"y":220,"x":-90,"wordWrap":true,"width":300,"var":"detail_desc","text":"道具说明","height":90,"fontSize":20,"color":"#116780","align":"left"},"compId":269},{"type":"Button","props":{"y":330,"x":-100,"width":150,"var":"gift_records_btn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":46},"compId":270,"child":[{"type":"Image","props":{"y":10,"x":55,"var":"gift_record_txt_1","skin":"ui/common_ex/t_accept.png"},"compId":360},{"type":"Image","props":{"y":10,"x":35,"var":"gift_record_txt_2","skin":"ui/pack/beib_bwn_jil.png"},"compId":311}]},{"type":"Button","props":{"y":330,"x":70,"var":"gift_btn","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":271,"child":[{"type":"Image","props":{"y":8,"x":50,"skin":"ui/pack/beib_bwn_zc.png"},"compId":312}]},{"type":"Button","props":{"y":328,"x":70,"var":"use_prop","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":363,"child":[{"type":"FontClip","props":{"var":"usePropFontClip","value":"使用","skin":"font/word_green.png","sheet":"存入取消查看确定装备邀请 一键升级返回大厅反馈分享 礼包码炫耀下领奖励提交开 启使用完成布置规则询赠送 购买个观看广告订阅兑换全 部","scaleY":0.6,"scaleX":0.6,"centerY":0,"centerX":0},"compId":364}]},{"type":"Button","props":{"y":328,"x":70,"var":"use_all_prop","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":365,"child":[{"type":"FontClip","props":{"y":0,"x":0,"var":"useAllPropClip","value":"全部使用","skin":"font/word_green.png","sheet":"存入取消查看确定装备邀请 一键升级返回大厅反馈分享 礼包码炫耀下领奖励提交开 启使用完成布置规则询赠送 购买个观看广告订阅兑换全 部","scaleY":0.6,"scaleX":0.6,"centerY":0,"centerX":0},"compId":462}]}]},{"type":"Image","props":{"y":-256,"x":-287,"width":1900,"visible":false,"var":"mask1","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":262},{"type":"Image","props":{"y":-246,"x":-277,"width":1900,"visible":false,"var":"mask2","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":358},{"type":"Box","props":{"y":99,"x":172,"width":937,"var":"order_view","height":523},"compId":308,"child":[{"type":"Image","props":{"y":3,"x":5,"width":920,"skin":"ui/common_ex/bg_index0.png","height":520,"sizeGrid":"50,50,50,50"},"compId":309},{"type":"Image","props":{"y":32,"x":25,"width":880,"skin":"ui/common_ex/bg_index1.png","height":470,"sizeGrid":"30,30,30,30"},"compId":355},{"type":"Image","props":{"y":-1,"x":0,"width":942,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":353},{"type":"Image","props":{"y":-100,"x":503,"skin":"ui/common_ex/title_border.png"},"compId":350,"child":[{"type":"Image","props":{"y":0,"x":-92,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":351},{"type":"Image","props":{"y":46,"x":-139,"skin":"ui/pack/beib_jil.png"},"compId":352}]},{"type":"Box","props":{"y":67,"x":75,"var":"box_labels"},"compId":301,"child":[{"type":"Label","props":{"y":-5,"x":0,"width":122,"text":"物品数量","height":39,"fontSize":28,"color":"#edf1fd"},"compId":302},{"type":"Label","props":{"y":-5,"x":148,"width":122,"text":"赠送玩家","height":39,"fontSize":28,"color":"#edf1fd"},"compId":303},{"type":"Label","props":{"y":-5,"x":318,"width":122,"text":"获赠玩家","height":39,"fontSize":28,"color":"#edf1fd"},"compId":304},{"type":"Label","props":{"y":-5,"x":514,"width":122,"text":"赠送时间","height":39,"fontSize":28,"color":"#edf1fd"},"compId":305},{"type":"Label","props":{"y":-5,"x":698,"width":122,"text":"状态","height":39,"fontSize":28,"color":"#edf1fd"},"compId":306}]},{"type":"List","props":{"y":102,"x":25,"width":890,"var":"list2","renderType":"render","height":370},"compId":292,"child":[{"type":"Box","props":{"y":10,"x":30,"width":830,"name":"render","height":100},"compId":293,"child":[{"type":"Image","props":{"width":830,"skin":"ui/common_ex/task.png","height":90,"sizeGrid":"30,30,30,30"},"compId":294},{"type":"Image","props":{"y":39,"x":38,"skin":"ui/common/yulei1.png","scaleY":0.6,"scaleX":0.6,"name":"item_img","anchorY":0.5,"anchorX":0.5},"compId":354},{"type":"Label","props":{"y":29,"x":71,"width":58,"text":"20","name":"item_name","height":26,"fontSize":26,"color":"#112ae1","bold":true,"align":"left"},"compId":295},{"type":"Image","props":{"y":40,"x":172,"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8,"anchorY":0.5,"anchorX":0.5},"compId":361},{"type":"Image","props":{"y":40,"x":360,"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8,"anchorY":0.5,"anchorX":0.5},"compId":362},{"type":"Image","props":{"y":39,"x":172,"width":100,"skin":"ui/common/nan.png","scaleY":0.6,"scaleX":0.6,"name":"gift_avatar","height":100,"anchorY":0.5,"anchorX":0.5},"compId":356},{"type":"Label","props":{"y":30,"x":266,"width":118,"text":"2000","name":"gift_name","height":24,"fontSize":24,"color":"#1690e6","bold":true,"anchorX":0.5,"align":"left"},"compId":297},{"type":"Image","props":{"y":40,"x":360,"width":100,"skin":"ui/common/nan.png","scaleY":0.6,"scaleX":0.6,"name":"receive_avatar","height":100,"anchorY":0.5,"anchorX":0.5},"compId":357},{"type":"Label","props":{"y":30,"x":455,"width":112,"text":"2000","name":"receive_name","height":24,"fontSize":24,"color":"#1690e6","bold":true,"anchorX":0.5,"align":"left"},"compId":298},{"type":"Label","props":{"y":30,"x":591,"width":180,"text":"2017.9.2","name":"time","fontSize":24,"color":"#1690e6","bold":true,"anchorX":0.5,"align":"center"},"compId":307},{"type":"Button","props":{"y":24,"x":700,"width":100,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","name":"op_bg","height":36},"compId":359},{"type":"Image","props":{"y":29,"x":750,"name":"op","anchorX":0.5},"compId":299}]},{"type":"VScrollBar","props":{"y":0,"x":880,"width":0,"showButtons":false,"name":"scrollBar","height":0},"compId":300}]}]},{"type":"Button","props":{"y":0,"x":0,"visible":false,"var":"quitOrder","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":310},{"type":"Box","props":{"y":-1,"x":-1,"width":1280,"var":"tip_box","height":720},"compId":367,"child":[{"type":"Image","props":{"y":-290,"x":-310,"width":1900,"skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":368},{"type":"Image","props":{"y":185,"x":340,"width":600,"skin":"ui/common_ex/bg_index3.png","height":400,"sizeGrid":"50,50,50,50"},"compId":369},{"type":"Image","props":{"y":180,"x":340,"width":600,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":370},{"type":"Image","props":{"y":85,"x":672,"skin":"ui/common_ex/title_border.png"},"compId":371},{"type":"Image","props":{"y":85,"x":605,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":372},{"type":"Box","props":{"y":158,"x":446,"var":"box1"},"compId":373,"child":[{"type":"Label","props":{"y":144,"x":200,"var":"title_txt","text":"是否直接使用月卡/周卡？","strokeColor":"#37ca54","fontSize":26,"font":"Microsoft YaHei","color":"#136673","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":374},{"type":"Box","props":{"y":286,"width":150,"var":"useBtn","height":46},"compId":376,"child":[{"type":"Button","props":{"y":0,"x":0,"width":150,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":46},"compId":377},{"type":"Sprite","props":{"y":9,"x":43,"width":51,"texture":"ui/pack/useGoods.png","height":27},"compId":460}]},{"type":"Box","props":{"y":287,"x":240,"width":150,"var":"grantBtn","height":46},"compId":379,"child":[{"type":"Button","props":{"width":150,"stateNum":2,"skin":"ui/common_ex/btn_green.png","height":46},"compId":380},{"type":"Sprite","props":{"y":9,"x":51,"texture":"ui/pack/beib_bwn_zc.png"},"compId":461}]},{"type":"Image","props":{"x":127,"width":134,"skin":"ui/common/title_prompt.png","height":68},"compId":382}]},{"type":"Box","props":{"y":146,"x":396,"var":"box2"},"compId":383,"child":[{"type":"Image","props":{"y":-1,"x":176,"skin":"ui/pack/beib_zs.png"},"compId":439},{"type":"Text","props":{"y":114,"x":8,"width":150,"text":"赠送人ID：","fontSize":26,"color":"#116780","align":"left","runtime":"laya.display.Text"},"compId":440},{"type":"TextInput","props":{"y":114,"x":168,"width":220,"var":"input_userid","skin":"ui/pack/kuang1.png","promptColor":"#fbfbfb","prompt":"请输入用户ID","height":38,"fontSize":26,"color":"#ffffff","bold":true,"align":"center","sizeGrid":"15,15,15,15"},"compId":441},{"type":"Button","props":{"y":119,"x":398,"width":80,"var":"query_btn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":30},"compId":442,"child":[{"type":"Image","props":{"y":5,"x":25,"skin":"ui/pack/beib_bwn_chax.png"},"compId":443}]},{"type":"Box","props":{"y":159,"x":170,"visible":false,"var":"userinfo_box"},"compId":444,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":445},{"type":"Image","props":{"y":2,"x":2,"width":62,"var":"userimg","skin":"ui/common/nan.png","height":62},"compId":446},{"type":"Text","props":{"y":20,"x":110,"var":"username","text":"用户名","fontSize":22,"color":"#116780","bold":true,"align":"left","runtime":"laya.display.Text"},"compId":447}]},{"type":"Image","props":{"y":284,"x":78,"var":"gift_icon","anchorY":0.5,"anchorX":0.5},"compId":448},{"type":"Text","props":{"y":274,"x":148,"width":100,"var":"gift_name","text":"普通鱼雷","fontSize":22,"color":"#116780","bold":true,"align":"left","runtime":"laya.display.Text"},"compId":449},{"type":"Image","props":{"y":269,"x":328,"width":120,"skin":"ui/pack/beib_di5.png","sizeGrid":"15,15,15,15","height":38},"compId":450},{"type":"FontClip","props":{"y":288,"x":390,"var":"item_count","value":"1234","skin":"ui/common_ex/rmb.png","sheet":"0123456789","anchorY":0.5,"anchorX":0.5},"compId":451},{"type":"Image","props":{"y":254,"x":448,"var":"count_jia","skin":"ui/pack/beib_jiah.png"},"compId":452},{"type":"Image","props":{"y":254,"x":268,"var":"count_jian","skin":"ui/pack/beib_jianha.png"},"compId":453},{"type":"Button","props":{"y":348,"x":161,"var":"gift_confirm","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":454,"child":[{"type":"Image","props":{"y":8,"x":52,"skin":"ui/pack/beib_bwn_zc.png"},"compId":455}]}]}]},{"type":"Button","props":{"var":"quit_gift_box","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":395}],"loadList":["ui/exchange/tab_diamond.png","ui/common_ex/jl_bg.png","ui/common_ex/bg_index0.png","ui/common_ex/bg_index1.png","ui/pack/beib_di1.png","ui/pack/beib_di2.png","ui/common_ex/head_2.png","ui/common_ex/title_border.png","ui/pack/beib_beob.png","ui/common_ex/grass1.png","ui/common_ex/grass2.png","ui/common_ex/quit.png","ui/common_ex/touxiang.png","ui/common/yulei1.png","ui/pack/beib_di3.png","ui/pack/beib_di5.png","ui/pack/beib_di4.png","ui/common_ex/btn_yellow.png","ui/common_ex/t_accept.png","ui/pack/beib_bwn_jil.png","ui/common_ex/btn_green.png","ui/pack/beib_bwn_zc.png","font/word_green.png","ui/pack/beib_jil.png","ui/common_ex/task.png","ui/common/nan.png","ui/common_ex/bg_index3.png","ui/pack/useGoods.png","ui/common/title_prompt.png","ui/pack/beib_zs.png","ui/pack/kuang1.png","ui/pack/beib_bwn_chax.png","ui/common_ex/rmb.png","ui/pack/beib_jiah.png","ui/pack/beib_jianha.png"],"loadList3D":[]};	
		

		class PathEditorUI extends View{
			constructor (){
				super();
				//this.nextBtn=null;
				//this.preBtn=null;
				//this.startAngle=null;
				//this.cureLength=null;
				//this.pathtxt=null;
				//this.beiLength=null;
				//this.bezierArg=null;
				//this.selectPointTip=null;
				//this.mirrorBtn=null;
				//this.mirrorTip=null;
				//this.uniformInfo=null;
				//this.uniformBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(PathEditorUI.uiView);
			}
		}

		ui.abbey.PathEditorUI=Laya.PathEditorUI=PathEditorUI;
		PathEditorUI.uiView={"type":"View","props":{"y":0,"x":0,"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":0,"x":0,"width":1280,"skin":"ui/pathEditor/pathEditor_0.png","height":720},"compId":2},{"type":"Button","props":{"y":420,"x":1156,"width":92,"var":"nextBtn","skin":"ui/pathEditor/button.png","labelSize":25,"label":"下一条","height":40},"compId":5},{"type":"Button","props":{"y":478,"x":1161,"width":92,"var":"preBtn","skin":"ui/pathEditor/button.png","labelSize":25,"label":"上一条","height":40},"compId":6},{"type":"TextInput","props":{"y":270,"x":1136,"width":128,"var":"startAngle","type":"number","text":"dsd","skin":"ui/pathEditor/textinput.png","height":44,"fontSize":23,"color":"#0d2c7a","bold":true,"align":"center"},"compId":11},{"type":"Label","props":{"y":234,"x":1136,"width":105,"text":"初始角度","height":24,"fontSize":25,"color":"#0b0b0b","bold":true},"compId":12},{"type":"Label","props":{"y":72,"x":653,"width":103,"text":"曲线长度","height":33,"fontSize":25,"color":"#0b0b0b","bold":true},"compId":13},{"type":"TextInput","props":{"y":66,"x":780,"width":128,"var":"cureLength","type":"number","skin":"ui/pathEditor/textinput.png","height":44,"fontSize":24,"bold":true,"align":"center"},"compId":14},{"type":"Label","props":{"y":11,"x":1127,"width":125,"var":"pathtxt","text":"路径ID","height":29,"fontSize":25,"color":"#0d0d0d","bold":true},"compId":15},{"type":"Label","props":{"y":11,"x":10,"width":109,"text":"分段信息","height":32,"fontSize":25,"color":"#040504","bold":true},"compId":16},{"type":"TextInput","props":{"y":8,"x":126,"width":513,"var":"beiLength","skin":"ui/pathEditor/textinput.png","height":44},"compId":17},{"type":"Label","props":{"y":324,"x":1146,"width":105,"text":"曲线参数","height":24,"fontSize":25,"color":"#080808","bold":true},"compId":18},{"type":"TextInput","props":{"y":359,"x":1139,"width":128,"var":"bezierArg","type":"number","skin":"ui/pathEditor/textinput.png","height":44,"fontSize":23,"color":"#0d2c7a","bold":true,"align":"center"},"compId":19},{"type":"Label","props":{"y":13,"x":652,"width":387,"var":"selectPointTip","text":"当前选中点(1,x=1,y=2)","height":28,"fontSize":25,"color":"#0d0d0c","bold":true},"compId":20},{"type":"Button","props":{"y":537,"x":1156,"width":106,"var":"mirrorBtn","skin":"ui/pathEditor/button.png","labelSize":25,"label":"下个镜像","height":38},"compId":21},{"type":"Label","props":{"y":588,"x":1158,"width":103,"var":"mirrorTip","text":"曲线长度","height":33,"fontSize":25,"color":"#1a1b1a","bold":true},"compId":22},{"type":"Label","props":{"y":71,"x":12,"width":109,"text":"匀速信息","height":32,"fontSize":25,"color":"#090a09","bold":true},"compId":23},{"type":"TextInput","props":{"y":66,"x":126,"width":513,"var":"uniformInfo","skin":"ui/pathEditor/textinput.png","height":44},"compId":24},{"type":"Button","props":{"y":68,"x":924,"width":244,"var":"uniformBtn","skin":"ui/pathEditor/button.png","labelStrokeColor":"#3b2e2e","labelSize":25,"label":"计算匀速信息和长度","height":40},"compId":25}],"loadList":["ui/pathEditor/pathEditor_0.png","ui/pathEditor/button.png","ui/pathEditor/textinput.png"],"loadList3D":[]};	
		

		class pipeiUI extends View{
			constructor (){
				super();
				//this.bgMask=null;
				//this.remainTime=null;
				//this.closeBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(pipeiUI.uiView);
			}
		}

		ui.abbey.pipeiUI=Laya.pipeiUI=pipeiUI;
		pipeiUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-240,"x":-320,"width":1920,"var":"bgMask","skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":6},{"type":"Box","props":{"width":400,"centerY":0,"centerX":5},"compId":2,"child":[{"type":"Image","props":{"y":0,"x":0,"width":400,"skin":"ui/common_ex/buyu_guizk.png","height":160,"sizeGrid":"40,26,40,26"},"compId":3},{"type":"Label","props":{"y":40,"x":0,"wordWrap":true,"width":400,"text":"正在为您匹配对手，请稍等","leading":10,"layoutEnabled":true,"height":40,"fontSize":24,"color":"#2eceff","align":"center"},"compId":4},{"type":"Label","props":{"y":100,"x":0,"wordWrap":true,"width":400,"var":"remainTime","text":"60秒......","leading":10,"layoutEnabled":true,"height":50,"fontSize":24,"color":"#2eceff","align":"center"},"compId":5},{"type":"Image","props":{"y":174,"x":200,"width":600,"skin":"ui/common_ex/tuceng.png","anchorX":0.5,"sizeGrid":"10,0,10,0"},"compId":8},{"type":"Label","props":{"y":174,"x":150,"wordWrap":true,"width":100,"var":"closeBtn","underlineColor":"#fbfbfb","underline":true,"text":"取消匹配","italic":true,"height":40,"fontSize":24,"color":"#fbfbfb","align":"center"},"compId":9}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/buyu_guizk.png","ui/common_ex/tuceng.png"],"loadList3D":[]};	
		

		class prizeUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.receiveBtn=null;
				//this.prizeBox=null;
				//this.priziIcon=null;
				//this.coinCount=null;
				//this.activityBox=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(prizeUI.uiView);
			}
		}

		ui.abbey.prizeUI=Laya.prizeUI=prizeUI;
		prizeUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-240,"x":-320,"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":2},{"type":"Image","props":{"y":155,"x":290,"width":700,"skin":"ui/common_ex/bg_index4.png","height":450,"sizeGrid":"50,50,50,50"},"compId":10,"child":[{"type":"Image","props":{"y":145,"x":5,"width":690,"skin":"ui/prize/di.png","height":200},"compId":16}]},{"type":"Box","props":{"y":31,"x":345,"width":579,"height":246},"compId":5,"child":[{"type":"Image","props":{"y":81,"x":0,"skin":"ui/prize/star.png","scaleY":0.8,"scaleX":0.8},"compId":3},{"type":"Image","props":{"y":83,"x":137,"skin":"ui/prize/star.png","scaleY":0.3,"scaleX":0.3},"compId":6},{"type":"Image","props":{"y":25,"x":323,"skin":"ui/prize/star.png","scaleY":0.5,"scaleX":0.5},"compId":7},{"type":"Image","props":{"y":94,"x":467,"skin":"ui/prize/star.png","scaleY":0.3,"scaleX":0.3},"compId":8},{"type":"Image","props":{"y":53,"x":526,"skin":"ui/prize/star.png"},"compId":9},{"type":"Image","props":{"y":37,"x":29,"skin":"ui/prize/title.png"},"compId":4},{"type":"Image","props":{"y":52,"x":162,"skin":"ui/prize/zhongjl.png"},"compId":20}]},{"type":"Image","props":{"y":383,"x":214,"skin":"ui/common_ex/grass1.png"},"compId":11},{"type":"Image","props":{"y":423,"x":923,"skin":"ui/common_ex/grass2.png"},"compId":12},{"type":"Text","props":{"y":256,"x":340,"width":600,"text":"恭喜获得万年巨鳄奖金","height":30,"fontSize":24,"color":"#2eceff","align":"center","runtime":"laya.display.Text"},"compId":15},{"type":"Button","props":{"y":521,"x":640,"width":160,"var":"receiveBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":50,"anchorX":0.5},"compId":13,"child":[{"type":"Image","props":{"y":11,"x":60,"skin":"ui/common_ex/t_accept.png"},"compId":14}]},{"type":"Box","props":{"y":333,"x":340,"var":"prizeBox"},"compId":25,"child":[{"type":"Image","props":{"y":56.10000000000002,"x":300,"width":100,"skin":"ui/common_ex/touxiang.png","scaleY":1.1,"scaleX":1.1,"height":100,"anchorY":0.5,"anchorX":0.5},"compId":17},{"type":"Image","props":{"y":54.10000000000002,"x":298,"var":"priziIcon","skin":"ui/common/coin1.png","anchorY":0.5,"anchorX":0.5},"compId":18},{"type":"Text","props":{"y":116.10000000000002,"width":600,"var":"coinCount","text":"x9999999","height":30,"fontSize":24,"color":"#ffffff","align":"center","runtime":"laya.display.Text"},"compId":19}]},{"type":"List","props":{"y":334,"x":493,"width":294,"var":"activityBox","repeatY":1,"height":166},"compId":29,"child":[{"type":"Box","props":{"y":0,"renderType":"render"},"compId":24,"child":[{"type":"Image","props":{"y":56.1,"x":61,"width":100,"skin":"ui/common_ex/touxiang.png","scaleY":1.1,"scaleX":1.1,"height":100,"anchorY":0.5,"anchorX":0.5},"compId":21},{"type":"Image","props":{"y":54.1,"x":59,"skin":"ui/common/coin1.png","name":"activityIcon","anchorY":0.5,"anchorX":0.5},"compId":22},{"type":"Text","props":{"y":115.99999999999997,"x":0,"width":126,"text":"x9999999","name":"activityNum","height":30,"fontSize":24,"color":"#ffffff","align":"center","runtime":"laya.display.Text"},"compId":23}]}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index4.png","ui/prize/di.png","ui/prize/star.png","ui/prize/title.png","ui/prize/zhongjl.png","ui/common_ex/grass1.png","ui/common_ex/grass2.png","ui/common_ex/btn_yellow.png","ui/common_ex/t_accept.png","ui/common_ex/touxiang.png","ui/common/coin1.png"],"loadList3D":[]};	
		

		class QuickRegisterPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.box1=null;
				//this.bindTitle=null;
				//this.nameInput=null;
				//this.idCardInput=null;
				//this.confirmBtn=null;
				//this.confirmClip=null;
				//this.cancelBtn=null;
				//this.cancelClip=null;
				//this.telephoneInput=null;
				//this.confirmCode=null;
				//this.getCode=null;
				//this.codeTimer=null;
				//this.box2=null;
				//this.confirmBtn2=null;
				//this.fontClip2=null;
				//this.copyBtn=null;
				//this.jjhAccount=null;
				//this.jjhId=null;
				//this.link=null;
				//this.box3=null;
				//this.confirmBtn3=null;
				//this.fontClip1=null;
				//this.jjhAccount2=null;
				//this.jjhId2=null;
				//this.jjhPass=null;
				//this.bankPsd2=null;
				//this.confirmDelay=null;
				//this.prompt_box=null;
				//this.cancelBtn4=null;
				//this.clipCancel=null;
				//this.confirmBtn4=null;
				//this.clipConfirm=null;
				//this.quitBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(QuickRegisterPageUI.uiView);
			}
		}

		ui.abbey.QuickRegisterPageUI=Laya.QuickRegisterPageUI=QuickRegisterPageUI;
		QuickRegisterPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-217,"x":-305,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":3},{"type":"Box","props":{"y":128,"x":312,"width":656,"var":"box1","height":463},"compId":9,"child":[{"type":"Image","props":{"y":-8,"x":0,"width":649,"skin":"ui/common_ex/bg_index3.png","height":518,"sizeGrid":"50,50,50,50"},"compId":4},{"type":"Image","props":{"y":0,"x":0,"width":656,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":6},{"type":"Image","props":{"y":-83,"x":218,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":86},{"type":"Image","props":{"y":-84,"x":436,"skin":"ui/common_ex/title_border.png"},"compId":87},{"type":"Image","props":{"y":18,"x":328,"var":"bindTitle","skin":"ui/quickRegister/quick_register.png","anchorY":0.5,"anchorX":0.5},"compId":88},{"type":"TextInput","props":{"y":80,"x":243,"width":353,"var":"nameInput","skin":"ui/common_ex/textinput.png","promptColor":"#7a7777","prompt":"请输入真实姓名","height":49,"fontSize":26,"font":"Microsoft YaHei","color":"#000000"},"compId":10},{"type":"TextInput","props":{"y":160,"x":243,"width":353,"var":"idCardInput","skin":"ui/common_ex/textinput.png","promptColor":"#7a7777","prompt":"请输入身份证号码","height":49,"fontSize":26,"font":"Microsoft YaHei","color":"#000000"},"compId":12},{"type":"Label","props":{"y":88,"x":55,"text":"真 实 姓 名：","fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":13},{"type":"Label","props":{"y":169.5,"x":52,"text":"身份证号码：","fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":14},{"type":"Button","props":{"y":403,"x":369,"width":197,"var":"confirmBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":77},"compId":15,"child":[{"type":"FontClip","props":{"y":13,"x":48,"var":"confirmClip","value":"确定","skin":"font/word_red.png","sheet":"取出立即购买获得消确定继 续搜索同意拒绝复制升级解 锁游戏领前往充放置全部加 入房间重抽报名免费","centerY":0,"centerX":0},"compId":18}]},{"type":"Button","props":{"y":403,"x":85,"width":197,"var":"cancelBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":77},"compId":17,"child":[{"type":"FontClip","props":{"y":13,"x":48,"var":"cancelClip","value":"取消","skin":"font/word_green.png","sheet":"存入取消查看确定装备邀请 一键升级返回大厅反馈分享 礼包码炫耀下领奖励提交开 启使用完成布置规则询赠送 购买个观看广告订阅"},"compId":19}]},{"type":"TextInput","props":{"y":240.5,"x":243,"width":353,"var":"telephoneInput","skin":"ui/common_ex/textinput.png","promptColor":"#7a7777","prompt":"请输入手机号码","height":49,"fontSize":26,"font":"Microsoft YaHei","color":"#000000"},"compId":40},{"type":"Label","props":{"y":251,"x":55,"text":"手 机 号 码：","fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":41},{"type":"TextInput","props":{"y":321,"x":244,"width":207,"var":"confirmCode","skin":"ui/common_ex/textinput.png","promptColor":"#7a7777","prompt":"请输入验证码","height":49,"fontSize":26,"font":"Microsoft YaHei","color":"#000000"},"compId":89},{"type":"Label","props":{"y":330.5,"x":58,"text":"验   证   码：","fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":90},{"type":"Button","props":{"y":323.5,"x":470,"width":126,"var":"getCode","stateNum":1,"skin":"ui/common/hq.png","height":44},"compId":137},{"type":"Label","props":{"y":371,"x":502.5,"width":67,"visible":false,"var":"codeTimer","text":"60s","height":28,"fontSize":20,"color":"#116780","align":"center"},"compId":140}]},{"type":"Box","props":{"y":128,"x":312,"width":656,"var":"box2","height":463},"compId":114,"child":[{"type":"Image","props":{"y":-8,"x":0,"width":649,"skin":"ui/common_ex/bg_index3.png","height":518,"sizeGrid":"50,50,50,50"},"compId":115},{"type":"Image","props":{"y":0,"x":0,"width":656,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":116},{"type":"Label","props":{"y":88,"x":55,"width":545,"text":"账 号 信 息：","height":30,"fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":122},{"type":"Label","props":{"y":144,"x":55,"text":"集结号账号：","fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":123},{"type":"Button","props":{"y":407,"x":229,"width":197,"var":"confirmBtn2","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":77},"compId":124,"child":[{"type":"FontClip","props":{"y":13,"x":48,"var":"fontClip2","value":"确定","skin":"font/word_red.png","sheet":"取出立即购买获得消确定继 续搜索同意拒绝复制升级解 锁游戏领前往充放置全部加 入房间重抽报名免费","centerY":0,"centerX":0},"compId":125}]},{"type":"Label","props":{"y":196,"x":55,"text":"集 结 号 ID：","fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":129},{"type":"Label","props":{"y":274,"x":55,"wordWrap":true,"width":544,"text":"说明：如果您需要找回集结号账号的密码，可通过以下链接找回：","leading":3,"height":50,"fontSize":24,"font":"Microsoft YaHei","color":"#22B14C"},"compId":131},{"type":"Button","props":{"y":334.5,"x":498,"width":106,"var":"copyBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":45},"compId":132,"child":[{"type":"Label","props":{"y":8,"x":24,"text":"复制","strokeColor":"#088413","stroke":2,"fontSize":28,"font":"SimHei","color":"#ffffff","bold":true},"compId":133}]},{"type":"Label","props":{"y":144,"x":238,"width":339,"var":"jjhAccount","text":"xxxxxxx","height":30,"fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":134},{"type":"Label","props":{"y":196,"x":238,"width":347,"var":"jjhId","text":"xxxxxxxxx","height":30,"fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":135},{"type":"Label","props":{"y":332,"x":55,"wordWrap":true,"width":449,"var":"link","valign":"middle","text":"https://u.jjhgame.com/GetBackPwd/","leading":0,"height":56,"fontSize":24,"font":"Microsoft YaHei","color":"#22B14C","align":"left"},"compId":136}]},{"type":"Box","props":{"y":128,"x":312,"width":656,"var":"box3","height":463},"compId":141,"child":[{"type":"Image","props":{"y":-8,"x":0,"width":649,"skin":"ui/common_ex/bg_index3.png","height":518,"sizeGrid":"50,50,50,50"},"compId":142},{"type":"Image","props":{"y":0,"x":0,"width":656,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":143},{"type":"Label","props":{"y":88,"x":55,"width":545,"text":"您的账号信息:","height":30,"fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":144},{"type":"Label","props":{"y":137,"x":55,"width":180,"text":"集结号账号：","rotation":0,"height":30,"fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":145},{"type":"Button","props":{"y":407,"x":229,"width":197,"var":"confirmBtn3","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":77},"compId":146,"child":[{"type":"FontClip","props":{"y":13,"x":48,"var":"fontClip1","value":"确定","skin":"font/word_red.png","sheet":"取出立即购买获得消确定继 续搜索同意拒绝复制升级解 锁游戏领前往充放置全部加 入房间重抽报名免费","centerY":0,"centerX":0},"compId":147}]},{"type":"Label","props":{"y":186,"x":55,"text":"集 结 号 ID：","fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":148},{"type":"Label","props":{"y":349,"x":55,"wordWrap":true,"width":544,"valign":"middle","text":"密码信息仅在本次登录显示，请您截图并妥善保存","height":38,"fontSize":24,"font":"Microsoft YaHei","color":"#FF1B1B"},"compId":149},{"type":"Label","props":{"y":137,"x":238,"width":339,"var":"jjhAccount2","text":"xxxxxxx","height":30,"fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":152},{"type":"Label","props":{"y":186,"x":238,"width":347,"var":"jjhId2","text":"xxxxxxxxx","height":30,"fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":153},{"type":"Label","props":{"y":231.5,"x":55,"text":"登 录 密 码：","fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":155},{"type":"Label","props":{"y":232,"x":238,"width":347,"var":"jjhPass","text":"xxxxxxxxx","height":30,"fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":156},{"type":"Label","props":{"y":278,"x":55,"text":"银 行 密 码：","fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":157},{"type":"Label","props":{"y":280,"x":238,"width":347,"var":"bankPsd2","text":"xxxxxxxxx","height":30,"fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":158},{"type":"Label","props":{"y":431.5,"x":434,"width":67,"visible":false,"var":"confirmDelay","text":"5s","height":28,"fontSize":20,"color":"#116780","align":"center"},"compId":182}]},{"type":"Box","props":{"y":122,"x":288,"width":704,"visible":false,"var":"prompt_box","height":475},"compId":159,"child":[{"type":"Image","props":{"y":35,"x":0,"width":700,"skin":"ui/common_ex/bg_index3.png","height":440,"sizeGrid":"50,50,50,50"},"compId":160},{"type":"Image","props":{"y":37,"x":1,"width":700,"skin":"ui/common_ex/head_2.png","height":72,"sizeGrid":"0,180,0,180"},"compId":161},{"type":"Image","props":{"y":7,"x":284,"skin":"ui/common/title_prompt.png"},"compId":162},{"type":"Image","props":{"y":-55,"x":281,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":163},{"type":"Image","props":{"y":-56,"x":446,"skin":"ui/common_ex/title_border.png"},"compId":164},{"type":"Label","props":{"y":143,"x":62,"wordWrap":true,"width":586,"valign":"middle","text":"如果您已有集结号账号，推荐绑定该账号。\\n如果注册新账号成功，会自动绑定，且不可解绑。\\n请谨慎注册。","leading":12,"height":154,"fontSize":30,"font":"Microsoft YaHei","color":"#045a73"},"compId":168},{"type":"Box","props":{"y":360,"x":159,"width":150,"height":46},"compId":176,"child":[{"type":"Button","props":{"var":"cancelBtn4","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":178},{"type":"FontClip","props":{"y":6,"x":1,"width":246,"var":"clipCancel","value":"取消","spaceX":-5,"skin":"font/word_green.png","sheet":"存入取消查看确定装备邀请 一键升级返回大厅反馈分享 礼包码炫耀下领奖励提交开 启使用完成布置规则询赠送 购买个","scaleY":0.6,"scaleX":0.6,"height":49,"align":"center"},"compId":179}]},{"type":"Box","props":{"y":360,"x":399,"width":150,"height":46},"compId":177,"child":[{"type":"Button","props":{"width":150,"var":"confirmBtn4","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":46},"compId":180},{"type":"FontClip","props":{"y":6,"x":1,"width":246,"var":"clipConfirm","value":"确定","spaceX":-5,"skin":"font/word_red.png","sheet":"取出立即购买获得消确定继 续搜索同意拒绝复制升级解 锁游戏领前往充放置全部加 入房间重抽报名免费","scaleY":0.6,"scaleX":0.6,"height":49,"align":"center"},"compId":181}]}]},{"type":"Button","props":{"visible":false,"var":"quitBtn","top":10,"stateNum":1,"skin":"ui/common_ex/quit.png","left":10},"compId":82}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/common_ex/title_border.png","ui/quickRegister/quick_register.png","ui/common_ex/textinput.png","ui/common_ex/btn_yellow.png","font/word_red.png","ui/common_ex/btn_green.png","font/word_green.png","ui/common/hq.png","ui/common/title_prompt.png","ui/common_ex/quit.png"],"loadList3D":[]};	
		

		class RankPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.list1=null;
				//this.gold_btn=null;
				//this.strength_btn=null;
				//this.rank_introduce=null;
				//this.rank_num=null;
				//this.wait_ani=null;
				//this.goldBox=null;
				//this.goldLabel=null;
				//this.gold_introduce=null;
				//this.goldImg=null;
				//this.getRewardBtn=null;
				//this.desHTML=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(RankPageUI.uiView);
			}
		}

		ui.abbey.RankPageUI=Laya.RankPageUI=RankPageUI;
		RankPageUI.uiView={"type":"View","props":{"width":1280,"name":"reward","height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"y":-290,"x":-310,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1300,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":228},{"type":"Image","props":{"y":80,"x":247,"width":786,"skin":"ui/common_ex/bg_index0.png","height":584,"anchorX":0,"sizeGrid":"50,50,50,50"},"compId":116},{"type":"Image","props":{"y":70,"x":640,"width":747,"skin":"ui/common_ex/bg_index1.png","height":577,"anchorX":0.5,"sizeGrid":"30,30,30,30"},"compId":117},{"type":"Image","props":{"y":212,"x":286,"width":708,"skin":"ui/common_ex/bg_index2.png","height":423,"sizeGrid":"40,40,40,40"},"compId":180},{"type":"Image","props":{"y":65,"x":640,"width":795,"skin":"ui/common_ex/head_2.png","height":73,"anchorX":0.5,"sizeGrid":"0,180,0,180"},"compId":119},{"type":"Button","props":{"y":0,"x":0,"var":"quitBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":120},{"type":"Image","props":{"y":457,"x":164,"skin":"ui/common_ex/grass1.png"},"compId":150},{"type":"Image","props":{"y":489,"x":972,"skin":"ui/common_ex/grass2.png"},"compId":151},{"type":"List","props":{"y":224,"x":293,"width":694,"var":"list1","renderType":"render","height":400},"compId":159,"child":[{"type":"Box","props":{"y":0,"x":0,"width":682,"name":"render","height":80},"compId":161,"child":[{"type":"Image","props":{"y":0,"x":0,"width":680,"skin":"ui/rank/paih_zk2.png","name":"bg","height":80,"sizeGrid":"25,25,25,25"},"compId":229},{"type":"Label","props":{"y":17,"x":56,"text":"4","strokeColor":"#000000","stroke":3,"name":"rank","fontSize":46,"color":"#eff2f6","bold":true,"anchorX":0.5,"align":"center"},"compId":245},{"type":"Image","props":{"y":38,"x":57,"skin":"ui/rank/rank1.png","name":"rank_icon","anchorY":0.5,"anchorX":0.5},"compId":230},{"type":"Label","props":{"y":28,"x":294,"width":183,"text":"wx_18644123562","overflow":"hidden","name":"player_name","height":23,"fontSize":18,"color":"#0e4178","anchorX":0.5,"align":"left"},"compId":243},{"type":"Box","props":{"y":4,"x":129,"scaleY":0.8,"scaleX":0.8,"name":"imgBox"},"compId":248,"child":[{"type":"Image","props":{"y":2,"x":0,"skin":"ui/common_ex/touxiang.png"},"compId":246},{"type":"Image","props":{"y":5,"x":2,"width":80,"skin":"ui/common/nan.png","name":"playimg","height":80},"compId":247},{"type":"Image","props":{"y":2,"x":1,"skin":"ui/common_ex/touxiang2.png","scaleY":0.98,"scaleX":0.98},"compId":259},{"type":"Image","props":{"y":63,"x":5,"skin":"ui/common_ex/level_bg.png"},"compId":257}]},{"type":"Label","props":{"y":56,"x":134,"width":54,"text":"lv.12","name":"level","height":15,"fontSize":12,"color":"#ffffff","bold":true,"align":"right"},"compId":255},{"type":"Box","props":{"width":170,"top":23,"name":"goldBox","left":457,"height":33},"compId":265,"child":[{"type":"Image","props":{"y":-5,"x":0,"width":167,"skin":"ui/rank/k2.png","name":"name_bg","height":43,"sizeGrid":"15,20,15,20"},"compId":266},{"type":"Label","props":{"y":4,"x":160,"width":129,"text":"1234567890","name":"item_num","height":25,"fontSize":23,"color":"#ffffff","bold":false,"anchorX":1,"align":"center"},"compId":267},{"type":"Label","props":{"y":-4,"x":-39,"width":44,"text":"领取\\n奖励","height":39,"fontSize":22,"color":"#0e4178","anchorX":0.5,"align":"left"},"compId":278},{"type":"Image","props":{"y":-11,"x":-16,"width":50,"skin":"ui/common_ex/unit_coin.png","name":"item_img","height":50},"compId":284}]},{"type":"Image","props":{"y":18,"x":626,"skin":"ui/rank/img_shuangbei.png","name":"doubleImg"},"compId":288},{"type":"Box","props":{"y":11.5,"x":626,"name":"giveawayBox"},"compId":291,"child":[{"type":"Image","props":{"y":-0.5,"width":50,"skin":"ui/common/huodongqu1.png","name":"giveawayImg","height":50},"compId":289},{"type":"FontClip","props":{"y":45.5,"x":26,"width":27,"value":"1","skin":"ui/common_ex/shop_num.png","sheet":"X0123456789","name":"giveawayLabel","height":17},"compId":292},{"type":"Image","props":{"y":44,"x":7,"width":34,"skin":"ui/common/z.png","scaleY":0.5,"scaleX":0.5,"height":37},"compId":293}]}]},{"type":"VScrollBar","props":{"y":1,"width":9,"skin":"ui/common_ex/vscroll.png","showButtons":false,"right":0,"name":"scrollBar","height":380},"compId":227}]},{"type":"Box","props":{"y":-38,"x":449},"compId":168,"child":[{"type":"Image","props":{"y":17,"x":259,"skin":"ui/common_ex/title_border.png"},"compId":165},{"type":"Image","props":{"y":16,"x":162,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":166},{"type":"Image","props":{"y":77,"x":125,"skin":"ui/rank/title.png"},"compId":167}]},{"type":"Box","props":{"y":133,"x":261,"width":373,"height":76},"compId":249,"child":[{"type":"Button","props":{"y":0,"x":-1,"var":"gold_btn","stateNum":3,"skin":"ui/common_ex/bg.png"},"compId":251,"child":[{"type":"Image","props":{"y":12,"x":33,"skin":"ui/common_ex/unit_coin.png","scaleY":0.9,"scaleX":0.9},"compId":234},{"type":"Image","props":{"y":22,"x":92,"skin":"ui/rank/zi.png"},"compId":253}]},{"type":"Button","props":{"y":0,"x":179,"var":"strength_btn","stateNum":3,"skin":"ui/common_ex/bg.png"},"compId":252,"child":[{"type":"Image","props":{"y":18,"x":40,"skin":"ui/rank/icon_th.png"},"compId":236},{"type":"Image","props":{"y":22,"x":92,"skin":"ui/rank/zi2.png"},"compId":254}]}]},{"type":"Box","props":{"y":132,"x":624,"width":125,"height":42},"compId":250,"child":[{"type":"Image","props":{"y":18,"x":37,"width":86,"skin":"ui/common_ex/img_paim.png","sizeGrid":"9,13,10,10","height":41},"compId":241},{"type":"Label","props":{"y":19,"x":-5,"width":50,"var":"rank_introduce","text":"昨日\\n排名","height":48,"fontSize":20,"color":"#63b4ff"},"compId":240},{"type":"Label","props":{"y":24,"x":78.5,"width":73,"var":"rank_num","valign":"middle","text":"412","height":30,"fontSize":25,"color":"#e1e7f1","anchorX":0.5,"align":"center"},"compId":242}]},{"type":"Animation","props":{"y":420,"x":640,"visible":false,"var":"wait_ani","source":"abbey/wait.ani"},"compId":258},{"type":"Box","props":{"width":121,"var":"goldBox","top":132,"left":801,"height":48},"compId":270,"child":[{"type":"Image","props":{"y":19,"x":8,"width":143,"skin":"ui/common_ex/img_paim.png","sizeGrid":"10,11,11,9","height":41},"compId":271},{"type":"Label","props":{"y":28,"x":140,"width":113,"var":"goldLabel","text":"123456789","height":28,"fontSize":22,"color":"#f4ebeb","bold":false,"anchorX":1,"align":"center"},"compId":272},{"type":"Label","props":{"y":18,"x":-47,"width":45,"var":"gold_introduce","text":"昨日\\n奖励","height":48,"fontSize":20,"color":"#63b4ff"},"compId":277},{"type":"Image","props":{"y":18,"x":-7,"width":40,"var":"goldImg","skin":"ui/common_ex/unit_coin.png","height":40},"compId":285}]},{"type":"Button","props":{"y":150,"x":953,"width":57,"visible":false,"var":"getRewardBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","sizeGrid":"0,0,0,0","height":40},"compId":274,"child":[{"type":"Image","props":{"y":8,"x":7,"skin":"ui/common_ex/t_accept.png"},"compId":275}]},{"type":"Box","props":{"y":625,"x":252},"compId":280,"child":[{"type":"Box","props":{"y":0,"x":25,"width":725,"height":29},"compId":287,"child":[{"type":"Image","props":{"y":0,"x":0,"width":350,"skin":"ui/common_ex/rank_di.png","sizeGrid":"17,198,16,205","height":29},"compId":279},{"type":"Image","props":{"y":0,"x":700,"width":350,"skin":"ui/common_ex/rank_di.png","sizeGrid":"17,198,16,205","scaleX":-1,"height":29},"compId":286}]},{"type":"HTMLDivElement","props":{"y":6,"x":-10,"width":776,"var":"desHTML","height":29,"runtime":"laya.html.dom.HTMLDivElement"},"compId":283}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index0.png","ui/common_ex/bg_index1.png","ui/common_ex/bg_index2.png","ui/common_ex/head_2.png","ui/common_ex/quit.png","ui/common_ex/grass1.png","ui/common_ex/grass2.png","ui/rank/paih_zk2.png","ui/rank/rank1.png","ui/common_ex/touxiang.png","ui/common/nan.png","ui/common_ex/touxiang2.png","ui/common_ex/level_bg.png","ui/rank/k2.png","ui/common_ex/unit_coin.png","ui/rank/img_shuangbei.png","ui/common/huodongqu1.png","ui/common_ex/shop_num.png","ui/common/z.png","ui/common_ex/vscroll.png","ui/common_ex/title_border.png","ui/rank/title.png","ui/common_ex/bg.png","ui/rank/zi.png","ui/rank/icon_th.png","ui/rank/zi2.png","ui/common_ex/img_paim.png","abbey/wait.ani","ui/common_ex/btn_yellow.png","ui/common_ex/t_accept.png","ui/common_ex/rank_di.png"],"loadList3D":[]};	
		

		class RedActivityPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.box1=null;
				//this.desc=null;
				//this.findIntegralBtn=null;
				//this.quitBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(RedActivityPageUI.uiView);
			}
		}

		ui.abbey.RedActivityPageUI=Laya.RedActivityPageUI=RedActivityPageUI;
		RedActivityPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-220,"x":-300,"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":22},{"type":"Box","props":{"y":63,"x":181,"width":949,"var":"box1","height":594},"compId":54,"child":[{"type":"Image","props":{"y":51,"x":16,"width":912,"skin":"ui/common_ex/bg_index3.png","height":543,"sizeGrid":"50,50,50,50"},"compId":57},{"type":"Image","props":{"y":44,"x":10,"width":923,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":59},{"type":"Label","props":{"y":114,"x":69,"wordWrap":true,"width":815,"var":"desc","text":"1、珍珠送福活动限时开放，活动期间可以通过以下途径获取珍珠：\\n   1）活动期间，免费抽奖将开放，通过捕获特殊鱼获取鱼币，使用鱼币抽奖，将有机会获得珍珠奖励。\\n   2）活动期间，在“机械鱼王”关卡中捕获机械鱼王，将获得大量珍珠。\\n   3）活动期间，在“铁钳蟹王”、“机械鱼王”、“万年巨鳄”关卡中，随机出现携带珍珠的鱼，捕获后获得珍珠。\\n   4）活动期间，在任意关卡捕鱼，都有机会获得赐福珍珠，打得越多获得越多。\\n2、珍珠可以在兑换系统中，兑换为积分，前往集结号娱乐中心公众号，换取更丰富的奖励。\\n3、活动结束后珍珠将保留，可以继续进行兑换。","overflow":"scroll","leading":10,"height":417,"fontSize":25,"color":"#13667e","bold":false,"align":"left"},"compId":68},{"type":"Button","props":{"y":502,"x":383,"width":175,"var":"findIntegralBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","labelStroke":1,"labelSize":22,"labelColors":"#ffffff","height":57},"compId":152,"child":[{"type":"Label","props":{"text":"关注公众号","strokeColor":"#088413","stroke":1,"fontSize":24,"color":"#ffffff","centerY":0,"centerX":0},"compId":153}]},{"type":"Box","props":{"y":-60,"x":263},"compId":166,"child":[{"type":"Image","props":{"x":298,"skin":"ui/common_ex/title_border.png"},"compId":150},{"type":"Image","props":{"x":124,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":151},{"type":"Image","props":{"y":65,"x":91,"skin":"ui/redActivity/title.png"},"compId":62}]}]},{"type":"Button","props":{"y":0,"x":0,"var":"quitBtn","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":0},"compId":23}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/common_ex/btn_green.png","ui/common_ex/title_border.png","ui/redActivity/title.png","ui/common_ex/quit.png"],"loadList3D":[]};	
		

		class RegisterPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.m_list=null;
				//this.closeBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(RegisterPageUI.uiView);
			}
		}

		ui.abbey.RegisterPageUI=Laya.RegisterPageUI=RegisterPageUI;
		RegisterPageUI.uiView={"type":"View","props":{"width":1280,"renderType":"render","height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":44},{"type":"Box","props":{"width":1040,"height":662,"centerY":0,"centerX":0},"compId":45,"child":[{"type":"Image","props":{"y":44,"x":0,"width":1040,"skin":"ui/common_ex/bg_index4.png","height":640,"sizeGrid":"50,50,50,50"},"compId":3},{"type":"Image","props":{"y":99,"x":33,"width":974,"skin":"ui/common_ex/bg_index2.png","height":555,"sizeGrid":"40,40,40,40"},"compId":19},{"type":"List","props":{"y":114,"x":54,"width":922,"var":"m_list","spaceY":10,"spaceX":40,"repeatX":7,"height":520},"compId":17,"child":[{"type":"Box","props":{"y":0,"x":0,"width":95,"renderType":"render","name":"render","height":131},"compId":16,"child":[{"type":"Image","props":{"y":7.5,"skin":"ui/register/touxiang.png","name":"diImg"},"compId":12},{"type":"Image","props":{"y":50,"x":41,"skin":"ui/common/b1.png","scaleY":0.8,"scaleX":0.8,"name":"image","anchorY":0.5,"anchorX":0.5},"compId":13},{"type":"Label","props":{"y":98,"x":0,"width":87,"text":"第1天","name":"txt","height":24,"fontSize":22,"color":"#efe6e6","bold":true,"align":"center"},"compId":15},{"type":"Image","props":{"y":61,"x":0,"skin":"ui/register/XSFL_board.png","name":"halfBtn"},"compId":25},{"type":"Label","props":{"y":77,"x":43,"width":63,"text":"123","name":"count","height":26,"fontSize":22,"color":"#f1ebea","anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":26},{"type":"Image","props":{"y":5,"x":0,"skin":"ui/register/yy1_001.png","name":"maskBtn"},"compId":31},{"type":"Image","props":{"y":24,"x":17,"skin":"ui/register/XSFL_icon_lq.png","name":"rightBtn"},"compId":32},{"type":"Image","props":{"y":-3,"x":60,"skin":"ui/register/tubiao.png","rotation":50,"name":"vipdi"},"compId":38},{"type":"Label","props":{"y":33,"x":85,"text":"双倍","rotation":50,"name":"twobei","fontSize":16,"color":"#ffffff"},"compId":42},{"type":"Label","props":{"y":11,"x":65,"text":"V2","rotation":50,"name":"vipbei","fontSize":16,"color":"#f5024e","bold":true},"compId":43}]},{"type":"VScrollBar","props":{"y":11,"x":937,"width":9,"skin":"ui/common_ex/vscroll.png","showButtons":false,"name":"scrollBar","height":499},"compId":37}]},{"type":"Image","props":{"y":28,"x":0,"width":1040,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":21},{"type":"Box","props":{"y":-72,"x":258,"width":536,"height":156},"compId":33,"child":[{"type":"Image","props":{"y":5,"x":354,"skin":"ui/common_ex/title_border.png"},"compId":34},{"type":"Image","props":{"y":5,"x":183,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":35},{"type":"Image","props":{"y":76,"x":153,"skin":"ui/register/title.png"},"compId":36}]}]},{"type":"Button","props":{"y":5,"x":5,"var":"closeBtn","top":5,"stateNum":1,"skin":"ui/common_ex/quit.png","left":5},"compId":18}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index4.png","ui/common_ex/bg_index2.png","ui/register/touxiang.png","ui/common/b1.png","ui/register/XSFL_board.png","ui/register/yy1_001.png","ui/register/XSFL_icon_lq.png","ui/register/tubiao.png","ui/common_ex/vscroll.png","ui/common_ex/head_2.png","ui/common_ex/title_border.png","ui/register/title.png","ui/common_ex/quit.png"],"loadList3D":[]};	
		

		class ResetLoadUI extends View{
			constructor (){
				super();
				//this.confirmBtn=null;
				//this.mainContent=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(ResetLoadUI.uiView);
			}
		}

		ui.abbey.ResetLoadUI=Laya.ResetLoadUI=ResetLoadUI;
		ResetLoadUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Box","props":{"centerY":0,"centerX":0},"compId":11,"child":[{"type":"Image","props":{"y":48,"skin":"wxlocal/bg_index3.png"},"compId":2},{"type":"Image","props":{"y":36,"x":1,"width":636,"skin":"wxlocal/head_2.png","height":73},"compId":3},{"type":"Image","props":{"x":227,"skin":"wxlocal/title_prompt.png"},"compId":4},{"type":"Box","props":{"y":320,"x":244,"var":"confirmBtn"},"compId":7,"child":[{"type":"Image","props":{"skin":"wxlocal/greenTwo.png"},"compId":5},{"type":"Image","props":{"y":9,"x":49,"skin":"wxlocal/confirm.png"},"compId":6}]},{"type":"Label","props":{"y":181,"x":30,"width":586,"var":"mainContent","text":"资源加载失败重新加载","pivotY":13,"pivotX":-2,"height":36,"fontSize":24,"color":"#09d2ee","bold":true,"align":"center"},"compId":10}]}],"loadList":["wxlocal/bg_index3.png","wxlocal/head_2.png","wxlocal/title_prompt.png","wxlocal/greenTwo.png","wxlocal/confirm.png"],"loadList3D":[]};	
		

		class ResetLoginUI extends View{
			constructor (){
				super();
				//this.closeBtn=null;
				//this.mainContent=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(ResetLoginUI.uiView);
			}
		}

		ui.abbey.ResetLoginUI=Laya.ResetLoginUI=ResetLoginUI;
		ResetLoginUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Box","props":{"centerY":0,"centerX":0},"compId":11,"child":[{"type":"Image","props":{"y":48,"skin":"wxlocal/bg_index3.png"},"compId":2},{"type":"Image","props":{"y":36,"x":1,"width":636,"skin":"wxlocal/head_2.png","height":73},"compId":3},{"type":"Image","props":{"x":227,"skin":"wxlocal/title_prompt.png"},"compId":4},{"type":"Box","props":{"y":320,"x":244,"var":"closeBtn"},"compId":7,"child":[{"type":"Image","props":{"skin":"wxlocal/greenTwo.png"},"compId":5},{"type":"Image","props":{"y":9,"x":49,"skin":"wxlocal/tuichu.png"},"compId":6}]},{"type":"Label","props":{"y":181,"x":30,"width":586,"var":"mainContent","text":"服务器繁忙游戏正在重连","pivotY":13,"pivotX":-2,"height":36,"fontSize":24,"color":"#09d2ee","bold":true,"align":"center"},"compId":10}]}],"loadList":["wxlocal/bg_index3.png","wxlocal/head_2.png","wxlocal/title_prompt.png","wxlocal/greenTwo.png","wxlocal/tuichu.png"],"loadList3D":[]};	
		

		class RewardTipUI extends View{
			constructor (){
				super();
				//this.confirmBtn=null;
				//this.denImg=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(RewardTipUI.uiView);
			}
		}

		ui.abbey.RewardTipUI=Laya.RewardTipUI=RewardTipUI;
		RewardTipUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"width":1920,"var":"confirmBtn","skin":"ui/common_ex/jl_bg.png","height":1400,"centerY":0,"centerX":0,"alpha":0.7,"sizeGrid":"22,22,22,22"},"compId":2},{"type":"Image","props":{"y":100,"x":367,"var":"denImg","skin":"ui/common/dj.png"},"compId":4}],"loadList":["ui/common_ex/jl_bg.png","ui/common/dj.png"],"loadList3D":[]};	
		

		class rewpageUI extends View{
			constructor (){
				super();
				//this.zhen_0=null;
				//this.fan_0=null;
				//this.zhen_1=null;
				//this.fan_1=null;
				//this.zhen_2=null;
				//this.fan_2=null;
				//this.fan_3=null;
				//this.zhen_3=null;
				//this.zhen_4=null;
				//this.fan_4=null;
				//this.fan_5=null;
				//this.zhen_5=null;
				//this.shou=null;
				//this.hee=null;
				//this.repage=null;
				//this.tablist=null;
				//this.closeBtn=null;
				//this.bei_0=null;
				//this.box_0=null;
				//this.bei_1=null;
				//this.box_1=null;
				//this.bei_2=null;
				//this.box_2=null;
				//this.bei_3=null;
				//this.box_3=null;
				//this.bei_4=null;
				//this.box_4=null;
				//this.bei_5=null;
				//this.box_5=null;
				//this.time=null;
				//this.chouTxt=null;
				//this.notip=null;
				//this.pro=null;
				//this.rewrarBtn=null;
				//this.nowcount=null;
				//this.reardfishCount=null;
				//this.allCount=null;
				//this.recordOne=null;
				//this.recordTwo=null;
				//this.recordThree=null;
				//this.recordFour=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(rewpageUI.uiView);
			}
		}

		ui.abbey.rewpageUI=Laya.rewpageUI=rewpageUI;
		rewpageUI.uiView={"type":"View","props":{"x":0,"width":1280,"height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"y":-240,"x":-320,"width":1920,"var":"repage","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":127},{"type":"Image","props":{"y":50,"x":120,"width":1040,"skin":"ui/common_ex/bg_index4.png","height":510,"sizeGrid":"50,50,50,50"},"compId":4},{"type":"Image","props":{"y":43,"x":121,"width":1042,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":7},{"type":"Box","props":{"y":-57,"x":369,"width":487,"height":156},"compId":116,"child":[{"type":"Image","props":{"y":13,"x":363,"skin":"ui/common_ex/title_border.png"},"compId":117},{"type":"Image","props":{"y":16,"x":173,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":118},{"type":"Image","props":{"y":77,"x":153,"skin":"ui/rewardPage/title.png"},"compId":119}]},{"type":"Tab","props":{"y":99,"x":144,"width":988,"var":"tablist","selectedIndex":0,"renderType":"render","height":64},"compId":17,"child":[{"type":"Button","props":{"stateNum":3,"skin":"ui/rewardPage/tab.png","name":"item0"},"compId":11,"child":[{"type":"Image","props":{"y":24,"x":45,"skin":"ui/rewardPage/tab1.png"},"compId":140}]},{"type":"Button","props":{"x":160,"stateNum":3,"skin":"ui/rewardPage/tab.png","name":"item1"},"compId":12,"child":[{"type":"Image","props":{"y":24,"x":45,"skin":"ui/rewardPage/tab2.png"},"compId":141}]},{"type":"Button","props":{"x":321,"stateNum":3,"skin":"ui/rewardPage/tab.png","name":"item2"},"compId":13,"child":[{"type":"Image","props":{"y":24,"x":45,"skin":"ui/rewardPage/tab3.png"},"compId":142}]},{"type":"Button","props":{"x":479,"stateNum":3,"skin":"ui/rewardPage/tab.png","name":"item3"},"compId":14,"child":[{"type":"Image","props":{"y":24,"x":45,"skin":"ui/rewardPage/tab4.png"},"compId":143}]},{"type":"Button","props":{"x":641,"stateNum":3,"skin":"ui/rewardPage/tab.png","name":"item4"},"compId":15,"child":[{"type":"Image","props":{"y":24,"x":45,"skin":"ui/rewardPage/tab5.png"},"compId":144}]},{"type":"Button","props":{"x":800,"stateNum":3,"skin":"ui/rewardPage/tab.png","name":"item5"},"compId":16,"child":[{"type":"Image","props":{"y":24,"x":45,"skin":"ui/rewardPage/tab6.png"},"compId":145}]}]},{"type":"Image","props":{"y":154,"x":147,"width":980,"skin":"ui/common_ex/bg_index2.png","height":243,"sizeGrid":"40,40,40,40"},"compId":8},{"type":"Button","props":{"y":2,"x":-1,"var":"closeBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":115},{"type":"Box","props":{"y":282,"x":227,"width":150,"var":"bei_0","height":220,"anchorY":0.5,"anchorX":0.5},"compId":91,"child":[{"type":"Image","props":{"skin":"ui/rewardPage/jppb.png","scaleY":0.83,"scaleX":0.83},"compId":85}]},{"type":"Box","props":{"y":282,"x":227,"width":150,"var":"box_0","height":220,"anchorY":0.5,"anchorX":0.5},"compId":78,"child":[{"type":"Image","props":{"skin":"ui/rewardPage/jpdk.png","scaleY":0.83,"scaleX":0.83,"renderType":"render"},"compId":32},{"type":"Image","props":{"y":19,"x":20,"skin":"ui/rewardPage/jpmcdk.png","scaleY":0.85,"scaleX":0.85},"compId":45},{"type":"Label","props":{"y":30,"text":"刺泡鱼鱼","strokeColor":"#0e1dc6","stroke":3,"name":"txt","fontSize":15,"color":"#ffffff","centerX":0,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":46},{"type":"Image","props":{"y":90,"x":74,"skin":"ui/common/diamond2.png","name":"image","anchorY":0.5,"anchorX":0.5},"compId":66},{"type":"Label","props":{"y":146,"x":74,"width":120,"text":"24","strokeColor":"#03529c","stroke":3,"name":"count","height":24,"fontSize":22,"color":"#ffffff","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":72},{"type":"Image","props":{"y":180,"x":80,"width":50,"skin":"ui/common/huodongqu1.png","name":"common","height":50,"anchorY":0.5,"anchorX":0.5},"compId":146,"child":[{"type":"Image","props":{"y":18,"x":-28,"skin":"ui/common/z.png","scaleY":0.7,"scaleX":0.7},"compId":147},{"type":"FontClip","props":{"y":16,"x":48,"value":"1","skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":1.2,"scaleX":1.2,"name":"common_num","align":"left"},"compId":148}]}]},{"type":"Box","props":{"y":282,"x":388,"width":150,"var":"bei_1","height":220,"anchorY":0.5,"anchorX":0.5},"compId":92,"child":[{"type":"Image","props":{"skin":"ui/rewardPage/jppb.png","scaleY":0.83,"scaleX":0.83},"compId":86}]},{"type":"Box","props":{"y":282,"x":388,"width":150,"var":"box_1","height":220,"anchorY":0.5,"anchorX":0.5},"compId":79,"child":[{"type":"Image","props":{"skin":"ui/rewardPage/jpdk.png","scaleY":0.83,"scaleX":0.83},"compId":33},{"type":"Image","props":{"y":19,"x":20,"skin":"ui/rewardPage/jpmcdk.png","scaleY":0.85,"scaleX":0.85},"compId":49},{"type":"Label","props":{"y":30,"x":75,"text":"刺泡鱼","strokeColor":"#0e1dc6","stroke":3,"name":"txt","fontSize":15,"color":"#ffffff","centerX":0,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":121},{"type":"Image","props":{"y":90,"x":74,"skin":"ui/common/diamond2.png","name":"image","anchorY":0.5,"anchorX":0.5},"compId":67},{"type":"Label","props":{"y":146,"x":74,"width":120,"text":"24","strokeColor":"#03529c","stroke":3,"name":"count","height":24,"fontSize":22,"color":"#ffffff","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":73},{"type":"Image","props":{"y":180,"x":80,"width":50,"skin":"ui/common/huodongqu1.png","name":"common","height":50,"anchorY":0.5,"anchorX":0.5},"compId":167,"child":[{"type":"Image","props":{"y":18,"x":-28,"skin":"ui/common/z.png","scaleY":0.7,"scaleX":0.7},"compId":168},{"type":"FontClip","props":{"y":16,"x":48,"value":"2","skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":1.2,"scaleX":1.2,"name":"common_num","align":"left"},"compId":169}]}]},{"type":"Box","props":{"y":282,"x":551,"width":150,"var":"bei_2","height":220,"anchorY":0.5,"anchorX":0.5},"compId":93,"child":[{"type":"Image","props":{"skin":"ui/rewardPage/jppb.png","scaleY":0.83,"scaleX":0.83},"compId":87}]},{"type":"Box","props":{"y":282,"x":553,"width":150,"var":"box_2","height":220,"anchorY":0.5,"anchorX":0.5},"compId":80,"child":[{"type":"Image","props":{"skin":"ui/rewardPage/jpdk.png","scaleY":0.83,"scaleX":0.83},"compId":34},{"type":"Image","props":{"y":19,"x":20,"skin":"ui/rewardPage/jpmcdk.png","scaleY":0.85,"scaleX":0.85},"compId":52},{"type":"Label","props":{"y":30,"text":"刺泡鱼","strokeColor":"#0e1dc6","stroke":3,"name":"txt","fontSize":15,"color":"#ffffff","centerX":0,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":122},{"type":"Image","props":{"y":90,"x":74,"skin":"ui/common/diamond2.png","name":"image","anchorY":0.5,"anchorX":0.5},"compId":68},{"type":"Label","props":{"y":146,"x":74,"width":120,"text":"24","strokeColor":"#03529c","stroke":3,"name":"count","fontSize":22,"color":"#ffffff","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":74},{"type":"Image","props":{"y":180,"x":80,"width":50,"skin":"ui/common/huodongqu1.png","name":"common","height":50,"anchorY":0.5,"anchorX":0.5},"compId":170,"child":[{"type":"Image","props":{"y":18,"x":-28,"skin":"ui/common/z.png","scaleY":0.7,"scaleX":0.7},"compId":171},{"type":"FontClip","props":{"y":16,"x":48,"value":"10","skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":1.2,"scaleX":1.2,"name":"common_num","align":"left"},"compId":172}]}]},{"type":"Box","props":{"y":282,"x":715,"width":150,"var":"bei_3","height":220,"anchorY":0.5,"anchorX":0.5},"compId":96,"child":[{"type":"Image","props":{"skin":"ui/rewardPage/jppb.png","scaleY":0.83,"scaleX":0.83},"compId":88}]},{"type":"Box","props":{"y":282,"x":715,"width":150,"var":"box_3","height":220,"anchorY":0.5,"anchorX":0.5},"compId":81,"child":[{"type":"Image","props":{"skin":"ui/rewardPage/jpdk.png","scaleY":0.83,"scaleX":0.83},"compId":35},{"type":"Image","props":{"y":19,"x":20,"skin":"ui/rewardPage/jpmcdk.png","scaleY":0.85,"scaleX":0.85},"compId":55},{"type":"Label","props":{"y":30,"text":"刺泡鱼","strokeColor":"#0e1dc6","stroke":3,"name":"txt","fontSize":15,"color":"#ffffff","centerX":0,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":124},{"type":"Image","props":{"y":90,"x":74,"skin":"ui/common/diamond2.png","name":"image","anchorY":0.5,"anchorX":0.5},"compId":69},{"type":"Label","props":{"y":146,"x":74,"width":120,"text":"24","strokeColor":"#03529c","stroke":3,"name":"count","height":24,"fontSize":24,"color":"#ffffff","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":75},{"type":"Image","props":{"y":180,"x":80,"width":50,"skin":"ui/common/huodongqu1.png","name":"common","height":50,"anchorY":0.5,"anchorX":0.5},"compId":173,"child":[{"type":"Image","props":{"y":18,"x":-28,"skin":"ui/common/z.png","scaleY":0.7,"scaleX":0.7},"compId":174},{"type":"FontClip","props":{"y":16,"x":48,"value":"10","skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":1.2,"scaleX":1.2,"name":"common_num","align":"left"},"compId":175}]}]},{"type":"Box","props":{"y":282,"x":878,"width":150,"var":"bei_4","height":220,"anchorY":0.5,"anchorX":0.5},"compId":94,"child":[{"type":"Image","props":{"skin":"ui/rewardPage/jppb.png","scaleY":0.83,"scaleX":0.83},"compId":89}]},{"type":"Box","props":{"y":282,"x":878,"width":150,"var":"box_4","height":220,"anchorY":0.5,"anchorX":0.5},"compId":83,"child":[{"type":"Image","props":{"skin":"ui/rewardPage/jpdk.png","scaleY":0.83,"scaleX":0.83},"compId":36},{"type":"Image","props":{"y":19,"x":20,"skin":"ui/rewardPage/jpmcdk.png","scaleY":0.85,"scaleX":0.85},"compId":58},{"type":"Label","props":{"y":30,"text":"刺泡鱼","strokeColor":"#0e1dc6","stroke":3,"name":"txt","fontSize":15,"color":"#ffffff","centerX":0,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":125},{"type":"Image","props":{"y":90,"x":74,"skin":"ui/common/diamond1.png","name":"image","anchorY":0.5,"anchorX":0.5},"compId":70},{"type":"Label","props":{"y":146,"x":74,"width":120,"text":"24","strokeColor":"#03529c","stroke":3,"name":"count","height":24,"fontSize":22,"color":"#ffffff","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":76},{"type":"Image","props":{"y":180,"x":80,"width":50,"skin":"ui/common/huodongqu1.png","name":"common","height":50,"anchorY":0.5,"anchorX":0.5},"compId":176,"child":[{"type":"Image","props":{"y":18,"x":-28,"skin":"ui/common/z.png","scaleY":0.7,"scaleX":0.7},"compId":177},{"type":"FontClip","props":{"y":16,"x":48,"value":"50","skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":1.2,"scaleX":1.2,"name":"common_num","align":"left"},"compId":178}]}]},{"type":"Box","props":{"y":282,"x":1041,"width":150,"var":"bei_5","height":220,"anchorY":0.5,"anchorX":0.5},"compId":97,"child":[{"type":"Image","props":{"skin":"ui/rewardPage/jppb.png","scaleY":0.83,"scaleX":0.83},"compId":90}]},{"type":"Box","props":{"y":282,"x":1041,"width":150,"var":"box_5","height":220,"anchorY":0.5,"anchorX":0.5},"compId":84,"child":[{"type":"Image","props":{"skin":"ui/rewardPage/jpdk.png","scaleY":0.83,"scaleX":0.83},"compId":37},{"type":"Image","props":{"y":19,"x":20,"skin":"ui/rewardPage/jpmcdk.png","scaleY":0.85,"scaleX":0.85},"compId":61},{"type":"Label","props":{"y":30,"text":"刺泡鱼","strokeColor":"#0e1dc6","stroke":3,"name":"txt","fontSize":15,"color":"#ffffff","centerX":0,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":126},{"type":"Image","props":{"y":90,"x":74,"skin":"ui/common/b5.png","name":"image","anchorY":0.5,"anchorX":0.5},"compId":71},{"type":"Label","props":{"y":146,"x":74,"width":120,"text":"24","strokeColor":"#03529c","stroke":3,"name":"count","height":24,"fontSize":22,"color":"#ffffff","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":77},{"type":"Image","props":{"y":180,"x":80,"width":50,"skin":"ui/common/huodongqu1.png","name":"common","height":50,"anchorY":0.5,"anchorX":0.5},"compId":179,"child":[{"type":"Image","props":{"y":18,"x":-28,"skin":"ui/common/z.png","scaleY":0.7,"scaleX":0.7},"compId":180},{"type":"FontClip","props":{"y":16,"x":48,"value":"50","skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":1.2,"scaleX":1.2,"name":"common_num","align":"left"},"compId":181}]}]},{"type":"Image","props":{"y":432,"x":174,"width":320,"skin":"ui/rewardPage/jcjy.png","height":100,"sizeGrid":"30,30,30,30"},"compId":99},{"type":"Image","props":{"y":432,"x":516,"width":600,"skin":"ui/rewardPage/jcjy.png","height":100,"sizeGrid":"30,30,30,30"},"compId":103},{"type":"Image","props":{"y":427,"x":173,"width":278,"skin":"ui/rewardPage/jcjdk.png","height":108},"compId":98},{"type":"Image","props":{"y":463,"x":268,"skin":"ui/rewardPage/jcsrk.png"},"compId":100},{"type":"Image","props":{"y":469,"x":203,"skin":"ui/rewardPage/jc.png"},"compId":101},{"type":"Image","props":{"y":427,"x":513,"width":278,"skin":"ui/rewardPage/jcjdk.png","height":108},"compId":104},{"type":"Label","props":{"y":400,"x":634,"var":"time","text":"点击卡片抽奖    10S","fontSize":30,"color":"#caf9f7","anchorX":0.5,"align":"center"},"compId":120},{"type":"Image","props":{"y":496,"x":624,"var":"chouTxt","skin":"ui/rewardPage/jjy.png","anchorY":0.5,"anchorX":1},"compId":105},{"type":"Image","props":{"y":463,"x":775,"var":"notip","skin":"ui/rewardPage/yubuzu.png","anchorY":0.5,"anchorX":0.5},"compId":106},{"type":"ProgressBar","props":{"y":482,"x":625,"width":300,"var":"pro","value":0.4,"skin":"ui/common_ex/p1.png","sizeGrid":"10,10,10,10"},"compId":107},{"type":"Button","props":{"y":448,"x":924,"var":"rewrarBtn","stateNum":2,"skin":"ui/rewardPage/button_jiang.png"},"compId":108},{"type":"FontClip","props":{"y":497,"x":761,"width":17,"var":"nowcount","value":"1000","skin":"ui/rewardPage/shuzi.png","sheet":"/0123456789","pivotY":12,"height":20,"align":"right"},"compId":109},{"type":"FontClip","props":{"y":473,"x":317,"var":"reardfishCount","value":"1234","skin":"ui/rewardPage/nums.png","sheet":"0123456789"},"compId":113},{"type":"FontClip","props":{"y":485,"x":774,"value":"/","skin":"ui/rewardPage/shuzi.png","sheet":"/0123456789"},"compId":111},{"type":"FontClip","props":{"y":495,"x":787,"var":"allCount","value":"500","skin":"ui/rewardPage/shuzi.png","sheet":"/0123456789","anchorY":0.5,"anchorX":0},"compId":112},{"type":"Image","props":{"y":560,"x":120,"width":1040,"skin":"ui/rewardPage/jcjy.png","height":160,"sizeGrid":"30,30,30,30"},"compId":128},{"type":"Image","props":{"y":605,"x":165,"width":200,"skin":"ui/common_ex/bg_index1.png","height":80,"sizeGrid":"30,30,30,30"},"compId":131},{"type":"Image","props":{"y":572,"x":500,"width":650,"skin":"ui/common_ex/bg_index1.png","height":140,"sizeGrid":"30,30,30,30"},"compId":132},{"type":"Label","props":{"y":623,"x":265,"text":"抽奖记录","stroke":3,"fontSize":34,"color":"#f8f8f8","bold":true,"anchorX":0.5,"align":"center"},"compId":129},{"type":"HTMLDivElement","props":{"y":580,"x":550,"width":600,"var":"recordOne","height":20,"runtime":"laya.html.dom.HTMLDivElement"},"compId":134},{"type":"HTMLDivElement","props":{"y":613,"x":550,"width":600,"var":"recordTwo","height":20,"runtime":"laya.html.dom.HTMLDivElement"},"compId":137},{"type":"HTMLDivElement","props":{"y":647,"x":550,"width":600,"var":"recordThree","height":20,"runtime":"laya.html.dom.HTMLDivElement"},"compId":138},{"type":"HTMLDivElement","props":{"y":680,"x":550,"width":600,"var":"recordFour","height":20,"runtime":"laya.html.dom.HTMLDivElement"},"compId":139}],"animations":[{"nodes":[{"target":78,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":78,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":78,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":78,"key":"y","index":10}],"x":[{"value":229,"tweenMethod":"linearNone","tween":true,"target":78,"key":"x","index":0},{"value":229,"tweenMethod":"linearNone","tween":true,"target":78,"key":"x","index":5},{"value":229,"tweenMethod":"linearNone","tween":true,"target":78,"key":"x","index":10}],"visible":[{"value":false,"tweenMethod":"linearNone","tween":false,"target":78,"key":"visible","index":0},{"value":true,"tweenMethod":"linearNone","tween":false,"target":78,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":78,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":78,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":78,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":78,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":78,"key":"anchorX","index":0}],"alpha":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":78,"key":"alpha","index":0},{"value":1,"tweenMethod":"linearNone","tween":true,"target":78,"key":"alpha","index":5}]}},{"target":91,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":91,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":91,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":91,"key":"y","index":10}],"x":[{"value":229,"tweenMethod":"linearNone","tween":true,"target":91,"key":"x","index":0},{"value":229,"tweenMethod":"linearNone","tween":true,"target":91,"key":"x","index":5},{"value":229,"tweenMethod":"linearNone","tween":true,"target":91,"key":"x","index":10}],"visible":[{"value":true,"tweenMethod":"linearNone","tween":false,"target":91,"key":"visible","index":0},{"value":false,"tweenMethod":"linearNone","tween":false,"target":91,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":91,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":91,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":91,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":91,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":91,"key":"anchorX","index":0}],"alpha":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":91,"key":"alpha","index":0},{"value":1,"tweenMethod":"linearNone","tween":true,"target":91,"key":"alpha","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":91,"key":"alpha","index":10}]}}],"name":"zhen_0","id":1,"frameRate":24,"action":0},{"nodes":[{"target":91,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":91,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":91,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":91,"key":"y","index":10}],"x":[{"value":229,"tweenMethod":"linearNone","tween":true,"target":91,"key":"x","index":0},{"value":229,"tweenMethod":"linearNone","tween":true,"target":91,"key":"x","index":5}],"visible":[{"value":false,"tweenMethod":"linearNone","tween":false,"target":91,"key":"visible","index":0},{"value":true,"tweenMethod":"linearNone","tween":false,"target":91,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":91,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":91,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":91,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":91,"key":"anchorY","index":0},{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":91,"key":"anchorY","index":10}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":91,"key":"anchorX","index":0},{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":91,"key":"anchorX","index":10}]}},{"target":78,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":78,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":78,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":78,"key":"y","index":10}],"x":[{"value":229,"tweenMethod":"linearNone","tween":true,"target":78,"key":"x","index":0},{"value":229,"tweenMethod":"linearNone","tween":true,"target":78,"key":"x","index":5}],"visible":[{"value":true,"tweenMethod":"linearNone","tween":false,"target":78,"key":"visible","index":0},{"value":false,"tweenMethod":"linearNone","tween":false,"target":78,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":78,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":78,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":78,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":78,"key":"anchorY","index":0},{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":78,"key":"anchorY","index":10}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":78,"key":"anchorX","index":0},{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":78,"key":"anchorX","index":10}]}}],"name":"fan_0","id":2,"frameRate":24,"action":0},{"nodes":[{"target":92,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":92,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":92,"key":"y","index":5}],"x":[{"value":390,"tweenMethod":"linearNone","tween":true,"target":92,"key":"x","index":0},{"value":390,"tweenMethod":"linearNone","tween":true,"target":92,"key":"x","index":5},{"value":390,"tweenMethod":"linearNone","tween":true,"target":92,"key":"x","index":10}],"visible":[{"value":true,"tweenMethod":"linearNone","tween":false,"target":92,"key":"visible","index":0},{"value":false,"tweenMethod":"linearNone","tween":false,"target":92,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":92,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":92,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":92,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":92,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":92,"key":"anchorX","index":0}]}},{"target":79,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":79,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":79,"key":"y","index":5}],"x":[{"value":390,"tweenMethod":"linearNone","tween":true,"target":79,"key":"x","index":0},{"value":390,"tweenMethod":"linearNone","tween":true,"target":79,"key":"x","index":5},{"value":390,"tweenMethod":"linearNone","tween":true,"target":79,"key":"x","index":10}],"visible":[{"value":false,"tweenMethod":"linearNone","tween":false,"target":79,"key":"visible","index":0},{"value":true,"tweenMethod":"linearNone","tween":false,"target":79,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":79,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":79,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":79,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":79,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":79,"key":"anchorX","index":0}]}}],"name":"zhen_1","id":3,"frameRate":24,"action":0},{"nodes":[{"target":92,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":92,"key":"y","index":0}],"x":[{"value":390,"tweenMethod":"linearNone","tween":true,"target":92,"key":"x","index":0},{"value":390,"tweenMethod":"linearNone","tween":true,"target":92,"key":"x","index":5},{"value":390,"tweenMethod":"linearNone","tween":true,"target":92,"key":"x","index":10}],"visible":[{"value":false,"tweenMethod":"linearNone","tween":false,"target":92,"key":"visible","index":0},{"value":true,"tweenMethod":"linearNone","tween":false,"target":92,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":92,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":92,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":92,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":92,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":92,"key":"anchorX","index":0}]}},{"target":79,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":79,"key":"y","index":0}],"x":[{"value":390,"tweenMethod":"linearNone","tween":true,"target":79,"key":"x","index":0},{"value":390,"tweenMethod":"linearNone","tween":true,"target":79,"key":"x","index":5},{"value":390,"tweenMethod":"linearNone","tween":true,"target":79,"key":"x","index":10}],"visible":[{"value":true,"tweenMethod":"linearNone","tween":false,"target":79,"key":"visible","index":0},{"value":false,"tweenMethod":"linearNone","tween":false,"target":79,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":79,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":79,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":79,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":79,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":79,"key":"anchorX","index":0}]}}],"name":"fan_1","id":4,"frameRate":24,"action":0},{"nodes":[{"target":93,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":93,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":93,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":93,"key":"y","index":10}],"x":[{"value":555,"tweenMethod":"linearNone","tween":true,"target":93,"key":"x","index":0},{"value":555,"tweenMethod":"linearNone","tween":true,"target":93,"key":"x","index":5},{"value":555,"tweenMethod":"linearNone","tween":true,"target":93,"key":"x","index":10}],"visible":[{"value":true,"tweenMethod":"linearNone","tween":false,"target":93,"key":"visible","index":0},{"value":false,"tweenMethod":"linearNone","tween":false,"target":93,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":93,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":93,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":93,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":93,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":93,"key":"anchorX","index":0}]}},{"target":80,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":80,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":80,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":80,"key":"y","index":10}],"x":[{"value":555,"tweenMethod":"linearNone","tween":true,"target":80,"key":"x","index":0},{"value":555,"tweenMethod":"linearNone","tween":true,"target":80,"key":"x","index":5},{"value":555,"tweenMethod":"linearNone","tween":true,"target":80,"key":"x","index":10}],"visible":[{"value":false,"tweenMethod":"linearNone","tween":false,"target":80,"key":"visible","index":0},{"value":true,"tweenMethod":"linearNone","tween":false,"target":80,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":80,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":80,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":80,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":80,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":80,"key":"anchorX","index":0}]}}],"name":"zhen_2","id":5,"frameRate":24,"action":0},{"nodes":[{"target":93,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":93,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":93,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":93,"key":"y","index":10}],"x":[{"value":555,"tweenMethod":"linearNone","tween":true,"target":93,"key":"x","index":0},{"value":555,"tweenMethod":"linearNone","tween":true,"target":93,"key":"x","index":5},{"value":555,"tweenMethod":"linearNone","tween":true,"target":93,"key":"x","index":10}],"visible":[{"value":false,"tweenMethod":"linearNone","tween":false,"target":93,"key":"visible","index":0},{"value":true,"tweenMethod":"linearNone","tween":false,"target":93,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":93,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":93,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":93,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":93,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":93,"key":"anchorX","index":0}]}},{"target":80,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":80,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":80,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":80,"key":"y","index":10}],"x":[{"value":555,"tweenMethod":"linearNone","tween":true,"target":80,"key":"x","index":0},{"value":555,"tweenMethod":"linearNone","tween":true,"target":80,"key":"x","index":5},{"value":555,"tweenMethod":"linearNone","tween":true,"target":80,"key":"x","index":10}],"visible":[{"value":true,"tweenMethod":"linearNone","tween":false,"target":80,"key":"visible","index":0},{"value":false,"tweenMethod":"linearNone","tween":false,"target":80,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":80,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":80,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":80,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":80,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":80,"key":"anchorX","index":0}]}}],"name":"fan_2","id":6,"frameRate":24,"action":0},{"nodes":[{"target":96,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":96,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":96,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":96,"key":"y","index":10}],"x":[{"value":717,"tweenMethod":"linearNone","tween":true,"target":96,"key":"x","index":0},{"value":717,"tweenMethod":"linearNone","tween":true,"target":96,"key":"x","index":5},{"value":717,"tweenMethod":"linearNone","tween":true,"target":96,"key":"x","index":10}],"visible":[{"value":false,"tweenMethod":"linearNone","tween":false,"target":96,"key":"visible","index":0},{"value":true,"tweenMethod":"linearNone","tween":false,"target":96,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":96,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":96,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":96,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":96,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":96,"key":"anchorX","index":0}]}},{"target":81,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":81,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":81,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":81,"key":"y","index":10}],"x":[{"value":717,"tweenMethod":"linearNone","tween":true,"target":81,"key":"x","index":0},{"value":717,"tweenMethod":"linearNone","tween":true,"target":81,"key":"x","index":5},{"value":717,"tweenMethod":"linearNone","tween":true,"target":81,"key":"x","index":10}],"visible":[{"value":true,"tweenMethod":"linearNone","tween":false,"target":81,"key":"visible","index":0},{"value":false,"tweenMethod":"linearNone","tween":false,"target":81,"key":"visible","index":5},{"value":false,"tweenMethod":"linearNone","tween":false,"target":81,"key":"visible","index":10}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":81,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":81,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":81,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":81,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":81,"key":"anchorX","index":0}]}}],"name":"fan_3","id":7,"frameRate":24,"action":0},{"nodes":[{"target":96,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":96,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":96,"key":"y","index":5}],"x":[{"value":717,"tweenMethod":"linearNone","tween":true,"target":96,"key":"x","index":0},{"value":717,"tweenMethod":"linearNone","tween":true,"target":96,"key":"x","index":5},{"value":717,"tweenMethod":"linearNone","tween":true,"target":96,"key":"x","index":10}],"visible":[{"value":true,"tweenMethod":"linearNone","tween":false,"target":96,"key":"visible","index":0},{"value":false,"tweenMethod":"linearNone","tween":false,"target":96,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":96,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":96,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":96,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":96,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":96,"key":"anchorX","index":0}]}},{"target":81,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":81,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":81,"key":"y","index":5}],"x":[{"value":717,"tweenMethod":"linearNone","tween":true,"target":81,"key":"x","index":0},{"value":717,"tweenMethod":"linearNone","tween":true,"target":81,"key":"x","index":5},{"value":717,"tweenMethod":"linearNone","tween":true,"target":81,"key":"x","index":10}],"visible":[{"value":false,"tweenMethod":"linearNone","tween":false,"target":81,"key":"visible","index":0},{"value":true,"tweenMethod":"linearNone","tween":false,"target":81,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":81,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":81,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":81,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":81,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":81,"key":"anchorX","index":0}]}}],"name":"zhen_3","id":8,"frameRate":24,"action":0},{"nodes":[{"target":83,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":83,"key":"y","index":0}],"x":[{"value":880,"tweenMethod":"linearNone","tween":true,"target":83,"key":"x","index":0},{"value":880,"tweenMethod":"linearNone","tween":true,"target":83,"key":"x","index":5},{"value":880,"tweenMethod":"linearNone","tween":true,"target":83,"key":"x","index":10}],"visible":[{"value":false,"tweenMethod":"linearNone","tween":false,"target":83,"key":"visible","index":0},{"value":true,"tweenMethod":"linearNone","tween":false,"target":83,"key":"visible","index":5},{"value":true,"tweenMethod":"linearNone","tween":false,"target":83,"key":"visible","index":10}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":83,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":83,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":83,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":83,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":83,"key":"anchorX","index":0}]}},{"target":94,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":94,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":94,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":94,"key":"y","index":10}],"x":[{"value":880,"tweenMethod":"linearNone","tween":true,"target":94,"key":"x","index":0},{"value":880,"tweenMethod":"linearNone","tween":true,"target":94,"key":"x","index":5},{"value":880,"tweenMethod":"linearNone","tween":true,"target":94,"key":"x","index":10}],"visible":[{"value":true,"tweenMethod":"linearNone","tween":false,"target":94,"key":"visible","index":0},{"value":false,"tweenMethod":"linearNone","tween":false,"target":94,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":94,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":94,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":94,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":94,"key":"anchorY","index":0},{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":94,"key":"anchorY","index":10}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":94,"key":"anchorX","index":0},{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":94,"key":"anchorX","index":10}]}}],"name":"zhen_4","id":9,"frameRate":24,"action":0},{"nodes":[{"target":94,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":94,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":94,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":94,"key":"y","index":10}],"x":[{"value":880,"tweenMethod":"linearNone","tween":true,"target":94,"key":"x","index":0},{"value":880,"tweenMethod":"linearNone","tween":true,"target":94,"key":"x","index":5},{"value":880,"tweenMethod":"linearNone","tween":true,"target":94,"key":"x","index":10}],"visible":[{"value":false,"tweenMethod":"linearNone","tween":false,"target":94,"key":"visible","index":0},{"value":true,"tweenMethod":"linearNone","tween":false,"target":94,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":94,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":94,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":94,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":94,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":94,"key":"anchorX","index":0}]}},{"target":83,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":83,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":83,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":83,"key":"y","index":10}],"x":[{"value":880,"tweenMethod":"linearNone","tween":true,"target":83,"key":"x","index":0},{"value":880,"tweenMethod":"linearNone","tween":true,"target":83,"key":"x","index":5},{"value":880,"tweenMethod":"linearNone","tween":true,"target":83,"key":"x","index":10}],"visible":[{"value":true,"tweenMethod":"linearNone","tween":false,"target":83,"key":"visible","index":0},{"value":false,"tweenMethod":"linearNone","tween":false,"target":83,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":83,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":83,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":83,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":83,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":83,"key":"anchorX","index":0}]}}],"name":"fan_4","id":10,"frameRate":24,"action":0},{"nodes":[{"target":97,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":97,"key":"y","index":0}],"x":[{"value":1043,"tweenMethod":"linearNone","tween":true,"target":97,"key":"x","index":0},{"value":1043,"tweenMethod":"linearNone","tween":true,"target":97,"key":"x","index":5},{"value":1043,"tweenMethod":"linearNone","tween":true,"target":97,"key":"x","index":10}],"visible":[{"value":false,"tweenMethod":"linearNone","tween":false,"target":97,"key":"visible","index":0},{"value":true,"tweenMethod":"linearNone","tween":false,"target":97,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":97,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":97,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":97,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":97,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":97,"key":"anchorX","index":0}]}},{"target":84,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":84,"key":"y","index":0}],"x":[{"value":1043,"tweenMethod":"linearNone","tween":true,"target":84,"key":"x","index":0},{"value":1043,"tweenMethod":"linearNone","tween":true,"target":84,"key":"x","index":5},{"value":1043,"tweenMethod":"linearNone","tween":true,"target":84,"key":"x","index":10}],"visible":[{"value":true,"tweenMethod":"linearNone","tween":false,"target":84,"key":"visible","index":0},{"value":false,"tweenMethod":"linearNone","tween":false,"target":84,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":84,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":84,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":84,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":84,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":84,"key":"anchorX","index":0}]}}],"name":"fan_5","id":11,"frameRate":24,"action":0},{"nodes":[{"target":97,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":97,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":97,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":97,"key":"y","index":10}],"x":[{"value":1043,"tweenMethod":"linearNone","tween":true,"target":97,"key":"x","index":0},{"value":1043,"tweenMethod":"linearNone","tween":true,"target":97,"key":"x","index":5},{"value":1043,"tweenMethod":"linearNone","tween":true,"target":97,"key":"x","index":10}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":97,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":97,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":97,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":97,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":97,"key":"anchorX","index":0}]}},{"target":84,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":84,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":84,"key":"y","index":5},{"value":282,"tweenMethod":"linearNone","tween":true,"target":84,"key":"y","index":10}],"x":[{"value":1043,"tweenMethod":"linearNone","tween":true,"target":84,"key":"x","index":0},{"value":1043,"tweenMethod":"linearNone","tween":true,"target":84,"key":"x","index":5},{"value":1043,"tweenMethod":"linearNone","tween":true,"target":84,"key":"x","index":10}],"visible":[{"value":false,"tweenMethod":"linearNone","tween":false,"target":84,"key":"visible","index":0},{"value":true,"tweenMethod":"linearNone","tween":false,"target":84,"key":"visible","index":5}],"scaleX":[{"value":1,"tweenMethod":"linearNone","tween":true,"target":84,"key":"scaleX","index":0},{"value":-0.2,"tweenMethod":"linearNone","tween":true,"target":84,"key":"scaleX","index":5},{"value":1,"tweenMethod":"linearNone","tween":true,"target":84,"key":"scaleX","index":10}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":84,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":84,"key":"anchorX","index":0}]}}],"name":"zhen_5","id":12,"frameRate":24,"action":0},{"nodes":[{"target":91,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":91,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":91,"key":"y","index":10}],"x":[{"value":635,"tweenMethod":"linearNone","tween":true,"target":91,"key":"x","index":0},{"value":229,"tweenMethod":"linearNone","tween":true,"target":91,"key":"x","index":10}]}},{"target":78,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":78,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":78,"key":"y","index":10}],"x":[{"value":635,"tweenMethod":"linearNone","tween":true,"target":78,"key":"x","index":0},{"value":229,"tweenMethod":"linearNone","tween":true,"target":78,"key":"x","index":10}]}},{"target":92,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":92,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":92,"key":"y","index":10}],"x":[{"value":635,"tweenMethod":"linearNone","tween":true,"target":92,"key":"x","index":0},{"value":392,"tweenMethod":"linearNone","tween":true,"target":92,"key":"x","index":10}]}},{"target":79,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":79,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":79,"key":"y","index":10}],"x":[{"value":635,"tweenMethod":"linearNone","tween":true,"target":79,"key":"x","index":0},{"value":392,"tweenMethod":"linearNone","tween":true,"target":79,"key":"x","index":10}]}},{"target":93,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":93,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":93,"key":"y","index":10}],"x":[{"value":635,"tweenMethod":"linearNone","tween":true,"target":93,"key":"x","index":0},{"value":557,"tweenMethod":"linearNone","tween":true,"target":93,"key":"x","index":10}]}},{"target":80,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":80,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":80,"key":"y","index":10}],"x":[{"value":635,"tweenMethod":"linearNone","tween":true,"target":80,"key":"x","index":0},{"value":557,"tweenMethod":"linearNone","tween":true,"target":80,"key":"x","index":10}]}},{"target":96,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":96,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":96,"key":"y","index":10}],"x":[{"value":635,"tweenMethod":"linearNone","tween":true,"target":96,"key":"x","index":0},{"value":719,"tweenMethod":"linearNone","tween":true,"target":96,"key":"x","index":10}]}},{"target":81,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":81,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":81,"key":"y","index":10}],"x":[{"value":635,"tweenMethod":"linearNone","tween":true,"target":81,"key":"x","index":0},{"value":719,"tweenMethod":"linearNone","tween":true,"target":81,"key":"x","index":10}]}},{"target":94,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":94,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":94,"key":"y","index":10}],"x":[{"value":635,"tweenMethod":"linearNone","tween":true,"target":94,"key":"x","index":0},{"value":882,"tweenMethod":"linearNone","tween":true,"target":94,"key":"x","index":10}]}},{"target":83,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":83,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":83,"key":"y","index":10}],"x":[{"value":635,"tweenMethod":"linearNone","tween":true,"target":83,"key":"x","index":0},{"value":882,"tweenMethod":"linearNone","tween":true,"target":83,"key":"x","index":10}]}},{"target":97,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":97,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":97,"key":"y","index":10}],"x":[{"value":635,"tweenMethod":"linearNone","tween":true,"target":97,"key":"x","index":0},{"value":1045,"tweenMethod":"linearNone","tween":true,"target":97,"key":"x","index":10}]}},{"target":84,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":84,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":84,"key":"y","index":10}],"x":[{"value":635,"tweenMethod":"linearNone","tween":true,"target":84,"key":"x","index":0},{"value":1045,"tweenMethod":"linearNone","tween":true,"target":84,"key":"x","index":10}]}}],"name":"shou","id":14,"frameRate":24,"action":0},{"nodes":[{"target":91,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":91,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":91,"key":"y","index":10},{"value":282,"tweenMethod":"linearNone","tween":true,"target":91,"key":"y","index":20},{"value":282,"tweenMethod":"linearNone","tween":true,"target":91,"key":"y","index":30}],"x":[{"value":226,"tweenMethod":"linearNone","tween":true,"target":91,"key":"x","index":0},{"value":630,"tweenMethod":"linearNone","tween":true,"target":91,"key":"x","index":10},{"value":630,"tweenMethod":"linearNone","tween":true,"target":91,"key":"x","index":20},{"value":227,"tweenMethod":"linearNone","tween":true,"target":91,"key":"x","index":30}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":91,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":91,"key":"anchorX","index":0}]}},{"target":92,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":92,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":92,"key":"y","index":10},{"value":282,"tweenMethod":"linearNone","tween":true,"target":92,"key":"y","index":20},{"value":282,"tweenMethod":"linearNone","tween":true,"target":92,"key":"y","index":30}],"x":[{"value":387,"tweenMethod":"linearNone","tween":true,"target":92,"key":"x","index":0},{"value":630,"tweenMethod":"linearNone","tween":true,"target":92,"key":"x","index":10},{"value":630,"tweenMethod":"linearNone","tween":true,"target":92,"key":"x","index":20},{"value":388,"tweenMethod":"linearNone","tween":true,"target":92,"key":"x","index":30}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":92,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":92,"key":"anchorX","index":0}]}},{"target":93,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":93,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":93,"key":"y","index":10},{"value":282,"tweenMethod":"linearNone","tween":true,"target":93,"key":"y","index":20},{"value":282,"tweenMethod":"linearNone","tween":true,"target":93,"key":"y","index":30}],"x":[{"value":550,"tweenMethod":"linearNone","tween":true,"target":93,"key":"x","index":0},{"value":630,"tweenMethod":"linearNone","tween":true,"target":93,"key":"x","index":10},{"value":630,"tweenMethod":"linearNone","tween":true,"target":93,"key":"x","index":20},{"value":551,"tweenMethod":"linearNone","tween":true,"target":93,"key":"x","index":30}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":93,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":93,"key":"anchorX","index":0}]}},{"target":96,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":96,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":96,"key":"y","index":10},{"value":282,"tweenMethod":"linearNone","tween":true,"target":96,"key":"y","index":20},{"value":282,"tweenMethod":"linearNone","tween":true,"target":96,"key":"y","index":30}],"x":[{"value":714,"tweenMethod":"linearNone","tween":true,"target":96,"key":"x","index":0},{"value":630,"tweenMethod":"linearNone","tween":true,"target":96,"key":"x","index":10},{"value":630,"tweenMethod":"linearNone","tween":true,"target":96,"key":"x","index":20},{"value":715,"tweenMethod":"linearNone","tween":true,"target":96,"key":"x","index":30}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":96,"key":"anchorY","index":0},{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":96,"key":"anchorY","index":10}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":96,"key":"anchorX","index":0},{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":96,"key":"anchorX","index":10}]}},{"target":94,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":94,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":94,"key":"y","index":10},{"value":282,"tweenMethod":"linearNone","tween":true,"target":94,"key":"y","index":20},{"value":282,"tweenMethod":"linearNone","tween":true,"target":94,"key":"y","index":30}],"x":[{"value":877,"tweenMethod":"linearNone","tween":true,"target":94,"key":"x","index":0},{"value":630,"tweenMethod":"linearNone","tween":true,"target":94,"key":"x","index":10},{"value":630,"tweenMethod":"linearNone","tween":true,"target":94,"key":"x","index":20},{"value":878,"tweenMethod":"linearNone","tween":true,"target":94,"key":"x","index":30}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":94,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":94,"key":"anchorX","index":0}]}},{"target":97,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":97,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":97,"key":"y","index":10},{"value":282,"tweenMethod":"linearNone","tween":true,"target":97,"key":"y","index":20},{"value":282,"tweenMethod":"linearNone","tween":true,"target":97,"key":"y","index":30}],"x":[{"value":1040,"tweenMethod":"linearNone","tween":true,"target":97,"key":"x","index":0},{"value":630,"tweenMethod":"linearNone","tween":true,"target":97,"key":"x","index":10},{"value":630,"tweenMethod":"linearNone","tween":true,"target":97,"key":"x","index":20},{"value":1041,"tweenMethod":"linearNone","tween":true,"target":97,"key":"x","index":30}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":97,"key":"anchorY","index":0},{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":97,"key":"anchorY","index":10}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":97,"key":"anchorX","index":0},{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":97,"key":"anchorX","index":10}]}},{"target":78,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":78,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":78,"key":"y","index":10},{"value":282,"tweenMethod":"linearNone","tween":true,"target":78,"key":"y","index":20},{"value":282,"tweenMethod":"linearNone","tween":true,"target":78,"key":"y","index":30}],"x":[{"value":227,"tweenMethod":"linearNone","tween":true,"target":78,"key":"x","index":0}]}},{"target":79,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":79,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":79,"key":"y","index":10},{"value":282,"tweenMethod":"linearNone","tween":true,"target":79,"key":"y","index":20},{"value":282,"tweenMethod":"linearNone","tween":true,"target":79,"key":"y","index":30}],"x":[{"value":388,"tweenMethod":"linearNone","tween":true,"target":79,"key":"x","index":0}]}},{"target":80,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":80,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":80,"key":"y","index":10},{"value":282,"tweenMethod":"linearNone","tween":true,"target":80,"key":"y","index":20},{"value":282,"tweenMethod":"linearNone","tween":true,"target":80,"key":"y","index":30}],"x":[{"value":553,"tweenMethod":"linearNone","tween":true,"target":80,"key":"x","index":0}]}},{"target":81,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":81,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":81,"key":"y","index":10},{"value":282,"tweenMethod":"linearNone","tween":true,"target":81,"key":"y","index":20},{"value":282,"tweenMethod":"linearNone","tween":true,"target":81,"key":"y","index":30}],"x":[{"value":715,"tweenMethod":"linearNone","tween":true,"target":81,"key":"x","index":0}]}},{"target":83,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":83,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":83,"key":"y","index":10},{"value":282,"tweenMethod":"linearNone","tween":true,"target":83,"key":"y","index":20},{"value":282,"tweenMethod":"linearNone","tween":true,"target":83,"key":"y","index":30}],"x":[{"value":878,"tweenMethod":"linearNone","tween":true,"target":83,"key":"x","index":0}]}},{"target":84,"keyframes":{"y":[{"value":282,"tweenMethod":"linearNone","tween":true,"target":84,"key":"y","index":0},{"value":282,"tweenMethod":"linearNone","tween":true,"target":84,"key":"y","index":10},{"value":282,"tweenMethod":"linearNone","tween":true,"target":84,"key":"y","index":20},{"value":282,"tweenMethod":"linearNone","tween":true,"target":84,"key":"y","index":30}],"x":[{"value":1041,"tweenMethod":"linearNone","tween":true,"target":84,"key":"x","index":0}]}}],"name":"hee","id":15,"frameRate":24,"action":0}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index4.png","ui/common_ex/head_2.png","ui/common_ex/title_border.png","ui/rewardPage/title.png","ui/rewardPage/tab.png","ui/rewardPage/tab1.png","ui/rewardPage/tab2.png","ui/rewardPage/tab3.png","ui/rewardPage/tab4.png","ui/rewardPage/tab5.png","ui/rewardPage/tab6.png","ui/common_ex/bg_index2.png","ui/common_ex/quit.png","ui/rewardPage/jppb.png","ui/rewardPage/jpdk.png","ui/rewardPage/jpmcdk.png","ui/common/diamond2.png","ui/common/huodongqu1.png","ui/common/z.png","ui/common_ex/shop_num.png","ui/common/diamond1.png","ui/common/b5.png","ui/rewardPage/jcjy.png","ui/rewardPage/jcjdk.png","ui/rewardPage/jcsrk.png","ui/rewardPage/jc.png","ui/rewardPage/jjy.png","ui/rewardPage/yubuzu.png","ui/common_ex/p1.png","ui/rewardPage/button_jiang.png","ui/rewardPage/shuzi.png","ui/rewardPage/nums.png","ui/common_ex/bg_index1.png"],"loadList3D":[]};	
		

		class ruleUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.nomalBox=null;
				//this.activityBox=null;
				//this.awardImg=null;
				//this.award=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(ruleUI.uiView);
			}
		}

		ui.abbey.ruleUI=Laya.ruleUI=ruleUI;
		ruleUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":2},{"type":"Box","props":{"var":"nomalBox","centerY":0,"centerX":0},"compId":11,"child":[{"type":"Image","props":{"y":0,"x":0,"width":440,"skin":"ui/rule/buyu_guizk.png","height":200,"sizeGrid":"40,20,40,20"},"compId":3},{"type":"Text","props":{"y":20,"x":130,"width":150,"text":"渔场规则","height":50,"fontSize":32,"color":"#e2cc13","align":"center","runtime":"laya.display.Text"},"compId":4},{"type":"Label","props":{"y":75,"x":1,"wordWrap":true,"width":400,"text":"倒计时内发射子弹可能获得积分\\n 倒计时结束抽取玩家瓜分全部金币\\n积分越高中奖概率越高哦！","leading":10,"layoutEnabled":true,"height":120,"fontSize":24,"color":"#2eceff","align":"center"},"compId":9}]},{"type":"Box","props":{"width":435,"var":"activityBox","height":200,"centerY":0,"centerX":0},"compId":12,"child":[{"type":"Image","props":{"width":440,"skin":"ui/rule/buyu_guizk.png","height":225,"centerY":0,"centerX":0,"sizeGrid":"40,20,40,20"},"compId":13},{"type":"Text","props":{"y":0,"x":130,"width":150,"text":"渔场规则","height":50,"fontSize":32,"color":"#e2cc13","align":"center","runtime":"laya.display.Text"},"compId":14},{"type":"Label","props":{"y":55,"x":1,"wordWrap":true,"width":400,"text":"倒计时内发射子弹可能获得积分\\n 倒计时结束抽取玩家瓜分全部金币\\n积分越高中奖概率越高哦！","leading":10,"layoutEnabled":true,"height":120,"fontSize":24,"color":"#2eceff","align":"center"},"compId":15},{"type":"Text","props":{"y":168,"x":5,"width":150,"text":"活动期间中奖玩家额外获得奖励","height":50,"fontSize":24,"color":"#e2cc13","align":"center","runtime":"laya.display.Text"},"compId":16},{"type":"Image","props":{"y":146,"x":335,"width":100,"var":"awardImg","skin":"ui/common_ex/unit_exchange.png","scaleY":0.6,"scaleX":0.6,"height":100},"compId":17},{"type":"Text","props":{"y":168,"x":395,"width":35,"var":"award","text":"10","height":50,"fontSize":24,"color":"#e2cc13","bold":true,"align":"left","runtime":"laya.display.Text"},"compId":18}]}],"loadList":["ui/common_ex/jl_bg.png","ui/rule/buyu_guizk.png","ui/common_ex/unit_exchange.png"],"loadList3D":[]};	
		

		class SettingPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.setting_img=null;
				//this.provider_tel=null;
				//this.bgmBar=null;
				//this.musicBar=null;
				//this.muteBtn=null;
				//this.feedBtn=null;
				//this.giftcodeBtn=null;
				//this.exitGame=null;
				//this.logoutBtn=null;
				//this.writegiftcode=null;
				//this.bmask0=null;
				//this.codequiteBtn=null;
				//this.codeconfirmBtn=null;
				//this.writegiftInput=null;
				//this.logoutBox=null;
				//this.logoutMask=null;
				//this.logoutReturn=null;
				//this.startLogOutBtn=null;
				//this.logoutCheck=null;
				//this.wxlogoutBox=null;
				//this.copyLineBtn=null;
				//this.quitWxlogoutBox=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(SettingPageUI.uiView);
			}
		}

		ui.abbey.SettingPageUI=Laya.SettingPageUI=SettingPageUI;
		SettingPageUI.uiView={"type":"View","props":{"width":1280,"height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"y":-244,"x":-327,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":176},{"type":"Button","props":{"x":0,"var":"quitBtn","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":0},"compId":120},{"type":"Image","props":{"y":158,"x":340,"width":600,"visible":true,"var":"setting_img","skin":"ui/common_ex/bg_index3.png","height":400,"sizeGrid":"50,50,50,50"},"compId":169,"child":[{"type":"Image","props":{"y":-19,"width":600,"skin":"ui/common_ex/head_2.png","height":73,"centerX":0,"sizeGrid":"0,180,0,180"},"compId":171},{"type":"Image","props":{"y":-43,"skin":"ui/setting/title.png","centerX":13},"compId":170,"child":[{"type":"Image","props":{"y":-72,"x":213,"skin":"ui/common_ex/title_border.png"},"compId":174},{"type":"Image","props":{"y":-72,"x":18,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":175}]},{"type":"Text","props":{"y":93,"x":84,"width":104,"text":"音量","height":36,"fontSize":26,"color":"#828275","align":"left","runtime":"laya.display.Text"},"compId":161},{"type":"Text","props":{"y":176,"x":84,"width":90,"text":"音效","height":40,"fontSize":26,"color":"#828275","align":"left","runtime":"laya.display.Text"},"compId":162},{"type":"Text","props":{"y":263,"x":84,"width":160,"text":"全屏静音","height":40,"fontSize":26,"color":"#828275","align":"left","runtime":"laya.display.Text"},"compId":165},{"type":"Text","props":{"y":334,"x":84,"text":"客服电话：","fontSize":18,"color":"#828275","align":"left","runtime":"laya.display.Text"},"compId":178},{"type":"Text","props":{"y":336,"x":167,"var":"provider_tel","text":"0579-82917777","fontSize":18,"color":"#828275","align":"left","runtime":"laya.display.Text"},"compId":179},{"type":"HSlider","props":{"y":92,"x":221,"width":333,"var":"bgmBar","value":50,"tick":1,"skin":"ui/setting/hslider.png","runtime":"engine.ui.component.HSliderRe","min":0,"max":100,"height":42},"compId":167},{"type":"HSlider","props":{"y":175,"x":221,"width":333,"var":"musicBar","value":50,"tick":1,"skin":"ui/setting/hslider.png","runtime":"engine.ui.component.HSliderRe","min":0,"max":100,"height":42},"compId":168},{"type":"Button","props":{"y":255,"x":225,"var":"muteBtn","stateNum":1,"skin":"ui/setting/open.png"},"compId":173},{"type":"Button","props":{"y":321,"x":322,"width":112,"var":"feedBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":40},"compId":181,"child":[{"type":"Image","props":{"y":7,"x":31,"skin":"ui/common_ex/fankui.png","scaleY":0.8,"scaleX":0.8},"compId":183}]},{"type":"Button","props":{"y":321,"x":442,"width":112,"var":"giftcodeBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":40},"compId":184,"child":[{"type":"Image","props":{"y":7,"x":20,"skin":"ui/common_ex/libao.png","scaleY":0.8,"scaleX":0.8},"compId":185}]},{"type":"Button","props":{"y":255,"x":442,"width":112,"var":"exitGame","stateNum":2,"skin":"ui/common_ex/btn_blue.png","labelStrokeColor":"#045e8f","labelStroke":3,"height":40},"compId":228,"child":[{"type":"Label","props":{"y":7,"x":22,"text":"退出登录","strokeColor":"#045e8f","stroke":4,"fontSize":18,"color":"#ffffff","bold":true},"compId":229}]},{"type":"Label","props":{"y":367,"x":323,"var":"logoutBtn","underline":true,"text":"注销账号","fontSize":30,"color":"#e85e02","align":"left"},"compId":230}]},{"type":"Box","props":{"y":0,"x":0,"width":1280,"visible":false,"var":"writegiftcode","height":720},"compId":186,"child":[{"type":"Image","props":{"width":1900,"var":"bmask0","skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":187},{"type":"Image","props":{"y":224,"x":192,"width":895,"skin":"ui/common_ex/bg_index3.png","height":134,"sizeGrid":"50,50,50,50"},"compId":189},{"type":"Button","props":{"y":0,"x":0,"var":"codequiteBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":219},{"type":"Button","props":{"y":267,"x":950,"var":"codeconfirmBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","scaleX":0.7},"compId":226,"child":[{"type":"Image","props":{"y":7,"x":35,"skin":"ui/common_ex/confirm.png","scaleX":1.5},"compId":227}]},{"type":"TextInput","props":{"y":270,"x":236,"width":705,"var":"writegiftInput","skin":"ui/common_ex/yhsztiao.png","sizeGrid":"0,14,0,13","promptColor":"#ffffff","prompt":"请在此输入礼包兑换码","height":41,"fontSize":20,"bold":true,"align":"center"},"compId":220}]},{"type":"Box","props":{"y":0,"x":0,"width":1280,"visible":false,"var":"logoutBox","height":720},"compId":231,"child":[{"type":"Image","props":{"width":1900,"var":"logoutMask","skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":-1,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":232},{"type":"Image","props":{"y":124,"x":321,"width":638,"skin":"ui/common_ex/bg_index3.png","height":437,"sizeGrid":"50,50,50,50"},"compId":233},{"type":"Image","props":{"y":122,"x":318,"width":643,"skin":"ui/common_ex/head_2.png","height":85,"sizeGrid":"0,180,0,180"},"compId":241},{"type":"Image","props":{"y":30,"x":714,"skin":"ui/common_ex/title_border.png"},"compId":242},{"type":"Image","props":{"y":30,"x":590,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":243},{"type":"Image","props":{"y":97,"x":572,"width":134,"skin":"ui/common/title_prompt.png","scaleY":1.2,"scaleX":1.2,"height":68},"compId":244},{"type":"Label","props":{"y":214,"x":383,"wordWrap":true,"width":513,"text":"       账号注销，会清空账号中所有的数据，包括金币、钻石、红包、鱼雷、等所有的数据，且不可恢复。同时会自动和集结号账号解除绑定关系，请确认是否继续。","height":122,"fontSize":28,"color":"#0e5665"},"compId":239},{"type":"Button","props":{"y":0,"x":0,"var":"logoutReturn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":234},{"type":"Button","props":{"y":438,"x":540,"width":199,"var":"startLogOutBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":66},"compId":235,"child":[{"type":"Label","props":{"y":17,"x":35,"text":"注销账号","strokeColor":"#679E6A","stroke":2,"fontSize":32,"color":"#ffffff"},"compId":238}]},{"type":"CheckBox","props":{"y":393,"x":389,"var":"logoutCheck","skin":"ui/common_ex/checkbox.png","scaleY":1.8,"scaleX":1.8,"labelColors":"#000000","label":"我已充分了解注销账号的后果，并确认注销该账号"},"compId":240}]},{"type":"Box","props":{"y":0,"x":0,"width":1280,"visible":false,"var":"wxlogoutBox","height":720},"compId":245,"child":[{"type":"Image","props":{"width":1900,"skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":-1,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":246},{"type":"Image","props":{"y":124,"x":321,"width":638,"skin":"ui/common_ex/bg_index3.png","height":437,"sizeGrid":"50,50,50,50"},"compId":247},{"type":"Image","props":{"y":122,"x":318,"width":643,"skin":"ui/common_ex/head_2.png","height":85,"sizeGrid":"0,180,0,180"},"compId":248},{"type":"Image","props":{"y":30,"x":714,"skin":"ui/common_ex/title_border.png"},"compId":249},{"type":"Image","props":{"y":30,"x":590,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":250},{"type":"Image","props":{"y":97,"x":572,"width":134,"skin":"ui/common/title_prompt.png","scaleY":1.2,"scaleX":1.2,"height":68},"compId":251},{"type":"Label","props":{"y":264,"x":383,"wordWrap":true,"width":513,"text":"请复制以下链接，去浏览器进行账号注销","height":44,"fontSize":28,"color":"#0e5665"},"compId":252},{"type":"Button","props":{"y":438,"x":540,"width":199,"var":"copyLineBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":66},"compId":254,"child":[{"type":"Label","props":{"y":17,"x":67,"text":"复制","strokeColor":"#679E6A","stroke":2,"fontSize":32,"color":"#ffffff"},"compId":255}]},{"type":"Label","props":{"y":325,"x":389,"wordWrap":true,"width":501,"text":"https://www.jjhgame.com/logoff/apply","height":44,"fontSize":28,"color":"#0e5665","align":"center"},"compId":257}]},{"type":"Button","props":{"var":"quitWxlogoutBox","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":0},"compId":253}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/quit.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/setting/title.png","ui/common_ex/title_border.png","ui/setting/hslider.png","ui/setting/open.png","ui/common_ex/btn_green.png","ui/common_ex/fankui.png","ui/common_ex/libao.png","ui/common_ex/btn_blue.png","ui/common_ex/confirm.png","ui/common_ex/yhsztiao.png","ui/common/title_prompt.png","ui/common_ex/checkbox.png"],"loadList3D":[]};	
		

		class SharePageUI extends View{
			constructor (){
				super();
				//this.bgMask=null;
				//this.TwoBar=null;
				//this.oneBar=null;
				//this.ThreeBar=null;
				//this.panBox=null;
				//this.item_1=null;
				//this.item_8=null;
				//this.item_7=null;
				//this.item_6=null;
				//this.item_5=null;
				//this.item_4=null;
				//this.item_3=null;
				//this.item_2=null;
				//this.everyBox=null;
				//this.everyItem_1=null;
				//this.everyItem_8=null;
				//this.everyItem_7=null;
				//this.everyItem_6=null;
				//this.everyItem_5=null;
				//this.everyItem_4=null;
				//this.everyItem_3=null;
				//this.everyItem_2=null;
				//this.startLottery=null;
				//this.noLottery=null;
				//this.userImg=null;
				//this.head_1=null;
				//this.head_2=null;
				//this.head_3=null;
				//this.head_4=null;
				//this.head_5=null;
				//this.evShareBtn=null;
				//this.lockingBtn=null;
				//this.wildBtn=null;
				//this.buyBox=null;
				//this.buyOneBtn=null;
				//this.buyTenBtn=null;
				//this.onePrize=null;
				//this.tenPrize=null;
				//this.Sharelabel=null;
				//this.lockinglabel=null;
				//this.wildlabel=null;
				//this.closeBtn=null;
				//this.helpBtn=null;
				//this.helpBoxMask=null;
				//this.helpBox=null;
				//this.list1=null;
				//this.quitHelp=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(SharePageUI.uiView);
			}
		}

		ui.abbey.SharePageUI=Laya.SharePageUI=SharePageUI;
		SharePageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"width":1900,"var":"bgMask","skin":"ui/common_ex/jl_bg.png","height":1788,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":235},{"type":"Box","props":{"width":1280,"visible":true,"height":720,"centerY":0,"centerX":0},"compId":317,"child":[{"type":"Image","props":{"y":153,"x":411,"width":660,"skin":"ui/common_ex/zu40.png","height":389},"compId":246},{"type":"Image","props":{"y":312,"x":608,"width":424,"var":"TwoBar","skin":"ui/common_ex/annxuanz.png","height":93},"compId":299},{"type":"Image","props":{"y":211,"x":606,"width":421,"var":"oneBar","skin":"ui/common_ex/annxuanz.png","height":93},"compId":298},{"type":"Image","props":{"y":416,"x":608,"width":421,"visible":false,"var":"ThreeBar","skin":"ui/common_ex/annxuanz.png","height":93},"compId":300},{"type":"Box","props":{"y":348,"x":442,"width":462,"var":"panBox","height":462,"anchorY":0.5,"anchorX":0.5},"compId":243,"child":[{"type":"Image","props":{"width":463,"skin":"ui/share/zhuanpdixia.png","height":463},"compId":12},{"type":"Box","props":{"y":53,"x":201,"var":"item_1","rotation":0},"compId":151,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":147},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":148},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":149},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":150}]},{"type":"Box","props":{"y":87,"x":330,"var":"item_8","rotation":45},"compId":152,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":153},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":154},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":155},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":156}]},{"type":"Box","props":{"y":204,"x":400,"var":"item_7","rotation":90},"compId":203,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":204},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":205},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":206},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":207}]},{"type":"Box","props":{"y":331,"x":376,"var":"item_6","rotation":135},"compId":208,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":209},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":210},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":211},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":212}]},{"type":"Box","props":{"y":402,"x":269,"var":"item_5","rotation":180},"compId":213,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":214},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":215},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":216},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":217}]},{"type":"Box","props":{"y":376,"x":141,"var":"item_4","rotation":225},"compId":218,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":219},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":220},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":221},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":222}]},{"type":"Box","props":{"y":268,"x":69,"var":"item_3","rotation":270},"compId":223,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":224},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":225},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":226},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":227}]},{"type":"Box","props":{"y":138,"x":84,"var":"item_2","rotation":315},"compId":228,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":229},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":230},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":231},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":232}]}]},{"type":"Box","props":{"y":348,"x":442,"width":462,"var":"everyBox","rotation":0,"height":462,"anchorY":0.5,"anchorX":0.5},"compId":256,"child":[{"type":"Image","props":{"width":463,"skin":"ui/share/zhuanpdixia.png","height":463},"compId":257},{"type":"Box","props":{"y":53,"x":201,"var":"everyItem_1","rotation":0},"compId":258,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":259},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":260},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":261},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":262}]},{"type":"Box","props":{"y":87,"x":330,"var":"everyItem_8","rotation":45},"compId":263,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":264},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":265},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":266},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":267}]},{"type":"Box","props":{"y":204,"x":400,"var":"everyItem_7","rotation":90},"compId":268,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":269},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":270},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":271},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":272}]},{"type":"Box","props":{"y":331,"x":376,"var":"everyItem_6","rotation":135},"compId":273,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":274},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":275},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":276},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":277}]},{"type":"Box","props":{"y":402,"x":269,"var":"everyItem_5","rotation":180},"compId":278,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":279},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":280},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":281},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":282}]},{"type":"Box","props":{"y":376,"x":141,"var":"everyItem_4","rotation":225},"compId":283,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":284},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":285},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":286},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":287}]},{"type":"Box","props":{"y":268,"x":69,"var":"everyItem_3","rotation":270},"compId":288,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":289},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":290},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":291},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":292}]},{"type":"Box","props":{"y":138,"x":84,"var":"everyItem_2","rotation":315},"compId":293,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","scaleY":0.8,"scaleX":0.8},"compId":294},{"type":"Image","props":{"y":4,"x":7,"width":50,"skin":"ui/common/coin1.png","name":"icon","height":50},"compId":295},{"type":"Image","props":{"y":45,"x":3,"width":62,"skin":"ui/common_ex/reward_mask.png","height":18,"sizeGrid":"3,15,13,15"},"compId":296},{"type":"Label","props":{"y":48,"x":6,"width":57,"text":"100","name":"count","height":16,"fontSize":16,"color":"#f4e9e9","bold":true,"align":"center"},"compId":297}]}]},{"type":"Image","props":{"y":233,"x":362,"var":"startLottery","skin":"ui/share/kaischouj.png"},"compId":87},{"type":"Image","props":{"y":233,"x":362,"var":"noLottery","skin":"ui/share/kaischouj.png"},"compId":318},{"type":"Image","props":{"y":296,"x":515,"skin":"ui/share/cusai3.png"},"compId":244},{"type":"Image","props":{"y":337,"x":167,"skin":"ui/share/shuic1.png"},"compId":245},{"type":"Image","props":{"y":529,"x":149,"width":619,"visible":false,"var":"userImg","skin":"ui/share/dixiakuang.png","height":143,"sizeGrid":"50,50,50,50"},"compId":89,"child":[{"type":"Box","props":{"y":14,"x":39},"compId":137,"child":[{"type":"Box","props":{"var":"head_1"},"compId":112,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","name":"di"},"compId":91},{"type":"Image","props":{"y":3,"x":2,"width":78,"skin":"ui/common/nan.png","name":"head","height":77},"compId":92},{"type":"Image","props":{"y":8,"x":7,"skin":"ui/share/jiahao.png","name":"yao"},"compId":90},{"type":"Image","props":{"y":90,"x":2,"skin":"ui/common_ex/wenzdikuang.png","sizeGrid":"8,35,8,35"},"compId":110},{"type":"Label","props":{"y":94,"x":11,"width":63,"text":"已抽奖","name":"lottery","height":12,"color":"#f6eeee","bold":true,"align":"center"},"compId":111}]},{"type":"Box","props":{"x":118,"var":"head_2"},"compId":113,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","name":"di"},"compId":114},{"type":"Image","props":{"y":3,"x":2,"width":78,"skin":"ui/common/nan.png","name":"head","height":77},"compId":115},{"type":"Image","props":{"y":8,"x":7,"skin":"ui/share/jiahao.png","name":"yao"},"compId":116},{"type":"Image","props":{"y":90,"x":2,"skin":"ui/common_ex/wenzdikuang.png","sizeGrid":"8,35,8,35"},"compId":117},{"type":"Label","props":{"y":94,"x":11,"width":63,"text":"已抽奖","name":"lottery","height":12,"color":"#f6eeee","bold":true,"align":"center"},"compId":118}]},{"type":"Box","props":{"x":236,"var":"head_3"},"compId":119,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","name":"di"},"compId":120},{"type":"Image","props":{"y":3,"x":2,"width":78,"skin":"ui/common/nan.png","name":"head","height":77},"compId":121},{"type":"Image","props":{"y":8,"x":7,"skin":"ui/share/jiahao.png","name":"yao"},"compId":122},{"type":"Image","props":{"y":90,"x":2,"skin":"ui/common_ex/wenzdikuang.png","sizeGrid":"8,35,8,35"},"compId":123},{"type":"Label","props":{"y":94,"x":11,"width":63,"text":"已抽奖","name":"lottery","height":12,"color":"#f6eeee","bold":true,"align":"center"},"compId":124}]},{"type":"Box","props":{"x":353,"var":"head_4"},"compId":125,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","name":"di"},"compId":126},{"type":"Image","props":{"y":3,"x":2,"width":78,"skin":"ui/common/nan.png","name":"head","height":77},"compId":127},{"type":"Image","props":{"y":8,"x":7,"skin":"ui/share/jiahao.png","name":"yao"},"compId":128},{"type":"Image","props":{"y":90,"x":2,"skin":"ui/common_ex/wenzdikuang.png","sizeGrid":"8,35,8,35"},"compId":129},{"type":"Label","props":{"y":94,"x":11,"width":63,"text":"已抽奖","name":"lottery","height":12,"color":"#f6eeee","bold":true,"align":"center"},"compId":130}]},{"type":"Box","props":{"x":471,"var":"head_5"},"compId":131,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png","name":"di"},"compId":132},{"type":"Image","props":{"y":3,"x":2,"width":78,"skin":"ui/common/nan.png","name":"head","height":77},"compId":133},{"type":"Image","props":{"y":8,"x":7,"skin":"ui/share/jiahao.png","name":"yao"},"compId":134},{"type":"Image","props":{"y":90,"x":2,"skin":"ui/common_ex/wenzdikuang.png","sizeGrid":"8,35,8,35"},"compId":135},{"type":"Label","props":{"y":94,"x":11,"width":63,"text":"已抽奖","name":"lottery","height":12,"color":"#f6eeee","bold":true,"align":"center"},"compId":136}]}]}]},{"type":"Button","props":{"y":420,"x":833,"visible":false,"var":"evShareBtn","skin":"ui/common_ex/bg.png","labelStrokeColor":"#000000","labelStroke":2,"labelSize":24,"labelFont":"Microsoft YaHei","labelColors":"#ffffff"},"compId":248,"child":[{"type":"Label","props":{"y":20,"x":48,"text":"每日转盘","strokeColor":"#000000","stroke":3,"fontSize":24,"color":"#ffffff","bold":true},"compId":253}]},{"type":"Button","props":{"y":219,"x":833,"var":"lockingBtn","skin":"ui/common_ex/bg.png","labelStrokeColor":"#000000","labelStroke":2,"labelSize":24,"labelFont":"Microsoft YaHei","labelColors":"#ffffff"},"compId":250,"child":[{"type":"Label","props":{"y":20,"x":51,"text":"锁定转盘","strokeColor":"#000000","stroke":3,"fontSize":24,"color":"#ffffff","bold":true},"compId":254}]},{"type":"Button","props":{"y":320,"x":833,"var":"wildBtn","skin":"ui/common_ex/bg.png","labelStrokeColor":"#000000","labelStroke":2,"labelSize":24,"labelFont":"Microsoft YaHei","labelColors":"#ffffff"},"compId":251,"child":[{"type":"Label","props":{"y":20,"x":48,"text":"狂暴转盘","strokeColor":"#000000","stroke":3,"fontSize":24,"color":"#ffffff","bold":true},"compId":255}]},{"type":"Image","props":{"x":590,"skin":"ui/share/huanlzp.png"},"compId":252},{"type":"Box","props":{"y":556,"x":412,"var":"buyBox"},"compId":316,"child":[{"type":"Button","props":{"x":13,"width":151,"var":"buyOneBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":58},"compId":301,"child":[{"type":"Image","props":{"y":11,"x":19,"skin":"ui/share/buyOne.png"},"compId":303}]},{"type":"Button","props":{"x":248,"width":151,"var":"buyTenBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":58},"compId":302,"child":[{"type":"Image","props":{"y":10,"x":23,"skin":"ui/share/buyTen.png"},"compId":304}]},{"type":"Box","props":{"y":59},"compId":311,"child":[{"type":"Image","props":{"y":7,"x":18,"width":267,"skin":"ui/common_ex/coin_bg.png","scaleX":0.6,"height":37,"sizeGrid":"18,32,16,32"},"compId":307},{"type":"Image","props":{"skin":"ui/common_ex/unit_coin.png"},"compId":308},{"type":"Label","props":{"y":15,"x":55,"width":115,"var":"onePrize","text":"50000","height":27,"fontSize":20,"color":"#f3e1e1","bold":false,"align":"center"},"compId":309}]},{"type":"Box","props":{"y":59,"x":234},"compId":312,"child":[{"type":"Image","props":{"y":7,"x":18,"width":267,"skin":"ui/common_ex/coin_bg.png","scaleX":0.6,"height":37,"sizeGrid":"18,32,16,32"},"compId":313},{"type":"Image","props":{"skin":"ui/common_ex/unit_coin.png"},"compId":314},{"type":"Label","props":{"y":15,"x":55,"width":115,"var":"tenPrize","text":"500000","height":27,"fontSize":20,"color":"#f3e1e1","bold":false,"align":"center"},"compId":315}]}]},{"type":"Image","props":{"y":680,"x":118,"width":1000,"skin":"ui/common_ex/wenzdikuang.png","height":40,"sizeGrid":"8,35,8,35"},"compId":320},{"type":"Label","props":{"y":690,"x":118,"width":1000,"visible":false,"var":"Sharelabel","text":"每天登陆获得一次抽奖机会，每邀请一名好友额外获得一次抽奖机会","fontSize":22,"color":"#ffffff","align":"center"},"compId":321},{"type":"Label","props":{"y":690,"x":118,"width":1000,"visible":false,"var":"lockinglabel","text":"每次购买一个锁定道具，同时赠送一个随机道具","fontSize":22,"color":"#ffffff","align":"center"},"compId":322},{"type":"Label","props":{"y":690,"x":118,"width":1000,"visible":false,"var":"wildlabel","text":"每次购买一个狂暴道具，同时赠送一个随机道具","fontSize":22,"color":"#ffffff","align":"center"},"compId":323},{"type":"Image","props":{"y":159,"x":1021,"var":"closeBtn","skin":"ui/share/guanbi.png"},"compId":319},{"type":"Button","props":{"y":675,"x":969,"var":"helpBtn","stateNum":2,"skin":"ui/common_ex/btn_wenhao.png"},"compId":363}]},{"type":"Image","props":{"width":1900,"var":"helpBoxMask","skin":"ui/common_ex/jl_bg.png","height":1788,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":361},{"type":"Box","props":{"width":796,"var":"helpBox","height":540,"centerY":0,"centerX":0},"compId":324,"child":[{"type":"Image","props":{"y":44,"x":63,"width":674,"skin":"ui/common_ex/bg_index4.png","height":496,"sizeGrid":"50,50,50,50"},"compId":325},{"type":"Image","props":{"y":23,"x":65,"width":671,"skin":"ui/load/head_2.png","height":73,"sizeGrid":"0,200,0,200"},"compId":326},{"type":"Image","props":{"y":0,"x":289,"skin":"ui/share/guize.png"},"compId":327},{"type":"Image","props":{"y":94,"x":96,"width":609,"skin":"ui/common_ex/bg_index2.png","height":419,"sizeGrid":"40,40,40,40"},"compId":364},{"type":"Image","props":{"y":95,"x":506,"skin":"ui/share/img_gzsm_xiaobiaoti_fg.png"},"compId":367},{"type":"Image","props":{"y":94,"x":277,"skin":"ui/share/img_gzsm_xiaobiaoti_fg.png"},"compId":366},{"type":"Image","props":{"y":94,"x":98,"width":607,"skin":"ui/share/img_gzsm_xiaobiaoti_d.png","height":55,"sizeGrid":"8,12,9,14"},"compId":365},{"type":"Label","props":{"y":101,"x":148,"width":81,"text":"物  品","strokeColor":"#0a3ca2","stroke":2,"height":43,"fontSize":30,"color":"#ffffff"},"compId":352},{"type":"Label","props":{"y":101,"x":342,"width":81,"text":"概  率","strokeColor":"#0a3ca2","stroke":2,"height":43,"fontSize":30,"color":"#ffffff"},"compId":368},{"type":"Label","props":{"y":101,"x":553,"width":81,"text":"说  明","strokeColor":"#0a3ca2","stroke":2,"height":43,"fontSize":30,"color":"#ffffff"},"compId":369},{"type":"List","props":{"y":152,"x":95,"width":610,"var":"list1","height":351},"compId":377,"child":[{"type":"Box","props":{"renderType":"render"},"compId":376,"child":[{"type":"Image","props":{"x":54,"skin":"ui/common_ex/touxiang.png"},"compId":375},{"type":"Label","props":{"y":33,"x":224,"width":125,"text":"0.2","name":"pro","height":25,"fontSize":26,"color":"#e9ce0e","align":"center"},"compId":356},{"type":"Label","props":{"y":33,"x":421,"width":125,"text":"十次必中一次","name":"desc","height":25,"fontSize":26,"color":"#e9ce0e","align":"center"},"compId":357},{"type":"Image","props":{"y":11,"x":58,"width":68,"skin":"ui/common/yulei1.png","name":"icon","height":66},"compId":370},{"type":"Image","props":{"y":86,"width":610,"skin":"ui/share/img_gzsm_fenge.png","height":2},"compId":371}]}]},{"type":"Image","props":{"y":302,"x":0,"width":123,"skin":"ui/common_ex/grass1.png","height":233},"compId":373},{"type":"Image","props":{"y":348,"x":684,"skin":"ui/common_ex/grass2.png"},"compId":374}]},{"type":"Button","props":{"y":0,"x":0,"var":"quitHelp","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":0},"compId":360}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/zu40.png","ui/common_ex/annxuanz.png","ui/share/zhuanpdixia.png","ui/common_ex/touxiang.png","ui/common/coin1.png","ui/common_ex/reward_mask.png","ui/share/kaischouj.png","ui/share/cusai3.png","ui/share/shuic1.png","ui/share/dixiakuang.png","ui/common/nan.png","ui/share/jiahao.png","ui/common_ex/wenzdikuang.png","ui/common_ex/bg.png","ui/share/huanlzp.png","ui/common_ex/btn_green.png","ui/share/buyOne.png","ui/common_ex/btn_yellow.png","ui/share/buyTen.png","ui/common_ex/coin_bg.png","ui/common_ex/unit_coin.png","ui/share/guanbi.png","ui/common_ex/btn_wenhao.png","ui/common_ex/bg_index4.png","ui/load/head_2.png","ui/share/guize.png","ui/common_ex/bg_index2.png","ui/share/img_gzsm_xiaobiaoti_fg.png","ui/share/img_gzsm_xiaobiaoti_d.png","ui/common/yulei1.png","ui/share/img_gzsm_fenge.png","ui/common_ex/grass1.png","ui/common_ex/grass2.png","ui/common_ex/quit.png"],"loadList3D":[]};	
		

		class ShopPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.list1=null;
				//this.img=null;
				//this.price_text=null;
				//this.price_unit=null;
				//this.list_card=null;
				//this.quitBtn=null;
				//this.tab_extra=null;
				//this.tab_coin=null;
				//this.tab_diamond=null;
				//this.tab_skin=null;
				//this.tab_package=null;
				//this.tab_mini=null;
				//this.diamond_value=null;
				//this.coin_value=null;
				//this.boxYuanbao=null;
				//this.mini_balance=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(ShopPageUI.uiView);
			}
		}

		ui.abbey.ShopPageUI=Laya.ShopPageUI=ShopPageUI;
		ShopPageUI.uiView={"type":"View","props":{"width":1280,"height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"y":-227,"x":-315,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":184},{"type":"Image","props":{"y":110,"x":115,"width":1050,"skin":"ui/common_ex/bg_index0.png","height":500,"sizeGrid":"50,50,50,50"},"compId":116},{"type":"Image","props":{"y":223,"x":640,"width":990,"skin":"ui/common_ex/bg_index1.png","height":300,"anchorX":0.5,"sizeGrid":"30,30,30,30"},"compId":117},{"type":"List","props":{"y":229,"x":640,"width":982,"var":"list1","spaceX":20,"repeatY":1,"repeatX":6,"renderType":"render","height":290,"anchorX":0.5},"compId":102,"child":[{"type":"Box","props":{"y":10,"x":0,"width":180,"name":"render","height":260},"compId":93,"child":[{"type":"Image","props":{"y":25,"x":0,"skin":"ui/shop/item_bg.png","scaleY":0.9,"scaleX":0.9,"name":"bg"},"compId":86},{"type":"Image","props":{"y":56,"x":82,"width":120,"skin":"ui/shop/txt_bg.png","height":30,"anchorY":0.5,"anchorX":0.5,"sizeGrid":"10,15,10,15"},"compId":185},{"type":"Image","props":{"y":125,"x":80,"var":"img","name":"img","anchorY":0.5,"anchorX":0.5},"compId":107},{"type":"Text","props":{"y":45,"x":15,"width":135,"var":"price_text","text":"9钻石","name":"price_text","height":25,"fontSize":18,"color":"#ffffff","bold":true,"align":"center","runtime":"laya.display.Text"},"compId":152},{"type":"Text","props":{"y":175,"x":17,"width":130,"text":"首次购买钻石双倍","name":"gift_text","height":20,"fontSize":14,"color":"#1b5292","bold":true,"align":"center","runtime":"laya.display.Text"},"compId":157},{"type":"Button","props":{"y":196,"x":29,"width":110,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","name":"btn","height":40},"compId":115},{"type":"FontClip","props":{"y":203,"x":97,"value":"1","skin":"ui/common_ex/rmb.png","sheet":"0123456789","name":"price","anchorX":0.5},"compId":111},{"type":"Image","props":{"y":214,"x":47,"width":20,"var":"price_unit","name":"price_unit","height":20,"anchorY":0.5},"compId":112},{"type":"Image","props":{"y":130,"x":0,"skin":"ui/shop/side_discount.png","scaleY":0.8,"scaleX":0.8,"name":"side","anchorY":1,"anchorX":0},"compId":154},{"type":"Image","props":{"y":38,"x":142,"width":65,"skin":"ui/common/huodongqu1.png","name":"bomb","height":65,"anchorY":0.5,"anchorX":0.5},"compId":187,"child":[{"type":"Image","props":{"y":-1,"x":-3,"skin":"ui/shop/paopao.png"},"compId":190},{"type":"FontClip","props":{"y":52,"x":12,"width":60,"value":"x500","skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":0.9,"scaleX":0.9,"name":"bomb_num","align":"right"},"compId":189}]},{"type":"Image","props":{"y":38,"x":142,"width":65,"skin":"ui/common/huodongqu1.png","name":"bonus","height":65,"anchorY":0.5,"anchorX":0.5},"compId":191,"child":[{"type":"Image","props":{"y":-1,"x":-3,"skin":"ui/shop/paopao.png"},"compId":192},{"type":"FontClip","props":{"y":52,"x":12,"width":60,"value":"x500","skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":0.9,"scaleX":0.9,"name":"bonus_num","align":"right"},"compId":193}]},{"type":"Image","props":{"y":38,"x":142,"width":65,"skin":"ui/common/huodongqu1.png","name":"activity","height":65,"anchorY":0.5,"anchorX":0.5},"compId":195,"child":[{"type":"Image","props":{"y":-1,"x":-3,"skin":"ui/shop/paopao.png"},"compId":196},{"type":"FontClip","props":{"y":52,"x":12,"width":60,"value":"x500","skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":0.9,"scaleX":0.9,"name":"activity_num","align":"right"},"compId":197}]},{"type":"Image","props":{"y":38,"x":142,"width":65,"skin":"ui/common/huodongqu1.png","name":"common","height":65,"anchorY":0.5,"anchorX":0.5},"compId":210,"child":[{"type":"Image","props":{"y":-1,"x":-3,"skin":"ui/shop/paopao.png"},"compId":211},{"type":"FontClip","props":{"y":52,"x":12,"width":60,"value":"x500","skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":0.9,"scaleX":0.9,"name":"common_num","align":"right"},"compId":212}]},{"type":"Label","props":{"y":199,"x":29,"width":110,"text":"0/2","name":"ad_times","height":30,"fontSize":22,"color":"#ffffff","bold":true,"align":"center"},"compId":213}]},{"type":"HScrollBar","props":{"y":4,"x":0,"name":"scrollBar"},"compId":103}]},{"type":"List","props":{"y":232,"x":174,"width":932,"var":"list_card","spaceX":20,"repeatY":1,"repeatX":6,"renderType":"render","height":265},"compId":162,"child":[{"type":"Box","props":{"x":-2,"width":250,"top":22,"name":"render","height":240},"compId":163,"child":[{"type":"Image","props":{"y":-2,"x":2,"skin":"ui/shop/card_bg.png"},"compId":164},{"type":"Label","props":{"y":145,"x":124,"width":221,"valign":"middle","text":"月卡可在背包中进行赠送","name":"txt","height":16,"fontSize":16,"color":"#ffffff","anchorX":0.5,"align":"center"},"compId":194},{"type":"Button","props":{"y":169,"x":56,"width":150,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","name":"btn","height":46},"compId":167},{"type":"FontClip","props":{"y":189,"x":140,"value":"30","skin":"ui/common_ex/rmb.png","sheet":"0123456789","name":"price","anchorY":0.5,"anchorX":0.5},"compId":168},{"type":"Image","props":{"y":180,"x":104,"width":20,"skin":"ui/common_ex/unit_rmb.png","name":"price_unit","height":20},"compId":169},{"type":"Image","props":{"y":-19,"x":3,"skin":"ui/shop/card_title_bg.png"},"compId":174},{"type":"List","props":{"y":40,"x":45,"width":176,"spaceX":10,"repeatY":1,"repeatX":2,"renderType":"render","name":"list_reward","height":102},"compId":175,"child":[{"type":"Box","props":{"y":5,"x":0,"width":80,"name":"render"},"compId":176,"child":[{"type":"Image","props":{"skin":"ui/common/coin2.png","scaleY":0.8,"scaleX":0.8,"name":"reward_type"},"compId":178},{"type":"Image","props":{"y":75,"width":80,"skin":"ui/shop/card_p_bg.png","height":20,"sizeGrid":"0,10,0,10"},"compId":186},{"type":"Label","props":{"y":74,"width":80,"text":"x 999","name":"reward_text","fontSize":18,"color":"#f2fa2b","bold":false,"align":"center"},"compId":180}]}]},{"type":"Image","props":{"y":-2,"x":130,"name":"card_title","anchorX":0.5},"compId":181},{"type":"Image","props":{"y":176,"x":109,"skin":"ui/common_ex/t_accept.png","name":"accept"},"compId":182},{"type":"Label","props":{"y":177,"x":131,"text":"还等会让","strokeColor":"#953800","stroke":3,"name":"remain_day","fontSize":18,"color":"#ffffff","anchorX":0.5,"align":"center"},"compId":183},{"type":"Image","props":{"y":19,"x":234.5,"width":65,"skin":"ui/common/huodongqu1.png","name":"common","height":65,"anchorY":0.5,"anchorX":0.5},"compId":302,"child":[{"type":"Image","props":{"y":-1,"x":-3,"skin":"ui/shop/paopao.png"},"compId":303},{"type":"FontClip","props":{"y":52,"x":12,"width":60,"value":"x500","skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":0.9,"scaleX":0.9,"name":"common_num","align":"right"},"compId":304}]}]},{"type":"HScrollBar","props":{"y":4,"x":0,"name":"scrollBar"},"compId":172}]},{"type":"Image","props":{"y":98,"x":640,"width":1100,"skin":"ui/shop/head_1.png","height":54,"anchorX":0.5},"compId":118},{"type":"Button","props":{"y":4,"x":3,"var":"quitBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":120},{"type":"Box","props":{"y":151,"x":205},"compId":135,"child":[{"type":"Image","props":{"y":0,"x":710,"var":"tab_extra","skin":"ui/shop/tab_nothing.png","name":"tab_extra"},"compId":209},{"type":"Button","props":{"var":"tab_coin","stateNum":3,"skin":"ui/shop/tab_coin.png","name":"tab_coin"},"compId":124},{"type":"Button","props":{"y":0,"x":185,"var":"tab_diamond","stateNum":3,"skin":"ui/shop/tab_diamond.png","name":"tab_diamond"},"compId":139},{"type":"Button","props":{"y":0,"x":360,"var":"tab_skin","stateNum":3,"skin":"ui/shop/tab_skin.png","name":"tab_skin"},"compId":137},{"type":"Button","props":{"y":0,"x":535,"var":"tab_package","stateNum":3,"skin":"ui/shop/tab_package.png","name":"tab_package"},"compId":138},{"type":"Button","props":{"y":0,"x":709,"var":"tab_mini","stateNum":3,"skin":"ui/shop/tab_jjb.png","name":"tab_mini"},"compId":204}]},{"type":"Box","props":{"y":536,"x":500,"width":600,"height":52},"compId":144,"child":[{"type":"Image","props":{"y":7,"x":29,"width":250,"skin":"ui/shop/currency_bg.png","sizeGrid":"13,30,13,30"},"compId":141},{"type":"Image","props":{"y":7,"x":315,"width":250,"skin":"ui/shop/currency_bg.png","sizeGrid":"13,30,13,30"},"compId":142},{"type":"Image","props":{"y":0,"x":22,"skin":"ui/common_ex/unit_coin.png"},"compId":143},{"type":"Image","props":{"y":0,"x":301,"skin":"ui/common_ex/unit_diamond.png"},"compId":145}]},{"type":"FontClip","props":{"y":565,"x":1035,"var":"diamond_value","value":"333","skin":"ui/common_ex/nums.png","sheet":"0123456789","name":"diamond_value","height":26,"anchorY":0.5,"anchorX":1},"compId":149},{"type":"FontClip","props":{"y":565,"x":751,"var":"coin_value","value":"12","skin":"ui/common_ex/nums.png","sheet":"0123456789","name":"coin_value","height":26,"anchorY":0.5,"anchorX":1},"compId":148},{"type":"Image","props":{"y":400,"x":48,"skin":"ui/common_ex/grass1.png"},"compId":150},{"type":"Box","props":{"y":534,"x":237,"var":"boxYuanbao"},"compId":207,"child":[{"type":"Image","props":{"y":7,"x":20,"width":250,"skin":"ui/shop/currency_bg.png","sizeGrid":"13,30,13,30"},"compId":205},{"type":"Image","props":{"skin":"ui/common_ex/unit_jjb.png"},"compId":206},{"type":"FontClip","props":{"y":30,"x":245,"var":"mini_balance","value":"12","skin":"ui/common_ex/nums.png","sheet":"0123456789","height":26,"anchorY":0.5,"anchorX":1},"compId":208}]},{"type":"Image","props":{"y":438,"x":1109,"skin":"ui/common_ex/grass2.png"},"compId":151},{"type":"Box","props":{"y":-1,"x":497},"compId":158,"child":[{"type":"Image","props":{"y":1,"x":175,"skin":"ui/common_ex/title_border.png"},"compId":159},{"type":"Image","props":{"y":1,"x":99,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":160},{"type":"Image","props":{"y":65,"x":71,"skin":"ui/shop/title.png"},"compId":161}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index0.png","ui/common_ex/bg_index1.png","ui/shop/item_bg.png","ui/shop/txt_bg.png","ui/common_ex/btn_yellow.png","ui/common_ex/rmb.png","ui/shop/side_discount.png","ui/common/huodongqu1.png","ui/shop/paopao.png","ui/common_ex/shop_num.png","ui/shop/card_bg.png","ui/common_ex/unit_rmb.png","ui/shop/card_title_bg.png","ui/common/coin2.png","ui/shop/card_p_bg.png","ui/common_ex/t_accept.png","ui/shop/head_1.png","ui/common_ex/quit.png","ui/shop/tab_nothing.png","ui/shop/tab_coin.png","ui/shop/tab_diamond.png","ui/shop/tab_skin.png","ui/shop/tab_package.png","ui/shop/tab_jjb.png","ui/shop/currency_bg.png","ui/common_ex/unit_coin.png","ui/common_ex/unit_diamond.png","ui/common_ex/nums.png","ui/common_ex/grass1.png","ui/common_ex/unit_jjb.png","ui/common_ex/grass2.png","ui/common_ex/title_border.png","ui/shop/title.png"],"loadList3D":[]};	
		

		class ShortGiftPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.itemBtn_0=null;
				//this.itemBtn_1=null;
				//this.itemBtn_2=null;
				//this.list1=null;
				//this.remine_time=null;
				//this.close_btn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(ShortGiftPageUI.uiView);
			}
		}

		ui.abbey.ShortGiftPageUI=Laya.ShortGiftPageUI=ShortGiftPageUI;
		ShortGiftPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-265,"x":-280,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","hitTestPrior":true,"height":1300,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":106},{"type":"Box","props":{"top":0,"right":0,"left":0,"bottom":0},"compId":2,"child":[{"type":"Image","props":{"y":87,"x":133,"width":1013,"skin":"ui/common_ex/bg_index4.png","height":603,"sizeGrid":"50,50,50,50"},"compId":3},{"type":"Image","props":{"y":191,"x":335,"width":765,"skin":"ui/common_ex/bg_index1.png","height":416,"sizeGrid":"30,30,30,30"},"compId":12},{"type":"Image","props":{"y":77,"x":136,"width":1007,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":178},{"type":"Box","props":{"y":216,"x":159,"width":176,"height":271},"compId":4,"child":[{"type":"Button","props":{"y":0,"x":4,"var":"itemBtn_0","stateNum":1,"skin":"ui/shortGift/btn_fl_01.png","selected":true,"labelStrokeColor":"#0b6dab","labelStroke":3,"labelSize":30,"labelPadding":"0,3,10,0","labelFont":"Microsoft YaHei","labelColors":"#ffffff,#ffffff,#ffffff","labelBold":true,"labelAlign":"center"},"compId":5},{"type":"Button","props":{"y":95,"x":4,"var":"itemBtn_1","stateNum":1,"skin":"ui/shortGift/btn_cz_02.png","labelStrokeColor":"#0b6dab","labelStroke":3,"labelSize":30,"labelPadding":"0,3,10,0","labelFont":"Microsoft YaHei","labelColors":"#ffffff,#ffffff,#ffffff","labelBold":true},"compId":6},{"type":"Button","props":{"y":190,"x":4,"var":"itemBtn_2","stateNum":1,"skin":"ui/shortGift/btn_cj_02.png","labelStrokeColor":"#0b6dab","labelStroke":3,"labelSize":30,"labelPadding":"0,3,10,0","labelFont":"Microsoft YaHei","labelColors":"#ffffff,#ffffff,#ffffff","labelBold":true},"compId":7}]},{"type":"List","props":{"y":212,"x":349,"width":740,"var":"list1","spaceX":10,"repeatY":1,"height":375},"compId":119,"child":[{"type":"Box","props":{"y":0,"x":0,"width":240,"renderType":"render","height":374},"compId":118,"child":[{"type":"Image","props":{"y":0,"x":0,"width":238,"skin":"ui/shortGift/img_kuang.png","name":"bg","height":378,"sizeGrid":"25,25,25,25"},"compId":109},{"type":"Image","props":{"y":107,"x":73,"skin":"ui/common/yulei5.png","name":"img"},"compId":111},{"type":"Image","props":{"y":33,"x":29,"width":182,"skin":"ui/common_ex/txt_bg.png","height":43,"sizeGrid":"10,10,10,10"},"compId":200},{"type":"Image","props":{"y":223,"x":29,"width":182,"skin":"ui/common_ex/txt_bg.png","height":38,"sizeGrid":"10,10,10,10"},"compId":199},{"type":"Text","props":{"y":229,"x":54,"width":132,"text":"×12345","strokeColor":"0482E5","stroke":2,"name":"num","height":28,"fontSize":26,"color":"#ffffff","align":"center","runtime":"laya.display.Text"},"compId":112},{"type":"Label","props":{"y":40,"x":23,"width":194,"text":"第一天","strokeColor":"#000000","stroke":2,"name":"days","height":40,"fontSize":24,"font":"Microsoft YaHei","color":"#ffffff","bold":true,"align":"center"},"compId":181},{"type":"Label","props":{"y":295,"x":15,"wordWrap":true,"width":208,"text":"再登录2天可领取","name":"condition","height":33,"fontSize":18,"font":"Microsoft YaHei","color":"#ffffff","align":"center"},"compId":184},{"type":"Label","props":{"y":319,"x":27,"wordWrap":true,"width":186,"text":"333/8888","name":"progress","height":29,"fontSize":18,"font":"Microsoft YaHei","color":"#e6ff66","align":"center"},"compId":185},{"type":"Image","props":{"y":288,"x":35,"skin":"ui/shortGift/btn_y.png","name":"not_received"},"compId":194},{"type":"Image","props":{"y":289,"x":35,"skin":"ui/shortGift/btn_y_01.png","name":"rightBtn"},"compId":198},{"type":"Image","props":{"y":0,"x":4,"width":231,"visible":false,"skin":"ui/shortGift/img_an.png","name":"bmask","height":376,"alpha":0.4},"compId":197}]}]},{"type":"Label","props":{"y":147,"x":346,"width":324,"var":"remine_time","text":"活动剩余时间：12天15小时","strokeColor":"4d85fe","height":40,"fontSize":25,"font":"Microsoft YaHei","color":"#e6ff66","bold":false,"align":"left"},"compId":152},{"type":"Button","props":{"y":0,"x":0,"var":"close_btn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":172},{"type":"Box","props":{"y":-27,"x":428,"width":423,"height":156},"compId":173,"child":[{"type":"Image","props":{"y":16,"x":316,"skin":"ui/common_ex/title_border.png"},"compId":174},{"type":"Image","props":{"y":16,"x":107,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":175},{"type":"Image","props":{"y":83,"x":212,"skin":"ui/shortGift/title_text.png","anchorX":0.5},"compId":176}]}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index4.png","ui/common_ex/bg_index1.png","ui/common_ex/head_2.png","ui/shortGift/btn_fl_01.png","ui/shortGift/btn_cz_02.png","ui/shortGift/btn_cj_02.png","ui/shortGift/img_kuang.png","ui/common/yulei5.png","ui/common_ex/txt_bg.png","ui/shortGift/btn_y.png","ui/shortGift/btn_y_01.png","ui/shortGift/img_an.png","ui/common_ex/quit.png","ui/common_ex/title_border.png","ui/shortGift/title_text.png"],"loadList3D":[]};	
		

		class subscriptionUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.close_btn=null;
				//this.txtbox_wx=null;
				//this.copybtn=null;
				//this.txtbox_h5wxin=null;
				//this.gotohttp=null;
				//this.txtbox_h5wxout=null;
				//this.giftlist=null;
				//this.giftcodeBtn=null;
				//this.writegiftcode=null;
				//this.codeconfirmBtn=null;
				//this.codequiteBtn=null;
				//this.writegiftInput=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(subscriptionUI.uiView);
			}
		}

		ui.abbey.subscriptionUI=Laya.subscriptionUI=subscriptionUI;
		subscriptionUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-230,"x":-310,"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":2},{"type":"Image","props":{"y":108,"x":253,"width":802,"skin":"ui/common_ex/img_di.png","height":522},"compId":133},{"type":"Image","props":{"y":174,"x":765,"width":286,"skin":"ui/subscription/img_meizi.png","height":360},"compId":134},{"type":"Image","props":{"y":465,"x":313,"width":451,"skin":"ui/subscription/di.png","sizeGrid":"22,32,27,25","height":116},"compId":35},{"type":"Image","props":{"y":31,"x":394,"skin":"ui/subscription/gifttxt.png"},"compId":34},{"type":"Image","props":{"y":429,"x":297,"skin":"ui/subscription/wenzi1.png"},"compId":41},{"type":"Image","props":{"y":428,"x":1058,"visible":false,"skin":"ui/common_ex/logo.png"},"compId":3},{"type":"Button","props":{"y":0,"x":0,"width":150,"var":"close_btn","stateNum":1,"skin":"ui/common_ex/quit.png","height":65},"compId":5},{"type":"Box","props":{"y":229,"x":295},"compId":42,"child":[{"type":"Box","props":{"y":-53,"x":-12,"width":504,"visible":false,"var":"txtbox_wx","height":255},"compId":56,"child":[{"type":"Image","props":{"y":37,"width":495,"skin":"ui/subscription/di.png","sizeGrid":"21,27,21,25","height":212},"compId":40},{"type":"Image","props":{"x":9,"skin":"ui/subscription/buzhou.png"},"compId":43},{"type":"Label","props":{"y":45,"x":21,"width":122,"text":"1.点击右上角","height":23,"fontSize":20,"color":"#ffe440","align":"left"},"compId":44},{"type":"Label","props":{"y":45,"x":255,"width":204,"text":"选择[关于集结号捕鱼]","height":23,"fontSize":20,"color":"#ffe440","align":"left"},"compId":45},{"type":"Image","props":{"y":41,"x":151,"skin":"ui/subscription/di2.png"},"compId":46},{"type":"Label","props":{"y":75,"x":21,"width":122,"text":"2.点击相关公众号,选择","height":23,"fontSize":20,"color":"#ffe440","align":"left"},"compId":47},{"type":"Label","props":{"y":106,"x":21,"width":122,"text":"3.关注公众号,获取礼包兑换码","height":23,"fontSize":20,"color":"#ffe440","align":"left"},"compId":48},{"type":"Label","props":{"y":136,"x":21,"width":122,"text":"4.返回游戏在该界面兑换礼包奖励","height":23,"fontSize":20,"color":"#ffe440","align":"left"},"compId":49},{"type":"Image","props":{"y":165,"x":9,"skin":"ui/subscription/wenzi2.png"},"compId":50},{"type":"Label","props":{"y":198,"x":21,"width":122,"text":"1.截图后扫描二维码关注","height":23,"fontSize":20,"color":"#ffe440","align":"left"},"compId":51},{"type":"Label","props":{"y":226,"x":21,"width":122,"text":"2.微信搜索公众号:jjhbyh5","height":23,"fontSize":20,"color":"#ffe440","align":"left"},"compId":52},{"type":"Image","props":{"y":213,"x":269,"var":"copybtn","skin":"ui/subscription/fuzhi.png"},"compId":53},{"type":"Image","props":{"y":330,"x":739,"width":135,"skin":"ui/subscription/erweima.jpg","pivotY":217,"pivotX":376,"height":135},"compId":54},{"type":"Image","props":{"y":67,"x":242,"skin":"ui/subscription/yuan.png"},"compId":55}]},{"type":"Box","props":{"y":-54,"x":-13,"width":503,"visible":false,"var":"txtbox_h5wxin","height":254},"compId":57,"child":[{"type":"Image","props":{"y":37,"width":495,"skin":"ui/subscription/di.png","sizeGrid":"21,27,21,25","height":212},"compId":58},{"type":"Image","props":{"x":9,"skin":"ui/subscription/buzhou.png"},"compId":59},{"type":"Label","props":{"y":45,"x":21,"width":122,"text":"1.点击右边一键关注按钮","height":23,"fontSize":20,"color":"#ffe440","align":"left"},"compId":60},{"type":"Label","props":{"y":75,"x":21,"width":122,"text":"2.点击关注即可获得礼包兑换码","height":23,"fontSize":20,"color":"#ffe440","align":"left"},"compId":63},{"type":"Label","props":{"y":106,"x":21,"width":122,"text":"3.点击右下角兑换输入兑换码领取奖励","height":23,"fontSize":20,"color":"#ffe440","align":"left"},"compId":64},{"type":"Image","props":{"y":143,"x":9,"skin":"ui/subscription/wenzi2.png"},"compId":66},{"type":"Label","props":{"y":181,"x":21,"width":122,"text":"1.截图后扫描二维码关注","height":23,"fontSize":20,"color":"#ffe440","align":"left"},"compId":67},{"type":"Label","props":{"y":211,"x":21,"width":122,"text":"2.微信搜索公众号:jjhbyh5","height":23,"fontSize":20,"color":"#ffe440","align":"left"},"compId":68},{"type":"Image","props":{"y":45,"x":309,"width":74,"skin":"ui/subscription/tac.png","height":34},"compId":108},{"type":"Image","props":{"y":47,"x":390,"var":"gotohttp","skin":"ui/subscription/yijian.png"},"compId":72},{"type":"Image","props":{"y":327,"x":740,"width":126,"skin":"ui/subscription/erweima.jpg","pivotY":217,"pivotX":376,"height":126},"compId":132}]},{"type":"Box","props":{"y":-54,"x":-13,"width":507,"visible":false,"var":"txtbox_h5wxout","height":253},"compId":95,"child":[{"type":"Image","props":{"y":12,"x":0,"width":495,"skin":"ui/subscription/di.png","sizeGrid":"21,27,21,25","height":237},"compId":96},{"type":"Label","props":{"y":47,"x":21,"width":122,"text":"1.截图后扫描右侧二维码关注","height":23,"fontSize":18,"color":"#ffe440","align":"left"},"compId":98},{"type":"Label","props":{"y":76,"x":21,"width":122,"text":"2.关注后在公众号中获取礼包兑换码","height":23,"fontSize":18,"color":"#ffe440","align":"left"},"compId":99},{"type":"Label","props":{"y":106,"x":21,"width":122,"text":"3.返回游戏在该界面兑换礼包奖励","height":23,"fontSize":18,"color":"#ffe440","align":"left"},"compId":100},{"type":"Label","props":{"y":181,"x":21,"width":122,"text":"1.在微信中搜索jjhbyh5","height":23,"fontSize":18,"color":"#ffe440","align":"left"},"compId":102},{"type":"Label","props":{"y":211,"x":21,"width":122,"text":"2.点击关注获得礼包兑换码,返回游戏在该界面兑换奖励","height":23,"fontSize":18,"color":"#ffe440","align":"left"},"compId":103},{"type":"Label","props":{"y":17,"x":21,"width":147,"text":"关注方式一:","height":29,"fontSize":25,"color":"#ffe440","align":"left"},"compId":106},{"type":"Label","props":{"y":150,"x":21,"width":147,"text":"关注方式二:","height":29,"fontSize":25,"color":"#ffe440","align":"left"},"compId":107},{"type":"Image","props":{"y":238,"x":696,"width":166,"skin":"ui/subscription/erweima.jpg","pivotY":217,"pivotX":376,"height":166},"compId":131}]}]},{"type":"List","props":{"y":471,"x":325,"width":435,"var":"giftlist","spaceX":5,"repeatY":1,"repeatX":4,"renderType":"render","height":107},"compId":27,"child":[{"type":"Box","props":{"y":0,"x":0,"width":105,"renderType":"render","height":102},"compId":28,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png"},"compId":29},{"type":"Image","props":{"y":7,"x":13,"width":80,"skin":"ui/common/coin2.png","name":"img","height":80},"compId":30},{"type":"Image","props":{"y":68,"x":7,"width":89,"skin":"ui/common_ex/reward_mask.png","height":25,"sizeGrid":"3,15,13,15"},"compId":31},{"type":"Label","props":{"y":70,"x":22,"width":64,"text":"x 999","name":"reward","height":25,"fontSize":22,"color":"#f6e9e9","align":"center"},"compId":32}]}]},{"type":"Box","props":{"y":473,"x":331},"compId":109,"child":[{"type":"Box","props":{"width":105,"renderType":"render","height":102},"compId":110,"child":[{"type":"Image","props":{"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":111},{"type":"Image","props":{"y":10,"x":12,"width":75,"skin":"ui/subscription/b6.png","name":"img","height":57},"compId":112},{"type":"Image","props":{"y":68,"x":7,"width":89,"skin":"ui/common_ex/reward_mask.png","height":25,"sizeGrid":"3,15,13,15"},"compId":113},{"type":"Label","props":{"y":70,"x":20,"width":64,"text":"3天体验","name":"reward","height":25,"fontSize":18,"color":"#f6e9e9","align":"center"},"compId":114}]},{"type":"Box","props":{"x":105,"width":105,"renderType":"render","height":102},"compId":115,"child":[{"type":"Image","props":{"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":116},{"type":"Image","props":{"y":10,"x":12,"width":74,"skin":"ui/common_ex/kuangbao.png","name":"img","height":74},"compId":117},{"type":"Image","props":{"y":68,"x":7,"width":89,"skin":"ui/common_ex/reward_mask.png","height":25,"sizeGrid":"3,15,13,15"},"compId":118},{"type":"Label","props":{"y":70,"x":20,"width":64,"text":"×5","name":"reward","height":25,"fontSize":18,"color":"#f6e9e9","align":"center"},"compId":119}]},{"type":"Box","props":{"x":316,"width":105,"renderType":"render","height":102},"compId":120,"child":[{"type":"Image","props":{"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":121},{"type":"Image","props":{"y":10,"x":12,"width":74,"skin":"ui/subscription/suoding.png","name":"img","height":74},"compId":122},{"type":"Image","props":{"y":68,"x":7,"width":89,"skin":"ui/common_ex/reward_mask.png","height":25,"sizeGrid":"3,15,13,15"},"compId":123},{"type":"Label","props":{"y":70,"x":20,"width":64,"text":"×5","name":"reward","height":25,"fontSize":18,"color":"#f6e9e9","align":"center"},"compId":124}]},{"type":"Box","props":{"x":211,"width":105,"renderType":"render","height":102},"compId":125,"child":[{"type":"Image","props":{"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":126},{"type":"Image","props":{"y":10,"x":12,"width":75,"skin":"ui/subscription/bingdong.png","name":"img","height":75},"compId":127},{"type":"Image","props":{"y":68,"x":7,"width":89,"skin":"ui/common_ex/reward_mask.png","height":25,"sizeGrid":"3,15,13,15"},"compId":128},{"type":"Label","props":{"y":70,"x":20,"width":64,"text":"×5","name":"reward","height":25,"fontSize":18,"color":"#f6e9e9","align":"center"},"compId":129}]}]},{"type":"Box","props":{"y":509,"x":783},"compId":39,"child":[{"type":"Image","props":{"skin":"ui/subscription/getcc.png"},"compId":36},{"type":"Image","props":{"var":"giftcodeBtn","skin":"ui/subscription/duihuan.png"},"compId":38}]},{"type":"Box","props":{"y":0,"x":0,"width":1280,"visible":false,"var":"writegiftcode","height":720},"compId":16,"child":[{"type":"Image","props":{"width":1900,"skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":17},{"type":"Image","props":{"y":224,"x":192,"width":895,"skin":"ui/common_ex/bg_index3.png","height":134,"sizeGrid":"50,50,50,50"},"compId":18},{"type":"Button","props":{"y":267,"x":955,"width":98,"var":"codeconfirmBtn","stateNum":2,"skin":"ui/common_ex/btn_blue.png","height":47},"compId":19,"child":[{"type":"Image","props":{"y":9,"x":21,"skin":"ui/common_ex/confirm.png"},"compId":20}]},{"type":"Button","props":{"y":0,"x":0,"width":150,"var":"codequiteBtn","stateNum":1,"skin":"ui/common_ex/quit.png","height":65},"compId":21},{"type":"TextInput","props":{"y":270,"x":236,"width":705,"var":"writegiftInput","skin":"ui/common_ex/yhsztiao.png","sizeGrid":"0,14,0,13","promptColor":"#ffffff","prompt":"请在此输入礼包兑换码","height":41,"fontSize":20,"bold":true,"align":"center"},"compId":22},{"type":"Image","props":{"y":372,"x":141,"visible":false,"skin":"ui/common_ex/tishikuang.png"},"compId":23,"child":[{"type":"Button","props":{"y":42,"x":25,"stateNum":2,"skin":"ui/common_ex/btn_zhantie.png"},"compId":24}]}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/img_di.png","ui/subscription/img_meizi.png","ui/subscription/di.png","ui/subscription/gifttxt.png","ui/subscription/wenzi1.png","ui/common_ex/logo.png","ui/common_ex/quit.png","ui/subscription/buzhou.png","ui/subscription/di2.png","ui/subscription/wenzi2.png","ui/subscription/fuzhi.png","ui/subscription/erweima.jpg","ui/subscription/yuan.png","ui/subscription/tac.png","ui/subscription/yijian.png","ui/common_ex/touxiang.png","ui/common/coin2.png","ui/common_ex/reward_mask.png","ui/subscription/b6.png","ui/common_ex/kuangbao.png","ui/subscription/suoding.png","ui/subscription/bingdong.png","ui/subscription/getcc.png","ui/subscription/duihuan.png","ui/common_ex/bg_index3.png","ui/common_ex/btn_blue.png","ui/common_ex/confirm.png","ui/common_ex/yhsztiao.png","ui/common_ex/tishikuang.png","ui/common_ex/btn_zhantie.png"],"loadList3D":[]};	
		

		class TaskDailyPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.list1=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(TaskDailyPageUI.uiView);
			}
		}

		ui.abbey.TaskDailyPageUI=Laya.TaskDailyPageUI=TaskDailyPageUI;
		TaskDailyPageUI.uiView={"type":"View","props":{"width":1280,"name":"reward","height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"y":-220,"x":-304,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":228},{"type":"Image","props":{"y":50,"x":115,"width":1050,"skin":"ui/common_ex/bg_index0.png","height":620,"sizeGrid":"50,50,50,50"},"compId":116},{"type":"Image","props":{"y":70,"x":140,"width":1000,"skin":"ui/common_ex/bg_index1.png","height":580,"sizeGrid":"30,30,30,30"},"compId":117},{"type":"Image","props":{"y":119,"x":172,"width":950,"skin":"ui/common_ex/bg_index2.png","height":500,"sizeGrid":"40,40,40,40"},"compId":180},{"type":"Image","props":{"y":55,"x":115,"width":1050,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":119},{"type":"Button","props":{"y":0,"x":0,"var":"quitBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":120},{"type":"Image","props":{"y":459,"x":48,"skin":"ui/common_ex/grass1.png"},"compId":150},{"type":"Image","props":{"y":502,"x":1109,"skin":"ui/common_ex/grass2.png"},"compId":151},{"type":"List","props":{"y":143,"x":182,"width":925,"var":"list1","renderType":"render","height":455},"compId":159,"child":[{"type":"Box","props":{"y":-4,"x":21,"name":"render","height":118},"compId":161,"child":[{"type":"Image","props":{"y":8,"x":-12,"width":909,"skin":"ui/common_ex/task.png","height":101,"sizeGrid":"30,30,30,30"},"compId":229},{"type":"Text","props":{"y":20,"x":160,"width":258,"text":"累计登录一天","name":"task_name","height":28,"fontSize":22,"color":"#08316f","runtime":"laya.display.Text"},"compId":160},{"type":"ProgressBar","props":{"y":68,"x":153,"width":328,"value":0.1,"skin":"ui/common_ex/p2.png","name":"p1","sizeGrid":"10,10,10,10"},"compId":162},{"type":"Image","props":{"y":57,"x":70,"skin":"ui/common_ex/kuang.png","anchorY":0.5,"anchorX":0.5},"compId":231},{"type":"Image","props":{"y":57,"x":70,"skin":"ui/common/1.png","scaleY":0.7,"scaleX":0.7,"name":"icon","anchorY":0.5,"anchorX":0.5},"compId":230},{"type":"Box","props":{"y":34,"x":711,"name":"op_box"},"compId":195,"child":[{"type":"Button","props":{"width":151,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","name":"op","height":46},"compId":163},{"type":"Image","props":{"y":9,"x":77,"skin":"ui/common_ex/t_accept.png","name":"op_text","anchorX":0.5},"compId":194}]},{"type":"List","props":{"y":17,"x":513,"scaleY":0.75,"scaleX":0.75,"repeatX":2,"renderType":"render","name":"list_reward"},"compId":226,"child":[{"type":"Box","props":{"y":0,"x":0,"width":105,"name":"render","height":102},"compId":224,"child":[{"type":"Image","props":{"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":221},{"type":"Image","props":{"y":7,"x":13,"skin":"ui/common/coin2.png","scaleY":0.8,"scaleX":0.8,"name":"reward_type"},"compId":222},{"type":"Image","props":{"y":68,"x":7,"width":89,"skin":"ui/common_ex/reward_mask.png","height":25,"sizeGrid":"3,15,13,15"},"compId":223},{"type":"Label","props":{"y":70,"x":22,"width":64,"text":"x 999","name":"reward_text","height":25,"fontSize":22,"color":"#f6e9e9","align":"center"},"compId":225}]}]}]},{"type":"VScrollBar","props":{"y":-2,"x":922,"width":9,"skin":"ui/common_ex/vscroll.png","showButtons":false,"name":"scrollBar","height":436},"compId":227}]},{"type":"Box","props":{"y":-42,"x":438},"compId":168,"child":[{"type":"Image","props":{"y":5,"x":292,"skin":"ui/common_ex/title_border.png"},"compId":165},{"type":"Image","props":{"y":5,"x":127,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":166},{"type":"Image","props":{"y":76,"x":96.99999999999932,"skin":"ui/taskDaily/title.png"},"compId":167}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index0.png","ui/common_ex/bg_index1.png","ui/common_ex/bg_index2.png","ui/common_ex/head_2.png","ui/common_ex/quit.png","ui/common_ex/grass1.png","ui/common_ex/grass2.png","ui/common_ex/task.png","ui/common_ex/p2.png","ui/common_ex/kuang.png","ui/common/1.png","ui/common_ex/btn_yellow.png","ui/common_ex/t_accept.png","ui/common_ex/touxiang.png","ui/common/coin2.png","ui/common_ex/reward_mask.png","ui/common_ex/vscroll.png","ui/common_ex/title_border.png","ui/taskDaily/title.png"],"loadList3D":[]};	
		

		class TaskNewPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.quitBtn=null;
				//this.list1=null;
				//this.tab1=null;
				//this.main_p=null;
				//this.list_day=null;
				//this.countDown=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(TaskNewPageUI.uiView);
			}
		}

		ui.abbey.TaskNewPageUI=Laya.TaskNewPageUI=TaskNewPageUI;
		TaskNewPageUI.uiView={"type":"View","props":{"width":1280,"name":"reward","height":720,"cacheAs":"bitmap"},"compId":1,"child":[{"type":"Image","props":{"y":-265,"x":-316,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1300,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":244},{"type":"Image","props":{"y":49,"x":112,"width":1055,"skin":"ui/common_ex/bg_index0.png","height":632,"sizeGrid":"50,50,50,50"},"compId":116},{"type":"Image","props":{"y":89,"x":145,"width":992,"skin":"ui/common_ex/bg_index1.png","height":568,"sizeGrid":"30,30,30,30"},"compId":117},{"type":"Image","props":{"y":304,"x":172,"width":946,"skin":"ui/common_ex/bg_index2.png","height":347,"sizeGrid":"40,40,40,40"},"compId":180},{"type":"Image","props":{"y":55,"x":112,"width":1056,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":119},{"type":"Button","props":{"y":0,"x":0,"var":"quitBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":120},{"type":"Image","props":{"y":459,"x":48,"skin":"ui/common_ex/grass1.png"},"compId":150},{"type":"Image","props":{"y":502,"x":1109,"skin":"ui/common_ex/grass2.png"},"compId":151},{"type":"List","props":{"y":337,"x":171,"width":925,"var":"list1","renderType":"render","height":315},"compId":159,"child":[{"type":"Box","props":{"y":-6,"x":23,"width":902,"name":"render","height":118},"compId":161,"child":[{"type":"Image","props":{"y":6,"x":-9,"width":909,"skin":"ui/common_ex/task.png","height":101,"sizeGrid":"30,30,30,30"},"compId":245},{"type":"Text","props":{"y":21,"x":133,"width":351,"text":"累计登录一天","name":"task_name","height":28,"fontSize":22,"color":"#08316f","runtime":"laya.display.Text"},"compId":160},{"type":"ProgressBar","props":{"y":68,"x":131,"width":367,"value":0.1,"skin":"ui/common_ex/p2.png","name":"p1","sizeGrid":"10,10,10,10"},"compId":162},{"type":"Box","props":{"y":34,"x":711,"name":"op_box"},"compId":195,"child":[{"type":"Button","props":{"width":151,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","name":"op","height":46},"compId":163},{"type":"Image","props":{"y":9,"x":77,"skin":"ui/common_ex/t_accept.png","name":"op_text","anchorX":0.5},"compId":194}]},{"type":"List","props":{"y":19,"x":526,"scaleY":0.75,"scaleX":0.75,"repeatX":2,"renderType":"render","name":"list_reward"},"compId":226,"child":[{"type":"Box","props":{"y":0,"x":0,"width":105,"name":"render","height":102},"compId":224,"child":[{"type":"Image","props":{"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":221},{"type":"Image","props":{"y":3,"x":13,"skin":"ui/common/coin2.png","scaleY":0.8,"scaleX":0.8,"name":"reward_type"},"compId":222},{"type":"Image","props":{"y":68,"x":7,"width":89,"skin":"ui/common_ex/reward_mask.png","height":25,"sizeGrid":"3,15,13,15"},"compId":223},{"type":"Label","props":{"y":70,"x":22,"width":64,"text":"x 999","name":"reward_text","height":25,"fontSize":22,"color":"#f6e9e9","align":"center"},"compId":225}]}]},{"type":"Image","props":{"y":52,"x":52,"skin":"ui/common_ex/kuang.png","anchorY":0.5,"anchorX":0.5},"compId":247},{"type":"Image","props":{"y":52,"x":52,"skin":"ui/common/1.png","scaleY":0.7,"scaleX":0.7,"name":"icon","anchorY":0.5,"anchorX":0.5},"compId":246}]},{"type":"VScrollBar","props":{"y":-21,"x":933,"width":9,"skin":"ui/common_ex/vscroll.png","showButtons":false,"name":"scrollBar","height":327},"compId":243}]},{"type":"Label","props":{"y":117,"x":499,"width":313,"text":"完成当前所有任务获得更多奖励","height":26,"fontSize":22,"color":"#55e7f8"},"compId":207},{"type":"Box","props":{"y":-43,"x":438},"compId":168,"child":[{"type":"Image","props":{"y":5,"x":295,"skin":"ui/common_ex/title_border.png"},"compId":165},{"type":"Image","props":{"y":5,"x":130,"skin":"ui/common_ex/title_border.png","scaleX":-1,"rotation":360},"compId":166},{"type":"Image","props":{"y":76,"x":96.99999999999932,"skin":"ui/taskNew/title_new.png"},"compId":167}]},{"type":"Tab","props":{"y":245,"x":178,"width":937,"var":"tab1","space":-20,"skin":"ui/taskNew/tab.png","height":61,"direction":"horizontal"},"compId":175,"child":[{"type":"Button","props":{"y":0,"x":0,"width":150,"stateNum":3,"skin":"ui/taskNew/tab.png","name":"item0"},"compId":169},{"type":"Button","props":{"y":0,"x":128,"width":150,"stateNum":3,"skin":"ui/taskNew/tab.png","name":"item1"},"compId":171},{"type":"Image","props":{"y":23,"x":46,"skin":"ui/taskNew/d1.png"},"compId":177},{"type":"Image","props":{"y":24,"x":175,"skin":"ui/taskNew/d2.png"},"compId":181},{"type":"Button","props":{"y":0,"x":256,"width":150,"stateNum":3,"skin":"ui/taskNew/tab.png","name":"item2"},"compId":184},{"type":"Image","props":{"y":24,"x":306,"skin":"ui/taskNew/d3.png"},"compId":185},{"type":"Button","props":{"y":0,"x":386,"width":150,"stateNum":3,"skin":"ui/taskNew/tab.png","name":"item3"},"compId":186},{"type":"Button","props":{"y":0,"x":516,"width":150,"stateNum":3,"skin":"ui/taskNew/tab.png","name":"item4"},"compId":187},{"type":"Button","props":{"y":0,"x":646,"width":150,"stateNum":3,"skin":"ui/taskNew/tab.png","name":"item5"},"compId":188},{"type":"Button","props":{"y":0,"x":775,"width":150,"stateNum":3,"skin":"ui/taskNew/tab.png","name":"item6"},"compId":189},{"type":"Image","props":{"y":23,"x":434,"skin":"ui/taskNew/d4.png"},"compId":190},{"type":"Image","props":{"y":24,"x":564,"skin":"ui/taskNew/d5.png"},"compId":191},{"type":"Image","props":{"y":24,"x":692,"skin":"ui/taskNew/d6.png"},"compId":192},{"type":"Image","props":{"y":22,"x":822,"skin":"ui/taskNew/d7.png"},"compId":193}]},{"type":"Box","props":{"y":172,"x":200},"compId":200,"child":[{"type":"ProgressBar","props":{"y":0,"x":0,"width":871,"var":"main_p","skin":"ui/common_ex/p1.png","sizeGrid":"10,10,10,10"},"compId":196},{"type":"List","props":{"y":-23,"x":86,"width":799,"var":"list_day","spaceX":33,"repeatX":7,"renderType":"render","height":92},"compId":233,"child":[{"type":"Box","props":{"y":0,"x":0,"name":"render"},"compId":206,"child":[{"type":"Image","props":{"y":33,"x":30,"skin":"ui/taskNew/gift.png","name":"img_gift","anchorY":0.5,"anchorX":0.5},"compId":197},{"type":"Label","props":{"y":70,"x":0,"text":"第一天","name":"txt_day","fontSize":20,"color":"#59b5f5"},"compId":205},{"type":"Image","props":{"y":18,"x":-10,"width":81,"skin":"ui/common_ex/paopao.png","name":"txt_bg"},"compId":235},{"type":"Image","props":{"y":24,"x":10,"width":43,"skin":"ui/common_ex/t_accepted.png","name":"img_status","height":17},"compId":232},{"type":"Image","props":{"y":-76,"x":-85,"width":178,"visible":false,"skin":"ui/taskNew/pop.png","name":"reward_bg","height":93,"sizeGrid":"25,40,25,40"},"compId":236},{"type":"List","props":{"y":-67,"x":-68,"width":152,"visible":false,"spaceX":-30,"repeatX":2,"renderType":"render","name":"list_reward","height":75},"compId":237,"child":[{"type":"Box","props":{"y":0,"x":0,"width":105,"scaleY":0.7,"scaleX":0.7,"name":"render","height":102},"compId":238,"child":[{"type":"Image","props":{"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":239},{"type":"Image","props":{"y":50,"x":50,"skin":"ui/common/coin1.png","scaleY":0.9,"scaleX":0.9,"name":"reward_type","anchorY":0.5,"anchorX":0.5},"compId":240},{"type":"Image","props":{"y":68,"x":5,"width":89,"skin":"ui/common_ex/reward_mask.png","height":25,"sizeGrid":"3,15,13,15"},"compId":241},{"type":"Label","props":{"y":70,"x":22,"width":64,"text":"x 999","name":"reward_text","height":25,"fontSize":22,"color":"#f6e9e9","align":"center"},"compId":242}]}]}]}]}]},{"type":"Image","props":{"y":309,"x":164,"width":269,"skin":"ui/taskNew/time_bg.png","height":29},"compId":228},{"type":"Image","props":{"y":312,"x":205,"skin":"ui/taskNew/count_down.png"},"compId":227},{"type":"Label","props":{"y":310,"x":296,"width":103,"var":"countDown","text":"label","height":21,"fontSize":18,"color":"#ffffff","align":"center"},"compId":229}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index0.png","ui/common_ex/bg_index1.png","ui/common_ex/bg_index2.png","ui/common_ex/head_2.png","ui/common_ex/quit.png","ui/common_ex/grass1.png","ui/common_ex/grass2.png","ui/common_ex/task.png","ui/common_ex/p2.png","ui/common_ex/btn_yellow.png","ui/common_ex/t_accept.png","ui/common_ex/touxiang.png","ui/common/coin2.png","ui/common_ex/reward_mask.png","ui/common_ex/kuang.png","ui/common/1.png","ui/common_ex/vscroll.png","ui/common_ex/title_border.png","ui/taskNew/title_new.png","ui/taskNew/tab.png","ui/taskNew/d1.png","ui/taskNew/d2.png","ui/taskNew/d3.png","ui/taskNew/d4.png","ui/taskNew/d5.png","ui/taskNew/d6.png","ui/taskNew/d7.png","ui/common_ex/p1.png","ui/taskNew/gift.png","ui/common_ex/paopao.png","ui/common_ex/t_accepted.png","ui/taskNew/pop.png","ui/common/coin1.png","ui/taskNew/time_bg.png","ui/taskNew/count_down.png"],"loadList3D":[]};	
		

		class testImapctUI extends View{
			constructor (){
				super();
				//this.btnTwo=null;
				//this.btnThree=null;
				//this.btnOne=null;
				//this.closeBtn=null;
				//this.txtw=null;
				//this.txth=null;
				//this.txtx=null;
				//this.txty=null;
				//this.btnFour=null;
				//this.btnFive=null;
				//this.nextBtn=null;
				//this.preBtn=null;
				//this.txt=null;
				//this.txtCenterX=null;
				//this.txtCenterY=null;
				//this.aniSpeed=null;
				//this.btnSix=null;
				//this.aniTxt=null;
				//this.skill=null;
				//this.zhuan=null;
				//this.money=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(testImapctUI.uiView);
			}
		}

		ui.abbey.testImapctUI=Laya.testImapctUI=testImapctUI;
		testImapctUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":0,"x":0,"width":1280,"skin":"ui/mainPage/bg.png","height":720},"compId":2},{"type":"Button","props":{"y":195,"x":0,"width":130,"var":"btnTwo","skin":"ui/testImpact/button.png","labelSize":25,"label":"碰撞二","height":66},"compId":3},{"type":"Button","props":{"y":286,"x":2,"width":130,"var":"btnThree","skin":"ui/testImpact/button.png","labelSize":25,"label":"碰撞三","height":66},"compId":4},{"type":"Button","props":{"y":107,"x":2,"width":130,"var":"btnOne","skin":"ui/testImpact/button.png","labelSize":25,"label":"碰撞一","height":66},"compId":5},{"type":"Button","props":{"y":32,"x":46,"width":75,"var":"closeBtn","skin":"ui/fish/button.png","label":"返回","height":35},"compId":6},{"type":"TextInput","props":{"y":633,"x":230,"width":95,"var":"txtw","type":"number","text":"34","skin":"ui/fish/textinput.png","height":40,"fontSize":34,"align":"center"},"compId":8},{"type":"Label","props":{"y":588,"x":241,"text":"宽度","fontSize":34,"color":"#88ee1a","bold":true},"compId":9},{"type":"TextInput","props":{"y":634,"x":365,"width":95,"var":"txth","type":"number","text":"35","skin":"ui/fish/textinput.png","height":40,"fontSize":34,"align":"center"},"compId":10},{"type":"Label","props":{"y":588,"x":381,"width":68,"text":"高度","height":37,"fontSize":34,"color":"#88ee1a","bold":true},"compId":11},{"type":"TextInput","props":{"y":637,"x":500,"width":95,"var":"txtx","type":"number","text":"35","skin":"ui/fish/textinput.png","height":40,"fontSize":34,"align":"center"},"compId":12},{"type":"Label","props":{"y":589,"x":504,"width":90,"text":"x偏移","height":37,"fontSize":34,"color":"#88ee1a","bold":true},"compId":13},{"type":"TextInput","props":{"y":636,"x":642,"width":95,"var":"txty","type":"number","text":"15","skin":"ui/fish/textinput.png","height":40,"fontSize":34,"align":"center"},"compId":14},{"type":"Label","props":{"y":586,"x":643,"width":90,"text":"y偏移","height":37,"fontSize":34,"color":"#88ee1a","bold":true},"compId":15},{"type":"Button","props":{"y":372,"x":3,"width":130,"var":"btnFour","skin":"ui/testImpact/button.png","labelSize":25,"label":"碰撞四","height":66},"compId":16},{"type":"Button","props":{"y":470,"x":4,"width":130,"var":"btnFive","skin":"ui/testImpact/button.png","labelSize":25,"label":"碰撞五","height":66},"compId":17},{"type":"Button","props":{"y":538,"x":1137,"width":110,"var":"nextBtn","skin":"ui/testImpact/button.png","labelSize":24,"label":"下一动画","height":55},"compId":20},{"type":"Button","props":{"y":447,"x":1134,"width":108,"var":"preBtn","skin":"ui/testImpact/button.png","labelSize":24,"label":"上一动画","height":64},"compId":21},{"type":"Label","props":{"y":646,"x":120,"text":"label"},"compId":22},{"type":"Label","props":{"y":633,"x":65,"var":"txt","text":"矩形一","fontSize":35,"color":"#e84d11"},"compId":23},{"type":"Label","props":{"y":593,"x":36,"text":"正在编辑的图形","fontSize":23,"color":"#68ea03"},"compId":24},{"type":"TextInput","props":{"y":72,"x":266,"width":95,"var":"txtCenterX","type":"number","skin":"ui/fish/textinput.png","height":40,"fontSize":34,"align":"center"},"compId":25},{"type":"Label","props":{"y":24,"x":269,"text":"pivotX","fontSize":30,"color":"#88ee1a","bold":true},"compId":26},{"type":"TextInput","props":{"y":71,"x":417,"width":95,"var":"txtCenterY","type":"number","skin":"ui/fish/textinput.png","height":40,"fontSize":34,"align":"center"},"compId":27},{"type":"Label","props":{"y":22,"x":418,"text":"pivotY","fontSize":30,"color":"#88ee1a","bold":true},"compId":28},{"type":"TextInput","props":{"y":71,"x":572,"width":95,"var":"aniSpeed","type":"number","skin":"ui/fish/textinput.png","height":40,"fontSize":34,"align":"center"},"compId":48},{"type":"Label","props":{"y":25,"x":566,"text":"anilSpeed","fontSize":30,"color":"#88ee1a","bold":true},"compId":49},{"type":"Button","props":{"y":65,"x":1084,"width":130,"var":"btnSix","skin":"ui/testImpact/button.png","labelSize":25,"label":"动画区域","height":66},"compId":50},{"type":"Label","props":{"y":187,"x":1067,"text":"正在编辑的动画","fontSize":23,"color":"#68ea03"},"compId":51},{"type":"Label","props":{"y":238,"x":1103,"var":"aniTxt","text":"矩形一","fontSize":35,"color":"#e84d11"},"compId":52},{"type":"Image","props":{"y":246,"x":211,"var":"skill","skin":"ui/testImpact/zidong.png"},"compId":54},{"type":"Image","props":{"y":274,"x":369,"var":"zhuan","skin":"ani/skill/yy_1_1.png"},"compId":55},{"type":"Image","props":{"y":426,"x":602,"var":"money","skin":"ui/testImpact/coin1.png","anchorY":0.5,"anchorX":0.5},"compId":56}],"loadList":["ui/mainPage/bg.png","ui/testImpact/button.png","ui/fish/button.png","ui/fish/textinput.png","ui/testImpact/zidong.png","ani/skill/yy_1_1.png","ui/testImpact/coin1.png"],"loadList3D":[]};	
		

		class UseTicketPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.itemBtn_0=null;
				//this.itemBtn_1=null;
				//this.itemBtn_2=null;
				//this.itemBtn_3=null;
				//this.itemBtn_4=null;
				//this.select_0=null;
				//this.select_1=null;
				//this.select_2=null;
				//this.itemBox_0=null;
				//this.list_sign=null;
				//this.list_act=null;
				//this.tab1=null;
				//this.item0=null;
				//this.item1=null;
				//this.item2=null;
				//this.item3=null;
				//this.item4=null;
				//this.item5=null;
				//this.item6=null;
				//this.itemBox_1=null;
				//this.list1=null;
				//this.exchangeTip=null;
				//this.itemBox_2=null;
				//this.txt_share_content=null;
				//this.integralBox=null;
				//this.integralBtn=null;
				//this.integral_label=null;
				//this.integral_Icon=null;
				//this.conversionBox=null;
				//this.giftBagCode=null;
				//this.copyBtn=null;
				//this.conversionBtn=null;
				//this.list_gift=null;
				//this.convertBox=null;
				//this.bmask_b=null;
				//this.yesBtn=null;
				//this.writegiftInput=null;
				//this.itemBox_3=null;
				//this.myselfRank=null;
				//this.myselfIntegral=null;
				//this.rankList=null;
				//this.detailLable=null;
				//this.darts=null;
				//this.balloon_1=null;
				//this.balloon_2=null;
				//this.balloon_3=null;
				//this.balloon_4=null;
				//this.balloon_5=null;
				//this.balloon_6=null;
				//this.secondBtn=null;
				//this.consume_82=null;
				//this.consumeNum_82=null;
				//this.accountBtn=null;
				//this.detailBox=null;
				//this.itemBox_4=null;
				//this.giftItem1=null;
				//this.giftItem2=null;
				//this.giftItem3=null;
				//this.tipText=null;
				//this.costRmbBtn=null;
				//this.costRmbText=null;
				//this.returnMainBtn=null;
				//this.close_btn=null;
				//this.select_3=null;
				//this.select_4=null;
				//this.closeAccountBox=null;
				//this.endScore=null;
				//this.scorestLabel=null;
				//this.rewardImg=null;
				//this.rewardText=null;
				//this.rankLabel=null;
				//this.returnAccountBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(UseTicketPageUI.uiView);
			}
		}

		ui.abbey.UseTicketPageUI=Laya.UseTicketPageUI=UseTicketPageUI;
		UseTicketPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-207,"x":-289,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":2},{"type":"Image","props":{"y":98,"x":135,"width":1010,"skin":"ui/common_ex/bg_index4.png","sizeGrid":"50,50,50,50","height":607},"compId":3},{"type":"Image","props":{"y":185,"x":160,"width":960,"skin":"ui/common_ex/bg_index2.png","height":495,"sizeGrid":"40,40,40,40"},"compId":394},{"type":"Button","props":{"y":130,"x":174,"width":192,"var":"itemBtn_0","stateNum":3,"skin":"ui/useTicket/tab.png","labelStrokeColor":"#000000","labelStroke":2,"labelSize":24,"labelFont":"Microsoft YaHei","labelColors":"#ffffff","height":58},"compId":19,"child":[{"type":"Image","props":{"y":22,"x":44,"skin":"ui/useTicket/zi1.png"},"compId":433}]},{"type":"Button","props":{"y":130,"x":343,"width":192,"var":"itemBtn_1","stateNum":3,"skin":"ui/useTicket/tab.png","labelStrokeColor":"#000000","labelStroke":2,"labelSize":24,"labelFont":"Microsoft YaHei","labelColors":"#ffffff","height":58},"compId":13,"child":[{"type":"Image","props":{"y":22,"x":44,"skin":"ui/useTicket/zi2.png"},"compId":434}]},{"type":"Button","props":{"y":130,"x":511,"width":192,"var":"itemBtn_2","stateNum":3,"skin":"ui/useTicket/tab.png","labelStrokeColor":"#000000","labelStroke":2,"labelSize":24,"labelFont":"Microsoft YaHei","labelColors":"#ffffff","height":58},"compId":15,"child":[{"type":"Image","props":{"y":22,"x":44,"skin":"ui/useTicket/zi3.png"},"compId":435}]},{"type":"Button","props":{"y":130,"x":680,"width":192,"var":"itemBtn_3","stateNum":3,"skin":"ui/useTicket/tab.png","labelStrokeColor":"#000000","labelStroke":2,"labelSize":24,"labelFont":"Microsoft YaHei","labelColors":"#ffffff","height":58},"compId":17,"child":[{"type":"Image","props":{"y":22,"x":44,"skin":"ui/useTicket/zi4.png"},"compId":436}]},{"type":"Button","props":{"y":130,"x":511,"width":192,"var":"itemBtn_4","stateNum":3,"skin":"ui/useTicket/tab.png","labelStrokeColor":"#000000","labelStroke":2,"labelSize":24,"labelFont":"Microsoft YaHei","labelColors":"#ffffff","height":58},"compId":459,"child":[{"type":"Image","props":{"y":22,"x":44,"skin":"ui/useTicket/zi5.png"},"compId":518}]},{"type":"Image","props":{"y":66,"x":137,"width":1010,"skin":"ui/common_ex/head_2.png","height":81,"sizeGrid":"0,180,0,180"},"compId":5},{"type":"Image","props":{"y":-26,"x":556,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":6},{"type":"Image","props":{"y":-26,"x":748,"skin":"ui/common_ex/title_border.png","scaleX":1},"compId":7},{"type":"Image","props":{"y":33,"x":524,"var":"select_0","skin":"ui/useTicket/bt_shuangdankuanghuan.png"},"compId":390},{"type":"Image","props":{"y":60,"x":137,"var":"select_1","skin":"ui/useTicket/img_zhuangshi_01.png"},"compId":392},{"type":"Image","props":{"y":64,"x":1143,"var":"select_2","skin":"ui/useTicket/img_zhuangshi_01.png","scaleX":-1},"compId":393},{"type":"Box","props":{"y":190,"x":166,"width":950,"var":"itemBox_0","height":488},"compId":425,"child":[{"type":"Image","props":{"y":-4,"x":-5,"width":960,"skin":"ui/common_ex/bg_index2.png","height":185,"sizeGrid":"40,40,40,40"},"compId":443},{"type":"List","props":{"y":0,"x":0,"width":940,"var":"list_sign","spaceX":2,"height":175},"compId":247,"child":[{"type":"Box","props":{"y":4,"x":0,"width":134,"renderType":"render","height":177},"compId":245,"child":[{"type":"Image","props":{"y":2,"x":0,"skin":"ui/useTicket/img_kuang_02.png","name":"bg"},"compId":227},{"type":"Image","props":{"y":76,"x":65,"scaleY":0.8,"scaleX":0.8,"name":"img","anchorY":0.5,"anchorX":0.5},"compId":229},{"type":"Text","props":{"y":12,"x":11,"width":110,"text":"第一天","strokeColor":"#1655d4","stroke":2,"name":"days","height":22,"fontSize":20,"color":"#feffff","bold":true,"align":"center","runtime":"laya.display.Text"},"compId":230},{"type":"Text","props":{"y":126,"x":6,"width":120,"text":"2400钻石","strokeColor":"#1655d4","stroke":2,"name":"num","height":30,"fontSize":23,"color":"#feffff","bold":true,"align":"center","runtime":"laya.display.Text"},"compId":231},{"type":"Image","props":{"y":0,"x":1,"skin":"ui/useTicket/img_kuang_02a.png","name":"bmask"},"compId":375},{"type":"Image","props":{"y":37,"x":16,"skin":"ui/useTicket/img_ylq.png","name":"rightBtn"},"compId":346}]}]},{"type":"List","props":{"y":188,"x":0,"width":950,"var":"list_act","spaceY":7,"height":302},"compId":445,"child":[{"type":"Box","props":{"width":950,"renderType":"render","height":300},"compId":255,"child":[{"type":"Image","props":{"y":0,"x":0,"width":950,"pivotY":0,"pivotX":0,"name":"img","height":300},"compId":250}]}]},{"type":"Tab","props":{"y":475,"x":931,"var":"tab1","hitTestPrior":true,"anchorY":1,"anchorX":1},"compId":385,"child":[{"type":"Button","props":{"y":0,"x":0,"var":"item0","stateNum":2,"skin":"ui/useTicket/1.png","hitTestPrior":true},"compId":380,"child":[{"type":"FontClip","props":{"y":16,"x":20,"value":"1","skin":"ui/common_ex/nums.png","sheet":"0123456789"},"compId":438}]},{"type":"Button","props":{"y":0,"x":60,"var":"item1","stateNum":2,"skin":"ui/useTicket/1.png","hitTestPrior":true},"compId":381,"child":[{"type":"FontClip","props":{"y":16,"x":20,"value":"2","skin":"ui/common_ex/nums.png","sheet":"0123456789"},"compId":439}]},{"type":"Button","props":{"y":0,"x":120,"var":"item2","stateNum":2,"skin":"ui/useTicket/1.png","hitTestPrior":true},"compId":382,"child":[{"type":"FontClip","props":{"y":16,"x":20,"value":"3","skin":"ui/common_ex/nums.png","sheet":"0123456789"},"compId":440}]},{"type":"Button","props":{"y":0,"x":180,"var":"item3","stateNum":2,"skin":"ui/useTicket/1.png","hitTestPrior":true},"compId":383,"child":[{"type":"FontClip","props":{"y":16,"x":20,"value":"4","skin":"ui/common_ex/nums.png","sheet":"0123456789"},"compId":441}]},{"type":"Button","props":{"y":0,"x":240,"var":"item4","stateNum":2,"skin":"ui/useTicket/1.png","hitTestPrior":true},"compId":384,"child":[{"type":"FontClip","props":{"y":16,"x":20,"value":"5","skin":"ui/common_ex/nums.png","sheet":"0123456789"},"compId":442}]},{"type":"Button","props":{"y":0,"x":300,"var":"item5","stateNum":2,"skin":"ui/useTicket/1.png","hitTestPrior":true},"compId":455,"child":[{"type":"FontClip","props":{"y":16,"x":20,"value":"6","skin":"ui/common_ex/nums.png","sheet":"0123456789"},"compId":456}]},{"type":"Button","props":{"y":0,"x":360,"var":"item6","stateNum":2,"skin":"ui/useTicket/1.png","hitTestPrior":true},"compId":457,"child":[{"type":"FontClip","props":{"y":16,"x":20,"value":"7","skin":"ui/common_ex/nums.png","sheet":"0123456789"},"compId":458}]}]}]},{"type":"Box","props":{"y":196,"x":170,"width":940,"var":"itemBox_1","height":488},"compId":424,"child":[{"type":"Image","props":{"y":383,"x":0,"width":940,"skin":"ui/common_ex/img_di_02.png","sizeGrid":"45,45,45,45"},"compId":423},{"type":"List","props":{"y":8,"x":10,"width":920,"var":"list1","spaceX":20,"height":360},"compId":204,"child":[{"type":"Box","props":{"y":0,"x":0,"width":275,"renderType":"render","height":360},"compId":422,"child":[{"type":"Image","props":{"width":188,"skin":"ui/useTicket/img_kuang_01.png","scaleY":1.4,"scaleX":1.4,"height":257},"compId":192},{"type":"Image","props":{"y":97,"x":132,"skin":"ui/common/coin1.png","scaleY":1.2,"scaleX":1.2,"name":"img","anchorY":0.5,"anchorX":0.5},"compId":193},{"type":"Label","props":{"y":227,"x":132,"wordWrap":true,"width":162,"text":"eeeeeeeeeeeeee\\n鹅鹅鹅鹅鹅鹅鹅","overflow":"scroll","name":"desc","leading":3,"height":50,"fontSize":16,"color":"#014789","anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":200},{"type":"Label","props":{"y":180,"x":129,"width":170,"valign":"middle","text":"今日剩余：222","name":"remain","height":27,"fontSize":18,"color":"#ffffff","anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":201},{"type":"Button","props":{"y":272,"x":38,"width":186,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","name":"btn","height":60},"compId":197,"child":[{"type":"Label","props":{"y":30,"x":112,"width":129,"valign":"middle","text":"1000万","strokeColor":"#974504","stroke":4,"name":"price","height":48,"fontSize":30,"color":"#ffffff","centerY":0,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":509}]},{"type":"Image","props":{"y":298,"x":31,"width":70,"skin":"ui/common_ex/unit_exchange.png","scaleY":0.84,"scaleX":0.84,"name":"price_unit","height":70,"anchorY":0.5},"compId":199}]}]},{"type":"Label","props":{"y":409,"x":68,"width":810,"var":"exchangeTip","valign":"middle","text":"每天0点进行补货，记得来购买","stroke":0,"height":50,"fontSize":20,"color":"#fff44a","align":"center"},"compId":508}]},{"type":"Box","props":{"y":190,"x":166,"width":950,"visible":false,"var":"itemBox_2","height":488},"compId":125,"child":[{"type":"Label","props":{"y":51,"x":40,"wordWrap":true,"width":870,"var":"txt_share_content","text":"1.鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅\\n2.鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅\\n3.鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅\\n4.鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅\\n5.鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅鹅","leading":10,"height":180,"fontSize":23,"color":"#47f4ff","align":"left"},"compId":127},{"type":"Image","props":{"y":393,"x":0,"width":947,"skin":"ui/common_ex/img_di_02.png","sizeGrid":"13,20,22,19","height":92},"compId":417},{"type":"Box","props":{"y":418,"x":385,"width":155,"var":"integralBox","height":55},"compId":150,"child":[{"type":"Button","props":{"y":1,"x":3,"width":150,"var":"integralBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":50},"compId":151},{"type":"Label","props":{"y":10,"x":48,"wordWrap":true,"width":100,"var":"integral_label","valign":"middle","text":"4","strokeColor":"#a86a0f","stroke":4,"leading":5,"height":33,"fontSize":25,"color":"#ffffff","bold":true,"align":"center"},"compId":152},{"type":"Image","props":{"y":24,"x":14,"width":59,"var":"integral_Icon","skin":"ui/common_ex/unit_exchange.png","height":57,"anchorY":0.5},"compId":386}]},{"type":"Box","props":{"y":411,"x":100,"var":"conversionBox"},"compId":153,"child":[{"type":"Image","props":{"y":13,"x":156,"width":291,"skin":"ui/common_ex/img_di_03.png","height":38,"sizeGrid":"0,40,0,40"},"compId":420},{"type":"Label","props":{"y":13,"x":199,"wordWrap":true,"width":201,"var":"giftBagCode","text":"88888888","strokeColor":"#000000","stroke":2,"overflow":"visible","leading":5,"height":39,"fontSize":26,"color":"#ffffff","bold":true,"align":"center"},"compId":155},{"type":"Box","props":{"y":2,"x":460,"width":151,"height":52},"compId":156,"child":[{"type":"Button","props":{"y":0,"x":0,"width":151,"var":"copyBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","height":52},"compId":157,"child":[{"type":"Label","props":{"y":6,"x":41,"wordWrap":true,"width":74,"valign":"middle","text":"复 制","strokeColor":"#20860c","stroke":4,"leading":5,"height":38,"fontSize":26,"color":"#ffffff","bold":true,"align":"center"},"compId":158}]}]},{"type":"Box","props":{"y":0,"x":622,"width":151,"height":54},"compId":159,"child":[{"type":"Button","props":{"y":0,"x":0,"width":151,"var":"conversionBtn","stateNum":2,"skin":"ui/common_ex/btn_blue.png","height":52},"compId":160,"child":[{"type":"Label","props":{"y":8,"x":39,"wordWrap":true,"width":80,"valign":"middle","text":"兑 换","strokeColor":"#0f32e7","stroke":4,"leading":5,"height":38,"fontSize":26,"color":"#ffffff","bold":true,"align":"center"},"compId":161}]}]},{"type":"Label","props":{"y":11,"x":0,"wordWrap":true,"width":169,"text":"我的礼包码：","strokeColor":"#053c73","stroke":2,"overflow":"visible","leading":5,"height":39,"fontSize":26,"color":"#ffffff","bold":true,"align":"left"},"compId":419}]},{"type":"Image","props":{"y":5,"x":370,"width":197,"skin":"ui/useTicket/font_fenxianglihe.png","height":43},"compId":410},{"type":"Image","props":{"y":250,"x":71,"skin":"ui/useTicket/font_jiangli.png"},"compId":411},{"type":"Image","props":{"y":-6,"x":748,"skin":"ui/useTicket/img_caiqi_02.png"},"compId":413},{"type":"Image","props":{"y":-6,"x":-6,"skin":"ui/useTicket/img_caiqi_01.png"},"compId":414},{"type":"List","props":{"y":234,"x":211,"width":553,"var":"list_gift","spaceX":5,"height":151},"compId":416,"child":[{"type":"Box","props":{"y":0,"x":0,"width":138,"renderType":"render","height":151},"compId":415,"child":[{"type":"Image","props":{"skin":"ui/useTicket/img_paopao.png"},"compId":131},{"type":"Image","props":{"y":53,"x":58,"width":100,"skin":"ui/common/coin2.png","scaleY":0.8,"scaleX":0.8,"name":"img","height":100,"anchorY":0.5,"anchorX":0.5},"compId":132},{"type":"Label","props":{"y":123,"x":18,"width":80,"text":"x50000","strokeColor":"#053c73","stroke":2,"name":"num","height":25,"fontSize":24,"color":"#ffffff","align":"center"},"compId":134}]}]},{"type":"Box","props":{"y":-203,"x":-174,"visible":false,"var":"convertBox"},"compId":162,"child":[{"type":"Box","props":{"width":1280,"visible":true,"height":720},"compId":163,"child":[{"type":"Image","props":{"width":1900,"var":"bmask_b","skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":18,"centerX":7,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":164},{"type":"Image","props":{"y":289,"x":199,"width":895,"skin":"ui/common_ex/bg_index3.png","height":134,"sizeGrid":"50,50,50,50"},"compId":165},{"type":"Button","props":{"y":332,"x":957,"var":"yesBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","scaleX":0.7},"compId":166,"child":[{"type":"Image","props":{"y":7,"x":35,"skin":"ui/common_ex/confirm.png","scaleX":1.5},"compId":167}]},{"type":"TextInput","props":{"y":335,"x":243,"width":705,"var":"writegiftInput","skin":"ui/common_ex/yhsztiao.png","sizeGrid":"0,14,0,13","promptColor":"#ffffff","prompt":"请在此输入礼包兑换码","height":46,"fontSize":20,"bold":true,"align":"center"},"compId":168}]}]}]},{"type":"Box","props":{"y":190,"x":170,"width":945,"visible":false,"var":"itemBox_3","height":490},"compId":169,"child":[{"type":"Image","props":{"y":0,"x":3,"width":366,"skin":"ui/common_ex/bg_index2.png","height":462,"anchorX":0,"sizeGrid":"40,40,40,40"},"compId":257},{"type":"Image","props":{"y":9,"x":5,"width":370,"skin":"ui/useTicket/rank_bg.png","height":33,"sizeGrid":"0,130,0,139"},"compId":293,"child":[{"type":"Label","props":{"y":7,"x":282,"width":64,"var":"myselfRank","text":">5000","height":20,"fontSize":20,"color":"#ffffff","align":"left"},"compId":295},{"type":"Label","props":{"y":7,"x":126,"width":67,"var":"myselfIntegral","text":"50000","height":20,"fontSize":20,"color":"#ffffff","align":"left"},"compId":347},{"type":"Image","props":{"y":4,"x":201,"skin":"ui/useTicket/rank.png"},"compId":294}]},{"type":"List","props":{"y":44,"x":8,"width":360,"var":"rankList","repeatX":1,"renderType":"render","height":415},"compId":273,"child":[{"type":"Box","props":{"y":0,"x":0,"width":358,"name":"render","height":94},"compId":274,"child":[{"type":"Image","props":{"y":0,"x":0,"width":357,"skin":"ui/rank/paih_zk2.png","name":"bg","height":95,"sizeGrid":"25,25,25,25"},"compId":275},{"type":"Label","props":{"y":66,"x":145,"width":59,"text":"3","name":"Integral","height":24,"fontSize":18,"color":"#0e4178","bold":false,"anchorX":0.5,"align":"center"},"compId":276},{"type":"Image","props":{"y":36,"x":145,"width":82,"skin":"ui/rank/rank1.png","name":"rank_icon","height":72,"anchorY":0.5,"anchorX":0.5},"compId":277},{"type":"Label","props":{"y":36,"x":145,"width":82,"valign":"middle","text":"3","strokeColor":"#000000","stroke":3,"name":"rankLab","height":72,"fontSize":30,"color":"#eff2f6","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":326},{"type":"Label","props":{"y":66,"x":54,"width":75,"text":"wx_186....","name":"player_name","height":24,"fontSize":18,"color":"#0e4178","anchorX":0.5,"align":"center"},"compId":279},{"type":"Box","props":{"y":2,"x":19,"scaleY":0.8,"scaleX":0.8,"name":"imgBox"},"compId":280,"child":[{"type":"Image","props":{"y":3,"x":2,"width":80,"skin":"ui/common/nan.png","name":"playimg","height":80},"compId":282},{"type":"Image","props":{"y":1,"x":1,"skin":"ui/common_ex/touxiang2.png","scaleY":0.98,"scaleX":0.98},"compId":283},{"type":"Image","props":{"y":62,"x":5,"skin":"ui/common_ex/level_bg.png"},"compId":284}]},{"type":"Label","props":{"y":53,"x":25,"width":53,"text":"lv.12","name":"level","height":15,"fontSize":12,"color":"#ffffff","bold":true,"align":"right"},"compId":285},{"type":"List","props":{"y":3,"x":195,"width":195,"spaceX":-10,"scaleY":0.8,"scaleX":0.8,"repeatY":1,"repeatX":2,"renderType":"render","name":"list_reward","height":95},"compId":287,"child":[{"type":"Box","props":{"y":0,"x":0,"width":100,"scaleY":0.8,"scaleX":0.8,"name":"render","height":100},"compId":288,"child":[{"type":"Image","props":{"y":12,"x":12,"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":289},{"type":"Image","props":{"y":60,"x":61,"skin":"ui/common/coin2.png","scaleY":0.9,"scaleX":0.9,"name":"reward_type","anchorY":0.5,"anchorX":0.5},"compId":290},{"type":"Image","props":{"y":78,"x":11,"width":98,"skin":"ui/mainPage/level_bg.png","height":26},"compId":519},{"type":"Label","props":{"y":81,"x":16,"width":90,"text":"x 999","name":"reward_text","fontSize":24,"color":"#ffffff","align":"center"},"compId":291}]}]}]},{"type":"VScrollBar","props":{"y":0,"x":356,"width":9,"showButtons":false,"name":"scrollBar","height":460},"compId":286}]},{"type":"Image","props":{"y":0,"x":382,"skin":"ui/useTicket/img_beijing.png"},"compId":395},{"type":"Image","props":{"y":9,"x":557,"skin":"ui/useTicket/font_huanleqiqiu.png"},"compId":396},{"type":"Label","props":{"y":42,"x":416,"wordWrap":true,"width":481,"var":"detailLable","text":"玩家选择等级后点击发射按钮发射飞镖。扎破气球越多可能获得的积分越高。玩家点击领奖可结束本等级游戏领取奖励","leading":5,"height":53,"fontSize":18,"color":"#47f4ff","bold":false,"align":"left"},"compId":302},{"type":"Image","props":{"y":357,"x":659,"width":545,"height":215,"anchorY":1,"anchorX":0.5},"compId":303,"child":[{"type":"Image","props":{"y":190,"x":270,"width":38,"var":"darts","skin":"ui/useTicket/zhen_2.png","rotation":0,"height":86,"anchorY":0.8,"anchorX":0.5},"compId":317},{"type":"Image","props":{"y":3,"x":44,"width":82,"var":"balloon_1","skin":"ui/useTicket/ball_1.png","scaleY":1,"scaleX":1,"height":96},"compId":315},{"type":"Image","props":{"y":3,"x":119,"width":82,"var":"balloon_2","skin":"ui/useTicket/ball_1.png","scaleY":1,"scaleX":1,"height":96},"compId":403},{"type":"Image","props":{"y":3,"x":192,"width":82,"var":"balloon_3","skin":"ui/useTicket/ball_2.png","scaleY":1,"scaleX":1,"height":96},"compId":404},{"type":"Image","props":{"y":3,"x":267,"width":82,"var":"balloon_4","skin":"ui/useTicket/ball_2.png","scaleY":1,"scaleX":1,"height":96},"compId":405},{"type":"Image","props":{"y":3,"x":341,"width":82,"var":"balloon_5","skin":"ui/useTicket/ball_3.png","scaleY":1,"scaleX":1,"height":96},"compId":406},{"type":"Image","props":{"y":3,"x":416,"width":82,"var":"balloon_6","skin":"ui/useTicket/ball_3.png","scaleY":1,"scaleX":1,"height":96},"compId":407}]},{"type":"Button","props":{"y":380.5,"x":576.5,"width":153,"var":"secondBtn","stateNum":1,"skin":"ui/useTicket/btn_daanniu_01.png","selected":false,"labelStrokeColor":"#bb9e43","labelSize":28,"labelColors":"#f6f4f4","label":"   发 射","height":57},"compId":306,"child":[{"type":"Image","props":{"y":1,"x":14,"skin":"ui/useTicket/img_xiaofeibiao_02.png"},"compId":402}]},{"type":"Label","props":{"y":93,"x":398,"wordWrap":true,"width":105,"text":"扎破球数 ","height":26,"fontSize":20,"color":"#ffd631","align":"center"},"compId":397,"child":[{"type":"Label","props":{"y":0,"x":106,"wordWrap":true,"width":58,"text":"0","height":26,"fontSize":20,"color":"#ffd631","align":"center"},"compId":449},{"type":"Label","props":{"y":0,"x":163,"wordWrap":true,"width":60,"text":"1","height":26,"fontSize":20,"color":"#ffd631","align":"center"},"compId":448},{"type":"Label","props":{"y":0,"x":223,"wordWrap":true,"width":60,"text":"2","height":26,"fontSize":20,"color":"#ffd631","align":"center"},"compId":450},{"type":"Label","props":{"y":0,"x":282,"wordWrap":true,"width":60,"text":"3","height":26,"fontSize":20,"color":"#ffd631","align":"center"},"compId":451},{"type":"Label","props":{"y":0,"x":341,"wordWrap":true,"width":60,"text":"4","height":26,"fontSize":20,"color":"#ffd631","align":"center"},"compId":452},{"type":"Label","props":{"y":0,"x":401,"wordWrap":true,"width":60,"text":"5","height":26,"fontSize":20,"color":"#ffd631","align":"center"},"compId":453},{"type":"Label","props":{"y":0,"x":460,"wordWrap":true,"width":58,"text":"6","height":26,"fontSize":20,"color":"#ffd631","align":"center"},"compId":454}]},{"type":"Label","props":{"y":119,"x":410,"wordWrap":true,"width":85,"text":"最高得分","height":26,"fontSize":20,"color":"#ffd631","align":"left"},"compId":398},{"type":"Box","props":{"y":383.5,"x":757.5,"width":124,"height":50},"compId":371,"child":[{"type":"Image","props":{"y":0,"x":0,"width":50,"var":"consume_82","skin":"ui/common/huodongqu1.png","name":"activity","height":50},"compId":367},{"type":"FontClip","props":{"y":20,"x":50,"width":60,"var":"consumeNum_82","value":"x500","skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":0.9,"scaleX":0.9,"align":"right"},"compId":368}]},{"type":"Button","props":{"y":317,"x":844,"width":75,"var":"accountBtn","stateNum":2,"skin":"ui/common_ex/btn_blue.png","height":30},"compId":388,"child":[{"type":"Image","props":{"y":5,"x":20,"skin":"ui/common_ex/t_1.png","scaleY":0.7,"scaleX":0.7},"compId":387}]},{"type":"Box","props":{"y":118,"x":506,"var":"detailBox"},"compId":432,"child":[{"type":"Label","props":{"wordWrap":true,"width":58,"text":"6千","name":"detail_0","height":23,"fontSize":20,"color":"#ffd631","align":"center"},"compId":377},{"type":"Label","props":{"x":59,"wordWrap":true,"width":58,"text":"6千","name":"detail_1","height":23,"fontSize":20,"color":"#ffd631","align":"center"},"compId":426},{"type":"Label","props":{"x":117,"wordWrap":true,"width":58,"text":"6千","name":"detail_2","height":23,"fontSize":20,"color":"#ffd631","align":"center"},"compId":427},{"type":"Label","props":{"x":176,"wordWrap":true,"width":58,"text":"6千","name":"detail_3","height":23,"fontSize":20,"color":"#ffd631","align":"center"},"compId":428},{"type":"Label","props":{"x":235,"wordWrap":true,"width":58,"text":"6千","name":"detail_4","height":23,"fontSize":20,"color":"#ffd631","align":"center"},"compId":429},{"type":"Label","props":{"x":293,"wordWrap":true,"width":58,"text":"6千","name":"detail_5","height":23,"fontSize":20,"color":"#ffd631","align":"center"},"compId":430},{"type":"Label","props":{"x":354,"wordWrap":true,"width":58,"text":"6千","name":"detail_6","height":23,"fontSize":20,"color":"#ffd631","align":"center"},"compId":431}]},{"type":"Label","props":{"y":465,"x":40,"wordWrap":true,"width":909,"text":"排行榜奖励在游戏结束后3天内发放，飞镖奖励金币=积分*10。","height":27,"fontSize":18,"color":"#47f4ff","bold":false,"align":"center"},"compId":437}]},{"type":"Box","props":{"y":190,"x":166,"width":950,"var":"itemBox_4","height":488},"compId":489,"child":[{"type":"Image","props":{"y":-5,"skin":"ui/useTicket/img_kd.png","right":-5,"left":-5},"compId":516},{"type":"Image","props":{"y":-6,"skin":"ui/useTicket/img_caiqi_02.png","right":-8},"compId":514},{"type":"Image","props":{"y":-6,"skin":"ui/useTicket/img_caiqi_01.png","left":-6},"compId":515},{"type":"Image","props":{"top":5,"skin":"ui/useTicket/img_tsd.png","centerX":0},"compId":510,"child":[{"type":"Label","props":{"text":"活动期间，购买礼包获得超值好礼，礼包每天刷新","strokeColor":"#691100","stroke":1,"fontSize":20,"color":"#fff44a","centerY":0,"centerX":0,"bold":true,"align":"center"},"compId":499}]},{"type":"Box","props":{"top":60,"right":40,"left":40,"height":308,"bottom":120},"compId":501,"child":[{"type":"Image","props":{"x":254,"skin":"ui/useTicket/img_jia.png","centerY":0},"compId":511},{"type":"Image","props":{"x":558,"skin":"ui/useTicket/img_jia.png","centerY":0},"compId":513},{"type":"FesDailyGiftItem","props":{"y":-11,"x":0,"var":"giftItem1","runtime":"view.item.FesDailyGiftItem"},"compId":502},{"type":"FesDailyGiftItem","props":{"y":-11,"x":303,"var":"giftItem2","runtime":"view.item.FesDailyGiftItem"},"compId":503},{"type":"FesDailyGiftItem","props":{"y":-11,"x":608,"var":"giftItem3","runtime":"view.item.FesDailyGiftItem"},"compId":504}]},{"type":"Box","props":{"y":390,"width":950,"right":0,"left":0,"height":85},"compId":517,"child":[{"type":"Label","props":{"y":-162,"x":199,"var":"tipText","text":"今日礼包已经售罄，礼包将在0点刷新，感谢您对游戏的支持","strokeColor":"#691100","stroke":1,"fontSize":20,"color":"#fff44a","centerY":0,"centerX":0,"bold":true,"align":"center"},"compId":500},{"type":"Button","props":{"y":-185,"x":380,"var":"costRmbBtn","stateNum":1,"skin":"ui/useTicket/btn_daanniu_01.png","centerY":0,"centerX":0},"compId":497,"child":[{"type":"Label","props":{"var":"costRmbText","text":"5元","strokeColor":"#952a00","stroke":2,"fontSize":33,"color":"#ffffff","centerY":0,"centerX":0},"compId":498}]}]}]},{"type":"Button","props":{"var":"returnMainBtn","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","left":0},"compId":11},{"type":"Button","props":{"var":"close_btn","top":0,"stateNum":1,"skin":"ui/common_ex/quit.png","name":"closev","left":0},"compId":205},{"type":"Image","props":{"y":497,"x":1083,"var":"select_3","skin":"ui/useTicket/img_zhuangshi_02.png"},"compId":409},{"type":"Image","props":{"y":715,"x":112,"var":"select_4","skin":"ui/useTicket/img_zhuangshi_03.png","anchorY":1,"anchorX":0.5},"compId":408},{"type":"Box","props":{"y":10,"x":15,"width":1245,"var":"closeAccountBox","height":666},"compId":351,"child":[{"type":"Image","props":{"y":-209,"x":-220,"width":1900,"skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":18,"centerX":7,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":372},{"type":"Image","props":{"y":29,"x":378,"skin":"ui/matchSettle/shenglidi.png"},"compId":352},{"type":"Image","props":{"y":262,"x":664,"skin":"ui/matchSettle/fen.png"},"compId":353},{"type":"FontClip","props":{"y":262,"x":506,"width":157,"var":"endScore","value":"8888","skin":"ui/matchSettle/z.png","sheet":"0123456789","height":47,"align":"right"},"compId":354},{"type":"Label","props":{"y":437,"x":622,"var":"scorestLabel","text":"本场比赛最高得分8888","fontSize":20,"color":"#ffffff","bold":true,"anchorY":0.5,"anchorX":0.5},"compId":355},{"type":"Box","props":{"y":340,"width":100,"scaleY":0.8,"scaleX":0.8,"height":100,"centerX":0},"compId":357,"child":[{"type":"Image","props":{"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":358},{"type":"Image","props":{"y":50,"x":50,"width":100,"var":"rewardImg","skin":"ui/common/coin2.png","scaleY":0.9,"scaleX":0.9,"height":100,"anchorY":0.5,"anchorX":0.5},"compId":359},{"type":"Label","props":{"y":72,"x":5,"width":90,"var":"rewardText","text":"x 99999","fontSize":20,"color":"#ffffff","align":"center"},"compId":360}]},{"type":"Image","props":{"y":483,"x":475,"width":300,"skin":"ui/matchSettle/wenzdi.png","height":40,"sizeGrid":"15,25,15,25"},"compId":361,"child":[{"type":"Label","props":{"y":7,"x":80,"text":"排名：","fontSize":20,"color":"#ffffff","bold":true},"compId":363},{"type":"Label","props":{"y":8,"x":162,"var":"rankLabel","text":"200","fontSize":20,"color":"#fff053","bold":true},"compId":364}]},{"type":"Button","props":{"y":546,"x":548,"var":"returnAccountBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":365},{"type":"Image","props":{"y":554,"x":600,"skin":"ui/matchSettle/uied.png","scaleY":0.8,"scaleX":0.8},"compId":366}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index4.png","ui/common_ex/bg_index2.png","ui/useTicket/tab.png","ui/useTicket/zi1.png","ui/useTicket/zi2.png","ui/useTicket/zi3.png","ui/useTicket/zi4.png","ui/useTicket/zi5.png","ui/common_ex/head_2.png","ui/common_ex/title_border.png","ui/useTicket/bt_shuangdankuanghuan.png","ui/useTicket/img_zhuangshi_01.png","ui/useTicket/img_kuang_02.png","ui/useTicket/img_kuang_02a.png","ui/useTicket/img_ylq.png","ui/useTicket/1.png","ui/common_ex/nums.png","ui/common_ex/img_di_02.png","ui/useTicket/img_kuang_01.png","ui/common/coin1.png","ui/common_ex/btn_yellow.png","ui/common_ex/unit_exchange.png","ui/common_ex/img_di_03.png","ui/common_ex/btn_green.png","ui/common_ex/btn_blue.png","ui/useTicket/font_fenxianglihe.png","ui/useTicket/font_jiangli.png","ui/useTicket/img_caiqi_02.png","ui/useTicket/img_caiqi_01.png","ui/useTicket/img_paopao.png","ui/common/coin2.png","ui/common_ex/bg_index3.png","ui/common_ex/confirm.png","ui/common_ex/yhsztiao.png","ui/useTicket/rank_bg.png","ui/useTicket/rank.png","ui/rank/paih_zk2.png","ui/rank/rank1.png","ui/common/nan.png","ui/common_ex/touxiang2.png","ui/common_ex/level_bg.png","ui/common_ex/touxiang.png","ui/mainPage/level_bg.png","ui/useTicket/img_beijing.png","ui/useTicket/font_huanleqiqiu.png","ui/useTicket/zhen_2.png","ui/useTicket/ball_1.png","ui/useTicket/ball_2.png","ui/useTicket/ball_3.png","ui/useTicket/btn_daanniu_01.png","ui/useTicket/img_xiaofeibiao_02.png","ui/common/huodongqu1.png","ui/common_ex/shop_num.png","ui/common_ex/t_1.png","ui/useTicket/img_kd.png","ui/useTicket/img_tsd.png","ui/useTicket/img_jia.png","ui/common_ex/quit.png","ui/useTicket/img_zhuangshi_02.png","ui/useTicket/img_zhuangshi_03.png","ui/matchSettle/shenglidi.png","ui/matchSettle/fen.png","ui/matchSettle/z.png","ui/matchSettle/wenzdi.png","ui/matchSettle/uied.png"],"loadList3D":[]};	
		

		class WaitPageUI extends View{
			constructor (){
				super();
				//this.wait=null;
				//this.bmask=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(WaitPageUI.uiView);
			}
		}

		ui.abbey.WaitPageUI=Laya.WaitPageUI=WaitPageUI;
		WaitPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1300,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":4},{"type":"Image","props":{"y":360,"x":640,"skin":"ui/common_ex/loding.png","rotation":120,"centerY":0,"centerX":0,"anchorY":0.5,"anchorX":0.5},"compId":3}],"animations":[{"nodes":[{"target":3,"keyframes":{"y":[{"value":360,"tweenMethod":"linearNone","tween":true,"target":3,"key":"y","index":0}],"x":[{"value":640,"tweenMethod":"linearNone","tween":true,"target":3,"key":"x","index":0},{"value":640,"tweenMethod":"linearNone","tween":true,"target":3,"key":"x","index":24}],"rotation":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":3,"key":"rotation","index":0},{"value":360,"tweenMethod":"linearNone","tween":true,"target":3,"key":"rotation","index":24}],"anchorY":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":3,"key":"anchorY","index":0}],"anchorX":[{"value":0.5,"tweenMethod":"linearNone","tween":true,"target":3,"key":"anchorX","index":0}]}}],"name":"wait","id":1,"frameRate":24,"action":0}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/loding.png"],"loadList3D":[]};	
		

		class WDLoginPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.wxLogin=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(WDLoginPageUI.uiView);
			}
		}

		ui.abbey.WDLoginPageUI=Laya.WDLoginPageUI=WDLoginPageUI;
		WDLoginPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-230,"x":-310,"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":2},{"type":"Image","props":{"y":0,"x":0,"skin":"ui/wdlogin/load.png"},"compId":3},{"type":"Button","props":{"y":584,"x":569,"var":"wxLogin","stateNum":2,"skin":"ui/wdlogin/btn_green.png"},"compId":4,"child":[{"type":"Label","props":{"y":6,"x":36,"text":"微信登录","strokeColor":"#1d993f","stroke":2,"fontSize":22,"color":"#ffffff","bold":true},"compId":5}]}],"loadList":["ui/common_ex/jl_bg.png","ui/wdlogin/load.png","ui/wdlogin/btn_green.png"],"loadList3D":[]};	
		

		class WxInfoPageUI extends View{
			constructor (){
				super();
				//this.bmask=null;
				//this.confirmBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(WxInfoPageUI.uiView);
			}
		}

		ui.abbey.WxInfoPageUI=Laya.WxInfoPageUI=WxInfoPageUI;
		WxInfoPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-240,"x":-310,"width":1900,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":2},{"type":"Box","props":{"y":215,"x":312,"width":656,"height":291},"compId":3,"child":[{"type":"Image","props":{"y":3,"x":0,"width":649,"skin":"ui/common_ex/bg_index3.png","height":292,"sizeGrid":"50,50,50,50"},"compId":4},{"type":"Image","props":{"y":0,"x":0,"width":656,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":5},{"type":"Button","props":{"y":177,"x":229,"width":197,"var":"confirmBtn","stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":77},"compId":10,"child":[{"type":"FontClip","props":{"y":13,"x":48,"value":"确定","skin":"font/word_red.png","sheet":"取出立即购买获得消确定继 续搜索同意拒绝复制升级解 锁游戏领前往充放置全部加 入房间重抽报名免费","centerY":0,"centerX":0},"compId":11}]},{"type":"Label","props":{"y":72,"x":47,"wordWrap":true,"width":561,"valign":"middle","text":"开始微信授权","height":78,"fontSize":40,"font":"Microsoft YaHei","color":"#000000","align":"center"},"compId":14}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/common_ex/btn_yellow.png","font/word_red.png"],"loadList3D":[]};	
		

		class WxLoadPageUI extends View{
			constructor (){
				super();
				//this.waitAni=null;
				//this.bg_img=null;
				//this.progressBar=null;
				//this.loadTxt=null;
				//this.imgLogin1=null;
				//this.sideobox=null;
				//this.contenturl=null;
				//this.conTxt=null;
				//this.confirmBtn=null;
				//this.quitBtn=null;
				//this.linkBox=null;
				//this.groupBox=null;
				//this.linkLabel=null;
				//this.startGameBtn=null;
				//this.linkCheck=null;
				//this.gameLable=null;
				//this.game_version=null;
				//this.tipText=null;
				//this.tishiBox=null;
				//this.tishiBtn=null;
				//this.linkPanel=null;
				//this.gamePanel=null;
				//this.waitBox=null;
				//this.waitImage=null;
				//this.closeWeb=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(WxLoadPageUI.uiView);
			}
		}

		ui.abbey.WxLoadPageUI=Laya.WxLoadPageUI=WxLoadPageUI;
		WxLoadPageUI.uiView={"type":"View","props":{"y":0,"x":0,"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"var":"bg_img","skin":"wxlocal/load.png"},"compId":3},{"type":"ProgressBar","props":{"width":900,"var":"progressBar","skin":"wxlocal/progress.png","centerX":0,"bottom":100,"anchorX":0.5},"compId":2,"child":[{"type":"Label","props":{"y":-40,"width":900,"var":"loadTxt","height":32,"fontSize":22,"color":"#42baf8","centerX":0.5,"align":"center"},"compId":21}]},{"type":"Image","props":{"y":410,"x":640,"var":"imgLogin1","centerY":50,"centerX":0},"compId":47,"child":[{"type":"SkeletonPlayer","props":{"y":0,"x":0,"url":"wxlocal/YX_Loading.sk","runtime":"laya.ani.bone.Skeleton"},"compId":46}]},{"type":"Box","props":{"y":149,"x":320,"width":640,"var":"sideobox","centerY":0,"centerX":0},"compId":17,"child":[{"type":"Image","props":{"y":23,"width":640,"skin":"wxlocal/bg_index3.png","height":400},"compId":6},{"type":"Image","props":{"y":7,"x":0,"width":640,"skin":"wxlocal/head_2.png"},"compId":20},{"type":"Image","props":{"y":-25,"x":248,"skin":"wxlocal/gongg.png"},"compId":19},{"type":"Label","props":{"y":300,"x":325,"width":560,"var":"contenturl","text":"http://www.597w.com/","height":24,"fontSize":20,"color":"#e85e02","anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":12},{"type":"Label","props":{"y":75,"x":325,"wordWrap":true,"width":560,"var":"conTxt","text":"                              欢迎来到集结号捕鱼\\n\\n集结号感谢所有玩家的支持和配合，祝您游戏愉快！\\n如果在游戏中遇到任何问题，欢迎您咨询客服寻求帮助。\\n您不仅可以通过公众号平台登录游戏，还可以点击下方网页链接进行游戏。\\n\\n客服联系方式：XXXXXX","leading":3,"height":200,"fontSize":22,"color":"#0e5665","anchorX":0.5,"align":"left"},"compId":15},{"type":"Box","props":{"y":350,"x":233,"var":"confirmBtn"},"compId":39,"child":[{"type":"Image","props":{"skin":"wxlocal/greenTwo.png"},"compId":37},{"type":"Image","props":{"y":7,"x":50,"skin":"wxlocal/confirm.png"},"compId":38}]},{"type":"Box","props":{"y":350,"x":233,"var":"quitBtn"},"compId":33,"child":[{"type":"Image","props":{"skin":"wxlocal/blue.png"},"compId":31},{"type":"Image","props":{"y":10,"x":58,"skin":"wxlocal/tuichu.png"},"compId":32}]}]},{"type":"Box","props":{"y":220,"x":308,"var":"linkBox","centerY":0,"centerX":0},"compId":48,"child":[{"type":"Image","props":{"y":16,"x":7,"width":510,"skin":"wxlocal/bg_index3.png","height":257},"compId":49},{"type":"Image","props":{"y":0,"x":0,"width":524,"skin":"ui/load/head_2.png","height":58,"sizeGrid":"0,200,0,200"},"compId":50},{"type":"Box","props":{"y":68,"x":60,"width":416,"var":"groupBox","height":171},"compId":71,"child":[{"type":"Label","props":{"y":75,"x":187,"width":109,"var":"linkLabel","underline":true,"text":"\"隐私协议\"","height":24,"fontSize":22,"color":"#e85e02","align":"center"},"compId":51},{"type":"Button","props":{"y":125,"x":129,"var":"startGameBtn","stateNum":2,"skin":"wxlocal/icon_green.png"},"compId":52,"child":[{"type":"Label","props":{"y":10,"x":25,"valign":"middle","text":"开始游戏","strokeColor":"#679E6A","stroke":2,"fontSize":25,"color":"#ffffff","align":"center"},"compId":53}]},{"type":"Label","props":{"x":195,"wordWrap":true,"width":345,"text":"       欢迎来到捕鱼游戏，请阅读并确认以下内容：","leading":3,"height":60,"fontSize":25,"color":"#0e5665","anchorX":0.5,"align":"left"},"compId":54},{"type":"CheckBox","props":{"y":75,"var":"linkCheck","skin":"wxlocal/checkbox.png","scaleY":1.7,"scaleX":1.7,"labelSize":13,"labelColors":"#0e5665","label":"我已阅读并接受"},"compId":55},{"type":"Label","props":{"y":75,"x":307,"width":109,"var":"gameLable","underline":true,"text":"\"用户协议\"","height":24,"fontSize":22,"color":"#e85e02","align":"center"},"compId":60}]}]},{"type":"Label","props":{"wordWrap":true,"width":1060,"var":"game_version","text":"本网络游戏适合6周岁以上用户使用；请您确定已如实进行实名注册；为了您的健康，请合理控制游戏时间。\\n抵制不良游戏，拒绝盗版游戏。 注意自我保护，谨防受骗上当。 适度游戏益脑，沉迷游戏伤身。 合理安排时间，享受健康生活。\\n浙网文[2016] 0261-131号/浙新广[2016]395号/文网游备字〔2017〕M-CSG0094号/新广出审[2016]1745号/ISBN 978-7-7979-0542-8\\n著作权人：金华市亿博网络科技有限公司 登记号 2015SR251293 出版单位：杭州汉唐文化传播有限公司","leading":3,"height":80,"fontSize":16,"color":"#ffffff","centerX":0,"bottom":5,"align":"center"},"compId":40},{"type":"Label","props":{"y":70,"x":126,"width":133,"var":"tipText","text":"label","height":33,"color":"#fdfdfd"},"compId":41},{"type":"Box","props":{"width":546,"visible":false,"var":"tishiBox","height":385,"centerY":0,"centerX":0},"compId":61,"child":[{"type":"Image","props":{"y":54,"x":5,"width":540,"skin":"wxlocal/bg_index3.png","height":325},"compId":62},{"type":"Image","props":{"y":25,"x":0,"width":550,"skin":"ui/load/head_2.png","height":72,"sizeGrid":"0,200,0,200"},"compId":63},{"type":"Button","props":{"y":273,"x":203,"var":"tishiBtn","stateNum":2,"skin":"wxlocal/icon_green.png"},"compId":64,"child":[{"type":"Image","props":{"y":8,"x":48,"skin":"wxlocal/confirm.png"},"compId":66}]},{"type":"Label","props":{"y":162,"x":275,"wordWrap":true,"width":410,"text":"温馨提示：请勾选同意下方的“用户协议”和“隐私协议”，即可进入游戏哦","leading":3,"height":60,"fontSize":25,"color":"#0e5665","anchorX":0.5,"align":"left"},"compId":67},{"type":"Sprite","props":{"y":0,"x":199,"texture":"wxlocal/title_prompt.png"},"compId":68}]},{"type":"Panel","props":{"width":900,"var":"linkPanel","height":500,"centerY":0,"centerX":0},"compId":69},{"type":"Panel","props":{"y":110,"x":190,"width":900,"var":"gamePanel","height":500,"centerY":0,"centerX":0},"compId":70},{"type":"Box","props":{"var":"waitBox","centerY":0,"centerX":0},"compId":44,"child":[{"type":"Label","props":{"y":56,"x":36,"text":"加载中。。。","fontSize":24,"color":"#0e5665"},"compId":43},{"type":"Image","props":{"var":"waitImage","skin":"wxlocal/loding.png","centerY":-20,"centerX":0},"compId":45}]},{"type":"Button","props":{"visible":false,"var":"closeWeb","top":50,"stateNum":1,"skin":"wxlocal/blue.png","right":100},"compId":58,"child":[{"type":"Image","props":{"y":11,"x":53,"width":44,"skin":"wxlocal/tuichu.png","height":24},"compId":59}]}],"animations":[{"nodes":[{"target":45,"keyframes":{"x":[{"value":100,"tweenMethod":"linearNone","tween":true,"target":45,"key":"x","index":0},{"value":100,"tweenMethod":"linearNone","tween":true,"target":45,"key":"x","index":24}],"rotation":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":45,"key":"rotation","index":0},{"value":120,"tweenMethod":"linearNone","tween":true,"target":45,"key":"rotation","index":24}]}}],"name":"waitAni","id":1,"frameRate":24,"action":0}],"loadList":["wxlocal/load.png","wxlocal/progress.png","wxlocal/YX_Loading.sk","wxlocal/bg_index3.png","wxlocal/head_2.png","wxlocal/gongg.png","wxlocal/greenTwo.png","wxlocal/confirm.png","wxlocal/blue.png","wxlocal/tuichu.png","ui/load/head_2.png","wxlocal/icon_green.png","wxlocal/checkbox.png","wxlocal/title_prompt.png","wxlocal/loding.png"],"loadList3D":[]};	
		ui.fight={};

		class backBoxUI extends View{
			constructor (){
				super();
				//this.barBox=null;
				//this.pull_box_bg=null;
				//this.settingBtn=null;
				//this.returnBtn=null;
				//this.taskNewBtn=null;
				//this.checkBtn=null;
				//this.fanBtn=null;
				//this.zhenBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(backBoxUI.uiView);
			}
		}

		ui.fight.backBoxUI=Laya.backBoxUI=backBoxUI;
		backBoxUI.uiView={"type":"View","props":{"width":434,"height":103,"cacheAs":"bitmap"},"compId":2,"child":[{"type":"Box","props":{"y":0,"x":0,"var":"barBox"},"compId":3,"child":[{"type":"Image","props":{"width":385,"var":"pull_box_bg","skin":"ui/common_ex/feixuanz1.png","height":103,"sizeGrid":"15,15,15,15"},"compId":4},{"type":"Button","props":{"y":18,"x":294,"var":"settingBtn","stateNum":1,"skin":"ui/common_ex/icon_sz.png","name":"settingBtn"},"compId":5},{"type":"Button","props":{"y":16,"x":216,"var":"returnBtn","stateNum":1,"skin":"ui/common_ex/icon_fh.png"},"compId":6},{"type":"Button","props":{"y":16,"x":134,"var":"taskNewBtn","stateNum":1,"skin":"ui/common_ex/icon_fl.png","name":"taskNewBtn"},"compId":7},{"type":"Button","props":{"y":17,"x":53,"var":"checkBtn","stateNum":1,"skin":"ui/common_ex/icon_jj.png","name":"checkBtn"},"compId":8},{"type":"Image","props":{"y":6,"x":374,"var":"fanBtn","skin":"ui/fish/fanhuiTwo.png"},"compId":9},{"type":"Image","props":{"y":6,"x":374,"var":"zhenBtn","skin":"ui/fish/fanhuiOne.png"},"compId":10}]}],"loadList":["ui/common_ex/feixuanz1.png","ui/common_ex/icon_sz.png","ui/common_ex/icon_fh.png","ui/common_ex/icon_fl.png","ui/common_ex/icon_jj.png","ui/fish/fanhuiTwo.png","ui/fish/fanhuiOne.png"],"loadList3D":[]};	
		

		class fishPageUI extends View{
			constructor (){
				super();
				//this.collect=null;
				//this.release=null;
				//this.jin=null;
				//this.chu=null;
				//this.barGo=null;
				//this.barIn=null;
				//this.rankAni=null;
				//this.dentwo=null;
				//this.denfour=null;
				//this.denthree=null;
				//this.yulei=null;
				//this.yuleiBg=null;
				//this.yuleiList=null;
				//this.skill_bg=null;
				//this.skill_4=null;
				//this.skill_4_1=null;
				//this.roateMaskFour=null;
				//this.skill_3=null;
				//this.skill_3_1=null;
				//this.roateMaskThree=null;
				//this.skill_2=null;
				//this.skill_2_1=null;
				//this.roateMaskTwo=null;
				//this.skill_1=null;
				//this.skill_1_1=null;
				//this.roateMaskOne=null;
				//this.skill_6=null;
				//this.roateMaskSix=null;
				//this.skill_5=null;
				//this.cancelImg1=null;
				//this.skill_5_1=null;
				//this.roateMaskFive=null;
				//this.cancelImg=null;
				//this.unlockBox=null;
				//this.gunBoxOne=null;
				//this.gunBoxTwo=null;
				//this.gunImg=null;
				//this.changeSkinBtn=null;
				//this.lottey=null;
				//this.buchou=null;
				//this.nchou=null;
				//this.reward=null;
				//this.month=null;
				//this.month_icon=null;
				//this.contestTimeBox=null;
				//this.contestTimeText=null;
				//this.matchWaitBox=null;
				//this.waitBtn=null;
				//this.waitBox=null;
				//this.matchRoomPanel=null;
				//this.matchResultPanel=null;
				//this.box_1=null;
				//this.taione=null;
				//this.kuangone=null;
				//this.goldOne=null;
				//this.diamondBoxOne=null;
				//this.seatZsOne=null;
				//this.seatJifenOne=null;
				//this.diamodOne=null;
				//this.roleOne=null;
				//this.playimgOne=null;
				//this.fontVipOne=null;
				//this.coinOne=null;
				//this.ccoinOne=null;
				//this.powersub=null;
				//this.poweradd=null;
				//this.auto=null;
				//this.cancle=null;
				//this.nameOne=null;
				//this.autoTimeTip=null;
				//this.doubleCoin=null;
				//this.doubleChance=null;
				//this.doubleCoinLock=null;
				//this.doubleChanceLock=null;
				//this.doubleChanceCancel=null;
				//this.doubleCoinCancel=null;
				//this.alreadyOne=null;
				//this.box_4=null;
				//this.taifour=null;
				//this.kuangfour=null;
				//this.coinFour=null;
				//this.ccoinFour=null;
				//this.goldFour=null;
				//this.roleFour=null;
				//this.playimgFour=null;
				//this.fontVipFour=null;
				//this.diamondBoxFour=null;
				//this.diamodFour=null;
				//this.nameFour=null;
				//this.alreadyFour=null;
				//this.box_3=null;
				//this.taithree=null;
				//this.kuangthree=null;
				//this.coinThree=null;
				//this.ccoinThree=null;
				//this.goldThree=null;
				//this.roleThree=null;
				//this.playimgThree=null;
				//this.fontVipThree=null;
				//this.diamondBoxThree=null;
				//this.diamodThree=null;
				//this.nameThree=null;
				//this.alreadyThree=null;
				//this.box_2=null;
				//this.taitwo=null;
				//this.kuangtwo=null;
				//this.coinTwo=null;
				//this.ccoinTwo=null;
				//this.goldTwo=null;
				//this.diamondBoxTwo=null;
				//this.diamodTwo=null;
				//this.roleTwo=null;
				//this.playimgTwo=null;
				//this.fontVipTwo=null;
				//this.nameTwo=null;
				//this.alreadyTwo=null;
				//this.paoone=null;
				//this.paotwo=null;
				//this.paothree=null;
				//this.paofour=null;
				//this.powerTwo=null;
				//this.powerThree=null;
				//this.powerFour=null;
				//this.powerOne=null;
				//this.rankAniBox=null;
				//this.rankAniImg=null;
				//this.rankAniLable=null;
				//this.backPanel=null;
				//this.since=null;
				//this.totalIntergal=null;
				//this.totalCoin=null;
				//this.currentTime=null;
				//this.box_task=null;
				//this.task_bg=null;
				//this.task_icon_bg=null;
				//this.task_icon=null;
				//this.task_name=null;
				//this.p_task=null;
				//this.p_txt=null;
				//this.list_reward=null;
				//this.click_a=null;
				//this.boss_txt_bg=null;
				//this.boss_txt=null;
				//this.box_boss=null;
				//this.boss_img=null;
				//this.boss_coming=null;
				//this.boss_mask_top=null;
				//this.boss_mask_bottom=null;
				//this.boss_warning=null;
				//this.boss_warning2=null;
				//this.welcome_bg=null;
				//this.welcome_boss=null;
				//this.welcome_txt=null;
				//this.fishTideImg=null;
				//this.onLineBox=null;
				//this.receiveImg=null;
				//this.lqjlani=null;
				//this.countBox=null;
				//this.rewardCount=null;
				//this.timeBox=null;
				//this.getImg=null;
				//this.leftTime=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(fishPageUI.uiView);
			}
		}

		ui.fight.fishPageUI=Laya.fishPageUI=fishPageUI;
		fishPageUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":680,"x":940,"var":"dentwo","skin":"ui/fish/den-.png","anchorY":0.5,"anchorX":0.5},"compId":111},{"type":"Image","props":{"y":40,"x":340,"var":"denfour","skin":"ui/fish/den-.png","anchorY":0.5,"anchorX":0.5},"compId":112},{"type":"Image","props":{"y":40,"x":940,"var":"denthree","skin":"ui/fish/den-.png","anchorY":0.5,"anchorX":0.5},"compId":113},{"type":"Box","props":{"width":640,"visible":false,"var":"yulei","right":-54,"height":90,"centerY":132,"anchorX":1},"compId":472,"child":[{"type":"Image","props":{"y":2,"x":615,"width":570,"var":"yuleiBg","skin":"ui/common_ex/feixuanz1.png","height":92,"anchorX":1,"sizeGrid":"15,15,15,15"},"compId":489},{"type":"List","props":{"y":9,"x":55,"var":"yuleiList","height":89},"compId":692,"child":[{"type":"Box","props":{"y":40,"x":39.99999999999999,"width":89,"renderType":"render","height":89,"anchorY":0.5,"anchorX":0.5},"compId":435,"child":[{"type":"Image","props":{"skin":"ui/fish/skill.png","name":"bg"},"compId":440},{"type":"Image","props":{"y":7,"x":2,"skin":"ui/common/yulei1.png","scaleY":0.95,"scaleX":0.95,"name":"icon"},"compId":441},{"type":"FontClip","props":{"y":66,"x":80,"value":"23","skin":"ui/fish/jinengzi.png","sheet":"0123456789","name":"yulei_count","anchorX":1},"compId":442}]}]}]},{"type":"Image","props":{"width":120,"var":"skill_bg","skin":"ui/common_ex/feixuanz1.png","right":20,"height":450,"centerY":42,"anchorX":1,"sizeGrid":"15,15,15,15"},"compId":407},{"type":"Box","props":{"width":89,"visible":true,"var":"skill_4","scaleY":0.9,"scaleX":0.9,"right":52,"height":89,"centerY":135,"anchorY":0.5,"anchorX":0.5},"compId":297,"child":[{"type":"Image","props":{"skin":"ui/fish/skill.png","name":"skill_4"},"compId":286},{"type":"Image","props":{"y":0,"x":0,"var":"skill_4_1","skin":"ui/fish/kuangbao.png","name":"skill_4_1"},"compId":380},{"type":"FontClip","props":{"y":66,"x":80,"value":"23","skin":"ui/fish/jinengzi.png","sheet":"0123456789","name":"skillClip_4","anchorX":1},"compId":390},{"type":"Text","props":{"y":64,"x":4,"text":"狂暴","fontSize":18,"color":"#ffffff","bold":true,"runtime":"laya.display.Text"},"compId":391},{"type":"Image","props":{"y":64,"x":40,"skin":"ui/fish/zs.png","scaleY":0.7,"scaleX":0.6,"name":"zs"},"compId":392},{"type":"Image","props":{"y":-10,"x":-10,"var":"roateMaskFour"},"compId":305}]},{"type":"Box","props":{"width":89,"var":"skill_3","scaleY":0.9,"scaleX":0.9,"right":52,"height":89,"centerY":45,"anchorY":0.5,"anchorX":0.5},"compId":296,"child":[{"type":"Image","props":{"skin":"ui/fish/skill.png","name":"skill_3"},"compId":285},{"type":"Image","props":{"y":0,"x":0,"var":"skill_3_1","skin":"ui/fish/zhaohuan.png","name":"skill_3_1"},"compId":379},{"type":"FontClip","props":{"y":66,"x":80,"value":"23","skin":"ui/fish/jinengzi.png","sheet":"0123456789","name":"skillClip_3","anchorX":1},"compId":387},{"type":"Text","props":{"y":64,"x":4,"text":"召唤","fontSize":18,"color":"#ffffff","bold":true,"runtime":"laya.display.Text"},"compId":388},{"type":"Image","props":{"y":64,"x":40,"skin":"ui/fish/zs.png","scaleY":0.7,"scaleX":0.6,"name":"zs"},"compId":389},{"type":"Image","props":{"y":-13,"x":-13,"var":"roateMaskThree"},"compId":304}]},{"type":"Box","props":{"width":89,"var":"skill_2","scaleY":0.9,"scaleX":0.9,"right":52,"height":89,"centerY":-45,"anchorY":0.5,"anchorX":0.5},"compId":295,"child":[{"type":"Image","props":{"skin":"ui/fish/skill.png","name":"skill_2"},"compId":284},{"type":"Image","props":{"y":0,"x":0,"var":"skill_2_1","skin":"ui/fish/suoding.png","name":"skill_2_1"},"compId":378},{"type":"FontClip","props":{"y":64,"x":80,"value":"23","skin":"ui/fish/jinengzi.png","sheet":"0123456789","name":"skillClip_2","anchorX":1},"compId":290},{"type":"Text","props":{"y":62,"x":4,"text":"锁定","fontSize":18,"color":"#ffffff","bold":true,"runtime":"laya.display.Text"},"compId":386},{"type":"Image","props":{"y":62,"x":40,"skin":"ui/fish/zs.png","scaleY":0.7,"scaleX":0.6,"name":"zs"},"compId":323},{"type":"Image","props":{"y":-13,"x":-13,"var":"roateMaskTwo"},"compId":303}]},{"type":"Box","props":{"width":89,"var":"skill_1","scaleY":0.9,"scaleX":0.9,"right":52,"height":89,"centerY":-135,"anchorY":0.5,"anchorX":0.5},"compId":294,"child":[{"type":"Image","props":{"skin":"ui/fish/skill.png","name":"skill_1"},"compId":283},{"type":"Image","props":{"y":0,"x":0,"var":"skill_1_1","skin":"ui/fish/bingdong.png","name":"skill_1_1"},"compId":377},{"type":"FontClip","props":{"y":64,"x":80,"value":"22","skin":"ui/fish/jinengzi.png","sheet":"0123456789","name":"skillClip_1","anchorX":1},"compId":289},{"type":"Text","props":{"y":62,"x":4,"text":"冰冻","fontSize":18,"color":"#ffffff","bold":true,"runtime":"laya.display.Text"},"compId":385},{"type":"Image","props":{"y":62,"x":40,"skin":"ui/fish/zs.png","scaleY":0.7,"scaleX":0.6,"name":"zs"},"compId":322},{"type":"Image","props":{"y":-13,"x":-13,"var":"roateMaskOne"},"compId":302}]},{"type":"Box","props":{"width":89,"visible":false,"var":"skill_6","scaleY":0.9,"scaleX":0.9,"right":52,"height":89,"centerY":225,"anchorY":0.5,"anchorX":0.5},"compId":510,"child":[{"type":"Image","props":{"skin":"ui/fish/skill.png","name":"skill_6"},"compId":511},{"type":"Image","props":{"y":0,"x":0,"skin":"ui/fish/zidong.png","name":"skill_6_1"},"compId":512},{"type":"FontClip","props":{"y":64,"x":80,"value":"22","skin":"ui/fish/jinengzi.png","sheet":"0123456789","name":"skillClip_1","anchorX":1},"compId":513},{"type":"Text","props":{"y":62,"x":4,"text":"自动","fontSize":18,"color":"#ffffff","bold":true,"runtime":"laya.display.Text"},"compId":514},{"type":"Image","props":{"y":62,"x":40,"skin":"ui/fish/zs.png","scaleY":0.7,"scaleX":0.6,"name":"zs"},"compId":515},{"type":"Image","props":{"y":-13,"x":-13,"var":"roateMaskSix"},"compId":516}]},{"type":"Box","props":{"width":89,"var":"skill_5","scaleY":0.9,"scaleX":0.9,"right":52,"height":89,"centerY":225,"anchorY":0.5,"anchorX":0.5},"compId":298,"child":[{"type":"Image","props":{"y":90,"x":0,"width":85,"var":"cancelImg1","skin":"ui/fish/yy1_00.png","height":490,"anchorY":1,"sizeGrid":"30,30,30,30"},"compId":411},{"type":"Image","props":{"skin":"ui/fish/skill.png","name":"skill_5"},"compId":287},{"type":"Image","props":{"y":0,"x":0,"var":"skill_5_1","skin":"ui/fish/zhadan.png","name":"skill_5_1"},"compId":381},{"type":"FontClip","props":{"y":66,"x":80,"value":"23","skin":"ui/fish/jinengzi.png","sheet":"0123456789","name":"skillClip_5","anchorX":1},"compId":393},{"type":"Text","props":{"y":64,"x":4,"text":"炸弹","fontSize":18,"color":"#ffffff","bold":true,"runtime":"laya.display.Text"},"compId":394},{"type":"Image","props":{"y":64,"x":40,"skin":"ui/fish/zs.png","scaleY":0.7,"scaleX":0.6,"name":"zs"},"compId":395},{"type":"Image","props":{"y":-13,"x":-13,"var":"roateMaskFive"},"compId":306},{"type":"Image","props":{"y":45,"x":44,"var":"cancelImg","skin":"ui/fish/TY_quexiao.png","anchorY":0.5,"anchorX":0.5},"compId":327}]},{"type":"Box","props":{"var":"unlockBox","left":-477,"centerY":-193,"anchorY":0.5},"compId":504,"child":[{"type":"Box","props":{"y":-2,"x":0,"width":325,"var":"gunBoxOne","height":100},"compId":366,"child":[{"type":"Image","props":{"y":8,"x":5,"width":300,"skin":"ui/common_ex/feixuanz1.png","height":85,"sizeGrid":"15,15,15,15"},"compId":136},{"type":"Image","props":{"y":17,"x":90,"width":205,"skin":"ui/fish/zhandou_xiaot.png","height":30,"sizeGrid":"10,15,10,15"},"compId":353},{"type":"Label","props":{"y":19,"x":90,"width":200,"text":"点击解锁1000倍炮","name":"ptxt","height":26,"fontSize":22,"color":"#e4efe5","bold":true,"align":"center"},"compId":138},{"type":"FontClip","props":{"y":55,"x":184,"value":"10000","skin":"ui/fish/beishu1.png","sheet":"0123456789","name":"rewardCount"},"compId":148},{"type":"Image","props":{"y":37,"x":150,"skin":"ui/fish/jijib.png","scaleY":0.7,"scaleX":0.7},"compId":149},{"type":"Image","props":{"y":52,"x":102,"skin":"ui/common/z.png","scaleY":0.9,"scaleX":0.9},"compId":351}]},{"type":"Box","props":{"y":-2,"x":0,"width":325,"var":"gunBoxTwo","height":100},"compId":368,"child":[{"type":"Image","props":{"y":9,"x":5,"width":300,"skin":"ui/common_ex/feixuanz1.png","height":85,"sizeGrid":"15,15,15,15"},"compId":153},{"type":"Image","props":{"y":17,"x":90,"width":205,"skin":"ui/fish/zhandou_xiaot.png","height":30,"sizeGrid":"10,15,10,15"},"compId":382},{"type":"Label","props":{"y":19,"x":90,"width":200,"text":"点击解锁150倍炮","name":"ptxt","height":26,"fontSize":22,"color":"#e4efe5","bold":true,"align":"center"},"compId":155},{"type":"ProgressBar","props":{"y":53,"x":116,"width":180,"skin":"ui/fish/progress_one.png","name":"pre","height":30,"sizeGrid":"3,3,3,3"},"compId":159},{"type":"FontClip","props":{"y":56,"x":201,"value":"333","skin":"ui/fish/tnum.png","sheet":"0123456789/","right":120,"name":"yZuan","anchorX":1},"compId":160},{"type":"FontClip","props":{"y":56,"x":213,"value":"444","skin":"ui/fish/tnum.png","sheet":"0123456789/","name":"needZ","left":217},"compId":162},{"type":"FontClip","props":{"y":56,"x":206,"value":"/","skin":"ui/fish/tnum.png","sheet":"0123456789/","anchorX":0.5},"compId":279},{"type":"Image","props":{"y":53,"x":90,"skin":"ui/fish/zs.png"},"compId":280}]},{"type":"Button","props":{"y":51,"x":581,"var":"gunImg","stateNum":1,"skin":"ui/common_ex/icon_js.png","name":"gunImg","anchorY":0.5,"anchorX":0.5},"compId":399}]},{"type":"Button","props":{"width":67,"var":"changeSkinBtn","stateNum":1,"skin":"ui/common_ex/icon_wq.png","name":"changeSkinBtn","left":70,"height":67,"centerY":-113,"anchorY":0.5,"anchorX":0.5},"compId":331},{"type":"Box","props":{"var":"lottey","left":-477,"centerY":-13,"anchorY":0.5},"compId":505,"child":[{"type":"Box","props":{"y":0,"x":0,"width":325,"var":"buchou","height":100},"compId":267,"child":[{"type":"Image","props":{"y":4,"x":5,"width":300,"skin":"ui/common_ex/feixuanz1.png","height":85,"sizeGrid":"15,15,15,15"},"compId":252},{"type":"Image","props":{"y":17,"x":90,"width":205,"skin":"ui/fish/zhandou_xiaot.png","height":30,"sizeGrid":"10,15,10,15"},"compId":384},{"type":"Image","props":{"y":54,"x":93,"skin":"ui/fish/jiangjinyu.png"},"compId":253},{"type":"ProgressBar","props":{"y":51,"x":162,"width":135,"value":0.1,"skin":"ui/fish/progress_one.png","name":"pre","height":30,"sizeGrid":"3,3,3,3"},"compId":257},{"type":"FontClip","props":{"y":54,"x":223,"width":16,"value":"/","skin":"ui/fish/tnum.png","sheet":"0123456789/","height":24},"compId":259},{"type":"FontClip","props":{"y":54,"x":240,"width":16,"value":"5","skin":"ui/fish/tnum.png","sheet":"0123456789/","name":"base","height":24},"compId":260},{"type":"FontClip","props":{"y":54,"x":208,"value":"2","skin":"ui/fish/tnum.png","sheet":"0123456789/","name":"now"},"compId":277},{"type":"Image","props":{"y":19,"x":104,"skin":"ui/fish/yubuzu.png","scaleY":0.9,"scaleX":0.9},"compId":370}]},{"type":"Box","props":{"width":325,"var":"nchou","height":100},"compId":373,"child":[{"type":"Image","props":{"y":4,"x":5,"width":300,"skin":"ui/common_ex/feixuanz1.png","height":85,"sizeGrid":"15,15,15,15"},"compId":268},{"type":"Image","props":{"y":17,"x":90,"width":205,"skin":"ui/fish/zhandou_xiaot.png","height":30,"sizeGrid":"10,15,10,15"},"compId":352},{"type":"Label","props":{"y":19,"x":95,"width":200,"text":"点击进行抽奖","name":"ctxt","height":26,"fontSize":22,"color":"#e4efe5","bold":true,"align":"center"},"compId":525},{"type":"Image","props":{"y":53,"x":90,"skin":"ui/fish/jiangchi.png","scaleY":0.9,"scaleX":0.9},"compId":270},{"type":"Image","props":{"y":52,"x":156,"width":178,"skin":"ui/common_ex/img_di_03.png","scaleY":0.8,"scaleX":0.8,"height":37,"sizeGrid":"0,40,0,40"},"compId":271},{"type":"FontClip","props":{"y":56,"x":234,"value":"3400000","skin":"ui/fish/tnum.png","sheet":"0123456789/","name":"rewCount","anchorX":0.5},"compId":274},{"type":"Image","props":{"y":30,"x":138,"skin":"ui/fish/jijib.png","scaleY":0.8,"scaleX":0.8},"compId":272}]},{"type":"Button","props":{"y":48,"x":581,"var":"reward","stateNum":1,"skin":"ui/common_ex/icon_cj.png","name":"reward","anchorY":0.5,"anchorX":0.5},"compId":400}]},{"type":"Box","props":{"width":100,"var":"month","left":70,"height":100,"centerY":74},"compId":520,"child":[{"type":"Button","props":{"y":51,"x":35,"width":67,"visible":true,"var":"month_icon","stateNum":1,"skin":"ui/common_ex/icon_yk.png","height":67,"anchorY":0.5,"anchorX":0.5},"compId":509}]},{"type":"Box","props":{"y":21,"x":632,"width":250,"var":"contestTimeBox","top":21,"height":50,"centerX":-8,"anchorX":0.5},"compId":620,"child":[{"type":"Image","props":{"y":-4,"x":16,"width":250,"skin":"ui/fish/tuceng.png","height":40,"sizeGrid":"15,0,15,0"},"compId":622},{"type":"Text","props":{"y":0,"x":0,"width":270,"var":"contestTimeText","text":"本局倒计时：00:00:00","height":40,"fontSize":20,"color":"#ffffff","bold":true,"align":"center","runtime":"laya.display.Text"},"compId":623}]},{"type":"Box","props":{"y":-240,"x":-315,"width":1920,"var":"matchWaitBox","height":1200,"centerY":0,"centerX":5},"compId":603,"child":[{"type":"Image","props":{"y":0,"x":0,"width":1920,"skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":604},{"type":"Button","props":{"y":579,"x":836,"visible":false,"var":"waitBtn","stateNum":1,"skin":"ui/fish/btn_zb.png","labelSize":30,"labelFont":"Microsoft YaHei","labelColors":"#ffffff"},"compId":606},{"type":"Box","props":{"y":565,"x":604,"var":"waitBox"},"compId":607,"child":[{"type":"Image","props":{"y":0,"x":0,"skin":"ui/common_ex/font_yzb.png"},"compId":608}]}]},{"type":"matchInfoBox","props":{"var":"matchRoomPanel","top":2,"centerX":0,"runtime":"ui.fight.matchInfoBoxUI"},"compId":703},{"type":"matchResultBox","props":{"var":"matchResultPanel","centerY":0,"centerX":0,"runtime":"ui.fight.matchResultBoxUI"},"compId":704},{"type":"Box","props":{"y":620,"x":28,"var":"box_1"},"compId":496,"child":[{"type":"Image","props":{"var":"taione","skin":"ui/fish/paodi.png"},"compId":82},{"type":"Image","props":{"y":53,"x":115,"width":152,"var":"kuangone","skin":"ui/common_ex/shuzhi.png","height":20,"sizeGrid":"8,25,8,25"},"compId":278},{"type":"FontClip","props":{"y":63,"x":256,"var":"goldOne","value":"123456778","skin":"font/font_1.png","sheet":"/.+-0123456789枚万亿","scaleY":0.4,"scaleX":0.4,"anchorY":0.5,"anchorX":1},"compId":105},{"type":"Box","props":{"y":74,"x":97,"var":"diamondBoxOne"},"compId":197,"child":[{"type":"Image","props":{"y":4,"x":15,"width":155,"skin":"ui/common_ex/shuzhi.png","height":20,"sizeGrid":"8,25,8,25"},"compId":174},{"type":"Image","props":{"visible":false,"var":"seatZsOne","skin":"ui/fish/zs.png"},"compId":175},{"type":"Image","props":{"y":5,"var":"seatJifenOne","skin":"ui/fish/jifen.png"},"compId":579},{"type":"FontClip","props":{"y":15,"x":158,"var":"diamodOne","value":"123","skin":"font/font_2.png","sheet":"/.+-0123456789枚万亿","scaleY":0.4,"scaleX":0.4,"anchorY":0.5,"anchorX":1},"compId":176}]},{"type":"Box","props":{"y":13,"x":12,"var":"roleOne"},"compId":190,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png"},"compId":177},{"type":"Image","props":{"y":2,"x":2,"width":78,"var":"playimgOne","skin":"ui/common/nan.png","name":"playimgOne","height":78},"compId":178},{"type":"Image","props":{"y":1,"x":1,"skin":"ui/common_ex/touxiang2.png","scaleY":0.97,"scaleX":0.97},"compId":521},{"type":"Image","props":{"y":63,"x":8,"skin":"ui/fish/vip.png"},"compId":179},{"type":"Image","props":{"y":62,"x":28,"skin":"ui/fish/v.png"},"compId":180},{"type":"FontClip","props":{"y":62,"x":50,"var":"fontVipOne","value":"30","skin":"ui/fish/nums.png","sheet":"0123456789","scaleY":0.8,"scaleX":0.8},"compId":181}]},{"type":"Image","props":{"y":61,"x":110,"width":40,"var":"coinOne","skin":"ui/fish/jb.png","height":40,"anchorY":0.6,"anchorX":0.4},"compId":57},{"type":"Image","props":{"y":52,"x":98,"visible":false,"var":"ccoinOne","skin":"ui/fish/zidan.png"},"compId":580},{"type":"Button","props":{"y":33,"x":275,"var":"powersub","stateNum":1,"skin":"ui/fish/-.png"},"compId":361},{"type":"Button","props":{"y":33,"x":477,"visible":true,"var":"poweradd","stateNum":1,"skin":"ui/fish/+.png"},"compId":362},{"type":"Button","props":{"y":15,"x":565,"var":"auto","stateNum":1,"skin":"ui/fish/icon_zd.png","name":"auto","anchorY":0.5,"anchorX":0.5},"compId":506},{"type":"Image","props":{"y":89,"x":585,"width":84,"var":"cancle","skin":"ui/fish/TY_quexiao.png","scaleY":0.8,"scaleX":0.8,"pivotY":135,"pivotX":67,"name":"cancle","height":84},"compId":507},{"type":"Label","props":{"y":20,"x":100,"width":180,"var":"nameOne","text":"玩家的名字","fontSize":18,"color":"#f9f4f4","bold":true,"align":"center"},"compId":249},{"type":"Text","props":{"y":46,"x":527,"width":100,"var":"autoTimeTip","text":"00:00:00","height":40,"fontSize":20,"color":"#f9f4f4","bold":true,"align":"left","runtime":"laya.display.Text"},"compId":518},{"type":"Image","props":{"y":56,"x":652,"var":"doubleCoin","skin":"ui/fish/double_coin.png","anchorY":0.5,"anchorX":0.5},"compId":593},{"type":"Image","props":{"y":-20,"x":653,"var":"doubleChance","skin":"ui/fish/double_chance.png","anchorY":0.5,"anchorX":0.5},"compId":594},{"type":"Image","props":{"y":35,"x":639,"var":"doubleCoinLock","skin":"ui/fish/lock.png"},"compId":595},{"type":"Image","props":{"y":-41,"x":639,"var":"doubleChanceLock","skin":"ui/fish/lock.png"},"compId":596},{"type":"Image","props":{"y":53,"x":674,"width":84,"var":"doubleChanceCancel","skin":"ui/fish/TY_quexiao.png","scaleY":0.8,"scaleX":0.8,"pivotY":135,"pivotX":67,"height":84},"compId":597},{"type":"Image","props":{"y":128,"x":674,"width":84,"var":"doubleCoinCancel","skin":"ui/fish/TY_quexiao.png","scaleY":0.8,"scaleX":0.8,"pivotY":135,"pivotX":67,"height":84},"compId":598},{"type":"Button","props":{"y":-45,"x":124,"var":"alreadyOne","stateNum":1,"skin":"ui/fish/btn_yzb.png"},"compId":706}]},{"type":"Box","props":{"y":-2,"x":54,"var":"box_4"},"compId":503,"child":[{"type":"Image","props":{"y":100,"x":473,"var":"taifour","skin":"ui/fish/pp.png","scaleY":-1,"scaleX":-1},"compId":207},{"type":"Image","props":{"y":35,"x":128.99999464102098,"width":153,"var":"kuangfour","skin":"ui/common_ex/shuzhi.png","height":20,"sizeGrid":"8,25,8,25"},"compId":209},{"type":"Image","props":{"y":43,"x":125,"width":40,"var":"coinFour","skin":"ui/fish/jb.png","height":40,"anchorY":0.6,"anchorX":0.4},"compId":210},{"type":"Image","props":{"y":33,"x":112,"var":"ccoinFour","skin":"ui/fish/zidan.png"},"compId":581},{"type":"FontClip","props":{"y":47,"x":274.999994641021,"var":"goldFour","value":"1234567890","skin":"font/font_1.png","sheet":"/.+-0123456789枚万亿","scaleY":0.4,"scaleX":0.4,"anchorY":0.5,"anchorX":1},"compId":211},{"type":"Box","props":{"x":15.000005358979024,"var":"roleFour"},"compId":214,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png"},"compId":215},{"type":"Image","props":{"y":2,"x":2,"width":78,"var":"playimgFour","skin":"ui/common/nan.png","name":"playimg","height":78},"compId":216},{"type":"Image","props":{"y":1,"x":1,"skin":"ui/common_ex/touxiang2.png","scaleY":0.97,"scaleX":0.97},"compId":522},{"type":"Image","props":{"y":63,"x":8,"skin":"ui/fish/vip.png"},"compId":217},{"type":"Image","props":{"y":62,"x":28,"skin":"ui/fish/v.png"},"compId":218},{"type":"FontClip","props":{"y":62,"x":50,"var":"fontVipFour","value":"4","skin":"ui/fish/nums.png","sheet":"0123456789","scaleY":0.8,"scaleX":0.8},"compId":219}]},{"type":"Box","props":{"y":2,"x":119,"visible":false,"var":"diamondBoxFour"},"compId":575,"child":[{"type":"Image","props":{"y":4,"x":10,"width":155,"skin":"ui/common_ex/shuzhi.png","sizeGrid":"8,25,8,25"},"compId":576},{"type":"Image","props":{"y":0,"x":-6,"skin":"ui/fish/jifen.png"},"compId":577},{"type":"FontClip","props":{"y":15,"x":158,"var":"diamodFour","value":"123","skin":"font/font_2.png","sheet":"/.+-0123456789枚万亿","scaleY":0.4,"scaleX":0.4,"anchorY":0.5,"anchorX":1},"compId":578}]},{"type":"Label","props":{"y":60,"x":100,"width":180,"var":"nameFour","text":"玩家的名字","fontSize":18,"color":"#f9f4f4","bold":true,"align":"center"},"compId":213},{"type":"Button","props":{"y":88,"x":134,"var":"alreadyFour","stateNum":1,"skin":"ui/fish/btn_yzb.png"},"compId":709}]},{"type":"Box","props":{"y":-2,"x":756,"var":"box_3"},"compId":498,"child":[{"type":"Image","props":{"y":100,"var":"taithree","skin":"ui/fish/pp.png","scaleY":-1},"compId":223},{"type":"Image","props":{"y":35,"x":206,"width":155,"var":"kuangthree","skin":"ui/common_ex/shuzhi.png","height":20,"sizeGrid":"8,25,8,25"},"compId":225},{"type":"Image","props":{"y":43,"x":202,"width":40,"var":"coinThree","skin":"ui/fish/jb.png","height":40,"anchorY":0.6,"anchorX":0.4},"compId":226},{"type":"Image","props":{"y":34,"x":189,"var":"ccoinThree","skin":"ui/fish/zidan.png"},"compId":582},{"type":"FontClip","props":{"y":47,"x":355,"var":"goldThree","value":"1234567890","skin":"font/font_1.png","sheet":"/.+-0123456789枚万亿","scaleY":0.4,"scaleX":0.4,"anchorY":0.5,"anchorX":1},"compId":227},{"type":"Box","props":{"x":374,"var":"roleThree"},"compId":232,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png"},"compId":233},{"type":"Image","props":{"y":2,"x":2,"width":78,"var":"playimgThree","skin":"ui/common/nan.png","name":"playimg","height":78},"compId":234},{"type":"Image","props":{"y":1,"x":1,"skin":"ui/common_ex/touxiang2.png","scaleY":0.97,"scaleX":0.97},"compId":523},{"type":"Image","props":{"y":63,"x":8,"skin":"ui/fish/vip.png"},"compId":235},{"type":"Image","props":{"y":62,"x":28,"skin":"ui/fish/v.png"},"compId":236},{"type":"FontClip","props":{"y":62,"x":50,"var":"fontVipThree","value":"4","skin":"ui/fish/nums.png","sheet":"0123456789","scaleY":0.8,"scaleX":0.8},"compId":237},{"type":"Box","props":{"y":2,"x":-178,"visible":false,"var":"diamondBoxThree"},"compId":571,"child":[{"type":"Image","props":{"y":4,"x":10,"width":155,"skin":"ui/common_ex/shuzhi.png","sizeGrid":"8,25,8,25"},"compId":572},{"type":"Image","props":{"y":0,"x":-6,"skin":"ui/fish/jifen.png"},"compId":573},{"type":"FontClip","props":{"y":15,"x":158,"var":"diamodThree","value":"123","skin":"font/font_2.png","sheet":"/.+-0123456789枚万亿","scaleY":0.4,"scaleX":0.4,"anchorY":0.5,"anchorX":1},"compId":574}]}]},{"type":"Label","props":{"y":60,"x":370,"width":180,"var":"nameThree","text":"玩家的名字","fontSize":18,"color":"#f9f4f4","bold":true,"anchorX":1,"align":"center"},"compId":228},{"type":"Button","props":{"y":88,"x":197,"var":"alreadyThree","stateNum":1,"skin":"ui/fish/btn_yzb.png"},"compId":708}]},{"type":"Box","props":{"y":618,"x":756,"var":"box_2"},"compId":497,"child":[{"type":"Image","props":{"var":"taitwo","skin":"ui/fish/pp.png"},"compId":65},{"type":"Image","props":{"y":48,"x":203,"width":152,"var":"kuangtwo","skin":"ui/common_ex/shuzhi.png","height":20,"sizeGrid":"8,25,8,25"},"compId":186},{"type":"Image","props":{"y":57,"x":203,"width":40,"var":"coinTwo","skin":"ui/fish/jb.png","height":40,"anchorY":0.6,"anchorX":0.4},"compId":187},{"type":"Image","props":{"y":46,"x":190,"var":"ccoinTwo","skin":"ui/fish/zidan.png"},"compId":583},{"type":"FontClip","props":{"y":59,"x":349,"var":"goldTwo","value":"1234567890","skin":"font/font_1.png","sheet":"/.+-0123456789枚万亿","scaleY":0.4,"scaleX":0.4,"anchorY":0.5,"anchorX":1},"compId":188},{"type":"Box","props":{"y":73,"x":190,"visible":false,"var":"diamondBoxTwo"},"compId":567,"child":[{"type":"Image","props":{"y":4,"x":15,"width":150,"skin":"ui/common_ex/shuzhi.png","sizeGrid":"8,25,8,25"},"compId":568},{"type":"Image","props":{"skin":"ui/fish/jifen.png"},"compId":569},{"type":"FontClip","props":{"y":15,"x":158,"var":"diamodTwo","value":"123","skin":"font/font_2.png","sheet":"/.+-0123456789枚万亿","scaleY":0.4,"scaleX":0.4,"anchorY":0.5,"anchorX":1},"compId":570}]},{"type":"Box","props":{"y":13,"x":374,"var":"roleTwo"},"compId":191,"child":[{"type":"Image","props":{"skin":"ui/common_ex/touxiang.png"},"compId":192},{"type":"Image","props":{"y":2,"x":2,"width":78,"var":"playimgTwo","skin":"ui/common/nan.png","name":"playimgTwo","height":78},"compId":193},{"type":"Image","props":{"y":1,"x":1,"skin":"ui/common_ex/touxiang2.png","scaleY":0.97,"scaleX":0.97},"compId":524},{"type":"Image","props":{"y":63,"x":8,"skin":"ui/fish/vip.png"},"compId":194},{"type":"Image","props":{"y":62,"x":28,"skin":"ui/fish/v.png"},"compId":195},{"type":"FontClip","props":{"y":62,"x":50,"var":"fontVipTwo","value":"4","skin":"ui/fish/nums.png","sheet":"0123456789","scaleY":0.8,"scaleX":0.8},"compId":196}]},{"type":"Label","props":{"y":20,"x":370,"width":180,"var":"nameTwo","text":"玩家的名字1111111","fontSize":18,"color":"#f9f4f4","bold":true,"anchorX":1,"align":"center"},"compId":202},{"type":"Button","props":{"y":-45,"x":197,"var":"alreadyTwo","stateNum":1,"skin":"ui/fish/btn_yzb.png"},"compId":707}]},{"type":"Animation","props":{"y":692,"x":430,"width":1,"var":"paoone","height":1},"compId":104},{"type":"Animation","props":{"y":692,"x":850,"width":1,"var":"paotwo","rotation":270,"height":1},"compId":81},{"type":"Animation","props":{"y":30,"x":850,"width":1,"var":"paothree","rotation":90,"height":1},"compId":87},{"type":"Animation","props":{"y":30,"x":430,"width":1,"var":"paofour","rotation":90,"height":1},"compId":85},{"type":"FontClip","props":{"y":696,"x":850,"var":"powerTwo","value":"1111","skin":"ui/fish/beishu1.png","sheet":"0123456789","anchorY":0.5,"anchorX":0.5},"compId":206},{"type":"FontClip","props":{"y":24,"x":850,"var":"powerThree","value":"1111","skin":"ui/fish/beishu1.png","sheet":"0123456789","anchorY":0.5,"anchorX":0.5},"compId":240},{"type":"FontClip","props":{"y":24,"x":430,"var":"powerFour","value":"1111","skin":"ui/fish/beishu1.png","sheet":"0123456789","anchorY":0.5,"anchorX":0.5},"compId":222},{"type":"FontClip","props":{"y":696,"x":430,"var":"powerOne","value":"5000","skin":"ui/fish/beishu1.png","sheet":"0123456789","anchorY":0.5,"anchorX":0.5},"compId":183},{"type":"Box","props":{"width":60,"var":"rankAniBox","rotation":360,"height":60,"centerX":-900,"bottom":110,"anchorY":0.5,"anchorX":0.5},"compId":688,"child":[{"type":"Image","props":{"skin":"ui/common_ex/img_yuanbao.png","scaleY":0.3,"scaleX":0.3},"compId":687},{"type":"Image","props":{"y":-103,"x":30,"width":314,"visible":false,"var":"rankAniImg","skin":"ui/common_ex/img_tips.png","rotation":0,"height":124},"compId":689,"child":[{"type":"Label","props":{"y":24,"x":17,"wordWrap":true,"width":280,"var":"rankAniLable","valign":"middle","text":"保持当前实力榜排名，明日登录可领取奖励哦","height":63,"fontSize":25,"color":"#ffffff","align":"center"},"compId":690}]}]},{"type":"backBox","props":{"x":-359,"var":"backPanel","centerY":220,"runtime":"ui.fight.backBoxUI"},"compId":693},{"type":"Box","props":{"y":10,"x":640,"width":300,"var":"since","top":10,"scaleY":0.9,"scaleX":0.9,"height":150,"centerX":0,"anchorX":0.5},"compId":412,"child":[{"type":"Image","props":{"y":-15,"x":2,"width":297,"skin":"ui/fish/xuanz2.png","height":121,"sizeGrid":"30,30,30,30"},"compId":413},{"type":"Image","props":{"x":15,"width":270,"skin":"ui/common_ex/task_daily.png","height":95,"sizeGrid":"25,25,39,25"},"compId":414},{"type":"Image","props":{"y":10,"x":50,"width":222,"skin":"ui/common_ex/img_di_03.png","height":40,"sizeGrid":"0,40,0,40"},"compId":427},{"type":"Image","props":{"y":-24,"x":15,"skin":"ui/fish/jijib.png","scaleY":1.2,"scaleX":1.2},"compId":428},{"type":"Image","props":{"y":100,"x":145,"width":500,"skin":"ui/fish/tuceng.png","height":40,"anchorX":0.5,"sizeGrid":"15,0,15,0"},"compId":433},{"type":"Text","props":{"y":57,"x":15,"width":270,"var":"totalIntergal","text":"积分：8","height":40,"fontSize":26,"color":"#c4edff","align":"center","runtime":"laya.display.Text"},"compId":417},{"type":"Text","props":{"y":15,"x":55,"width":220,"var":"totalCoin","text":"8","height":40,"fontSize":24,"color":"#ffffff","bold":true,"align":"center","runtime":"laya.display.Text"},"compId":429},{"type":"Text","props":{"y":105,"x":15,"width":270,"var":"currentTime","text":"倒计时：00:00:00","height":40,"fontSize":22,"color":"#ffffff","bold":true,"align":"center","runtime":"laya.display.Text"},"compId":434},{"type":"Button","props":{"y":106,"x":271,"stateNum":1,"skin":"ui/fish/wenhao.png","anchorY":0.5,"anchorX":0.5},"compId":491}]},{"type":"Box","props":{"y":10,"x":640,"width":270,"visible":false,"var":"box_task","top":10,"scaleY":0.85,"scaleX":0.85,"height":120,"centerX":0,"anchorX":0.5},"compId":311,"child":[{"type":"Image","props":{"width":270,"var":"task_bg","skin":"ui/common_ex/task_daily.png","height":95,"sizeGrid":"25,25,39,25"},"compId":310},{"type":"Image","props":{"y":45,"x":45,"var":"task_icon_bg","skin":"ui/common_ex/kuang.png","anchorY":0.5,"anchorX":0.5},"compId":409},{"type":"Image","props":{"y":45,"x":45,"var":"task_icon","skin":"ui/common/rw_13.png","scaleY":0.7,"scaleX":0.7,"name":"task_icon","anchorY":0.5,"anchorX":0.5},"compId":405},{"type":"Text","props":{"y":63,"x":95,"width":165,"var":"task_name","text":"捕鱼","name":"task_name","height":20,"fontSize":20,"color":"#f9f4f4","bold":true,"align":"center","runtime":"laya.display.Text"},"compId":312},{"type":"ProgressBar","props":{"y":14,"x":85,"width":180,"visible":false,"var":"p_task","value":0.1,"skin":"ui/common_ex/p1.png","height":32,"sizeGrid":"10,10,10,10"},"compId":328,"child":[{"type":"FontClip","props":{"y":17,"x":95,"var":"p_txt","value":"2/5","skin":"ui/fish/tnum.png","sheet":"0123456789/","anchorY":0.5,"anchorX":0.5},"compId":410}]},{"type":"List","props":{"y":10,"x":102,"width":151,"var":"list_reward","spaceX":-30,"repeatX":2,"renderType":"render","name":"list_reward","height":68},"compId":341,"child":[{"type":"Box","props":{"y":0,"x":0,"width":105,"scaleY":0.7,"scaleX":0.7,"name":"render","height":102},"compId":342,"child":[{"type":"Image","props":{"width":100,"skin":"ui/common_ex/touxiang.png","height":100},"compId":343},{"type":"Image","props":{"y":7,"x":13,"skin":"ui/common/coin2.png","scaleY":0.8,"scaleX":0.8,"name":"reward_type"},"compId":344},{"type":"Image","props":{"y":68,"x":7,"width":89,"skin":"ui/common_ex/reward_mask.png","height":25,"sizeGrid":"3,15,13,15"},"compId":345},{"type":"Label","props":{"y":70,"x":22,"width":64,"text":"x 999","name":"reward_text","height":25,"fontSize":22,"color":"#f6e9e9","align":"center"},"compId":346}]}]},{"type":"Image","props":{"y":35,"x":11,"var":"click_a","skin":"ui/fish/click_a.png"},"compId":347}]},{"type":"Image","props":{"y":156,"x":-619,"visible":false,"var":"boss_txt_bg","skin":"ui/fish/welcome_boss.png","centerY":-113,"centerX":-1000},"compId":601,"child":[{"type":"Image","props":{"y":91,"x":264,"visible":false,"var":"boss_txt","skin":"ui/fish/welcome_boss_2.png","anchorY":0.5,"anchorX":0.5},"compId":602}]},{"type":"Box","props":{"y":0.5,"x":0.5,"var":"box_boss"},"compId":527},{"type":"Image","props":{"visible":false,"var":"boss_img","skin":"ui/fish/boss_3.png","centerY":0,"centerX":-1200,"anchorY":0.5,"anchorX":0.5},"compId":531},{"type":"Image","props":{"visible":false,"var":"boss_coming","skin":"ui/fish/boss_txt_coming.png","centerY":99,"centerX":1193,"anchorY":0.5,"anchorX":0.5},"compId":533},{"type":"Image","props":{"x":-496,"width":2256,"visible":false,"var":"boss_mask_top","top":-85,"skin":"ui/fish/boss_bg_red.png","scaleY":0.7,"height":303},"compId":534},{"type":"Image","props":{"x":-473,"width":2264,"visible":false,"var":"boss_mask_bottom","skin":"ui/fish/boss_bg_red.png","scaleY":-0.7,"height":303,"bottom":180},"compId":538},{"type":"List","props":{"x":-334,"visible":false,"var":"boss_warning","spaceX":200,"repeatY":1,"repeatX":10,"bottom":128},"compId":536,"child":[{"type":"Box","props":{"name":"render"},"compId":537,"child":[{"type":"Image","props":{"skin":"ui/fish/boss_warn.png","scaleY":0.7,"scaleX":0.7,"name":"warning"},"compId":539}]}]},{"type":"List","props":{"x":-334,"visible":false,"var":"boss_warning2","top":72,"spaceX":200,"repeatY":1,"repeatX":10},"compId":540,"child":[{"type":"Box","props":{"name":"render"},"compId":541,"child":[{"type":"Image","props":{"skin":"ui/fish/boss_warn.png","scaleY":0.7,"scaleX":0.7,"name":"warning"},"compId":542}]}]},{"type":"Image","props":{"width":2000,"visible":false,"var":"welcome_bg","skin":"ui/fish/welcome_bg.png","height":150,"centerY":-11,"centerX":-1650,"sizeGrid":"0,0,0,0"},"compId":543},{"type":"Image","props":{"visible":false,"var":"welcome_boss","skin":"ui/fish/welcome_boss_1.png","centerY":0,"centerX":1200},"compId":544},{"type":"Image","props":{"var":"welcome_txt","skin":"ui/fish/welcome_1.png","centerY":0,"centerX":-1700},"compId":599,"child":[{"type":"Image","props":{"x":-400,"skin":"ui/fish/welcome.png"},"compId":600}]},{"type":"Image","props":{"var":"fishTideImg","skin":"ui/fish/fish_tide.png","centerY":-50,"centerX":-1200},"compId":546},{"type":"Box","props":{"width":114,"var":"onLineBox","right":137,"height":133,"centerY":-210},"compId":564,"child":[{"type":"Image","props":{"y":80,"x":76,"width":100,"var":"receiveImg","skin":"ui/fish/lqjl_3.png","scaleY":1,"scaleX":1,"height":100,"anchorY":0.5,"anchorX":0.5},"compId":558},{"type":"Animation","props":{"y":80,"x":74,"width":100,"var":"lqjlani","source":"abbey/lqjl.ani","height":100},"compId":566},{"type":"Box","props":{"x":4,"var":"countBox"},"compId":560,"child":[{"type":"Image","props":{"skin":"ui/fish/lqjl_dik.png"},"compId":552},{"type":"Image","props":{"y":7,"x":10,"skin":"ui/fish/jb.png"},"compId":553},{"type":"Label","props":{"y":12,"x":28,"width":100,"var":"rewardCount","text":"888888","fontSize":22,"color":"#f9f3f3","bold":true,"align":"center"},"compId":554}]},{"type":"Box","props":{"y":106,"x":-3,"var":"timeBox"},"compId":561,"child":[{"type":"Image","props":{"y":-4,"x":-3,"width":132,"skin":"ui/common_ex/tuceng.png","height":42,"sizeGrid":"10,0,10,0"},"compId":559},{"type":"Image","props":{"y":1,"x":38,"var":"getImg","skin":"ui/fish/lqjl_4.png"},"compId":565},{"type":"Label","props":{"x":1,"width":140,"var":"leftTime","text":"00:00","fontSize":20,"color":"#f4e6e6","bold":true,"align":"center"},"compId":555}]}]}],"animations":[{"nodes":[{"target":366,"keyframes":{"y":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":366,"key":"y","index":0},{"value":0,"tweenMethod":"linearNone","tween":true,"target":366,"key":"y","index":10}],"x":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":366,"key":"x","index":0},{"value":535,"tweenMethod":"linearNone","tween":true,"target":366,"key":"x","index":10}],"var":[{"value":"gunBoxOne","tweenMethod":"linearNone","tween":false,"target":366,"key":"var","index":0}]}},{"target":368,"keyframes":{"y":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":368,"key":"y","index":0},{"value":0,"tweenMethod":"linearNone","tween":true,"target":368,"key":"y","index":10}],"x":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":368,"key":"x","index":0},{"value":535,"tweenMethod":"linearNone","tween":true,"target":368,"key":"x","index":10}],"var":[{"value":"gunBoxTwo","tweenMethod":"linearNone","tween":false,"target":368,"key":"var","index":0}]}}],"name":"collect","id":1,"frameRate":24,"action":0},{"nodes":[{"target":366,"keyframes":{"y":[{"value":-2,"tweenMethod":"linearNone","tween":true,"target":366,"key":"y","index":0},{"value":-2,"tweenMethod":"linearNone","tween":true,"target":366,"key":"y","index":10}],"x":[{"value":535,"tweenMethod":"linearNone","tween":true,"target":366,"key":"x","index":0},{"value":0,"tweenMethod":"linearNone","tween":true,"target":366,"key":"x","index":10}]}},{"target":368,"keyframes":{"y":[{"value":-2,"tweenMethod":"linearNone","tween":true,"target":368,"key":"y","index":0},{"value":-2,"tweenMethod":"linearNone","tween":true,"target":368,"key":"y","index":10}],"x":[{"value":535,"tweenMethod":"linearNone","tween":true,"target":368,"key":"x","index":0},{"value":0,"tweenMethod":"linearNone","tween":true,"target":368,"key":"x","index":10}]}}],"name":"release","id":2,"frameRate":24,"action":0},{"nodes":[{"target":267,"keyframes":{"y":[{"value":2,"tweenMethod":"linearNone","tween":true,"target":267,"key":"y","index":0},{"value":2,"tweenMethod":"linearNone","tween":true,"target":267,"key":"y","index":10}],"x":[{"value":535,"tweenMethod":"linearNone","tween":true,"target":267,"key":"x","index":0},{"value":0,"tweenMethod":"linearNone","tween":true,"target":267,"key":"x","index":10}]}},{"target":373,"keyframes":{"y":[{"value":2,"tweenMethod":"linearNone","tween":true,"target":373,"key":"y","index":0},{"value":2,"tweenMethod":"linearNone","tween":true,"target":373,"key":"y","index":10}],"x":[{"value":535,"tweenMethod":"linearNone","tween":true,"target":373,"key":"x","index":0},{"value":0,"tweenMethod":"linearNone","tween":true,"target":373,"key":"x","index":10}]}}],"name":"jin","id":3,"frameRate":24,"action":0},{"nodes":[{"target":267,"keyframes":{"y":[{"value":2,"tweenMethod":"linearNone","tween":true,"target":267,"key":"y","index":0},{"value":2,"tweenMethod":"linearNone","tween":true,"target":267,"key":"y","index":10}],"x":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":267,"key":"x","index":0},{"value":535,"tweenMethod":"linearNone","tween":true,"target":267,"key":"x","index":10}]}},{"target":373,"keyframes":{"y":[{"value":2,"tweenMethod":"linearNone","tween":true,"target":373,"key":"y","index":0},{"value":2,"tweenMethod":"linearNone","tween":true,"target":373,"key":"y","index":10}],"x":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":373,"key":"x","index":0},{"value":535,"tweenMethod":"linearNone","tween":true,"target":373,"key":"x","index":10}]}}],"name":"chu","id":4,"frameRate":24,"action":0},{"nodes":[{"target":360,"keyframes":{"y":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":360,"key":"y","index":0},{"value":0,"tweenMethod":"linearNone","tween":true,"target":360,"key":"y","index":10}],"x":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":360,"key":"x","index":0},{"value":0,"tweenMethod":"linearNone","tween":true,"target":360,"key":"x","index":10}],"left":[{"value":-350,"tweenMethod":"linearNone","tween":true,"target":360,"key":"left","index":0},{"value":-100,"tweenMethod":"linearNone","tween":true,"target":360,"key":"left","index":10}],"centerY":[{"value":220,"tweenMethod":"linearNone","tween":true,"target":360,"key":"centerY","index":0}]}}],"name":"barGo","id":5,"frameRate":24,"action":0},{"nodes":[{"target":360,"keyframes":{"x":[{"value":0,"tweenMethod":"linearNone","tween":true,"target":360,"key":"x","index":0},{"value":0,"tweenMethod":"linearNone","tween":true,"target":360,"label":null,"key":"x","index":10}],"left":[{"value":-180,"tweenMethod":"linearNone","tween":true,"target":360,"key":"left","index":0},{"value":-180,"tweenMethod":"linearNone","tween":true,"target":360,"label":null,"key":"left","index":10}],"centerY":[{"value":220,"tweenMethod":"linearNone","tween":false,"target":360,"key":"centerY","index":0},{"value":220,"tweenMethod":"linearNone","tween":false,"target":360,"label":null,"key":"centerY","index":10}]}}],"name":"barIn","id":6,"frameRate":24,"action":0},{"nodes":[],"name":"shine","id":8,"frameRate":24,"action":0},{"nodes":[{"target":688,"keyframes":{"x":[{"value":-90,"tweenMethod":"linearNone","tween":true,"target":688,"key":"x","index":0}],"rotation":[{"value":-140,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":0},{"value":-110,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":4},{"value":-80,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":8},{"value":-50,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":12},{"value":-20,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":16},{"value":10,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":20},{"value":40,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":24},{"value":70,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":28},{"value":100,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":32},{"value":130,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":36},{"value":160,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":40},{"value":190,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":44},{"value":220,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":48},{"value":250,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":52},{"value":280,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":56},{"value":310,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":60},{"value":330,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":64},{"value":360,"tweenMethod":"linearNone","tween":true,"target":688,"key":"rotation","index":68}],"centerX":[{"value":-760,"tweenMethod":"linearNone","tween":false,"target":688,"key":"centerX","index":0},{"value":-740,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":4},{"value":-720,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":8},{"value":-680,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":16},{"value":-660,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":20},{"value":-640,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":24},{"value":-620,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":28},{"value":-600,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":32},{"value":-580,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":36},{"value":-560,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":40},{"value":-540,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":44},{"value":-520,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":48},{"value":-500,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":52},{"value":-480,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":56},{"value":-460,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":60},{"value":-440,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":64},{"value":-420,"tweenMethod":"linearNone","tween":true,"target":688,"key":"centerX","index":68}]}}],"name":"rankAni","id":9,"frameRate":24,"action":0}],"loadList":["ui/fish/den-.png","ui/common_ex/feixuanz1.png","ui/fish/skill.png","ui/common/yulei1.png","ui/fish/jinengzi.png","ui/fish/kuangbao.png","ui/fish/zs.png","ui/fish/zhaohuan.png","ui/fish/suoding.png","ui/fish/bingdong.png","ui/fish/zidong.png","ui/fish/yy1_00.png","ui/fish/zhadan.png","ui/fish/TY_quexiao.png","ui/fish/zhandou_xiaot.png","ui/fish/beishu1.png","ui/fish/jijib.png","ui/common/z.png","ui/fish/progress_one.png","ui/fish/tnum.png","ui/common_ex/icon_js.png","ui/common_ex/icon_wq.png","ui/fish/jiangjinyu.png","ui/fish/yubuzu.png","ui/fish/jiangchi.png","ui/common_ex/img_di_03.png","ui/common_ex/icon_cj.png","ui/common_ex/icon_yk.png","ui/fish/tuceng.png","ui/common_ex/jl_bg.png","ui/fish/btn_zb.png","ui/common_ex/font_yzb.png","ui/fish/paodi.png","ui/common_ex/shuzhi.png","font/font_1.png","ui/fish/jifen.png","font/font_2.png","ui/common_ex/touxiang.png","ui/common/nan.png","ui/common_ex/touxiang2.png","ui/fish/vip.png","ui/fish/v.png","ui/fish/nums.png","ui/fish/jb.png","ui/fish/zidan.png","ui/fish/-.png","ui/fish/+.png","ui/fish/icon_zd.png","ui/fish/double_coin.png","ui/fish/double_chance.png","ui/fish/lock.png","ui/fish/btn_yzb.png","ui/fish/pp.png","ui/common_ex/img_yuanbao.png","ui/common_ex/img_tips.png","ui/fish/xuanz2.png","ui/common_ex/task_daily.png","ui/fish/wenhao.png","ui/common_ex/kuang.png","ui/common/rw_13.png","ui/common_ex/p1.png","ui/common/coin2.png","ui/common_ex/reward_mask.png","ui/fish/click_a.png","ui/fish/welcome_boss.png","ui/fish/welcome_boss_2.png","ui/fish/boss_3.png","ui/fish/boss_txt_coming.png","ui/fish/boss_bg_red.png","ui/fish/boss_warn.png","ui/fish/welcome_bg.png","ui/fish/welcome_boss_1.png","ui/fish/welcome_1.png","ui/fish/welcome.png","ui/fish/fish_tide.png","ui/fish/lqjl_3.png","abbey/lqjl.ani","ui/fish/lqjl_dik.png","ui/common_ex/tuceng.png","ui/fish/lqjl_4.png"],"loadList3D":[]};	
		

		class matchInfoBoxUI extends View{
			constructor (){
				super();
				//this.matchRoomBox=null;
				//this.title=null;
				//this.roomText=null;
				//this.list=null;
				//this.countDownLabel=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(matchInfoBoxUI.uiView);
			}
		}

		ui.fight.matchInfoBoxUI=Laya.matchInfoBoxUI=matchInfoBoxUI;
		matchInfoBoxUI.uiView={"type":"View","props":{"width":272,"height":228},"compId":2,"child":[{"type":"Box","props":{"y":-1,"x":0,"width":272,"var":"matchRoomBox","height":228},"compId":3,"child":[{"type":"Image","props":{"y":11,"x":9,"skin":"ui/common_ex/img_bsc_di.png"},"compId":4},{"type":"Image","props":{"y":58,"x":61,"width":170,"skin":"ui/common_ex/tuceng.png","height":24,"sizeGrid":"10,0,10,0"},"compId":6},{"type":"Text","props":{"y":25,"x":71,"width":55,"var":"title","valign":"middle","text":"1万","strokeColor":"#973900","stroke":2,"height":23,"fontSize":23,"color":"#ffeb3b","bold":false,"align":"center","runtime":"laya.display.Text"},"compId":7},{"type":"Text","props":{"y":62,"x":24,"width":220,"var":"roomText","text":"创建者：金沙d罗曼蒂克","height":14,"fontSize":14,"color":"#ffffff","bold":false,"align":"center","runtime":"laya.display.Text"},"compId":8},{"type":"List","props":{"y":108,"x":33,"width":205,"var":"list","repeatY":4,"repeatX":1,"height":90},"compId":10,"child":[{"type":"Box","props":{"y":0,"x":0,"width":205,"renderType":"render","height":22},"compId":11,"child":[{"type":"Image","props":{"y":0,"x":0,"width":205,"skin":"ui/common_ex/img_js_di_03.png","name":"myselfImg","height":22},"compId":17},{"type":"Image","props":{"y":2,"x":1,"skin":"ui/fish/img_gj.png","scaleY":0.45,"scaleX":0.45,"name":"firstImg"},"compId":18},{"type":"Text","props":{"y":4,"x":17,"width":17,"text":"1","name":"rank","height":15,"fontSize":15,"color":"#ffffff","align":"center","runtime":"laya.display.Text"},"compId":12},{"type":"Text","props":{"y":5,"x":51,"width":89,"text":"hiask蒂萨","name":"name","height":15,"fontSize":15,"color":"#ffffff","align":"center","runtime":"laya.display.Text"},"compId":13},{"type":"Text","props":{"y":4,"x":131,"width":73,"text":"12345678","overflow":"hidden","name":"money","height":15,"fontSize":15,"color":"#ffffff","align":"right","runtime":"laya.display.Text"},"compId":14}]}]},{"type":"Text","props":{"y":206,"x":85.5,"width":53,"text":"倒计时","height":17,"fontSize":14,"color":"#54d2ff","bold":true,"runtime":"laya.display.Text"},"compId":19},{"type":"Text","props":{"y":206,"x":130,"width":45,"var":"countDownLabel","text":"03:00","height":15,"fontSize":15,"color":"#f0ff00","bold":false,"align":"center","runtime":"laya.display.Text"},"compId":15}]}],"loadList":["ui/common_ex/img_bsc_di.png","ui/common_ex/tuceng.png","ui/common_ex/img_js_di_03.png","ui/fish/img_gj.png"],"loadList3D":[]};	
		

		class AddFriendPage extends AddFriendPageUI{
			constructor (){
				super();
			}
			StartGames(parm=null){
				this.bmask.on(Event.CLICK,this,null);
				this.cancelBtn.on(Event.CLICK,this,this.onQuitBtn);
				this.confirmBtn.on(Event.CLICK,this,this.onConfirmBtn);
				this.initBox();
				this.screenResize();
				}initBox(){
				if (FriendM.instance.findFriendInfo.icon && String(FriendM.instance.findFriendInfo.icon).length > 0){
					this.icon.skin=FriendM.instance.findFriendInfo.icon+"";
					}else{
					this.icon.skin="ui/common/nan.png";
				}
				this.level.text="LV."+String(FriendM.instance.findFriendInfo.level);
				if (FriendM.instance.findFriendInfo.jjhId){
					this.idLabel.text="ID:"+String(FriendM.instance.findFriendInfo.jjhId);
					}else{
					this.idLabel.text="ID:"+"*******";
				}
				this.nameLabel.text=LoginInfoM.instance.filterName(GameTools.formatNickName(String(FriendM.instance.findFriendInfo.name)));
				}onConfirmBtn(){
				if (!FriendM.instance.findFriendInfo.robot){
					var msgStr;
					var nullReg=/^\s*$/;
					if (this.desInput.text.length <=0 || nullReg.test(this.desInput.text)){
						msgStr="加个好友一起捕鱼吧！";
						}else{
						msgStr=ShieldWordManager.instance.filterInfo(this.desInput.text);
						msgStr=LoginInfoM.instance.filterName(msgStr);
						this.desInput.text=msgStr;
					};
					var token=StartParam.instance.getParam("access_token");
					var idStr=String(FriendM.instance.findFriendInfo.id);
					ApiManager.instance.getAddFriend(token,idStr,msgStr,Handler.create(this,this.addFriendSuccess),Handler.create(this,this.addFriendError));
					}else{
					this.onQuitBtn();
					GameEventDispatch.instance.event("MsgTipContent","已发送");
				}
				}addFriendSuccess(data){
				this.onQuitBtn();
				if (data.code=="success"){
					GameEventDispatch.instance.event("MsgTipContent","已发送");
					}else{
					GameEventDispatch.instance.event("MsgTipContent",data.msg);
				}
				}addFriendError(data){
				}onQuitBtn(){
				this.desInput.text="";
				UiManager.instance.closePanel("AddFriend",true);
				}screenResize(){
				this.size(Laya.stage.width,Laya.stage.height);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.addFriend.AddFriendPage=Laya.AddFriendPage=AddFriendPage;	
		

		class matchResultBoxUI extends View{
			constructor (){
				super();
				//this.list=null;
				//this.againBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(matchResultBoxUI.uiView);
			}
		}

		ui.fight.matchResultBoxUI=Laya.matchResultBoxUI=matchResultBoxUI;
		matchResultBoxUI.uiView={"type":"View","props":{"width":1280,"height":720},"compId":2,"child":[{"type":"Image","props":{"width":1920,"skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":3},{"type":"Box","props":{"width":694,"height":323,"centerY":0,"centerX":0},"compId":5,"child":[{"type":"Image","props":{"y":-136,"x":-293,"skin":"ui/common_ex/img_js_di_01.png"},"compId":4},{"type":"Image","props":{"y":-157,"x":-63,"skin":"ui/fish/font_bsjs.png"},"compId":15},{"type":"Image","props":{"y":-8,"x":158,"skin":"ui/fish/font_nc.png"},"compId":16},{"type":"List","props":{"y":47,"x":-18,"width":774,"var":"list","repeatY":4,"repeatX":1,"height":253},"compId":9,"child":[{"type":"Box","props":{"y":0,"x":0,"width":774,"renderType":"render","height":61},"compId":10,"child":[{"type":"Image","props":{"y":0,"x":0,"width":774,"skin":"ui/common_ex/img_js_di_02.png"},"compId":18},{"type":"Image","props":{"y":-17,"skin":"ui/common_ex/img_hd.png","name":"myselfImg","centerX":0},"compId":19},{"type":"Image","props":{"y":12,"x":97,"skin":"ui/fish/img_gj.png","name":"firstImg"},"compId":20},{"type":"Label","props":{"y":22,"x":166,"width":141,"text":"hiask蒂萨","name":"name","height":25,"fontSize":25,"color":"#ffffff","align":"left"},"compId":11},{"type":"Label","props":{"y":22,"x":415,"width":220,"text":"+1412234","name":"num","height":25,"fontSize":28,"color":"#ffffff","bold":false,"align":"left"},"compId":12},{"type":"Image","props":{"y":12,"x":613,"width":52,"name":"activity","height":44},"compId":21,"child":[{"type":"FontClip","props":{"y":13.5,"x":56,"width":60,"skin":"ui/common_ex/shop_num.png","sheet":"x0123456789","scaleY":0.9,"scaleX":0.9,"name":"activity_num","align":"left"},"compId":22}]}]}]},{"type":"Button","props":{"y":373,"x":268,"width":195,"var":"againBtn","stateNum":2,"skin":"ui/common_ex/btn_green.png","labelStrokeColor":"#007507","labelStroke":2,"labelSize":28,"labelColors":"#ffffff","labelBold":true,"label":"再玩一场","height":71},"compId":13},{"type":"Sprite","props":{"y":-8,"x":394,"texture":"ui/fish/font_jsjb.png"},"compId":17}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/img_js_di_01.png","ui/fish/font_bsjs.png","ui/fish/font_nc.png","ui/common_ex/img_js_di_02.png","ui/common_ex/img_hd.png","ui/fish/img_gj.png","ui/common_ex/shop_num.png","ui/common_ex/btn_green.png","ui/fish/font_jsjb.png"],"loadList3D":[]};	
		

		class CiFuPage extends CiFuPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.lableNum.text=parm['num'];
				this.confirmBtn.on(Event.CLICK,this,this.clickConfirm);
				this.screenResize();
				this.bmask.on(Event.CLICK,this,this.clickConfirm);
				}clickConfirm(){
				UiManager.instance.closePanel("CiFu",true);
				}screenResize(){
				var contentWidth=600;
				var contentHeight=400;
				var contentStartX=340;
				var contentStartY=160;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.ciFu.CiFuPage=Laya.CiFuPage=CiFuPage;	
		

		class FriendPage extends FriendPageUI{
			constructor (){
				super();
				//this.isClickGiftArr=null;
				//this.sendInfo=null;
				//this.giftData=null;
				this.inputCount=1;
				this.chooseIndex=-1;
			}
			StartGames(parm=null){
				this.on(Event.MOUSE_DOWN,this,this.recoveryAllGiftBox);
				this.checkOnLineBox.selected=false;
				this.closeGiftBox();
				this.bmask.on(Event.CLICK,this,null);
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtn);
				this.friendBtn.on(Event.MOUSE_OUT,this,this.onMouseOut);
				this.friendBtn.on(Event.MOUSE_OVER,this,this.onMouseOver);
				this.friendBtn.on(Event.CLICK,this,this.onFriendBtn);
				this.friendBtn.on(Event.MOUSE_UP,this,this.onMouseOut);
				this.addFriendBtn.on(Event.CLICK,this,this.onAddFriendBtn);
				this.findBtn.on(Event.CLICK,this,this.onFindBtn);
				this.quit_gift_box.on(Event.CLICK,this,this.closeGiftBox);
				this.count_jia.on(Event.CLICK,this,this.countJia);
				this.count_jian.on(Event.CLICK,this,this.countJian);
				this.useBtn.on(Event.CLICK,this,this.onUseBtn);
				this.gift_confirm.on(Event.CLICK,this,this.onGiftConfirm);
				this.signatureBtn.on(Event.CLICK,this,this.openSignatureBox);
				this.codequiteBtn.on(Event.CLICK,this,this.closeSignatureBox);
				this.codeconfirmBtn.on(Event.CLICK,this,this.onSignatureBtn);
				this.grantBtn.on(Event.CLICK,this,this.onGrantBtn);
				this.allRejectBtn.on(Event.CLICK,this,this.checkFriendship,[2,1]);
				this.allAgreeBtn.on(Event.CLICK,this,this.checkFriendship,[1,1]);
				this.friendList.renderHandler=new Handler(this,this.renderFriendList);
				this.addFriendList.renderHandler=new Handler(this,this.renderAddFriendList);
				this.checkOnLineBox.on(Event.CLICK,this,this.onCheckOnLineBox);
				this.writegiftInput.on(Event.INPUT,this,this.onFocusChange);
				this.onFriendBtn();
				this.showFriendRedPoint();
				this.syncBankInfoEnd();
				GameTools.clipTxt(this.fontClip2,"取消","red");
				GameTools.clipTxt(this.fontClip1,"购买","green");
				this.screenResize();
				}onMouseOut(e){
				if (!this.friendBtn.selected){
					this.numPercent.strokeColor="#043e63";
				}
				}onMouseOver(e){
				if (!this.friendBtn.selected){
					this.numPercent.strokeColor="#653a00";
				}
				}onCheckOnLineBox(){
				this.refreshFriendList();
				}syncBankInfoEnd(){
				if (T360C.is360Game()){
					this.idLabel.text="我的ID:"+StartParam.instance.getParam("uid");
					this.copyBtn.offAll(Event.CLICK);
					if (WxC.isInMiniGame()){
						this.copyBtn.on(Event.CLICK,this,this.onBtnCopyClick);
					}
					else{
						this.copyBtn.on(Event.CLICK,this,this.onCopyUserId);
					}
					}else{
					if (StartParam.instance.getParam("jjhid")&& StartParam.instance.getParam("jjhid").length > 0){
						this.idLabel.text="我的ID:"+StartParam.instance.getParam("jjhid");
						this.copyBtn.offAll(Event.CLICK);
						if (WxC.isInMiniGame()){
							this.copyBtn.on(Event.CLICK,this,this.onBtnCopyClick);
						}
						else{
							this.copyBtn.on(Event.CLICK,this,this.onCopyUserId);
						}
						}else{
						this.copyBtn.visible=true;
						this.copyBtn.disabled=true;
						this.idLabel.text="绑定成功获取ID";
					}
				}
				}onCopyUserId(){
				GameTools.copyToClipboard(this.idLabel.text.slice(5));
				}onBtnCopyClick(event){
				WxC.wx_set_clipboard_data(this.idLabel.text.slice(5));
				}onFindBtn(){
				var idStr=this.findIdInput.text;
				var idReg=/^[1-9]\d*$/;
				if (idStr.length < 6 || idStr.length > 10 || !idReg.test(idStr)){
					GameEventDispatch.instance.event("MsgTipContent","请输入正确的ID");
					return
				}
				FriendM.instance.searchFriend(idStr);
				}onUseBtn(){
				this.closeGiftBox();
				}onGrantBtn(){
				UiManager.instance.loadView("MonthCard",{id:18},"SMALL_TO_BIG");
				this.closeGiftBox();
				}renderFriendList(cell,index){
				var config=cell.dataSource;
				var ele_bg=cell.getChildByName("bg");
				var ele_rankImg=cell.getChildByName("rankImg");
				var ele_rankLabel=cell.getChildByName("rankLabel");
				var ele_icon=cell.getChildByName("icon");
				var ele_name=cell.getChildByName("name");
				var ele_level=cell.getChildByName("level");
				var ele_onlineLabel=cell.getChildByName("onlineLabel");
				var ele_signature=cell.getChildByName("signature");
				var ele_deleteBtn=cell.getChildByName("deleteBtn");
				var ele_giftBtn=cell.getChildByName("giftBtn");
				var giftListBg=cell.getChildByName("giftListBg");
				var ele_giftList=cell.getChildByName("giftList");
				ele_rankImg.visible=false;
				ele_rankLabel.visible=false;
				giftListBg.visible=false;
				this.isClickGiftArr[index]=-1;
				ele_giftList.visible=false;
				if (index==0){
					ele_rankImg.skin="ui/friend/rank1.png";
					ele_rankImg.visible=true;
					}else if (index==1){
					ele_rankImg.skin="ui/friend/rank2.png";
					ele_rankImg.visible=true;
					}else if (index==2){
					ele_rankImg.skin="ui/friend/rank3.png";
					ele_rankImg.visible=true;
					}else{
					ele_rankLabel.text=String(index+1);
					ele_rankLabel.visible=true;
				}
				if (config.icon && String(config.icon).length > 0){
					ele_icon.skin=config.icon;
					}else{
					ele_icon.skin="ui/common/nan.png";
				}
				ele_name.text=LoginInfoM.instance.filterName(GameTools.formatNickName(config.name));
				ele_level.text="LV."+config.level;
				if (config.online){
					ele_onlineLabel.disabled=false;
					ele_onlineLabel.text="在线";
					}else{
					ele_onlineLabel.disabled=true;
					ele_onlineLabel.text="离线";
				}
				if (config.signature==""){
					ele_signature.text="欢迎来到集结号捕鱼";
					}else{
					ele_signature.text=config.signature;
				}
				ele_deleteBtn.offAll(Event.CLICK);
				ele_giftBtn.offAll(Event.CLICK);
				ele_deleteBtn.on(Event.CLICK,this,this.requestDeleteFriend,[String(config.id)]);
				ele_giftBtn.on(Event.CLICK,this,this.onRefreshGiftBox,[index]);
				ele_giftList.renderHandler=Handler.create(this,this.renderGiftList,null,false);
				}onRefreshGiftBox(index){
				var cell;
				var giftListBg;
				var ele_giftList;
				if (this.chooseIndex >=0 && this.chooseIndex==index){
					cell=this.friendList.getCell(index);
					giftListBg=cell.getChildByName("giftListBg");
					ele_giftList=cell.getChildByName("giftList");
					giftListBg.visible=false;
					ele_giftList.visible=false;
					ele_giftList.array=FightM.instance.getyuleiItems();
					this.isClickGiftArr[index]=index;
					this.chooseIndex=-1;
					return
				}
				this.recoveryGiftBox();
				var month_card=RoleInfoM.instance.getMonthCard();
				var have_month_card=false;
				for (var key in month_card){
					if (!month_card[key].is_expired){
						have_month_card=true;
						break ;
					}
				}
				if (!have_month_card){
					if (WxC.isInMiniGame()&& Browser.onIOS){
						GameEventDispatch.instance.event("MsgTipContent","激活月卡，开放赠送功能");
						}else{
						this.tip_box.scaleX=0;
						this.tip_box.scaleY=0;
						Tween.to(this.tip_box,{scaleX:1.05,scaleY:1.05},300,null,Handler.create(this,this.showComplete));
						this.tip_box.visible=true;
						this.giftbox1.visible=true;
						this.giftbox2.visible=false;
						this.quit_gift_box.visible=false;
					}
					}else{
					cell=this.friendList.getCell(index);
					(cell.getChildByName("giftListBg")).visible=true;
					ele_giftList=(cell.getChildByName("giftList"));
					ele_giftList.visible=true;
					ele_giftList.array=FightM.instance.getyuleiItems();
					this.isClickGiftArr[index]=index;
					this.chooseIndex=index;
				}
				}recoveryAllGiftBox(event){
				if (event.target && event.target.name && (event.target.name=="giftList"
					|| event.target.name=="giftListBg" || event.target.name=="giftBtn"
				|| (event.target.parent && event.target.parent.parent &&
				event.target.parent.parent.name=="giftList"))){
					return
				}
				if (this.tip_box.visible){
					return
				}
				this.recoveryGiftBox();
				}recoveryGiftBox(){
				if (this.box1.visible==true && this.chooseIndex >=0){
					var cell;
					var giftListBg;
					var ele_giftList;
					for (var i=0;i < this.friendList.array.length;i++){
						cell=this.friendList.getCell(i);
						if (cell){
							giftListBg=cell.getChildByName("giftListBg");
							ele_giftList=cell.getChildByName("giftList");
							giftListBg.visible=false;
							ele_giftList.visible=false;
						}
						this.isClickGiftArr[i]=-1;
						this.chooseIndex=-1;
					}
				}
				}requestDeleteFriend(id){
				var info=new QuitTipInfo();
				info.state=1;
				info.content="是否确认删除互相的好友关系？";
				info.confirmCallback=Handler.create(this,this.deleteFriend,[id]);
				info.autoCloseTime=10;
				GameEventDispatch.instance.event("QuitTip",info);
				}deleteFriend(id){
				var token=StartParam.instance.getParam("access_token");
				ApiManager.instance.deleteFriend(token,id,Handler.create(this,this.deleteFriendSuccess),Handler.create(this,this.deleteFriendError));
				}deleteFriendSuccess(data){
				if (data.code=="success"){
					GameEventDispatch.instance.event("MsgTipContent","删除成功");
					WebSocketManager.instance.send(70003,{});
					}else{
					GameEventDispatch.instance.event("MsgTipContent",data.msg);
				}
				}deleteFriendError(data){
				}renderGiftList(cell,index){
				var config=cell.dataSource;
				var ele_giftIcon=cell.getChildByName("giftIcon");
				var ele_giftLabel=cell.getChildByName("giftLabel");
				ele_giftIcon.skin=config.icon;
				ele_giftLabel.text=SkillM.instance.skillCount(5+index,false)+"";
				cell.offAll(Event.CLICK);
				cell.on(Event.CLICK,this,this.sendGift,[config,SkillM.instance.skillCount(5+index,false)]);
				}sendGift(config,good_count){
				var mini_battery=ConfigManager.getConfValue("cfg_global",1,"min_battery");
				if (RoleInfoM.instance.getBattery()< mini_battery){
					GameEventDispatch.instance.event("MsgTipContent",cfg_battery.instance(mini_battery).comsume+"倍炮台，开放赠送功能");
					return;
				}
				if (good_count==0){
					GameEventDispatch.instance.event("MsgTipContent","道具不足");
					}else{
					this.giftData=config;
					this.tip_box.scaleX=0;
					this.tip_box.scaleY=0;
					Tween.to(this.tip_box,{scaleX:1.05,scaleY:1.05},300,null,Handler.create(this,this.showComplete));
					this.sendInfo=this.friendList.array [this.chooseIndex];
					this.inputCount=1;
					this.item_count.value="1";
					this.tip_box.visible=true;
					this.giftbox1.visible=false;
					this.giftbox2.visible=true;
					this.quit_gift_box.visible=true;
					this.username.text=this.sendInfo.name+"";
					if (this.sendInfo.icon && String(this.sendInfo.icon).length > 0){
						this.userimg.skin=this.sendInfo.icon;
						}else{
						this.userimg.skin="ui/common/nan.png";
					}
					this.gift_icon.skin=this.giftData.icon;
					this.gift_name.text=this.giftData.name;
				}
				}countJia(){
				this.inputCount=this.inputCount+1;
				this.item_count.value=this.inputCount+"";
				}countJian(){
				if (this.inputCount > 1){
					this.inputCount=this.inputCount-1;
				}
				this.item_count.value=this.inputCount+"";
				}closeGiftBox(){
				this.tip_box.visible=false;
				this.quit_gift_box.visible=false;
				}onGiftConfirm(){
				var item_count=this.inputCount;
				var info=new QuitTipInfo();
				info.state=1;
				info.content="<span>确认赠送</span> <span style='color:red'>&nbsp;"+this.giftData.name+" x "+item_count+"&nbsp;</span> <span>给 </span> <span  style='color:red'>&nbsp;"+GameTools.nameSkip(this.username.text)+"&nbsp;</span><span>？</span>";
				info.confirmCallback=Handler.create(this,this.gift,[item_count]);
				info.autoCloseTime=10;
				GameEventDispatch.instance.event("QuitTip",info);
				}gift(){
				var item_count=this.inputCount;
				var data={item_id:this.giftData.id,item_count:item_count,user_id:parseInt(this.sendInfo.id)};
				WebSocketManager.instance.send(14017,data);
				this.recoveryGiftBox();
				this.closeGiftBox();
				}showComplete(){
				Tween.to(this.tip_box,{scaleX:1,scaleY:1},250);
				}renderAddFriendList(cell,index){
				var config=cell.dataSource;
				var ele_icon=cell.getChildByName("icon");
				var ele_name=cell.getChildByName("name");
				var ele_level=cell.getChildByName("level");
				var ele_des=cell.getChildByName("des");
				var ele_shieldBtn=cell.getChildByName("shieldBtn");
				var ele_rejectBtn=cell.getChildByName("rejectBtn");
				var ele_agreeBtn=cell.getChildByName("agreeBtn");
				if (config.avatar && String(config.avatar).length > 0){
					ele_icon.skin=config.avatar;
					}else{
					ele_icon.skin="ui/common/nan.png";
				}
				ele_name.text=LoginInfoM.instance.filterName(GameTools.formatNickName(config.nickname));
				ele_level.text="LV."+config.level;
				ele_des.text=config.to_msg;
				ele_shieldBtn.offAll(Event.CLICK);
				ele_rejectBtn.offAll(Event.CLICK);
				ele_agreeBtn.offAll(Event.CLICK);
				ele_shieldBtn.on(Event.CLICK,this,this.checkFriendship,[3,0,config['user_id']]);
				ele_rejectBtn.on(Event.CLICK,this,this.checkFriendship,[2,0,config['user_id']]);
				ele_agreeBtn.on(Event.CLICK,this,this.checkFriendship,[1,0,config['user_id']]);
				}checkFriendship(status,isAll,id=null){
				if (status==1){
					if (FriendM.instance.friendArr.length >=FriendM.instance.friendLimit){
						GameEventDispatch.instance.event("MsgTipContent","好友过多，请删除好友后再试");
						return
					}
				};
				var token=StartParam.instance.getParam("access_token");
				ApiManager.instance.updateFriendRelation(token,status,isAll,id,Handler.create(this,this.updateFriendshipSuccess,[status]),Handler.create(this,this.updateFriendshipError));
				}updateFriendshipSuccess(status,data){
				if (data.code=="success"){
					GameEventDispatch.instance.event("MsgTipContent","已完成");
					WebSocketManager.instance.send(70004,{});
					if (status==1){
						WebSocketManager.instance.send(70003,{});
					}
					}else{
					GameEventDispatch.instance.event("MsgTipContent",data.msg);
				}
				}updateFriendshipError(data){
				}closeSignatureBox(){
				this.writegiftcode.visible=false;
				this.codequiteBtn.visible=false;
				}openSignatureBox(){
				if (FriendM.instance.signatureStr==""){
					this.writegiftInput.text="";
					}else{
					this.writegiftInput.text=FriendM.instance.signatureStr;
				}
				this.codeconfirmBtn.disabled=true;
				this.writegiftcode.visible=true;
				this.codequiteBtn.visible=true;
				}onFocusChange(e){
				if (this.writegiftInput.text==FriendM.instance.signatureStr){
					this.codeconfirmBtn.disabled=true;
					}else{
					this.codeconfirmBtn.disabled=false;
				}
				}onSignatureBtn(){
				var nullReg=/^\s*$/;
				var str=this.writegiftInput.text;
				if (nullReg.test(str)){
					str=null;
					}else{
					str=ShieldWordManager.instance.filterInfo(this.writegiftInput.text);
					str=LoginInfoM.instance.filterName(str);
					this.writegiftInput.text=str;
				};
				var token=StartParam.instance.getParam("access_token");
				ApiManager.instance.updateRemark(token,str,Handler.create(this,this.updateRemarkSuccess),Handler.create(this,this.updateRemarkError));
				}updateRemarkSuccess(data){
				if (data.code=="success"){
					FriendM.instance.signatureStr=data.data.current_remark;
					this.signatureInput.text=FriendM.instance.signatureStr;
					this.closeSignatureBox();
					GameEventDispatch.instance.event("MsgTipContent","修改完成");
					}else{
					GameEventDispatch.instance.event("MsgTipContent",data.msg);
				}
				}updateRemarkError(data){
				}onFriendBtn(){
				this.bgImg.height=381;
				this.bgImg.y=213;
				this.friendBtn.selected=true;
				this.addFriendBtn.selected=false;
				this.box1.visible=true;
				this.box2.visible=false;
				this.numPercent.strokeColor="#653a00";
				this.refreshFriendList();
				}refreshFriendList(){
				this.noFriendBox.visible=false;
				this.friendList.visible=false;
				this.noFriendLabel.visible=false;
				this.noOnLineLabel.visible=false;
				this.isClickGiftArr=[];
				var arr=[];
				if (this.checkOnLineBox.selected){
					arr=FriendM.instance.onlineFriendArr;
					}else{
					arr=FriendM.instance.friendArr;
				}
				this.friendList.array=arr;
				this.friendList.refresh();
				if (!arr || !arr.length || arr.length <=0){
					if (this.checkOnLineBox.selected==true){
						this.noOnLineLabel.visible=true;
						}else{
						this.noFriendLabel.visible=true;
					}
					this.noFriendBox.visible=true;
					}else{
					this.friendList.visible=true;
				}
				if (FriendM.instance.signatureStr==""){
					this.signatureInput.text="留下你的个性签名，让好友们更好的认识你吧";
					}else{
					this.signatureInput.text=FriendM.instance.signatureStr;
				}
				this.numPercent.text="("+FriendM.instance.friendArr.length+"/"+FriendM.instance.friendLimit+")";
				}onAddFriendBtn(){
				this.bgImg.height=428;
				this.bgImg.y=166;
				this.findIdInput.text="";
				this.friendBtn.selected=false;
				this.addFriendBtn.selected=true;
				this.box1.visible=false;
				this.box2.visible=true;
				this.numPercent.strokeColor="#043e63";
				this.refreshApplyFriendList();
				}refreshApplyFriendList(){
				this.nothingBox.visible=false;
				this.addFriendList.visible=false;
				this.allRejectBtn.visible=false;
				this.allAgreeBtn.visible=false;
				if (!FriendM.instance.noApplyFriendList()){
					this.nothingBox.visible=true;
					}else{
					this.addFriendList.array=FriendM.instance.applyFriendArr;
					this.addFriendList.visible=true;
					this.allRejectBtn.visible=true;
					this.allAgreeBtn.visible=true;
				}
				}showFriendRedPoint(){
				var vertical_h=10;
				var horizontal_percent=0.75;
				if (FriendM.instance.noApplyFriendList()){
					RedpointC.instance.removeRedPoint(this.addFriendBtn);
					RedpointC.instance.addRedPointToIcon(this.addFriendBtn,horizontal_percent,vertical_h);
					}else{
					RedpointC.instance.removeRedPoint(this.addFriendBtn);
				}
				}onQuitBtn(){
				UiManager.instance.closePanel("Friend",true);
				}screenResize(){
				this.size(Laya.stage.width,Laya.stage.height);
				}register(){
				GameEventDispatch.instance.on("refreshFriendList",this,this.refreshFriendList);
				GameEventDispatch.instance.on("refreshApplyFriendList",this,this.refreshApplyFriendList);
				GameEventDispatch.instance.on("refreshApplyFriendList",this,this.showFriendRedPoint);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				GameEventDispatch.instance.off("refreshFriendList",this,this.refreshFriendList);
				GameEventDispatch.instance.off("refreshApplyFriendList",this,this.refreshApplyFriendList);
				GameEventDispatch.instance.off("refreshApplyFriendList",this,this.showFriendRedPoint);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.friend.FriendPage=Laya.FriendPage=FriendPage;	
		view.item={};

		class FesDailyGiftItem extends FesDailyGiftItemUI{
			constructor (){
				super();
			}
			init(itemImg,itemName){
				this.itemImg.skin=itemImg;
				this.itemName.text=itemName;
			}
		}

		view.item.FesDailyGiftItem=Laya.FesDailyGiftItem=FesDailyGiftItem;	
		

		class PublicAccountPage extends PublicAccountPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.goToBtn.visible=false;
				this.WXBro.visible=false;
				this.noWXBro.visible=false;
				this.bmask.on(Event.CLICK,this,null);
				this.quitBtn.on(Event.CLICK,this,this.clickConfirm);
				this.goToBtn.on(Event.CLICK,this,this.goToPublicAccount);
				this.initBox();
				this.screenResize();
				}initBox(){
				if (Browser.onWeiXin && !WxC.isInMiniGame()){
					this.goToBtn.visible=true;
					this.WXBro.visible=true;
					}else{
					this.noWXBro.visible=true;
				}
				}goToPublicAccount(){
				Browser.window.open("http://mp.weixin.qq.com/mp/getmasssendmsg?__biz=MzA4NjAyNjQ3NQ==#wechat_redirect");
				}clickConfirm(){
				UiManager.instance.closePanel("PublicAccount",true);
				}screenResize(){
				var contentWidth=600;
				var contentHeight=400;
				var contentStartX=340;
				var contentStartY=160;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.publicAccount.PublicAccountPage=Laya.PublicAccountPage=PublicAccountPage;	
		

		class HSliderRe extends HSlider{
			constructor (skin=undefined){
				super(skin);
				this._bar.anchorX=0;
			}
			onBarMouseDown(e){
				this._globalSacle || (this._globalSacle=new Point());
				this._globalSacle.setTo(this.globalScaleX || 0.01,this.globalScaleY || 0.01);
				this._maxMove=this.isVertical ? (this.height-this._bar.height):(this.width-(this._bar.width / 2));
				this._tx=Laya.stage.mouseX;
				this._ty=Laya.stage.mouseY;
				Laya.stage.on(Event.MOUSE_MOVE,this,this._$6_mouseMove);
				Laya.stage.once(Event.MOUSE_UP,this,this._$6_mouseUp);
				Laya.stage.once(Event.MOUSE_OUT,this,this._$6_mouseUp);
				this.showValueText();
				}_$6_mouseMove(){
				var oldValue=this._value;
				if (this.isVertical){
					this._bar.y+=(Laya.stage.mouseY-this._ty)/ this._globalSacle.y;
					if (this._bar._y > this._maxMove)
						this._bar.y=this._maxMove;
					else if (this._bar._y < 0)
					this._bar.y=0;
					this._value=this._bar._y / this._maxMove *(this._max-this._min)+this._min;
					if (this._progress)
						this._progress.height=this._bar._y+0.5 *this._bar.height;
				}
				else{
					this._bar.x+=(this.stage.mouseX-this._tx)/ this._globalSacle.x;
					if (this._bar._x > this._maxMove)
						this._bar.x=this._maxMove;
					else if (this._bar._x < (-this._bar.width / 2))
					this._bar.x=-(this._bar.width / 2);
					this._value=(this._bar._x+this._bar.width / 2)/ (this._maxMove+this._bar.width / 2)*(this._max-this._min)+this._min;
					if (this._progress)
						this._progress.width=this._bar._x+0.5 *this._bar.width;
				}
				this._tx=this.stage.mouseX;
				this._ty=Laya.stage.mouseY;
				if (this._tick !=0){
					var pow=Math.pow(10,(this._tick+"").length-1);
					this._value=Math.round(Math.round(this._value / this._tick)*this._tick *pow)/ pow;
				}
				if (this._value !=oldValue){
					this.sendChangeEvent();
				}
				this.showValueText();
				}_$6_mouseUp(){
				Laya.stage.off(Event.MOUSE_MOVE,this,this._$6_mouseMove);
				Laya.stage.off(Event.MOUSE_UP,this,this._$6_mouseUp);
				Laya.stage.off(Event.MOUSE_OUT,this,this._$6_mouseUp);
				this.sendChangeEvent(Event.CHANGED);
				this.hideValueText();
				}changeValue(){
				if (this.tick !=0){
					var pow=Math.pow(10,(this._tick+"").length-1);
					this._value=Math.round(Math.round(this._value / this._tick)*this._tick *pow)/ pow;
				}
				this._value=this._value > this._max ? this._max :this._value < this._min ? this._min :this._value;
				var num=this._max-this._min;
				if (num===0)
					num=1;
				if (this.isVertical){
					this._bar.y=(this._value-this._min)/ num *(this.height-this._bar.height);
					if (this._progress)
						this._progress.height=this._bar._y+0.5 *this._bar.height;
				}
				else{
					this._bar.x=(this._value-this._min)/ num *(this.width)-this._bar.width / 2;
					if (this._progress)
						this._progress.width=this._bar._x+0.5 *this._bar.width;
				}
			}
		}

		engine.ui.component.HSliderRe=Laya.HSliderRe=HSliderRe;	
		

		class TextInputRe extends TextInput{
			constructor(){
				super();
			}
			static initRewrite (){
				TextInput.prototype._onBlur=function (){
					if(!Browser.onMiniGame){
						Browser.window.top.postMessage("hide_keyboard","*");
					}
					this.event(Event.BLUR,this);
				};
			}
		}

		engine.ui.component.TextInputRe=Laya.TextInputRe=TextInputRe;	
		

		class BrokePageUI extends Dialog{
			constructor (){
				super();
				//this.bmask=null;
				//this.mainContent=null;
				//this.confirmBtn=null;
				//this.quitBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(BrokePageUI.uiView);
			}
		}

		ui.abbey.BrokePageUI=Laya.BrokePageUI=BrokePageUI;
		BrokePageUI.uiView={"type":"Dialog","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-240,"x":-320,"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":47},{"type":"Image","props":{"y":160,"x":340,"width":600,"skin":"ui/common_ex/bg_index3.png","height":400,"sizeGrid":"50,50,50,50"},"compId":30},{"type":"Image","props":{"y":160,"x":340,"width":600,"skin":"ui/common_ex/head_2.png","height":72,"sizeGrid":"0,180,0,180"},"compId":31},{"type":"Label","props":{"y":310,"x":640,"width":500,"var":"mainContent","text":"确定离开游戏吗","height":30,"fontSize":22,"color":"#136673","bold":true,"anchorX":0.5,"align":"center"},"compId":34},{"type":"Box","props":{"y":449,"x":640,"var":"confirmBtn","anchorY":0.5,"anchorX":0.5},"compId":37,"child":[{"type":"Button","props":{"stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":43},{"type":"Image","props":{"skin":"ui/common_ex/confirm.png","centerY":0.5,"centerX":0.5},"compId":44}]},{"type":"Image","props":{"y":68,"x":670,"skin":"ui/common_ex/title_border.png"},"compId":39},{"type":"Image","props":{"y":68,"x":606,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":40},{"type":"Image","props":{"y":170,"x":640,"width":134,"skin":"ui/common/title_prompt.png","height":68,"anchorY":0.5,"anchorX":0.5},"compId":32},{"type":"Button","props":{"y":449,"x":640,"visible":false,"var":"quitBtn","stateNum":2,"skin":"ui/common_ex/btn_blue.png","anchorY":0.5,"anchorX":0.5},"compId":48,"child":[{"type":"Label","props":{"y":13,"x":55,"text":"退出","strokeColor":"#056da3","stroke":3,"fontSize":20,"color":"#ffffff","bold":true},"compId":52}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/common_ex/btn_green.png","ui/common_ex/confirm.png","ui/common_ex/title_border.png","ui/common/title_prompt.png","ui/common_ex/btn_blue.png"],"loadList3D":[]};	
		

		class OnLoginUI extends Dialog{
			constructor (){
				super();
				//this.message=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(OnLoginUI.uiView);
			}
		}

		ui.abbey.OnLoginUI=Laya.OnLoginUI=OnLoginUI;
		OnLoginUI.uiView={"type":"Dialog","props":{"width":400,"height":200},"compId":1,"child":[{"type":"Image","props":{"y":0,"x":0,"width":400,"skin":"ui/login/bg.png","height":200},"compId":2},{"type":"Label","props":{"y":78,"x":25,"width":342,"var":"message","text":"正在登录。。。","styleSkin":"login/label.png","height":51,"fontSize":40,"color":"#e38281","bold":true},"compId":3}],"loadList":["ui/login/bg.png","login/label.png"],"loadList3D":[]};	
		

		class QuitTpUI extends Dialog{
			constructor (){
				super();
				//this.bmask=null;
				//this.closeBtn=null;
				//this.tip_box=null;
				//this.timeContent=null;
				//this.cBtn=null;
				//this.clipMIddle=null;
				//this.cancelBtn=null;
				//this.clipCancel=null;
				//this.confirmBtn=null;
				//this.clipConfirm=null;
				//this.mainContent=null;
				//this.rankCheckBox=null;
				//this.subscibeBox=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(QuitTpUI.uiView);
			}
		}

		ui.abbey.QuitTpUI=Laya.QuitTpUI=QuitTpUI;
		QuitTpUI.uiView={"type":"Dialog","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"centerY":0,"centerX":0,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":37},{"type":"Button","props":{"y":0,"x":0,"var":"closeBtn","stateNum":1,"skin":"ui/common_ex/quit.png"},"compId":27},{"type":"Box","props":{"width":600,"var":"tip_box","height":548,"centerY":0,"centerX":0},"compId":43,"child":[{"type":"Image","props":{"y":100,"width":600,"skin":"ui/common_ex/bg_index3.png","height":400,"sizeGrid":"50,50,50,50"},"compId":19},{"type":"Image","props":{"y":95,"width":600,"skin":"ui/common_ex/head_2.png","height":73,"sizeGrid":"0,180,0,180"},"compId":25},{"type":"Label","props":{"y":215,"x":300,"width":520,"visible":false,"text":"确定离开游戏吗","leading":3,"height":35,"fontSize":22,"color":"#136673","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":7},{"type":"Label","props":{"y":305,"x":300,"var":"timeContent","text":"（8秒后自动关闭）","strokeColor":"#953800","stroke":3,"fontSize":26,"color":"#ffffff","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":8},{"type":"Box","props":{"y":360,"x":226,"var":"cBtn"},"compId":16,"child":[{"type":"Button","props":{"stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":29},{"type":"FontClip","props":{"y":6,"x":1,"width":246,"var":"clipMIddle","value":"观看广告","spaceX":-5,"skin":"font/word_green.png","sheet":"存入取消查看确定装备邀请 一键升级返回大厅反馈分享 礼包码炫耀下领奖励提交开 启使用完成布置规则询赠送 购买个","scaleY":0.6,"scaleX":0.6,"height":49,"align":"center"},"compId":40}]},{"type":"Box","props":{"y":360,"x":106,"width":150,"var":"cancelBtn","height":46},"compId":9,"child":[{"type":"Button","props":{"stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":33},{"type":"FontClip","props":{"y":6,"x":1,"width":246,"var":"clipCancel","value":"观看广告","spaceX":-5,"skin":"font/word_green.png","sheet":"存入取消查看确定装备邀请 一键升级返回大厅反馈分享 礼包码炫耀下领奖励提交开 启使用完成布置规则询赠送 购买个","scaleY":0.6,"scaleX":0.6,"height":49,"align":"center"},"compId":39}]},{"type":"Box","props":{"y":360,"x":346,"width":150,"var":"confirmBtn","height":46},"compId":10,"child":[{"type":"Button","props":{"width":150,"stateNum":2,"skin":"ui/common_ex/btn_yellow.png","height":46},"compId":31},{"type":"FontClip","props":{"y":6,"x":1,"width":246,"var":"clipConfirm","value":"立即购买","spaceX":-5,"skin":"font/word_red.png","sheet":"取出立即购买获得消确定继 续搜索同意拒绝复制升级解 锁游戏领前往充放置全部加 入房间重抽报名免费","scaleY":0.6,"scaleX":0.6,"height":49,"align":"center"},"compId":42}]},{"type":"Image","props":{"x":332,"skin":"ui/common_ex/title_border.png"},"compId":35},{"type":"Image","props":{"x":265,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":36},{"type":"Image","props":{"y":72,"x":233,"width":134,"skin":"ui/common/title_prompt.png","height":68},"compId":26},{"type":"HTMLDivElement","props":{"y":195,"x":55,"width":491,"var":"mainContent","height":56,"runtime":"laya.html.dom.HTMLDivElement"},"compId":38},{"type":"CheckBox","props":{"y":426,"width":124,"visible":false,"var":"rankCheckBox","toggle":true,"stateNum":3,"skin":"ui/common_ex/checkbox.png","selected":false,"scaleY":1.3,"scaleX":1.3,"labelStrokeColor":"#818e93","labelSize":15,"labelColors":"#818e93","labelBold":true,"label":"   今日不再弹出","height":17,"centerX":0},"compId":45},{"type":"Box","props":{"y":188,"x":58,"width":484,"visible":false,"var":"subscibeBox","height":68},"compId":48,"child":[{"type":"Label","props":{"y":0,"x":12.48828125,"width":471,"text":"订阅后会收到排行榜的发奖信息。订阅如果选择\\n                                        将不会再收到订阅信息","leading":10,"height":76,"fontSize":22,"color":"#136673","bold":true},"compId":46},{"type":"Image","props":{"y":26,"x":0,"skin":"ui/common/dingyuetips.png"},"compId":47}]}]}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/quit.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/common_ex/btn_green.png","font/word_green.png","ui/common_ex/btn_yellow.png","font/word_red.png","ui/common_ex/title_border.png","ui/common/title_prompt.png","ui/common_ex/checkbox.png","ui/common/dingyuetips.png"],"loadList3D":[]};	
		

		class SgBrokePageUI extends Dialog{
			constructor (){
				super();
				//this.bmask=null;
				//this.mainContent=null;
				//this.confirmBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(SgBrokePageUI.uiView);
			}
		}

		ui.abbey.SgBrokePageUI=Laya.SgBrokePageUI=SgBrokePageUI;
		SgBrokePageUI.uiView={"type":"Dialog","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-240,"x":-320,"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":47},{"type":"Image","props":{"y":360,"x":640,"width":600,"skin":"ui/common_ex/bg_index3.png","height":400,"anchorY":0.5,"anchorX":0.5,"sizeGrid":"50,50,50,50"},"compId":30},{"type":"Image","props":{"y":160,"x":340,"width":600,"skin":"ui/common_ex/head_2.png","height":72,"sizeGrid":"0,180,0,180"},"compId":31},{"type":"Label","props":{"y":311,"x":391,"width":495,"var":"mainContent","text":"确定离开游戏吗","height":24,"fontSize":22,"color":"#136673","bold":true,"align":"center"},"compId":34},{"type":"Box","props":{"y":449,"x":640,"var":"confirmBtn","anchorY":0.5,"anchorX":0.5},"compId":37,"child":[{"type":"Button","props":{"stateNum":2,"skin":"ui/common_ex/btn_green.png"},"compId":43},{"type":"Image","props":{"skin":"ui/common_ex/confirm.png","centerY":0.5,"centerX":0.5},"compId":44}]},{"type":"Image","props":{"y":68,"x":670,"skin":"ui/common_ex/title_border.png"},"compId":39},{"type":"Image","props":{"y":68,"x":606,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":40},{"type":"Image","props":{"y":170,"x":640,"skin":"ui/common/title_prompt.png","anchorY":0.5,"anchorX":0.5},"compId":32}],"loadList":["ui/common_ex/jl_bg.png","ui/common_ex/bg_index3.png","ui/common_ex/head_2.png","ui/common_ex/btn_green.png","ui/common_ex/confirm.png","ui/common_ex/title_border.png","ui/common/title_prompt.png"],"loadList3D":[]};	
		

		class UserBanUI extends Dialog{
			constructor (){
				super();
				//this.bmask=null;
				//this.box=null;
				//this.telLable=null;
				//this.exitBtn=null;
			}
			createChildren(){
				super.createChildren();
				this.createView(UserBanUI.uiView);
			}
		}

		ui.abbey.UserBanUI=Laya.UserBanUI=UserBanUI;
		UserBanUI.uiView={"type":"Dialog","props":{"width":1280,"height":720},"compId":1,"child":[{"type":"Image","props":{"y":-240,"x":-320,"width":1920,"var":"bmask","skin":"ui/common_ex/jl_bg.png","height":1200,"alpha":0.6,"sizeGrid":"22,22,22,22"},"compId":37},{"type":"Box","props":{"y":359,"x":640,"width":604,"var":"box","height":417,"anchorY":0.5,"anchorX":0.5},"compId":40,"child":[{"type":"Image","props":{"y":29,"width":600,"skin":"ui/load/bg_index3.png","height":400,"sizeGrid":"50,50,50,50"},"compId":19},{"type":"Image","props":{"y":24,"width":600,"skin":"ui/load/head_2.png","height":73,"sizeGrid":"0,200,0,200"},"compId":25},{"type":"Label","props":{"y":159,"x":300,"width":520,"visible":true,"text":"您的账号被限制登入，请联系客服中心处理","leading":3,"height":35,"fontSize":22,"color":"#136673","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":7},{"type":"Label","props":{"y":215,"x":300,"width":520,"visible":true,"var":"telLable","text":"客服电话：0579-82917777","leading":3,"height":35,"fontSize":22,"color":"#136673","bold":true,"anchorY":0.5,"anchorX":0.5,"align":"center"},"compId":39},{"type":"Box","props":{"y":289,"x":226,"var":"exitBtn"},"compId":16,"child":[{"type":"Button","props":{"stateNum":2,"skin":"ui/load/btn_green.png"},"compId":29},{"type":"Image","props":{"skin":"ui/load/confirm.png","centerY":0,"centerX":0},"compId":30}]},{"type":"Image","props":{"y":-71,"x":332,"skin":"ui/common_ex/title_border.png"},"compId":35},{"type":"Image","props":{"y":-71,"x":265,"skin":"ui/common_ex/title_border.png","scaleX":-1},"compId":36},{"type":"Image","props":{"y":1,"x":233,"width":134,"skin":"ui/load/title_prompt.png","height":68},"compId":26}]}],"loadList":["ui/common_ex/jl_bg.png","ui/load/bg_index3.png","ui/load/head_2.png","ui/load/btn_green.png","ui/load/confirm.png","ui/common_ex/title_border.png","ui/load/title_prompt.png"],"loadList3D":[]};	
		

		class BankPage extends BankPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				//this.cursor=null;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.quitBtn.on(Event.CLICK,this,this.onClose);
				this.depositBtn.on(Event.CLICK,this,this.onDeposit);
				this.takeBtn.on(Event.CLICK,this,this.onTake);
				this.takeTxt.on(Event.CHANGE,this,this.onTakeChange);
				this.infoBtn.on(Event.CLICK,this,this.onInfoBtn);
				if (ENV.openQuickRegister && RoleInfoM.instance.isQuickRegister==1){
					this.infoBtn.visible=true;
					}else{
					this.infoBtn.visible=false;
				}
				this.clearInput();
				this.screenResize();
				this.initCoin();
				this.initBox();
				this.clearAllTimer();
				}onInfoBtn(){
				UiManager.instance.loadView("QuickRegister");
				}clearAllTimer(){
				Laya.timer.clear(this,this.synCoin);
				}addTimer(){
				Laya.timer.loop(10000,this,this.synCoin);
				}synCoin(){
				WebSocketManager.instance.send(33012,{});
				}loopCursor(){
				if (this.cursor){
					this.cursor.visible=!this.cursor.visible;
				}
				}initBox(){
				if (RoleInfoM.instance.is_bind_tel==1){
					this.bank_box.visible=true;
					this.setBindTel();
					this.addTimer();
					this.syncBankCoin();
				}
				}onTakeChange(e){
				if (parseInt(this.takeTxt.text)> RoleInfoM.instance.bank_gold){
					this.takeTxt.text=RoleInfoM.instance.bank_gold+"";
				}
				}onDeposit(){
				if (!this.depositTxt.text){
					GameEventDispatch.instance.event("MsgTipContent","请输入金额");
					}else if (parseInt(this.depositTxt.text)< 0){
					GameEventDispatch.instance.event("MsgTipContent","请输入正确的金额");
					}else if (parseInt(this.depositTxt.text)< 50000){
					GameEventDispatch.instance.event("MsgTipContent","每次最少存入5万金币");
					}else if (parseInt(this.depositTxt.text)> 50000000){
					GameEventDispatch.instance.event("MsgTipContent","每次最多存入5000万金币");
					}else if (parseInt(this.depositTxt.text)> RoleInfoM.instance.getCoin()){
					GameEventDispatch.instance.event("MsgTipContent","存入金币数量已超出携带金币数量");
					}else{
					var gold=parseInt(this.depositTxt.text);
					WebSocketManager.instance.send(33002,{gold:gold});
				}
				}onTake(){
				if (!this.takeTxt.text){
					GameEventDispatch.instance.event("MsgTipContent","请输入金额");
					}else if (!this.bankpassword.text){
					GameEventDispatch.instance.event("MsgTipContent","请输入密码");
					}else if (parseInt(this.takeTxt.text)< 0){
					GameEventDispatch.instance.event("MsgTipContent","请输入正确的金额");
					}else if (parseInt(this.takeTxt.text)< 5000){
					GameEventDispatch.instance.event("MsgTipContent","每次最少取出5万金币");
					}else if (parseInt(this.takeTxt.text)> 50000000){
					GameEventDispatch.instance.event("MsgTipContent","每次最多取出5000万金币");
					}else if (parseInt(this.takeTxt.text)> RoleInfoM.instance.bank_gold){
					GameEventDispatch.instance.event("MsgTipContent","取出金币数量已超出银行金币数量");
					}else{
					var gold=parseInt(this.takeTxt.text);
					var password=this.bankpassword.text;
					WebSocketManager.instance.send(33004,{gold:gold,password:password});
				}
				}initCoin(){
				this.carryCoin.text=RoleInfoM.instance.getCoin()+"";
				this.bankCoin.text=RoleInfoM.instance.bank_gold+"";
				}onClose(){
				Laya.timer.clearAll(this);
				UiManager.instance.closePanel("Bank",false);
				}bankUpdate(){
				this.initBox();
				this.initCoin();
				}clearInput(){
				this.depositTxt.text="";
				this.takeTxt.text="";
				this.bankpassword.text="";
				}endBankDeposit(){
				this.clearInput();
				}check(num){
				if (num > 20){
					return 1
					}else if (num==20){
					return 0
					}else{
					return -1
				}
				}endBankTake(){
				this.clearInput();
				}endBankTakeFail(){
				this.bankpassword.text="";
				}syncBankCoin(){
				if (RoleInfoM.instance._SyncSwish==1){
					WebSocketManager.instance.send(33012,{});
					RoleInfoM.instance._SyncSwish=0;
					Laya.timer.once(10000,this,function(){
						RoleInfoM.instance._SyncSwish=1;
					});
				}
				}endSyncBankCoin(){
				this.initCoin();
				this.setBindTel();
				}setBindTel(){
				this.telLabel.text='绑定账号：'+RoleInfoM.instance.jjhNumber;
				this.jjhIdLable.text='ID：'+StartParam.instance.getParam("jjhid");
				}screenResize(){
				this.mask1.width=Laya.stage.width;
				this.mask1.height=Laya.stage.height;
				this.size(Laya.stage.width,Laya.stage.height);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("BankUpdate",this,this.bankUpdate);
				GameEventDispatch.instance.on("EndBankDeposit",this,this.endBankDeposit);
				GameEventDispatch.instance.on("EndBankTake",this,this.endBankTake);
				GameEventDispatch.instance.on("EndBankTakeFail",this,this.endBankTakeFail);
				GameEventDispatch.instance.on("SyncBankCoin",this,this.endSyncBankCoin);
				}unRegister(){
				Laya.timer.clear(this,this.loopCursor);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("BankUpdate",this,this.bankUpdate);
				GameEventDispatch.instance.off("EndBankDeposit",this,this.endBankDeposit);
				GameEventDispatch.instance.off("EndBankTake",this,this.endBankTake);
				GameEventDispatch.instance.off("EndBankTakeFail",this,this.endBankTakeFail);
				GameEventDispatch.instance.off("SyncBankCoin",this,this.endSyncBankCoin);
			}
		}

		view.bank.BankPage=Laya.BankPage=BankPage;	
		

		class BossSharePage extends BossShareUI{
			constructor (){
				super();
				//this._htmlC=null;
				this._htmlC=null;
			}
			StartGames(parm=null){
				this.screenResize();
				this.cancelBtn.on(Event.CLICK,this,this.ClickCancelBtn);
				this.confirmBtn.on(Event.CLICK,this,this.ClickConfirmBtn);
				this.screenCapture();
				}ClickConfirmBtn(){
				WxC.wxShare(this._htmlC);
				this.ClickCancelBtn();
			}
			//wx:注销页面
			ClickCancelBtn(){
				UiManager.instance.closePanel("BossShare",false);
				}screenCapture(){
				if (null==this._htmlC){
					this.visible=false;
					this._htmlC=Laya.stage.drawToCanvas(Laya.stage.width,Laya.stage.height,0,0);
					WxC.wxSaveShareFile(this._htmlC);
				}
			}
			// shareImg.graphics.drawTexture(_texture,0,0,shareImg.width,shareImg.height);
			screenResize(){
				this.size(Laya.stage.width,Laya.stage.height);
				}screenShareComplete(){
				UiManager.instance.closePanel("BossShare",false);
				}wxSaveShareFile(path){
				this.shareImg.loadImage(path,0,0,this.shareImg.width,this.shareImg.height);
				this.visible=true;
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("ScreenShareComplete",this,this.screenShareComplete);
				GameEventDispatch.instance.on("WxSaveShareFile",this,this.wxSaveShareFile);
				}unRegister(){
				this._htmlC.destroy();
				this._htmlC=null;
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("ScreenShareComplete",this,this.screenShareComplete);
				GameEventDispatch.instance.off("WxSaveShareFile",this,this.wxSaveShareFile);
			}
		}

		view.bossShare.BossSharePage=Laya.BossSharePage=BossSharePage;	
		

		class CertificationView extends CertificationPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				//this._info=null;
				this.bindCountDownNum=60;
				this.canSendSms=true;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this._info=CertificationM.instance.info;
				if (this._info){
					if (this._info.openFrom=="login"){
						WebSocketManager.instance.send(60003,null);
					}
					}else{
					console.error("info null");
				}
				this.initBox();
				this.nameInput.on(Event.FOCUS_CHANGE,this,this.onFocusChange);
				this.idCardInput.on(Event.FOCUS_CHANGE,this,this.onFocusChange);
				this.telephoneInput.on(Event.FOCUS_CHANGE,this,this.onFocusChange);
				this.confirmBtn.on(Event.CLICK,this,this.onConfirmBtn);
				this.cancelBtn.on(Event.CLICK,this,this.onCancelBtn);
				this.quitBtn.on(Event.CLICK,this,this.onCancelBtn);
				this.exitBtn.on(Event.CLICK,this,this.onExitBtn);
				this.promptBtn.on(Event.CLICK,this,this.onPrompt);
				this.getvcode.on(Event.CLICK,this,this.sendBindVCode);
				this.bindBtn.on(Event.CLICK,this,this.bindTel);
				this.screenResize();
				this.bmask.on(Event.CLICK,this,this.clickMask);
				this.quickRegister.on(Event.CLICK,this,this.onQuickRegister);
				if (ENV.openQuickRegister){
					this.initQuickBtn();
				}
				}initQuickBtn(){
				if (RoleInfoM.instance.jjhNumber && RoleInfoM.instance.jjhId){
					this.quickRegister.visible=false;
					this.bindBtn.x=245;
					this.jjhNumber.text=RoleInfoM.instance.jjhNumber;
					this.jjhID.text=RoleInfoM.instance.jjhId;
					this.telephone.text=RoleInfoM.instance.tel ? RoleInfoM.instance.tel :"";
					if (RoleInfoM.instance.jjhPass && RoleInfoM.instance.bankPass){
						this.cipher.text=RoleInfoM.instance.jjhPass;
					}
					}else{
					this.quickRegister.visible=true;
					this.bindBtn.x=359;
				}
				}onQuickRegister(){
				UiManager.instance.closePanel("Certification",false);
				UiManager.instance.loadView("QuickRegister","bank");
				}initBox(){
				if (this._info.openFrom=="bank"){
					if (this._info.bindState){
						this.onCancelBtn(false);
						}else{
						this.clearAll();
						this.prompt_box.visible=true;
						this.quitBtn.visible=true;
					}
					}else if (this._info.openFrom=="quick_register"){
					this.clearAll();
					this.bindBox.visible=true;
					this.bindCountDown.visible=false;
					this.quitBtn.visible=true;
					}else{
					if (this._info.bindState){
						this.clearAll();
						this.initView();
						}else{
						this.clearAll();
						this.bindBox.visible=true;
						this.bindCountDown.visible=false;
						this.quitBtn.visible=true;
					}
				}
				}refreshBox(){
				if (RoleInfoM.instance.is_bind_tel){
					if (!LoginM.instance.isCompleteCertification){
						this._info.bindState=RoleInfoM.instance.is_bind_tel;
						StartParam.instance.parseParam({
							jjhid:this.jjhID.text
						});
						GameEventDispatch.instance.event("SyncBankCoin");
						this.clearAll();
						this.initView();
						}else{
						this._info.realState=LoginM.instance.isCompleteCertification;
						this.onCancelBtn();
					}
				}
				}bindTel(){
				var pattern_tel=/^[1][0-9]{10}$/;
				var pattern_vcode=/^[0-9]{6}$/;
				var pattern_id=/^[0-9]*$/;
				if (!pattern_tel.test(this.telephone.text)){
					GameEventDispatch.instance.event("MsgTipContent","手机号不符合规范");
					}else if (this.jjhID.text.length <=0 || !pattern_id.test(this.jjhID.text)){
					GameEventDispatch.instance.event("MsgTipContent","集结号ID不符合规范，请填写数字");
					}else if (!pattern_vcode.test(this.vCode.text)){
					GameEventDispatch.instance.event("MsgTipContent","验证码不符合规范");
					}else{
					var userID=LoginInfoM.instance.uid+"";
					var number=this.jjhNumber.text;
					var id=this.jjhID.text;
					var password=this.cipher.text;
					var tel=this.telephone.text;
					var code=this.vCode.text;
					WebSocketManager.instance.send(33020,{
						u_user_id:userID,phone:tel,
						jjhaccounts:number,jjhuserid:id,
						logonpass:password,code:code
					});
				}
				}clearInput(){
				this.jjhNumber.text="";
				this.jjhID.text="";
				this.cipher.text="";
				this.telephone.text="";
				this.vCode.text="";
				this.nameInput.text="";
				this.idCardInput.text="";
				this.telephoneInput.text="";
				}clearAll(){
				this.box2.visible=false;
				this.box1.visible=false;
				this.prompt_box.visible=false;
				this.bindBox.visible=false;
				this.quitBtn.visible=false;
				}onPrompt(){
				if (this._info.bindState){
					this.onCancelBtn(false);
					}else{
					this.clearAll();
					this.bindBox.visible=true;
					this.bindCountDown.visible=false;
					this.quitBtn.visible=true;
				}
				}sendBindVCode(){
				var tel=this.telephone.text;
				var pattern_tel=/^[1][0-9]{10}$/;
				if (!this.canSendSms){
					GameEventDispatch.instance.event("MsgTipContent","请等待倒计时结束");
					}else if (!pattern_tel.test(tel)){
					GameEventDispatch.instance.event("MsgTipContent","手机号不符合规范");
					}else{
					this.getvcode.offAll(Event.CLICK);
					this.bindCountDownNum=60;
					this.bindCountDown.text="60s";
					this.bindCountDown.visible=true;
					Laya.timer.loop(1000,this,this.initBindCountDown);
					this.getvcode.gray=true;
					this.canSendSms=false;
					WebSocketManager.instance.send(33014,{phone:tel});
				}
				}initBindCountDown(){
				this.bindCountDownNum--;
				this.bindCountDown.visible=true;
				this.bindCountDown.text=this.bindCountDownNum+"s";
				if (this.bindCountDownNum < 0){
					this.bindCountDown.visible=false;
					this.getvcode.gray=false;
					this.canSendSms=true;
					this.getvcode.on(Event.CLICK,this,this.sendBindVCode);
					Laya.timer.clear(this,this.initBindCountDown);
				}
				}onFocusChange(){
				this.nameInput.repaint();
				this.idCardInput.repaint();
				this.telephoneInput.repaint();
				this.repaint();
				}onExitBtn(){
				GameEventDispatch.instance.event("ExitsGame");
				}initView(){
				if (this._info.openFrom=="shop"){
					this.desLabel.text="为了保证您的账号安全，请在充值前进行实名认证;完成后会获得20钻石奖励";
					}else{
					this.desLabel.text="为了您有更好的游戏体验，将进行实名认证;完成后会获得20钻石奖励";
				}
				if (this._info.realForciblySwithState==1){
					if (this._info.ageState==0){
						this.box1.visible=false;
						this.box2.visible=true;
						}else{
						this.box1.visible=true;
						this.box2.visible=false;
						this.confirmBtn.x=250;
						this.cancelBtn.visible=false;
					}
					}else{
					this.confirmBtn.x=350;
					this.box1.visible=true;
					this.box2.visible=false;
					this.cancelBtn.visible=true;
				}
				GameTools.clipTxt(this.confirmClip,"确定","red");
				GameTools.clipTxt(this.cancelClip,"取消","green");
				}checkCardId(str){
				if (str.length < 18){
					return false;
				};
				var arr=[];
				var sum=0;
				for (var i=0;i < str.length;i++){
					if (arr[i] !="X"){
						arr[i]=(str [i]);
						}else{
						arr[i]=str[i];
					}
				}
				sum=arr[0] *7+arr[1] *9+arr[2] *10+arr[3] *5+arr[4] *8+arr[5] *4+arr[6] *2+arr[7] *1
				+arr[8] *6+arr[9] *3+arr[10] *7+arr[11] *9+arr[12] *10+arr[13] *5+arr[14] *8
				+arr[15] *4+arr[16] *2;
				sum=1-sum;
				if ((sum % 11+11)==11 || arr[17]==(sum % 11+11)|| (arr[17]=="X" && (sum % 11+11)==10)){
					return true;
				}
				return false;
				}getAge(identityCard){
				var len=(identityCard+"").length;
				if (len==0){
					return 0;
					}else{
					if ((len !=15)&& (len !=18)){
						return 0;
					}
				};
				var strBirthday="";
				if (len==18){
					strBirthday=identityCard.substr(6,4)+"/"+identityCard.substr(10,2)+"/"+identityCard.substr(12,2);
				}
				if (len==15){
					strBirthday="19"+identityCard.substr(6,2)+"/"+identityCard.substr(8,2)+"/"+identityCard.substr(10,2);
				};
				var birthDate=new Date(strBirthday);
				var nowDateTime=new Date();
				var age=nowDateTime.getFullYear()-birthDate.getFullYear();
				if (nowDateTime.getMonth()< birthDate.getMonth()|| (nowDateTime.getMonth()==birthDate.getMonth()&& nowDateTime.getDate()< birthDate.getDate())){
					age--;
				}
				return age;
				}onConfirmBtn(){
				var nameReg=/^[\u4E00-\u9FA5]{2,6}$/;
				var name=this.nameInput.text;
				var cardId=this.idCardInput.text;
				var telephone=this.telephoneInput.text;
				var idCardReg=/^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/;
				if (name==""){
					GameEventDispatch.instance.event("MsgTipContent","请输入真实姓名");
					return;
					}else if (!nameReg.test(name)){
					GameEventDispatch.instance.event("MsgTipContent","输入姓名不符合规范");
					return;
				}
				else if (cardId==""){
					GameEventDispatch.instance.event("MsgTipContent","请输入身份证号");
					return;
					}else if (!idCardReg.test(cardId)|| !this.checkCardId(this.idCardInput.text)){
					GameEventDispatch.instance.event("MsgTipContent","输入的身份证号不规范");
					return;
					}else if (telephone==""){
					GameEventDispatch.instance.event("MsgTipContent","请输入手机号码");
					return;
					}else if (telephone.length !=11){
					GameEventDispatch.instance.event("MsgTipContent","请输入正确的手机号码");
					return;
				}
				if (this.getAge(cardId)&& this.getAge(cardId)< 18){
					if (this._info.realForciblySwithState==0){
						GameEventDispatch.instance.event("MsgTipContent","未满18周岁，实名认证失败");
						}else{
						WebSocketManager.instance.send(60001,{name:name,cardId:cardId,ageType:0,phone:telephone});
						this.box1.visible=false;
						this.box2.visible=true;
					}
					}else{
					WebSocketManager.instance.send(60001,{name:name,cardId:cardId,ageType:1,phone:telephone});
					this.onCancelBtn(false);
				}
				}onCancelBtn(isCancel=true){
				this.clearInput();
				if (this._info.openFrom=="login"){
					GameEventDispatch.instance.event("Regic");
					}else if (this._info.openFrom=="shop"){
					if (isCancel){
						GameEventDispatch.instance.event("MsgTipContent","实名认证后才能购买此商品");
						}else{
						GameEventDispatch.instance.event("QuitTip",this._info.quitInfo);
					}
					}else if (this._info.openFrom=="month"){
					if (isCancel){
						GameEventDispatch.instance.event("MsgTipContent","实名认证后才能购买此商品");
						}else{
						GameEventDispatch.instance.event("ShopBuy",this._info.buyInfo);
					}
					}else if (this._info.openFrom=="Gift"){
					if (isCancel){
						GameEventDispatch.instance.event("MsgTipContent","实名认证后才能购买此商品");
						}else{
						UiManager.instance.loadView('MonthCard',false,"SMALL_TO_BIG");
						GameEventDispatch.instance.event("OpenGift",this._info.buyInfo);
					}
					}else if (this._info.openFrom=="bank"){
					if (isCancel){
						}else{
						var batteryLevel=RoleInfoM.instance.getBattery();
						if (LoginInfoM.instance.openBankBatteryLevel !=0 && batteryLevel < LoginInfoM.instance.openBankBatteryLevel){
							var batteryLv=cfg_battery.instance(LoginInfoM.instance.openBankBatteryLevel).comsume;
							GameEventDispatch.instance.event("MsgTipContent","请解锁"+batteryLv+"炮倍");
							}else{
							GameEventDispatch.instance.event("OpenBankView");
						}
					}
				}
				CertificationM.instance.info=null;
				UiManager.instance.closePanel("Certification",false);
				}clickMask(){
				}screenResize(){
				var contentWidth=700;
				var contentHeight=450;
				var contentStartX=290;
				var contentStartY=155;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				}register(){
				GameEventDispatch.instance.on("SynBankBindSuccess",this,this.refreshBox);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				GameEventDispatch.instance.off("SynBankBindSuccess",this,this.refreshBox);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.certification.CertificationView=Laya.CertificationView=CertificationView;	
		

		class ChangeSkinPage extends ChangeSkinPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.bmask.on(Event.CLICK,this,null);
				this.list1.refresh();
				this.screenResize();
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.list1.renderHandler=new Handler(this,this.updateItem);
				this.onRefresh();
				}screenResize(){
				var contentWidth=1000;
				var contentHeight=660;
				var contentStartX=140;
				var contentStartY=30;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				}updateItem(cell,index){
				var config=cell.dataSource;
				var ele_remain=cell.getChildByName('remain');
				var skins=RoleInfoM.instance.getSkins();
				skins=RoleInfoM.instance.getAllSkins();
				var has_skin=skins.indexOf(config.id)>=0;
				var is_cur=RoleInfoM.instance.getCurSkin()==config.id;
				var ele_img=cell.getChildByName("img");
				var ele_item_label=cell.getChildByName("item_label");
				var ele_desc=cell.getChildByName("desc");
				var ele_status=cell.getChildByName("status");
				ele_status.offAll(Event.CLICK);
				if (config.activity=='worldcup2'){
					if (ActivityM.instance.activityIsActive('worldcup2')
						&& RoleInfoM.instance.haveValidMonthCard()
					&& RoleInfoM.instance.worldcup_battery_accepted==1){
						has_skin=true;
					}
				};
				var remain_day=RoleInfoM.instance.getSkinRemainTime(config.id);
				if (remain_day > 0){
					ele_remain.visible=true;
					ele_remain.text="剩余"+remain_day+"天";
					}else{
					ele_remain.visible=false;
				}
				if (is_cur){
					ele_status.skin="ui/changeSkin/equipped.png";
					ele_status.stateNum=1;
					}else if (has_skin){
					ele_status.skin="ui/changeSkin/equip.png";
					ele_status.stateNum=3;
					ele_status.on(Event.CLICK,this,this.changeSkin(config));
					}else{
					if (config.activity=='worldcup2'){
						ele_status.skin="ui/changeSkin/buy.png";
						ele_status.stateNum=3;
						ele_status.on(Event.CLICK,this,this.getWorldCupSkin,[config]);
						}else{
						ele_status.skin="ui/changeSkin/buy.png";
						ele_status.stateNum=3;
						ele_status.on(Event.CLICK,this,this.buySkin,[config]);
					}
				}
				if (config.id==9){
					ele_img.scale(0.7,0.7);
					ele_img.height=162;
					}else if (config.id==10){
					ele_img.height=162;
					}else{
					ele_img.height=132;
					ele_img.scale(1,1);
				}
				ele_img.skin=config.batteryImg;
				ele_item_label.text=config.itemLabel;
				ele_desc.text=config.desc;
				}buySkin(cfg){
				if (cfg.tip_id==0){
					UiManager.instance.closePanel("ChangeSkin",false);
					GameEventDispatch.instance.event("Shop","tab_skin");
					}else{
					GameEventDispatch.instance.event("MsgTp",cfg.tip_id);
				}
				}getWorldCupSkin(cfg){
				if (ActivityM.instance.worldCupActivityBatteryCanBuy()){
					UiManager.instance.closePanel("ChangeSkin",false);
					GameEventDispatch.instance.event("Shop","tab_skin");
					}else{
					if (ActivityM.instance.activityIsActive('worldcup2')){
						UiManager.instance.closePanel("ChangeSkin",false);
						UiManager.instance.loadView("Russia",{tab:"tab_battery"},"SMALL_TO_BIG");
					}
				}
				}changeSkin(config){
				return function (){
					GameEventDispatch.instance.event("ChangeSkin",config.id);
				}
				}onQuitBtnClick(){
				UiManager.instance.closePanel("ChangeSkin",true);
				}onRefresh(){
				this.list1.array=ConfigManager.filter("cfg_battery_skin",function(item){
					return true
				});
				}unRegister(){
				GameEventDispatch.instance.off("ShopRefresh",this,this.onRefresh);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("EndAcceptWorldCup",this,this.onRefresh);
				GameEventDispatch.instance.off("FinishChangeSkin",this,this.onRefresh);
				}register(){
				GameEventDispatch.instance.on("ShopRefresh",this,this.onRefresh);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("EndAcceptWorldCup",this,this.onRefresh);
				GameEventDispatch.instance.on("FinishChangeSkin",this,this.onRefresh);
			}
		}

		view.changeSkin.ChangeSkinPage=Laya.ChangeSkinPage=ChangeSkinPage;
		Laya.static(ChangeSkinPage,
		['dic',function(){return this.dic=new Dictionary();}
		]);	
		

		class CollectLeadPage extends CollectLeadPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,null);
				this._startX=this.x;
				this._startY=this.y;
				this.getPrizeBtn.on(Event.CLICK,this,this.getPrize);
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.screenResize();
				this.initPage();
				}getPrize(){
				if (RewardM.instance._isCollect==0){
					if (this.sceneContrast()){
						WebSocketManager.instance.send(39003,{});
						if (RewardM.instance._isFristCollect==0){
							BuriedManager.instance.addBuriedData("receive_save_game",{is_first_receive:1});
							}else if (RewardM.instance._isFristCollect==1){
							BuriedManager.instance.addBuriedData("receive_save_game",{is_first_receive:0});
						}
						}else{
						GameEventDispatch.instance.event("MsgTipContent","请从[我的小程序]入口处登陆");
					}
					}else if (RewardM.instance._isCollect==1){
					GameEventDispatch.instance.event("MsgTipContent","请勿重复领取");
				}
				}compareVersion(v1,v2){
				v1=v1.split('.');
				v2=v2.split('.');
				var len=Math.max(v1.length,v2.length);
				while (v1.length < len){
					v1.push('0');
				}
				while (v2.length < len){
					v2.push('0');
				}
				for (var i=0;i < len;i++){
					var num1=parseInt(v1[i]);
					var num2=parseInt(v2[i]);
					if (num1 > num2){
						return 1
						}else if (num1 < num2){
						return -1
					}
				}
				return 0
				}sceneContrast(){
				var sceneId=this.BackScene();
				if (sceneId==1089 || sceneId==1104 || sceneId==1001){
					return true
				}
				return false;
				}BackScene(){
				var num=WxM.instance.isBackScene;
				return num;
				}initPage(){
				if (RewardM.instance._isCollect==1){
					this.drawTips.text="已领取";
					this.getPrizeBtn.gray=true;
				}
				}screenResize(){
				var contentWidth=800;
				var contentHeight=550;
				var contentStartX=240;
				var contentStartY=100;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				}onQuitBtnClick(){
				UiManager.instance.closePanel("CollectLead",true);
				}unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("isCollect",this,this.initPage);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("isCollect",this,this.initPage);
			}
		}

		view.collectLead.CollectLeadPage=Laya.CollectLeadPage=CollectLeadPage;	
		

		class CompenstateView extends CompensateUI{
			constructor (){
				super();
				//this._rewardCount=NaN;
				//this._list=null;
				//this._point=null;
				this._startX=0;
				this._startY=0;
				this.content=[[1,1000],[2,4000],[4,5000],[5,7000],[21,9000],[22,10000],[23,3000],[24,4000],[25,4000]];
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				if (CompenM.instance.rewardFrom && CompenM.instance.rewardFrom==7){
					this._list=CompenM.instance.compenList;
					this.rewardlist.array=CompenM.instance.compenList;
					}else{
					this._list=CompenM.instance.showRefeshList;
					this.rewardlist.array=CompenM.instance.showRefeshList;
				}
				this.makeName.text=CompenM.instance.rewardName;
				this.rewardlist.repeatX=this._list.length;
				this._point=CompenM.instance.point(this._list.length);
				this.rewardlist.x=this._point.x;
				this.rewardlist.y=this._point.y;
				this.screenResize();
				this.bmask.on(Event.CLICK,this,this.clickMask);
				this.receiveBtn.on(Event.CLICK,this,this.receive);
			}
			//rewardlist.array=_list;
			clickMask(){
				}screenResize(){
				var contentWidth=700;
				var contentHeight=450;
				var contentStartX=290;
				var contentStartY=155;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
			}
			//receiveBtn.on(Event.CLICK,this,receive);
			receive(){
				if (!CompenM.instance.rewardFrom || CompenM.instance.rewardFrom==7){
					CompenM.instance.currentTimes=CompenM.instance.currentTimes+1;
				}
				UiManager.instance.closePanel("Compenstate",false);
				}unRegister(){
				if(!CompenM.instance.rewardFrom || CompenM.instance.rewardFrom==7){
					GameEventDispatch.instance.event("OpenMakeUp",[this.content]);
				}
				CompenM.instance.rewardFrom=-1;
				this.x=this._startX;
				this.y=this._startY;
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.compenstate.CompenstateView=Laya.CompenstateView=CompenstateView;	
		

		class ExchangePage extends ExchangePageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.last_time=0;
				//兑换物品列表
				this.exchangeArray=[];
				this.realArray=[];
				this.virtualArray=[];
				this.pfScoreArray=[];
				this.selectBtnArr={};
				this.select_type="virtual";
				//virtual--虚拟物品 real--实物
				this.exchangeData=null;
				//当前兑换物品的数据
				this.userTel="";
				//用户手机号
				this.cache_time=5000;
				//接口缓存毫秒数
				this.bindCountDownNum=60;
				this.canSendSms=true;
			}
			maskClick(event){
				event.stopPropagation();
				}StartGames(parm=null){
				this.haveScoreBox.visible=false;
				this.nomalBox.visible=false;
				this.hitTestPrior=false;
				this.quitExchange.visible=false;
				this.bmask.on(Event.CLICK,this,null);
				this.mask1.on(Event.CLICK,this,this.maskClick);
				this._startX=this.x;
				this._startY=this.y;
				ExchangeM.instance.curSelect=0;
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.list1.renderHandler=new Handler(this,this.updateItem);
				this.list2.renderHandler=new Handler(this,this.updateItem2);
				this.quickRegister.on(Event.CLICK,this,this.onQuickRegister);
				this.getvcode.on(Event.CLICK,this,this.sendBindVCode);
				this.bindBtn.on(Event.CLICK,this,this.bindTel);
				this.quitExchange.on(Event.CLICK,this,this.quitExchangeBtn);
				this.exchangeBtn.on(Event.CLICK,this,this.exchangeBtnClick);
				this.findIntegralBtn.on(Event.CLICK,this,this.onFindIntegralBtn);
				this.initBtn();
				this.screenResize();
				this.onRealBtn();
				this.provider_tel.text=StartParam.instance.getParam("provider_tel");
				this.provider_tel1.text=StartParam.instance.getParam("provider_tel");
				this.list1.visible=true;
				this.list2.visible=false;
				this.box_labels.visible=false;
				this.exchangeBox.visible=false;
				this.list2.array=[];
				}onFindIntegralBtn(){
				UiManager.instance.loadView("PublicAccount",null,"SMALL_TO_BIG");
				}bindTel(){
				var pattern_tel=/^[1][0-9]{10}$/;
				var pattern_vcode=/^[0-9]{6}$/;
				var pattern_id=/^[0-9]*$/;
				if (!pattern_tel.test(this.telephone.text)){
					GameEventDispatch.instance.event("MsgTipContent","手机号不符合规范");
					}else if (this.jjhID.text.length <=0 || !pattern_id.test(this.jjhID.text)){
					GameEventDispatch.instance.event("MsgTipContent","集结号ID不符合规范，请填写数字");
					}else if (!pattern_vcode.test(this.vCode.text)){
					GameEventDispatch.instance.event("MsgTipContent","验证码不符合规范");
					}else{
					var userID=LoginInfoM.instance.uid+"";
					var number=this.jjhNumber.text;
					var id=this.jjhID.text;
					var password=this.cipher.text;
					var tel=this.telephone.text;
					var code=this.vCode.text;
					WebSocketManager.instance.send(33020,{
						u_user_id:userID,phone:tel,
						jjhaccounts:number,jjhuserid:id,
						logonpass:password,code:code
					});
				}
				}sendBindVCode(){
				var tel=this.telephone.text;
				var pattern_tel=/^[1][0-9]{10}$/;
				if (!this.canSendSms){
					GameEventDispatch.instance.event("MsgTipContent","请等待倒计时结束");
					}else if (!pattern_tel.test(tel)){
					GameEventDispatch.instance.event("MsgTipContent","手机号不符合规范");
					}else{
					this.getvcode.offAll(Event.CLICK);
					this.bindCountDownNum=60;
					this.bindCountDown.text="60s";
					this.bindCountDown.visible=true;
					Laya.timer.loop(1000,this,this.initBindCountDown);
					this.getvcode.gray=true;
					this.canSendSms=false;
					WebSocketManager.instance.send(33014,{phone:tel});
				}
				}initBindCountDown(){
				this.bindCountDownNum--;
				this.bindCountDown.visible=true;
				this.bindCountDown.text=this.bindCountDownNum+"s";
				if (this.bindCountDownNum < 0){
					this.bindCountDown.visible=false;
					this.getvcode.gray=false;
					this.canSendSms=true;
					this.getvcode.on(Event.CLICK,this,this.sendBindVCode);
					Laya.timer.clear(this,this.initBindCountDown);
				}
				}onQuickRegister(){
				this.onQuitBtnClick();
				UiManager.instance.loadView("QuickRegister","bank");
				}initBtn(){
				if (ActivityM.instance.redPackTicketContinueTime){
					this.haveScoreBox.visible=true;
					this.nomalBox.visible=false;
					this.renderBox(this.haveScoreBox);
					}else{
					this.haveScoreBox.visible=false;
					this.nomalBox.visible=true;
					this.renderBox(this.nomalBox);
				}
				}renderBox(box){
				var tab_real=box.getChildByName("tab_real");
				var tab_virtual=box.getChildByName("tab_virtual");
				var tab_order=box.getChildByName("tab_order");
				var tab_pf_score=box.getChildByName("tab_pf_score");
				this.selectBtnArr={
					tab_real:tab_real,
					tab_virtual:tab_virtual,
					tab_order:tab_order,
					tab_pf_score:tab_pf_score
				};
				tab_real.on(Event.CLICK,this,this.onRealBtn);
				tab_virtual.on(Event.CLICK,this,this.onVirtualBtn);
				tab_order.on(Event.CLICK,this,this.onOrderBtn);
				if (tab_pf_score){
					tab_pf_score.on(Event.CLICK,this,this.onScoreBtn);
				}
				}onBtnCopyClick(e){
				WxC.wx_set_clipboard_data("jjhbyh5");
				}exchangeBtnClick(){
				var pattern_tel=/^[1][0-9]{10}$/;
				if (this.tel.text !=this.tel_confirm.text){
					GameEventDispatch.instance.event("MsgTipContent","两次输入的手机号不一致");
					}else if (!pattern_tel.test(this.tel.text)){
					GameEventDispatch.instance.event("MsgTipContent","手机号不符合规范");
					}else{
					this.userTel=this.tel.text;
					var info=new QuitTipInfo();
					info.state=1;
					info.content="确认兑换？";
					info.confirmCallback=Handler.create(this,this.exchange,[this.exchangeData]);
					info.conFirmArgs=this.exchangeData;
					info.autoCloseTime=10;
					GameEventDispatch.instance.event("QuitTip",info);
				}
				}quitExchangeBtn(){
				this.exchangeBox.visible=false;
				this.quitExchange.visible=false;
				this.quitBtn.visible=true;
				this.tel.text="";
				this.tel_confirm.text="";
				this.mask1.visible=false;
				}clearSelect(){
				this.selectBtnArr['tab_real'].selected=false;
				this.selectBtnArr['tab_virtual'].selected=false;
				this.selectBtnArr['tab_order'].selected=false;
				if (ActivityM.instance.redPackTicketContinueTime){
					this.selectBtnArr['tab_pf_score'].selected=false;
				}
				}onVirtualBtn(){
				this.clearSelect();
				this.descBox.visible=true;
				this.desTwo.visible=true;
				this.desOne.visible=false;
				this.desThree.visible=false;
				this.selectBtnArr['tab_virtual'].selected=true;
				this.list1.visible=true;
				this.box_score.visible=false;
				this.list2.visible=false;
				this.box_labels.visible=false;
				this.select_type="virtual";
				this.labaNumBox.visible=true;
				this.labaNum.text=RoleInfoM.instance.getExchange()+"";
				this.findIntegralBtn.visible=false;
				this.getExchanges();
				this.list1.scrollTo(0);
				}onRealBtn(){
				this.clearSelect();
				this.descBox.visible=true;
				this.desTwo.visible=true;
				this.desOne.visible=false;
				this.desThree.visible=false;
				this.selectBtnArr['tab_real'].selected=true;
				this.list1.visible=true;
				this.box_score.visible=false;
				this.list2.visible=false;
				this.box_labels.visible=false;
				this.select_type="real";
				this.labaNumBox.visible=true;
				this.labaNum.text=RoleInfoM.instance.getExchange()+"";
				this.findIntegralBtn.visible=false;
				this.getExchanges();
				this.list1.scrollTo(0);
				}onOrderBtn(){
				this.clearSelect();
				this.labaNumBox.visible=false;
				this.descBox.visible=true;
				this.desTwo.visible=false;
				this.desOne.visible=false;
				this.desThree.visible=true;
				this.selectBtnArr['tab_order'].selected=true;
				this.list1.visible=false;
				this.box_score.visible=false;
				this.list2.visible=true;
				this.box_labels.visible=true;
				this.getOrders();
				this.list2.scrollTo(0);
				}onScoreBtn(){
				this.clearSelect();
				this.clearInput();
				this.descBox.visible=true;
				this.desTwo.visible=false;
				this.desThree.visible=false;
				this.selectBtnArr['tab_pf_score'].selected=true;
				this.labaNumBox.visible=false;
				this.list1.visible=false;
				this.list2.visible=false;
				this.box_score.visible=false;
				this.box_labels.visible=false;
				this.list1.scrollTo(0);
				if (RoleInfoM.instance.is_bind_tel){
					this.desOne.visible=true;
					this.select_type="pf_score";
					this.getExchanges();
					this.list1.visible=true;
					this.labaNumBox.visible=true;
					this.findIntegralBtn.visible=true;
					this.labaNum.text=RoleInfoM.instance.getExchange()+"";
					}else{
					this.desOne.visible=false;
					this.box_score.visible=true;
					this.initBindJJId();
				}
				}updateExchange(exchangeNum){
				if (exchangeNum){
					this.labaNum.text=ActivityM.instance.exchangeConversion(60,exchangeNum)+"";
					}else{
					this.labaNum.text="0";
				}
				}clearInput(){
				this.jjhNumber.text="";
				this.jjhID.text="";
				this.cipher.text="";
				this.telephone.text="";
				this.vCode.text="";
				}initBindJJId(){
				if (ENV.openQuickRegister){
					this.initQuickBtn();
				}
				}initQuickBtn(){
				if (RoleInfoM.instance.jjhNumber && RoleInfoM.instance.jjhId){
					this.quickRegister.visible=false;
					this.bindBtn.x=344;
					this.jjhNumber.text=RoleInfoM.instance.jjhNumber;
					this.jjhID.text=RoleInfoM.instance.jjhId;
					this.telephone.text=RoleInfoM.instance.tel ? RoleInfoM.instance.tel :"";
					if (RoleInfoM.instance.jjhPass && RoleInfoM.instance.bankPass){
						this.cipher.text=RoleInfoM.instance.jjhPass;
					}
					}else{
					this.quickRegister.visible=true;
					this.bindBtn.x=484;
				}
				}parsePrice(price){
				if (parseInt(price)>=10000){
					return parseInt(parseInt(price)/ 10000)+"万";
					}else{
					return price+""
				}
				}updateItem2(cell,index){
				var d=cell.dataSource;
				var ele_item_name=cell.getChildByName("item_name");
				var ele_item_cost=cell.getChildByName("item_cost");
				var ele_item_date=cell.getChildByName("item_date");
				var ele_item_status=cell.getChildByName("item_status");
				var ele_price_unit=cell.getChildByName("price_unit");
				if (d.goods_id==60){
					ele_price_unit.skin="ui/common_ex/unit_exchange.png";
					}else if (d.goods_id==1){
					ele_price_unit.skin="ui/common_ex/unit_coin.png";
				}
				ele_item_name.text=d.name;
				ele_item_cost.text=this.parsePrice(ActivityM.instance.exchangeConversion(d.goods_id,d.price));
				ele_item_date.text=d.created_time;
				if ("virtual"==d.type){
					ele_item_status.skin="ui/exchange/success.png";
					}else{
					if ("pending"==d.status){
						ele_item_status.skin="ui/exchange/status_pending.png";
						}else if ("finished"==d.status){
						ele_item_status.skin="ui/exchange/success.png";
					}
				}
				}getOrders(){
				var _$this=this;
				var token=StartParam.instance.getParam("access_token");
				ApiManager.instance.exchangeRecords(token,"exchange_card",Handler.create(this,function(result){
					if ("success"==result.code){
						var arr=result.data.rows;
						_$this.list2.array=arr;
						}else{
						GameEventDispatch.instance.event("MsgTipContent","获取订单");
						console.log("error");
						console.log(result);
					}
					}),Handler.create(this,function(result){
					console.log("error");
					console.log(result);
				}));
				}getExchanges(){
				var _$this=this;
				var token=StartParam.instance.getParam("access_token");
				var cur_d=new Date();
				var cur_time=cur_d.getTime();
				if ((cur_time-this.last_time)> this.cache_time){
					this.last_time=cur_time;
					this.wait_ani.visible=true;
					var token=StartParam.instance.getParam("access_token");
					ApiManager.instance.exchangeList(token,"exchange_card",function(result){
						_$this.exchangeArray=result.data;
						_$this.realArray=[];
						_$this.virtualArray=[];
						_$this.pfScoreArray=[];
						for (var i=0;i < _$this.exchangeArray.length;i++){
							if (_$this.exchangeArray[i].type=="virtual"){
								_$this.virtualArray.push(_$this.exchangeArray[i]);
								}else if (_$this.exchangeArray[i].type=="real"){
								_$this.realArray.push(_$this.exchangeArray[i]);
								}else if (_$this.exchangeArray[i].type=="pf_score"){
								_$this.pfScoreArray.push(_$this.exchangeArray[i]);
							}
						}
						if (_$this.select_type=="virtual"){
							_$this.list1.array=_$this.virtualArray;
							}else if (_$this.select_type=="real"){
							_$this.list1.array=_$this.realArray;
							}else if (_$this.select_type=="pf_score"){
							_$this.list1.array=_$this.pfScoreArray;
							}else{
							_$this.list1.array=[];
						}
						_$this.wait_ani.visible=false;
					});
					}else{
					if (this.select_type=="virtual"){
						this.list1.array=this.virtualArray;
						}else if (this.select_type=="real"){
						this.list1.array=this.realArray;
						}else if (this.select_type=="pf_score"){
						this.list1.array=this.pfScoreArray;
						}else{
						this.list1.array=[];
					}
				}
				}screenResize(){
				var contentWidth=1070;
				var contentHeight=650;
				var contentStartX=110;
				var contentStartY=30;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				this.quitExchange.left=contentStartX-posXOff;
				this.quitExchange.top=contentStartY-posYOff;
				}exchange(data){
				if (data.type=="virtual"){
					ActivityM.instance.countDownArr[data.id]=ActivityM.instance.countDownTimes;
				}
				WebSocketManager.instance.send(14014,{
					id:data.id,
					phone:this.userTel
				});
				}exchangeComplete(result){
				this.mask1.visible=false;
				this.exchangeBox.visible=false;
				this.quitExchange.visible=false;
				this.quitBtn.visible=true;
				this.last_time=this.last_time-this.cache_time;
				this.getExchanges();
				if (result){
					GameEventDispatch.instance.event("MsgTipContent","兑换成功");
				}
				}updateItem(cell,index){
				var _$this=this;
				var d=cell.dataSource;
				var ele_buy_btn=cell.getChildByName("btn");
				var ele_desc=cell.getChildByName("desc");
				var ele_remain=cell.getChildByName("remain");
				var ele_price_unit=cell.getChildByName("price_unit");
				var ele_price=cell.getChildByName("price");
				var ele_img=cell.getChildByName("img");
				var ele_title=cell.getChildByName("title");
				var countDownLabel=cell.getChildByName("countDownLabel");
				countDownLabel.visible=false;
				ele_title.text=d.name;
				ele_desc.text=d.summary;
				ele_remain.text="今日剩余："+d.num;
				var user_coin=0;
				var need_more_text="";
				if (d.goods_id==60){
					user_coin=RoleInfoM.instance.getExchange();
					ele_price_unit.skin="ui/common_ex/unit_exchange.png";
					need_more_text="珍珠不足";
					}else if (d.goods_id==1){
					user_coin=RoleInfoM.instance.getCoin();
					ele_price_unit.skin="ui/common_ex/unit_coin.png";
					need_more_text="金币不足";
				};
				var price=ActivityM.instance.exchangeConversion(d.goods_id,d.price);
				ele_price.value=this.parsePrice(price);
				ele_img.skin=d.image_url;
				ele_buy_btn.offAll(Event.CLICK);
				var that=this;
				if (d.num > 0){
					if (user_coin *1 >=price *1){
						ele_buy_btn.stateNum=2;
						ele_buy_btn.skin="ui/common_ex/btn_yellow.png";
						ele_price_unit.gray=false;
						ele_price.gray=false;
						}else{
						ele_buy_btn.stateNum=1;
						ele_buy_btn.skin="ui/common_ex/btn_gray.png";
						ele_price_unit.gray=true;
						ele_price.gray=true;
					}
					}else{
					ele_buy_btn.stateNum=1;
					ele_buy_btn.skin="ui/common_ex/btn_gray.png";
					ele_price_unit.gray=true;
					ele_price.gray=true;
				}
				if (user_coin *1 >=price *1){
					if (d.num > 0){
						if (d.type=="real"){
							ele_buy_btn.on(Event.CLICK,this,function(){
								_$this.mask1.visible=true;
								_$this.exchangeData=_$this.copyObj(d);
								_$this.tel.text="";
								_$this.tel_confirm.text="";
								_$this.exchangeBox.visible=true;
								_$this.quitExchange.visible=true;
								_$this.quitBtn.visible=false;
							});
							}else if (d.type=="virtual"){
							if (!ActivityM.instance.countDownArr[d.id] || ActivityM.instance.countDownArr[d.id] < 1){
								ele_buy_btn.on(Event.CLICK,this,function(){
									var info=new QuitTipInfo();
									info.state=1;
									info.content="确认兑换？";
									info.confirmCallback=Handler.create(this,_$this.exchange,[d]);
									info.conFirmArgs=_$this.exchangeData;
									info.autoCloseTime=10;
									GameEventDispatch.instance.event("QuitTip",info);
								});
								}else{
								countDownLabel.text="倒计时:"+ActivityM.instance.countDownArr[d.id]+"s";
								countDownLabel.visible=true;
								ele_buy_btn.stateNum=1;
								ele_buy_btn.skin="ui/common_ex/btn_gray.png";
								ele_price_unit.gray=true;
								ele_price.gray=true;
							}
							}else if (d.type=="pf_score"){
							ele_buy_btn.on(Event.CLICK,this,function(){
								var info=new QuitTipInfo();
								info.state=1;
								info.content="确认兑换？";
								info.confirmCallback=Handler.create(this,_$this.exchange,[d]);
								info.conFirmArgs=_$this.exchangeData;
								info.autoCloseTime=10;
								GameEventDispatch.instance.event("QuitTip",info);
							});
						}
						}else{
						ele_buy_btn.on(Event.CLICK,this,function(){
							GameEventDispatch.instance.event("MsgTipContent","库存不足");
						});
					}
				}
				else{
					ele_buy_btn.on(Event.CLICK,this,function(){
						GameEventDispatch.instance.event("MsgTipContent",need_more_text);
					});
				}
				}onQuitBtnClick(){
				UiManager.instance.closePanel("Exchange",true);
				}refreshList1(){
				this.list1.refresh();
				}unRegister(){
				GameEventDispatch.instance.off("UpdateExchange",this,this.updateExchange);
				GameEventDispatch.instance.off("SynBankBindSuccess",this,this.onScoreBtn);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("ExchangeFinish",this,this.exchangeComplete);
				GameEventDispatch.instance.off("RefreshVirtualList",this,this.refreshList1);
				}register(){
				GameEventDispatch.instance.on("UpdateExchange",this,this.updateExchange);
				GameEventDispatch.instance.on("SynBankBindSuccess",this,this.onScoreBtn);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("ExchangeFinish",this,this.exchangeComplete);
				GameEventDispatch.instance.on("RefreshVirtualList",this,this.refreshList1);
				}copyObj(obj){
				if ((obj instanceof Array))return this.copyArr(obj);
				var rst={};
				var key;
				for (key in obj){
					if (obj[key]===null || obj[key]===undefined){
						rst[key]=obj[key];
						}else if (((obj[key])instanceof Array)){
						rst[key]=this.copyArr(obj[key]);
						}else if ((typeof (obj[key])=='object')){
						rst[key]=this.copyObj(obj[key]);
						}else{
						rst[key]=obj[key];
					}
				}
				return rst;
				}copyArr(arr){
				var rst;
				rst=[];
				var i=0,len=0;
				len=arr.length;
				for (i=0;i < len;i++){
					rst.push(this.copyObj(arr[i]));
				}
				return rst;
			}
		}

		view.exchange.ExchangePage=Laya.ExchangePage=ExchangePage;	
		

		class FeedBackPage extends FeedBackPageUI{
			constructor (){
				super();
				//this._content=null;
			}
			StartGames(parm=null){
				this.feedBtn.on(Event.CLICK,this,this.clickFeed);
				this.quitBtn.on(Event.CLICK,this,this.clickQuit);
				this.screenResize();
				if(ENV.isShowBannerAndAD()&& WxC.compareVersion(WxC.wxSDKVersion,"2.0.6")>=0){
					this.feedBox.centerY=-100;
					}else {
					this.feedBox.centerY=0;
				}
				}clickQuit(){
				UiManager.instance.closePanel("FeedBack",false);
				}clickFeed(){
				this._content=this.feedInput.text;
				if (this._content.length==0){
					GameEventDispatch.instance.event("MsgTipContent","反馈内容不能为空");
					}else{
					ApiManager.instance.getFeedBack(StartParam.instance.getParam("access_token"),this._content,Handler.create(this,this.feedComplete),null);
				}
				}feedComplete(msg){
				if (msg["code"]=="success"){
					UiManager.instance.closePanel("FeedBack",false);
					GameEventDispatch.instance.event("MsgTipContent","反馈成功");
				}
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}screenResize(){
				this.bmask.width=Laya.stage.width;
				this.bmask.height=Laya.stage.height;
				this.size(Laya.stage.width,Laya.stage.height);
				}unRegister(){
				this.feedInput.text="";
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.feedBack.FeedBackPage=Laya.FeedBackPage=FeedBackPage;	
		

		class FirstChargePage extends FirstChargePageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,null);
				this._startX=this.x;
				this._startY=this.y;
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.initReward();
				this.initBtn();
				this.screenResize();
				}screenResize(){
				var contentWidth=800;
				var contentHeight=550;
				var contentStartX=240;
				var contentStartY=100;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				}updateItemReward(cell,index){
				var ele_reward_img=cell.getChildByName("reward_type");
				var ele_reward_text=cell.getChildByName("reward_text");
				var data=cell.dataSource;
				ele_reward_img.skin=cfg_goods.instance(data.reward_item_id+"").icon;
				ele_reward_text.text='x '+data.reward_item_num;
				}initReward(){
				var cfg=cfg_first_charge.instance("1");
				this.list_reward.renderHandler=new Handler(this,this.updateItemReward);
				var index=cfg.reward_item_ids.indexOf(23);
				if (index >-1){
					cfg.reward_item_ids.splice(index,1);
					cfg.reward_item_nums.splice(index,1);
				};
				var rewards=[];
				for (var i=0;i < cfg.reward_item_ids.length;i++){
					rewards.push({
						reward_item_id:cfg.reward_item_ids[i],
						reward_item_num:cfg.reward_item_nums[i]
					});
				}
				this.list_reward.array=rewards;
				}initBtn(){
				this.chargeBtn.offAll(Event.CLICK);
				if (RoleInfoM.instance.getFirstChargeRewardAccepted()){
					this.chargeBtn.label="已领取";
					this.onQuitBtnClick();
					}else{
					if (RoleInfoM.instance.getChargeTimes()> 0){
						this.txt.skin="ui/firstCharge/finish_txt.png";
						this.chargeBtn.on(Event.CLICK,this,function(){
							WebSocketManager.instance.send(14002,null);
						});
						}else{
						this.txt.skin="ui/firstCharge/charge_txt.png";
						this.chargeBtn.on(Event.CLICK,this,function(){
							UiManager.instance.closePanel("FirstCharge",true);{
								GameEventDispatch.instance.event("Shop","tab_package");
							}
						});
					}
				}
				}endChargeReward(data){
				RoleInfoM.instance.setFirstChargeRewardAccepted(1);
				this.initBtn();
				GameEventDispatch.instance.event("RewardTip",[data.reward_item_ids,data.reward_item_nums]);
				}onQuitBtnClick(){
				UiManager.instance.closePanel("FirstCharge",true);
				}unRegister(){
				GameEventDispatch.instance.off("UpdateFirstCharge",this,this.initBtn);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				}register(){
				GameEventDispatch.instance.on("UpdateFirstCharge",this,this.initBtn);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
			}
		}

		view.firstCharge.FirstChargePage=Laya.FirstChargePage=FirstChargePage;	
		

		class FishTypeView extends FishTypeUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.smallFishlist.vScrollBarSkin="";
				this.bigFishList.vScrollBarSkin="";
				this.smallFishlist.array=FishTypeM.instance.showSmallFish;
				this.bigFishList.array=FishTypeM.instance.showBigFish;
				this.closeBtn.on(Event.CLICK,this,this.clickClose);
				this.screenResize();
				this.bmask.on(Event.CLICK,this,this.clickMask);
				}clickMask(){
				}click(){
				}screenResize(){
				var contentWidth=840;
				var contentHeight=515;
				var contentStartX=220;
				var contentStartY=102;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.closeBtn.left=contentStartX-posXOff;
				this.closeBtn.top=contentStartY-posYOff;
				}clickClose(){
				UiManager.instance.closePanel("FishType",false);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.fishType.FishTypeView=Laya.FishTypeView=FishTypeView;	
		

		class GoldView extends goldTipUI{
			constructor (){
				super();
				//this.fontclip=null;
				//this.lableOne=null;
				//this.labelTwo=null;
				//this.labelThree=null;
				//this.labelFour=null;
				//this.labelFive=null;
				//this.label=null;
				//this.labelArr=null;
				//this.imageOne=null;
				//this.imageTwo=null;
				//this.imageThree=null;
				//this.imageFour=null;
				//this.imageFive=null;
				//this.imageArr=null;
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this._startX=this.x;
				this._startY=this.y;
				this.labelArr=[];
				this.lableOne=new Label();
				this.labelTwo=new Label();
				this.labelThree=new Label();
				this.labelFour=new Label();
				this.labelFive=new Label();
				this.imageOne=new Image("ui/common_ex/ku.png");
				this.imageTwo=new Image("ui/common_ex/ku.png");
				this.imageThree=new Image("ui/common_ex/ku.png");
				this.imageFour=new Image("ui/common_ex/ku.png");
				this.imageFive=new Image("ui/common_ex/ku.png");
				this.imageArr=[];
				this.imageOne.visible=false;
				this.imageTwo.visible=false;
				this.imageThree.visible=false;
				this.imageFour.visible=false;
				this.imageFive.visible=false;
				this.lableOne.visible=false;
				this.labelTwo.visible=false;
				this.labelThree.visible=false;
				this.labelFour.visible=false;
				this.labelFive.visible=false;
				this.imageArr.push(this.imageOne);
				this.imageArr.push(this.imageTwo);
				this.imageArr.push(this.imageThree);
				this.imageArr.push(this.imageFour);
				this.imageArr.push(this.imageFive);
				this.labelArr.push(this.lableOne);
				this.labelArr.push(this.labelTwo);
				this.labelArr.push(this.labelThree);
				this.labelArr.push(this.labelFour);
				this.labelArr.push(this.labelFive);
				this.screenResize();
				Laya.timer.loop(50,this,this.start);
				}start(){
				if (MsgM.instance.isShow){
					MsgM.instance.isShow=false;
					var label=this.getLabel();
					label.width=0;
					label.visible=true;
					label.color="#ffffff";
					label.text=MsgM.instance.content;
					label.anchorX=0.5;
					label.anchorY=0.5;
					label.fontSize=28;
					label.x=Laya.stage.width / 2;
					label.y=Laya.stage.height / 2;
					var image=this.getImage();
					image.visible=true;
					image.width=label.width+50;
					image.height=100;
					image.anchorX=0.5;
					image.anchorY=0.5;
					image.x=Laya.stage.width / 2;
					image.y=Laya.stage.height / 2;
					image.sizeGrid="26,18,24,18";
					this.addChild(image);
					this.addChild(label);
					Tween.to(label,{y:label.y-150},MsgM.instance.speed,null,Handler.create(this,this.playComplete,[label]));
					Tween.to(image,{y:image.y-150},MsgM.instance.speed,null,Handler.create(this,this.imageComplete,[image]));
				}
				}screenResize(){
				this.size(Laya.stage.width,Laya.stage.height);
				}imageComplete(img){
				img.visible=false;
				this.removeChild(img);
				Tween.clearAll(img);
				}playComplete(m){
				m.visible=false;
				this.removeChild(m);
				Tween.clearAll(m);
				}getLabel(){
				for (var i=0;i < this.labelArr.length;i++){
					if ((this.labelArr[i]).visible==false){
						return this.labelArr[i];
						break ;
					}
				}
				return new Label();
				}getImage(){
				for (var i=0;i < this.imageArr.length;i++){
					if ((this.imageArr[i]).visible==false){
						return this.imageArr[i];
						break ;
					}
				}
				return new Image("ui/common_ex/ku.png");
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.goldTip.GoldView=Laya.GoldView=GoldView;	
		

		class HorseTipView extends HoureTipUI{
			constructor (){
				super();
				this._$6_htmlDiv=null;
				this.colorOne='#d26ae3';
				this._horseCount=0;
			}
			StartGames(parm=null){
				this.mouseThrough=true;
				this.mouseEnabled=false;
				this.initData();
				this.screenResize();
				}showHorse(){
				if (!this._$6_htmlDiv){
					this._$6_htmlDiv=new HTMLDivElement();
					this._$6_htmlDiv.autoSize=false;
					this._$6_htmlDiv.x=this.panel.width+10;
					this._$6_htmlDiv.style.width=300;
					this._$6_htmlDiv.style.height=100;
					this._$6_htmlDiv.style.align="center";
					this._$6_htmlDiv.style.wordWrap=false;
					this._$6_htmlDiv.style.fontSize=19;
					this.panel.addChild(this._$6_htmlDiv);
					this.panel.centerX=0;
				}
				if (this._horseCount <=0 && HorseM.instance.getHorseTipNum()> 0){
					this._$6_htmlDiv.innerHTML=HorseM.instance.getHtml();
					this._$6_htmlDiv.x=this.panel.width+10;
					this._horseCount=HorseM.instance.repeatNum;
				}
				}screenResize(){
				this.size(Laya.stage.width,Laya.stage.height);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
			}
			//GameEventDispatch.instance.on(GameEvent.HorseTipUpdate,this,showHorse);
			unRegister(){
				this._$6_htmlDiv=null;
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
			//GameEventDispatch.instance.off(GameEvent.HorseTipUpdate,this,showHorse);
			initData(){
				Laya.timer.loop(100,this,this.start);
				}start(){
				if (this._$6_htmlDiv){
					this._$6_htmlDiv.x=this._$6_htmlDiv.x-3;
					if ((this._$6_htmlDiv.contextWidth+this._$6_htmlDiv.x)<-10){
						this._$6_htmlDiv.x=this.panel.width+10;
						this._horseCount--;
						if (this._horseCount > 0){
							this._$6_htmlDiv.x=this.panel.width+10;
						}
						else{
							if (HorseM.instance.getHorseTipNum()> 0){
								this.showHorse();
								}else{
								Laya.timer.clear(this,this.start);
								HorseM.instance.isIn=false;
								UiManager.instance.closePanel("HorseTip",false);
							}
						}
					}
					}else{
					this.showHorse();
				}
			}
		}

		view.horseTip.HorseTipView=Laya.HorseTipView=HorseTipView;	
		

		class InsidePage extends InsidePageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.a="<span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;欢迎来到集结号捕鱼H5</span><br/>&nbsp;<br/><br/>3月24日~3月28日，集结号捕鱼H5首次活动来袭！诚意满满，福利多多！让鱼雷疯狂起来，让金币爆起来~<br/>1.活动期间使用紫金鱼雷、黄金鱼雷和白银鱼雷获得的最高金币数量会变为相应积分进行排行，每个排行前10名的玩家，可以获得高额奖励，更可获得游戏中从未投放过的七彩鱼雷<br/>2.月卡用户，每日可额外领取一枚白银鱼雷<br/>3.在商城购买部分道具，可额外获得鱼雷补给<br/><span>集结号感谢所有玩家的支持和配合，祝您游戏愉快！如果在游戏中遇到任何问题，欢迎您咨询客服寻求帮助。请点击下方确定按钮开始游戏.</span><br/>&nbsp;<br/>客服电话:0579-82917777";
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.screenResize();
				this.contentPanel.vScrollBarSkin="";
				this.content.autoSize=true;
				this.content.style.fontSize=22;
				this.content.style.color="#136673";
				this.content.style.width=510;
				var server=this.getUrlParamValue("server");
				this.waitAni.visible=true;
				this.waitAni.play(0,true);
				this.confirmBtn.on(Event.CLICK,this,this.clickConfirm);
				this.masking.on(Event.CLICK,this,this.clickConfirm);
				ApiManager.instance.get_announce("inside",Handler.create(this,this.completeHandler),Handler.create(this,this.error),server);
				}clickConfirm(){
				GameEventDispatch.instance.event("Regic");
				UiManager.instance.closePanel("InsideNotice",false);
				}getUrlParamValue(name){
				if (!WxC.isInMiniGame()){
					var url=window.document.location.href.toString();
					var u=url.split("?");
					if ((typeof (u[1])=='string')){
						u=u[1].split("&");
						var gets={};
						for (var i in u){
							var j=u[i].split("=");
							gets[j[0]]=j[1];
						}
						return gets[name];
					}
				}
				return null
				}error(msg){
				console.log("请求失败");
				}completeHandler(msg){
				var m=msg.data.notice;
				if (m !=null){
					if (m.length !=0){
						var n=m[0];
						n=m[0];
						var con=n.content;
						this.content.innerHTML=con;
						this.content.height=this.content.contextHeight;
						this.contentPanel.removeChild(this.content);
						this.contentPanel.addChild(this.content);
					}
					this.waitAni.visible=false;
				}
				}screenResize(){
				var contentWidth=600;
				var contentHeight=448;
				var contentStartX=320;
				var contentStartY=148;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.confirmBtn.left=contentStartX-posXOff;
				this.confirmBtn.top=contentStartY-posYOff;
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				if (ENV.isShowBannerAndAD()){
					if (WxC.isInMiniGame()&& WxC.compareVersion(WxC.wxSDKVersion,"2.0.6")>=0){
						this.insideBox.y=120;
						WxC.instance.showBannerAD();
						}else{
						this.insideBox.y=140;
					}
					}else{
					this.insideBox.y=140;
				}
				}unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				if (ENV.isShowBannerAndAD()){
					if (WxC.isInMiniGame()){
						WxC.instance.hideBannerAD();
					}
				}
			}
		}

		view.insideNotice.InsidePage=Laya.InsidePage=InsidePage;	
		

		class LevelupView extends LevelUpPageUI{
			constructor (){
				super();
				//this._spineRoot=null;
				//this._spine=null;
				//this._imageArr=null;
				//this._pointArr=null;
				//this._count=NaN;
				//this.boxArr=null;
				//this.countClip=null;
				//this._countArr=null;
				//this._len=NaN;
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.playSketon();
				this._imageArr=UpgradeM.instance.ImageArr;
				this._pointArr=UpgradeM.instance.pointList;
				this._countArr=UpgradeM.instance.countArr;
				this._len=this._imageArr.length;
				this.beiImg.width=150 *this._len;
				this.initData();
				this.start();
				this.confimBtn.on(Event.CLICK,this,this.clickConfim);
				this.screenResize();
				}clickConfim(){
				this.stop();
				}screenResize(){
				var contentWidth=840;
				var contentHeight=515;
				var contentStartX=220;
				var contentStartY=102;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				}initData(){
				this.boxArr=[];
				for (var i=0;i < this._imageArr.length;i++){
					var levelbox=new LevelBox(this._imageArr[i],this._pointArr[i],this,this._countArr[i]);
					this.boxArr.push(levelbox);
				}
				this.countClip=new FontClip("font/font_3.png","0123456789");
				this.countClip.anchorX=0.5;
				this.countClip.anchorY=0.5;
				this.countClip.x=this.coinImg.x;
				this.countClip.y=this.coinImg.y-50;
				this.countClip.value=RoleInfoM.instance.getLevel()+"";
				this.addChild(this.countClip);
				}start(){
				for (var i=0;i < this.boxArr.length;i++){
					(this.boxArr[i]).start();
				}
				}stop(){
				for (var i=0;i < this.boxArr.length;i++){
					(this.boxArr[i]).stop();
				}
				UiManager.instance.closePanel("Levelup",false);
				this.removieSketon();
			}
			//播放骨骼动画
			playSketon(){
				if (!this._spine){
					this._spine=new SpineTemplet("shengji");
				}
				if (!this._spineRoot){
					this._spineRoot=new Sprite();
				}
				this._spine.setScale(1.2,1.2);
				this._spineRoot.addChild(this._spine);
				this._spineRoot.pos(this.coinImg.x,this.coinImg.y);
				this._spine.play("H5_shengji",false);
				this.addChild(this._spineRoot);
				Laya.timer.once(550,this,this.startPlayTwoComplete);
			}
			//trace(_spine.width,_spine.height);
			startPlayTwoComplete(){
				this._spine.play("H5_shengji_xunhuan",true);
			}
			//移除骨骼动画
			removieSketon(){
				if (this._spine !=null){
					this.removeChild(this._spineRoot);
					this._spine.destroyed;
				}
				if (this.countClip !=null){
					this.removeChild(this.countClip);
					this.countClip.destroyed;
				}
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				Laya.timer.clear(this,this.startPlayTwoComplete);
			}
		}

		view.levelup.LevelupView=Laya.LevelupView=LevelupView;	
		

		class LoadPageView extends LoadPageUI{
			constructor (){
				super();
				//this.resArray=null;
				//需要加载资源
				//this._spineArray=null;
				//需要加载的动画
				//this._state=NaN;
				//加载的状态
				//this._mFactory=null;
				this._spineNum=-1;
				this._startLoadSpine=false;
				this._isFirstWait=true;
				//this.privacyBox=null;
				//this.privacyArr=null;
				//this.gameBox=null;
				//this.gameArr=null;
				this._type=0;
				this.isStartLoad=false;
				LoginM.instance.resArr=LoadResM.instance.firstArr;
				LoginM.instance.loginState=0;
				LoginM.instance.spineArr=LoadResM.instance.firstSpineArr;
				if (LoginInfoM.instance.fromAndroid()){
					var timeStamp=RoleInfoM.instance.getTimeStamp();
					AndroidInterface.setTimeStamp(timeStamp);
				}
				this.initInfo(null,false);
			}
			StartGames(parm=null){
				if (!this.gameBox){
					this.gameBox=new Box();
				}
				if (!this.privacyBox){
					this.privacyBox=new Box();
				}
				this.linkPanel.visible=false;
				this.gamePanel.visible=false;
				this.linkBox.visible=false;
				this.closeWeb.visible=false;
				this.waitBox.visible=false;
				this.tipText.visible=false;
				this.progressBar.value=0;
				this.progressBar.visible=false;
				this.sideobox.visible=false;
				this.loadTxt.visible=false;
				this._spineNum=-1;
				this._startLoadSpine=true;
				this.screenResize();
				this.loadLoginn();
				this.setGameVersionNum();
				console.log("loadpage StartGames");
				}setGameVersionNum(){
				var versionStr="本网络游戏适合6周岁以上用户使用；请您确定已如实进行实名注册；为了您的健康，请合理控制游戏时间。\n抵制不良游戏，拒绝盗版游戏。 注意自我保护，谨防受骗上当。 适度游戏益脑，沉迷游戏伤身。 合理安排时间，享受健康生活。";
				if (LoginInfoM.instance.fromQuick()){
					versionStr=versionStr+"\n著作权人：金华市亿博网络科技有限公司 软件著作权登记号：2018SR027711 游戏版号ISBN：978-7-7979-0542-8";
				}
				this.game_version.text=versionStr;
				}loadLoginn(){
				this.resArray=LoginM.instance.resArr;
				this._state=LoginM.instance.loginState;
				this._spineArray=LoginM.instance.spineArr;
				if (WxC.isInMiniGame()&& (!WxC.wxminiCode || WxC.wxminiCode.length <=0)){
					this.tipText.text="开始微信授权";
					WxC.wx_login();
					}else if (StartParam.instance.getParam("platform")&& StartParam.instance.getParam("platform")=="yyly"){
					this.tipText.text="yy联运授权";
					YylyC.config();
					}else if (StartParam.instance.getParam("platform")&& StartParam.instance.getParam("platform")=="cocos"){
					CocosC.init();
					}else{
					this.loginState(this._state);
				}
				}loadConfigCallBack(data){
				ConfigManager.init();
				WxShareC.instance.getMiniProgram();
				LoginM.instance.resArr=LoadResM.instance.firstArr;
				LoginM.instance.loginState=0;
				LoginM.instance.spineArr=LoadResM.instance.firstSpineArr;
				this.resArray=LoginM.instance.resArr;
				this._state=LoginM.instance.loginState;
				this._spineArray=LoginM.instance.spineArr;
				this.confirm();
				}loadMainFest(){
				Laya.loader.load([{
					url:ConfigManager.getConfigPath(),
					type:"json"
				}],Handler.create(this,this.loadConfigCallBack));
				}wxMiniLoginComplete(){
				if (WxC.wxminiCode && WxC.wxminiCode.length > 0){
					this.tipText.text="微信授权成功";
					this.loginState(this._state);
					}else{
					this.tipText.text="微信授权失败";
				}
				}yylyLoginComplete(){
				this.loginState(this._state);
				}cocosNativeLoginSuccess(){
				console.log("cocosLoginComplete");
				this.loginState(this._state);
				}refreshContent(){
				this.loadTxt.text=LoadTipM.instance.showContent;
				}loginState(state){
				switch (state){
					case 0:{
							this.startLoad();
							break ;
						}
					case 1:{
							this.unStartLoad();
							break ;
						}
					default :{
							break ;
						}
					}
				}initInfo(data,isHaveVersion=false){
				if (!data){
					}else{
					if (isHaveVersion){
						StartParam.instance.parseParam({
							version:data.version
						});
					}
					WxM.instance.isShow=(data.is_open_share==1);
					WxC.accessToken=data.access_token;
					StartParam.instance.parseParam({
						mini_server_domain:data.mini_server_domain,
						mini_server_name:data.mini_server_name,
						server_domain:data.server_domain,
						server_name:data.server_name,
						access_token:data.access_token,
						jjhid:data.jjhid,
						uid:data['uid'],
						user_status:data.user_status,
						is_new:data.is_new,
						is_open_bank:data.is_open_bank,
						provider_id:data.provider_id,
						is_display_public_no_subscribe:data.is_display_public_no_subscribe,
						ctime:parseInt(data.ctime),
						is_open_store:data.is_open_store,
						platform:data.platform,
						game_status:data['game_status'],
						config_version:data["config_version"],
						r_p_a:data["r_p_a"]
					});
					var token=StartParam.instance.getParam("access_token");
					if (WxC.isInMiniGame()){
						ApiManager.instance.get_user_sub(token,Handler.create(this,function(res){
							var data=res.data;
							if (res.code=="success"){
								RoleInfoM.instance.subscribe_tpl=data.tpl;
								console.log("get_user_sub",res);
							}
							}),Handler.create(this,function(res){
						}));
					}
				}
				}yylyLoginSuccess(result){
				if (result.status){
					var data=result.data;
					this.initInfo(data,true);
					this.tipText.text="加载外公告";
					GameEventDispatch.instance.event("CloseReset");
					YylyC.is_new=data.is_new;
					YylyC.roleId=data.uid;
					YylyC.roleName=data.nickname;
					if (data.is_new==1){
						YylyC.ReachCreateRoleScene();
						YylyC.CreateRole(data.uid,data.nickname);
					}
					console.log("yy_version",StartParam.instance.getParam("version"));
					ResourceVersion.enable(StartParam.instance.getParam("version"),Handler.create(this,this.getAnnounce),ResourceVersion.FILENAME_VERSION);
					BuriedManager.instance.addBuriedData("ui_login_after");
					}else{
					if (YylyC.yylyLoginCount <=0){
						YylyC.yylyLoginCount=1;
						this.loadLoginn();
						}else{
						UiManager.instance.loadView("ResetLogin");
					}
					return;
				}
				}t360LoginSuccess(result){
				console.log("t360LoginSuccess");
				console.log(result);
				if (result.status){
					var data=result.data;
					this.initInfo(data,false);
					this.tipText.text="加载外公告";
					GameEventDispatch.instance.event("CloseReset");
					if (data.is_new==1){
					}
					BuriedManager.instance.addBuriedData("ui_login_after");
					ApiManager.instance.get_announce("outside",Handler.create(this,this.completeHandler),Handler.create(this,this.error),WxC.server_name);
					}else{
				}
			}
			//加载外公告
			wxminiLoginSuccess(result){
				if (result.status){
					var data=result.data;
					if (!data.version || data.version.length <=0){
						if (StartParam.instance.getParam("env")=="prod" && ApiManager.instance.API_URL !="https://tby-api.jjhgame.com"){
							WxC.getLaunchADInfo();
							var obj=WxC.getLaunchChannel();
							var str="";
							if (obj){
								for (var i in obj){
									str+="&"+i+"="+obj[i];
								}
							}
							ApiManager.instance.API_URL="https://tby-api.jjhgame.com";
							var params="js_code="+WxC.wxminiCode+"&nickname="+WxC.wxminiName+"&avatar="+WxC.wxminiAvatar+"&version="+"vjjh_20102901"+"&public_no_id="+ENV.channelType+"&model="+WxC.model+
							"&channel="+WxC.wxminiAD_channel+"&gdt_vid="+WxC.wxminiAD_gdt_vid+"&aid="+WxC.wxminiAD_aid+"&game_from="
							+WxShareC.getFromMiniProgramInfo()+str;
							ApiManager.instance.wxminiLogin(params,Handler.create(this,this.wxminiLoginSuccess),Handler.create(this,this.wxminiLoginFail));
							}else{
							UiManager.instance.loadView("ResetLogin");
						}
						return;
					}
					this.initInfo(data,true);
					this.tipText.text="加载外公告";
					GameEventDispatch.instance.event("CloseReset");
					console.log("wx_version",StartParam.instance.getParam("version"));
					ResourceVersion.enable(StartParam.instance.getParam("version"),Handler.create(this,this.getAnnounce),ResourceVersion.FILENAME_VERSION);
					BuriedManager.instance.addBuriedData("ui_login_after");
					}else{
					if (WxC.wxminiLoginCount <=0){
						WxC.wxminiLoginCount=1;
						WxC.wxminiCode="";
						this.loadLoginn();
						}else{
						UiManager.instance.loadView("ResetLogin");
					}
					return;
				}
				}getAnnounce(){
				ApiManager.instance.get_announce("outside",Handler.create(this,this.completeHandler),Handler.create(this,this.error),WxC.server_name);
				}wxminiLoginFail(){
				var params="js_code="+WxC.wxminiCode+"&nickname="+WxC.wxminiName+"&avatar="+WxC.wxminiAvatar+
				"&ch="+WxC.getLaunchChannel()+"&version="+"vjjh_20102901"+"&public_no_id="+ENV.channelType;
			}
			//ApiManager.instance.wxminiLogin(params,Handler.create(this,wxminiLoginSuccess),Handler.create(this,wxminiLoginFail));
			yylyLoginFail(){
				}t360LoginFail(){
				}startReset(){
				this.loadLoginn();
			}
			//提示服务器已满
			tipServer(){
				var info=new QuitTipInfo();
				info.state=1;
				info.content="服务器已满是否重新连接";
				info.confirmMsg="WxResetLogin";
				info.autoCloseTime=10;
				GameEventDispatch.instance.event("QuitTip",info);
				}startLoad(){
				var params;
				var platform=this.getUrlParamValue("platform");
				var ch=JSON.stringify(WxC.getLaunchChannel());
				if (WxC.isInMiniGame()){
					this.tipText.text="请求中心服务器分配游戏服务器";
					WxC.getLaunchADInfo();
					params="js_code="+WxC.wxminiCode+"&nickname="+WxC.wxminiName+"&avatar="+WxC.wxminiAvatar+"&version="+"vjjh_20102901"+"&public_no_id="+ENV.channelType+"&model="+WxC.model+
					"&channel="+WxC.wxminiAD_channel+"&gdt_vid="+WxC.wxminiAD_gdt_vid+"&aid="+WxC.wxminiAD_aid+"&game_from="
					+WxShareC.getFromMiniProgramInfo();
					ApiManager.instance.wxminiLogin(params,Handler.create(this,this.wxminiLoginSuccess),Handler.create(this,this.wxminiLoginFail));
					}else if (platform && platform=="yyly"){
					this.tipText.text="yy联运授权";
					params="sid="+YylyC.yy_sid;
					ApiManager.instance.yylyLogin(params,Handler.create(this,this.yylyLoginSuccess),Handler.create(this,this.yylyLoginFail));
					}else if (platform && platform=="360h5"){
					this.tipText.text="360";
					params="";
					BuriedManager.instance.addBuriedData("ui_login_after");
					ApiManager.instance.get_announce("outside",Handler.create(this,this.completeHandler),Handler.create(this,this.error),WxC.server_name);
					}else if (platform && platform=="cocos"){
					var param="userId="+CocosC.loginParam["userId"]+"&nickName="+CocosC.loginParam["nickName"]+"&headUrl="+CocosC.loginParam["headUrl"]
					+"&version="+"vjjh_20102901";
					ApiManager.instance.cocosLogin(param,Handler.create(this,this.cocosApiLoginSuccess),Handler.create(this,this.cocosLoginFail));
					}else{
					this.tipText.text="加载外公告";
					if (StartParam.instance.getParam("env")=="prod"){
						BuriedManager.instance.addBuriedData("ui_login_after");
					}
					ApiManager.instance.get_announce("outside",Handler.create(this,this.completeHandler),Handler.create(this,this.error),WxC.server_name);
				}
				}cocosApiLoginSuccess(result){
				console.log("cocosApiLoginSuccess");
				console.log(result.status);
				if (result.status){
					var data=result.data;
					this.initInfo(data,true);
					this.tipText.text="加载外公告";
					GameEventDispatch.instance.event("CloseReset");
					ResourceVersion.enable(StartParam.instance.getParam("version"),Handler.create(this,this.getAnnounce),ResourceVersion.FILENAME_VERSION);
					BuriedManager.instance.addBuriedData("ui_login_after");
					}else{
				}
			}
			// return;
			cocosLoginFail(){
				console.log("cocosLoginFail");
				}unStartLoad(){
				this.progressBar.visible=true;
				this.sideobox.visible=false;
				this.loadTxt.visible=true;
				this.progressBar.value=0;
				this.loadTxt.text=LoadTipM.instance.showContent;
				Laya.timer.loop(2000,this,this.refreshContent);
				Laya.loader.load(this.resArray,Handler.create(this,this.loadSpineFactory),Handler.create(this,this.onProgress,null,false));
				Laya.loader.on(Event.ERROR,this,this.onerror);
			}
			//请求失败
			error(msg){
				this.loadMainFest();
				}confirm(){
				var _$this=this;
				this.progressBar.visible=true;
				this.progressBar.value=0;
				this.sideobox.visible=false;
				this.loadTxt.visible=true;
				this.loadTxt.text=LoadTipM.instance.showContent;
				Laya.timer.loop(2000,this,this.refreshContent);
				Laya.loader.load(this.resArray,Handler.create(this,function(isSucess){
					if (isSucess){
						_$this.loadSpineFactory();
						}else{
						_$this.confirm();
					}
				}),Handler.create(this,this.onProgress,null,false));
				Laya.loader.on(Event.ERROR,this,this.onerror);
				}showQuitBtn(){
				if (!this.quitBtn){
					return false
				}
				if (WxC.isInMiniGame()){
					return true
					}else if (LoginInfoM.instance.fromAndroid()){
					return true
					}else{
					return false
				}
				}completeHandler(msg){
				this.waitBox.visible=false;
				var m=msg.data.notice;
				AiqiyiC.instance.DataSendMessge();
				StartParam.instance.parseParam({
					provider_tel:msg.data.tel
				});
				if (m && m.length !=0){
					this.sideobox.visible=true;
					var n=m[0];
					var z=n.content;
					var type=n.btn_type;
					if (type==0){
						this.confirmBtn.visible=false;
						if (this.showQuitBtn()){
							this.quitBtn.visible=true;
						}
						}else{
						this.confirmBtn.visible=true;
						if (this.showQuitBtn()){
							this.quitBtn.visible=false;
						}
					}
					this.conTxt.text="    "+z;
					var c=n.link;
					this.contenturl.anchorX=0.5;
					this.contenturl.anchorY=0.5;
					this.contenturl.text=c;
					this.contenturl.on(Event.CLICK,this,this.click,[c]);
					this.confirmBtn.on(Event.CLICK,this,this.loadMainFest);
					this.sideobox.visible=true;
					}else{
					this.loadMainFest();
				}
				if (this.quitBtn){
					this.quitBtn.on(Event.CLICK,this,this.clickQuit);
				}
				WxC.wxRequest();
				}clickQuit(){
				GameEventDispatch.instance.event("ExitsGame");
			}click(data){}
			//资源加载失败的回调方法
			onerror(){}
			//资源加载过程中
			onProgress(pro){
				this.progressBar.value=pro *0.8;
				}screenResize(){
				this.bg_img.width=1280;
				this.bg_img.height=720;
				if ((Laya.stage.height / Laya.stage.width)> (720 / 1280)){
					this.bg_img.height=Laya.stage.height;
					}else{
					this.bg_img.width=Laya.stage.width;
				}
				this.size(Laya.stage.width,Laya.stage.height);
				this.progressBar.x=Laya.stage.width / 2;
			}
			// }
			playBgMusic(){
				var musicPath=ConfigManager.getConfValue("cfg_scene",1,"backMusic");
				SoundManager.playMusic(musicPath);
			}
			//加载骨骼动画工厂
			loadSpineFactory(){
				if (this._startLoadSpine){
					this._startLoadSpine=false;
				}
				if (this._spineArray.length > 0){
					if (this._spineNum < 0){
						this._spineNum=this._spineArray.length;
					}
					this.progressBar.value=0.8+0.2 *(this._spineNum-this._spineArray.length)/ this._spineNum;
					var path=this._spineArray[0];
					if (SpineTemplet.isPathCache(path)){
						this._spineArray.splice(0,1);
						this.loadSpineFactory();
						}else{
						this._mFactory=new Templet();
						this._mFactory.on(Event.COMPLETE,this,this.loadSpineComplete);
						this._mFactory.loadAni(path);
					}
					}else{
					this.progressBar.value=1;
					Laya.timer.frameOnce(3,this,this.showLinkBox);
				}
				}loadSpineComplete(){
				var path=this._spineArray[0];
				SpineTemplet.addFactoryCache(this._mFactory,path);
				this._spineArray.splice(0,1);
				Laya.timer.frameOnce(1,this,this.loadSpineFactory);
			}
			// loadSpineFactory();
			showLinkBox(){
				var _$this=this;
				if (this._state==0 && StartParam.instance.getParam("r_p_a")==0){
					this.linkBox.visible=true;
					this.linkCheck.selected=false;
					this.linkLabel.on(Event.CLICK,this,this.openLinkWeb,[1]);
					this.gameLable.on(Event.CLICK,this,this.openLinkWeb,[2]);
					this.startGameBtn.on(Event.CLICK,this,this.onClickLinkCheckBox);
					this.tishiBtn.on(Event.CLICK,this,this.onTipBtn);
					if (WxC.isInMiniGame()){
						this.closeWeb.pos(this.linkPanel.x+this.linkPanel.width+10,this.linkPanel.y);
					}
					this.closeWeb.on(Event.CLICK,this,function(){
						if (!WxC.isInMiniGame()){
							if (_$this.getUrlParamValue("r_p_a")!=null){
								GameTools.replaceParam("r_p_a",1);
							}
						}
						_$this.isStartLoad=false;
						_$this.groupBox.visible=true;
						_$this.closeWeb.visible=false;
						_$this.linkPanel.visible=false;
						_$this.gamePanel.visible=false;
						_$this.waitBox.visible=false;
					});
					}else{
					this.loadComplete();
				}
				}completeHandle(res){
				if (res.code=="success"){
					LoginInfoM.instance.privacyArr=res.data[0];
					LoginInfoM.instance.gameArr=res.data[1];
					this.openLinkWeb(this._type);
					this.waitBox.visible=false;
				}
				}errorHandle(res){
				if (res.indexOf("fail")>=0){
					this.waitBox.visible=false;
					this.groupBox.visible=true;
				}
				}privacyLazyLoadHandle(value){
				var _$this=this;
				if (!this.isStartLoad && value > (this.linkPanel.vScrollBar.max-10)&& this.privacyBox.numChildren < this.privacyArr.length){
					this.isStartLoad=true;
					this.waitBox.visible=true;
					Laya.loader.load(this.privacyArr[this.privacyBox.numChildren],Handler.create(this,function(isSucess){
						if (isSucess){
							_$this.waitBox.visible=false;
							_$this.addImageToBox(_$this.privacyBox.numChildren,_$this.privacyBox);
							}else{
							GameEventDispatch.instance.event("MsgTipContent","加载错误，请关闭后重新打开");
						}
					}),null,Loader.IMAGE);
				}
				}gameLazyLoadHandle(value){
				var _$this=this;
				if (!this.isStartLoad && value > (this.gamePanel.vScrollBar.max-10)&& this.gameBox.numChildren < this.gameArr.length){
					this.isStartLoad=true;
					this.waitBox.visible=true;
					Laya.loader.load(this.gameArr[this.gameBox.numChildren],Handler.create(this,function(isSucess){
						if (isSucess){
							_$this.waitBox.visible=false;
							_$this.addImageToBox(_$this.gameBox.numChildren,_$this.gameBox);
							}else{
							GameEventDispatch.instance.event("MsgTipContent","加载错误，请关闭后重新打开");
						}
					}),null,Loader.IMAGE);
				}
				}addImageToBox(index,box){
				var curHeight=box.height;
				var sprite=new Sprite();
				if (box.name=="privacyBox"){
					sprite=sprite.loadImage(this.privacyArr[index]);
					}else{
					sprite=sprite.loadImage(this.gameArr[index]);
				}
				box.addChild(sprite);
				console.log("i",box.name,index,sprite.getBounds());
				sprite.width=sprite.getBounds().width;
				sprite.height=sprite.getBounds().height;
				sprite.y=curHeight;
				sprite.x=0;
				box.height=curHeight+sprite.height;
				box.width=sprite.width;
				box.scale(box.parent.width / box.width,box.parent.width / box.width);
				this.isStartLoad=false;
				}openLinkWeb(type){
				this.privacyBox.visible=false;
				this.gameBox.visible=false;
				this.groupBox.visible=false;
				this._type=type;
				if (LoginInfoM.instance.privacyArr.length <=0 && LoginInfoM.instance.gameArr.length <=0){
					this.waitBox.visible=true;
					ApiManager.instance.getPrivacyAgreement(new Handler(this,this.completeHandle),new Handler(this,this.errorHandle));
					return;
				}
				if (this._type==1){
					if (!this.linkPanel.getChildByName("privacyBox")){
						this.privacyArr=LoginInfoM.instance.privacyArr;
						this.privacyBox.name="privacyBox";
						this.linkPanel.addChild(this.privacyBox);
						this.linkPanel.vScrollBarSkin="";
						this.linkPanel.vScrollBar.changeHandler=new Handler(this,this.privacyLazyLoadHandle);
					}
					this.linkPanel.scrollTo(0,0);
					this.privacyBox.visible=true;
					this.linkPanel.visible=true;
					}else if (this._type==2){
					if (!this.gamePanel.getChildByName("gameBox")){
						this.gameArr=LoginInfoM.instance.gameArr;
						this.gameBox.name="gameBox";
						this.gamePanel.addChild(this.gameBox);
						this.gamePanel.vScrollBarSkin="";
						this.gamePanel.vScrollBar.changeHandler=new Handler(this,this.gameLazyLoadHandle);
					}
					this.gamePanel.scrollTo(0,0);
					this.gameBox.visible=true;
					this.gamePanel.visible=true;
				}
				this.closeWeb.visible=true;
				}privacyCompleteHandle(res){
				console.log("已读",res);
				}onClickLinkCheckBox(){
				if (this.linkCheck.selected){
					this.linkBox.visible=false;
					var token=StartParam.instance.getParam("access_token");
					ApiManager.instance.readPrivacyAgreement(token,Handler.create(this,this.privacyCompleteHandle));
					this.loadComplete();
					}else{
					this.tishiBox.visible=true;
				}
				}onTipBtn(){
				this.tishiBox.visible=false;
			}
			//资源加载完成
			loadComplete(){
				this.playBgMusic();
				if (this._state==0){
					var accessToken=StartParam.instance.getParam("access_token");
					var server_domain=StartParam.instance.getParam("server_domain");
					var server_name=StartParam.instance.getParam("server_name");
					var mini_server_domain=StartParam.instance.getParam("mini_server_domain");
					var mini_server_name=StartParam.instance.getParam("mini_server_name");
					var user_status=StartParam.instance.getParam("user_status");
					if (user_status=="ban"){
						UiManager.instance.loadView("UserBan");
						return;
					}
					GameTools.CalSqrtSheet();
					GameTools.CalSinCosSheet();
					GameTools.CalAcosSheet();
					FightManager.instance.initSwimPath();
					if (accessToken && server_domain && server_name){
						var url="wss://"+server_domain+"/"+server_name+"?access="+accessToken;
						WebSocketManager.instance.connect(url);
						}else{
						UiManager.instance.closePanel("Load",false);
						UiManager.instance.loadView("Login");
					}
					UiManager.instance.loadView("Mask");
					}else if (this._state==1){
					var fishArray=ConfigManager.getConfValue("cfg_scene",LoginM.instance.sceneId,"fish_arr");
					var i=0;
					var j=0;
					for (i=0;i < fishArray.length;i++){
						var fishId=fishArray[i];
						if (!LoginM.instance.isFishIdPreload(fishId)){
							var preLoadNumber=ConfigManager.getConfValue("cfg_fish",fishId,"preLoadNum");
							for (j=0;j < preLoadNumber;j++){
								var tmpFish=Fish.create(fishId,FightManager.instance.getFishLayer(fishId),false);
								tmpFish.destroy();
							}
							LoginM.instance.setFishIdPreload(fishId);
						}
					}
					if (!LoginM.instance.isBulletPreload()){
						var bulletInfo=new BulletInfo();
						bulletInfo.startX=250;
						bulletInfo.startY=100;
						bulletInfo.endX=250;
						bulletInfo.endY=250;
						bulletInfo.showDelay=0;
						bulletInfo.uniId=1;
						bulletInfo.sr=1;
						bulletInfo.fuid=0;
						bulletInfo.index=1;
						bulletInfo.count=1;
						bulletInfo.agent=-100000;
						bulletInfo.tick=0;
						for (i=1;i <=8;i++){
							bulletInfo.sk=i;
							for (j=0;j < 100;j++){
								var bullet=Bullet.create(bulletInfo,FightManager.instance.getBulletLayer(),false);
								bullet.destroy();
							}
						}
						LoginM.instance.setBulletPreload();
						FightManager.instance.preLoadAwardEffect();
						FightManager.instance.preLoadCatchShowEffect();
						var goodsIds=[1,4,21,22,24,51,60,64];
						for (i=0;i < goodsIds.length;i++){
							for (j=0;j < 10;j++){
								var effect=GoodsFlyEffect.Create(goodsIds[i],0,0,1,1,0,Laya.stage,true,null);
								effect.destroy();
							}
						}
					}
					GameEventDispatch.instance.event("RestInRoom");
				}
				}getUrlParamValue(name){
				if (!WxC.isInMiniGame()){
					var url=window.document.location.href.toString();
					var u=url.split("?");
					if ((typeof (u[1])=='string')){
						u=u[1].split("&");
						var gets={};
						for (var i in u){
							var j=u[i].split("=");
							gets[j[0]]=j[1];
						}
						return gets[name];
					}
				}
				return null
				}colsePage(){
				UiManager.instance.closePanel("Load",false);
				}exitLoginView(){
				UiManager.instance.closePanel("Load",false);
				}register(){
				GameEventDispatch.instance.once("EnterFightPage",this,this.colsePage);
				GameEventDispatch.instance.once("ExitLoginView",this,this.exitLoginView);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("WxMiniLoginComplete",this,this.wxMiniLoginComplete);
				GameEventDispatch.instance.on("WxResetLogin",this,this.resetLogin);
				GameEventDispatch.instance.on("YylyLoginComplete",this,this.yylyLoginComplete);
				GameEventDispatch.instance.on("CocosLoginComplete",this,this.cocosNativeLoginSuccess);
				}resetLogin(){
				this.startLoad();
				}unRegister(){
				Laya.timer.clearAll(this);
				if (this._isFirstWait){
					this._isFirstWait=false;
					UiManager.instance.loadView("Wait");
				}
				GameEventDispatch.instance.off("EnterFightPage",this,this.colsePage);
				GameEventDispatch.instance.off("ExitLoginView",this,this.exitLoginView);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("WxMiniLoginComplete",this,this.wxMiniLoginComplete);
				GameEventDispatch.instance.off("WxResetLogin",this,this.resetLogin);
				GameEventDispatch.instance.off("YylyLoginComplete",this,this.yylyLoginComplete);
				GameEventDispatch.instance.off("CocosLoginComplete",this,this.cocosNativeLoginSuccess);
			}
		}

		view.load.LoadPageView=Laya.LoadPageView=LoadPageView;	
		

		class LoginView extends LoginUI{
			constructor (){
				super();
				//this.onLogin=null;
			}
			StartGames(parm=null){
				if (StartParam.instance.getParam("player")){
					this.onLoginFuction();
					}else{
					this.btn_login.on(Event.CLICK,this,this.onLoginFuction);
				}
				}onLoginFuction(){
				UIConfig.closeDialogOnSide=ENV.closeDialogOnSide;
				if (StartParam.instance.getParam("player")){
					var name=StartParam.instance.getParam("player");
					LoginInfoM.instance.name=StartParam.instance.getParam("player");
					}else{
					var name=this.name_input.text;
					LoginInfoM.instance.name=name;
				};
				var params='third_part_token='+name+'&third_part_id=test&provider_id=1&user_ip=1.1.1.1&game_key=2d65b80bdb3f91cf30715258017d8343';
				GameEventDispatch.instance.once("ReceiveHandshake",this,this.receiveHandshake);
				ApiManager.instance.login(params,this.loginRequest);
				}loginRequest(result){
				if (result.status){
					var data=result.data;
					if (data.user_status=="ban"){
						UiManager.instance.loadView("UserBan");
						return;
					}
					StartParam.instance.parseParam({
						mini_server_domain:data.mini_server_domain,
						mini_server_name:data.mini_server_name,
						server_domain:data.server_domain,
						server_name:data.server_name,
						access_token:data.access_token,
						jjhid:data.jjhid,
						uid:data['uid'],
						user_status:data.user_status,
						is_new:data.is_new,
						provider_id:data.provider_id,
						is_display_public_no_subscribe:data.is_display_public_no_subscribe,
						ctime:parseInt(data.ctime),
						is_open_store:data.is_open_store,
						is_open_bank:data.is_open_bank,
						platform:data.platform,
						game_status:data['game_status'],
						r_p_a:data['r_p_a']
					});
					var url="wss://"+data.server_domain+"/"+data.server_name+"?access="+data.access_token;
					var smurl="wss://"+data.mini_server_domain+"/"+data.mini_server_name+"?access="+data.access_token;
					var local_url1="ws://jjhgame.com:9100/local_server/?access="+data.access_token;
					if (data.user_status=="ban"){
						UiManager.instance.loadView("UserBan");
						return;
					}
					if (StartParam.instance.getParam("env")=="test"){
						WebSocketManager.instance.connect("ws://192.168.89.80:8989/local_server/"+"?access="+data.access_token);
						}else if (StartParam.instance.getParam("env")=="stage"){
						WebSocketManager.instance.connect(url);
						}else if (StartParam.instance.getParam("env")=="prod"){
						RoleInfoM.instance.setTimeStamp(1528953500473);
						WebSocketManager.instance.connect("wss//h5wss.jjhgame.com/prod_server?access=6d9aad02f2e9d44154cca44f8f410ff2");
					}
					BuriedManager.instance.addBuriedData("ui_login_after");
					}else{
					if ("no_server"==result.code){
						console.log("没有可用的服务器");
						}else{
						console.log("服务器出错");
					}
				}
				}getGet(name){
				if (!WxC.isInMiniGame()){
					var url=window.document.location.href.toString();
					var u=url.split("?");
					if ((typeof (u[1])=='string')){
						u=u[1].split("&");
						var gets={};
						for (var i in u){
							var j=u[i].split("=");
							gets[j[0]]=j[1];
						}
						return gets[name];
					}
				}
				return {};
				}start(){
				}closePage(){
				UiManager.instance.closePanel("Login",true);
				}receiveHandshake(data){
				var handshake=data;
				}register(){
				GameEventDispatch.instance.once("EnterFightPage",this,this.closePage);
				GameEventDispatch.instance.once("ExitLoginView",this,this.exitLoginView);
				}exitLoginView(){
				UiManager.instance.closePanel("Login",true);
				}unRegister(){
				GameEventDispatch.instance.off("EnterFightPage",this,this.closePage);
				GameEventDispatch.instance.off("ExitLoginView",this,this.exitLoginView);
			}
		}

		view.login.LoginView=Laya.LoginView=LoginView;	
		

		class MainPageView extends MainPageUI{
			constructor (){
				super();
				//this.horseTxt=null;
				//this.fontClip=null;
				//this.sp=null;
				//this.spine=null;
				this._count=0;
				this._isStop=false;
				this.scroll_value=0;
				//this._cfg=null;
				this._horseTipArray=[{id:1,a6:300,agent:true},{id:3,a6:700,agent:true},{
					id:4,
					a6:100,
					agent:true
					},{id:4,a6:800,agent:false},{id:5,a2:"2018,3,6",a4:"2019,5,4",agent:true},{
					id:3,
					a6:134,
					agent:false
				}];
				this.isTrack=false;
				this._index=-1;
				this.isBombActivityCountDownStart=false;
				this.isBonusActivityCountDownStart=false;
				this.chapterArr=[];
				this.iphoneXOffset=70;
				this.currencyOffset=250;
				YylyC.EnterGame();
				if (!this.isTrack){
					this.isTrack=true;
				}
			}
			StartGames(param=null){
				if (WxC.isInMiniGame()){
				}
				WebSocketManager.instance.send(50001,{});
				LoginInfoM.instance.mainPageShow=true;
				this.pathBtn.on(Event.CLICK,this,this.clickPath);
				this.shopBtn.on(Event.CLICK,this,this.openShop);
				this.firstChargeBtn.on(Event.CLICK,this,this.firstCharge);
				this.friendBtn.on(Event.CLICK,this,this.onFriendBtn);
				this.subscriptionBtn.on(Event.CLICK,this,this.firstSubscription);
				this.exchangeBtn.on(Event.CLICK,this,this.exchange);
				this.packBtn.on(Event.CLICK,this,this.pack);
				this.wxInfoBtn.on(Event.CLICK,this,this.onWxInfoBtn);
				this.registerBtn.on(Event.CLICK,this,this.clickRegister);
				this.addCoinBtn.on(Event.CLICK,this,this.addCoin);
				this.addDiamondBtn.on(Event.CLICK,this,this.addDiamond);
				if (WxC.isInMiniGame()){
					this.addMiniBtn.on(Event.CLICK,this,this.addMini);
				}
				this.settingBtn.on(Event.CLICK,this,this.onChangeSettingBtn);
				this.ranking_btn.on(Event.CLICK,this,this.onRankBtn);
				this.activityBtn.on(Event.CLICK,this,this.onActivityBtn);
				this.bankBtn.on(Event.CLICK,this,this.onBankBtn);
				this.shareBtn.on(Event.CLICK,this,this.clickShare);
				this.useTicketBtn.on(Event.CLICK,this,this.onUseTicketBtn);
				this.redPackBtn.on(Event.CLICK,this,this.onRedPackBtn);
				this.collectBtn.on(Event.CLICK,this,this.onCollectBtn);
				this.shortGiftBtn.on(Event.CLICK,this,this.onShortGiftBtn);
				if (RoleInfoM.instance.short_pf==1 || RoleInfoM.instance.short_pf==2){
					if (StartParam.instance.getParam("ctime")+cfg_global.instance(1).rech_days *86400 < parseInt(new Date().getTime()/ 1000)){
						this.shortGiftBtn.visible=false;
						}else{
						this.shortGiftBtn.visible=true;
					}
					}else{
					this.shortGiftBtn.visible=false;
				}
				this.collectUpdate();
				this.useTicketBtn.visible=false;
				this.redPackBtn.visible=false;
				this.profileUpdate();
				if (!GameConst.main_edit_menu_show){
					this.pathBtn.visible=false;
				}
				this.initMonthCardIcon();
				this.showRedPoint();
				this.showFriendRedPoint();
				this.screenResize();
				this.levelList.refresh();
				Laya.timer.loop(1000,this,this.startPlay);
				this.visible=true;
				this.init();
				this.levelList.hScrollBarSkin="";
				this.levelList.renderHandler=new Handler(this,this.updateItem);
				this.novicePlay.on(Event.CLICK,this,this.onClickPlay);
				this.noviceNotPlay.on(Event.CLICK,this,this.onClickNotPlay);
				this.maskNovice.on(Event.CLICK,this,this.onClickNoviceMask);
				this.refreshCertificationInfo();
				this.refreshGetWxInfo();
				this.certificationBtn.on(Event.CLICK,this,this.onCertificationBtn);
				this.shortRed();
				this.initFirstChargeBtn();
				this.closeSubIco();
				this.resetIcon();
				this.resetCurrencyBox();
				if (WxC.isHideShop()){
					this.addDiamondBtn.visible=false;
					this.addCoinBtn.visible=false;
					this.addMiniBtn.visible=false;
				}
				if (WxShareC.loadResSuccess){
					this.initMiniBtn();
				}
				if (WxC.isInMiniGame()){
					console.log("场景id ",WxM.instance.isBackScene);
					console.log("基础库版本 ",wx.getSystemInfoSync().SDKVersion);
				}
				}onWxInfoBtn(){
				UiManager.instance.loadView("WxInfo",null,"SMALL_TO_BIG");
				}refreshGetWxInfo(){
				if (WxC.isInMiniGame()){
					if (WxC.author==2){
						this.wxInfoBtn.visible=true;
						}else{
						this.wxInfoBtn.visible=false;
					}
				}
				}refreshCertificationInfo(){
				this.certificationBtn.visible=!LoginM.instance.isCompleteCertification;
				}initMiniBtn(){
				if (WxShareC.isInMiniGame()){
					if (WxShareC.miniProgramArr.length > 0){
						this.mini_btn.visible=true;
						this.mini_btn.on(Event.CLICK,this,this.navigateToMiniProgram);
						var obj=WxShareC.getCurMiniPro();
						this.resetAdAni();
						this.mini_name.text=obj.game_name;
						this.mini_name_bg.text=obj.game_name;
						if (WxShareC.miniProgramArr.length > 1){
							Laya.timer.loop(5000,this,this.updataIndexMiniPro);
						}
						}else{
						this.mini_btn.visible=false;
					}
					}else{
					this.mini_btn.visible=false;
				}
				}updataIndexMiniPro(){
				WxShareC.updataIndexMiniPro();
				var obj=WxShareC.getCurMiniPro();
				this.resetAdAni();
				this.mini_name.text=obj.game_name;
				this.mini_name_bg.text=obj.game_name;
				}resetAdAni(){
				var adAni=WxShareC.instance.adAni();
				if (this.mini_btn.getChildByName("ad_btn")){
					this.mini_btn.removeChildByName("ad_btn");
				}
				this.mini_btn.addChild(adAni);
				}navigateToMiniProgram(){
				if (WxC.isInMiniGame()){
					WxShareC.navigateToMiniProgram();
					}else{
				}
				}collectUpdate(){
				if (RewardM.instance._isCollect==0 && WxC.instance.MiniStartObj()&& !ENV.isShowDied()){
					this.collectGift_box.visible=true;
					}else{
					this.collectGift_box.visible=false;
				}
				}resetCurrencyBox(){
				this.miniBox.visible=true;
				this.goldBox.visible=true;
				this.diamond_box.visible=true;
				if (WxC.isMiniLayout()){
					}else{
					this.miniBox.visible=false;
					this.goldBox.left=this.goldBox.left-this.currencyOffset;
					this.diamond_box.left=this.diamond_box.left-this.currencyOffset;
					this.currencyOffset=0;
				}
				}resetIcon(){
				var startRight=20;
				var startBottom=10;
				var icons=[this.shopBtn,this.registerBtn,this.month_icon,this.exchangeBtn,this.packBtn,this.bankBtn,this.firstChargeBtn,this.subscriptionBtn,this.friendBtn];
				if (WxC.isHideShop()){
					this.shopBtn.visible=false;
					this.month_icon.visible=false;
					this.firstChargeBtn.visible=false;
				}
				if (StartParam.instance.getParam("is_open_bank")==0 || T360C.is360Game()){
					this.bankBtn.visible=false;
				}
				if (ENV.isShowDied()){
					this.subscriptionBtn.visible=false;
					this.month_icon.visible=false;
				}
				for (var i=0;i < icons.length;i++){
					var icon=icons[i];
					if (icon.visible){
						icon.right=startRight;
						icon.bottom=startBottom;
						startRight+=120;
					}
					if (icon==this.ranking_btn){
						NoviceC.instance.stepPosData["rank"]={
							right:icon.right,
							bottom:icon.bottom
						};
					}
					if (icon==this.subscriptionBtn){
						NoviceC.instance.stepPosData["openFollow"]={
							right:icon.right,
							bottom:icon.bottom
						};
					}
				}
				}onClickNoviceMask(event){
				event.stopPropagation();
				}clickWorldCup(){
				UiManager.instance.loadView("Russia",null,"SMALL_TO_BIG");
				}clickShare(){
				UiManager.instance.loadView("Share",null,"SMALL_TO_BIG");
				}onCopyUserId(){
				GameTools.copyToClipboard(this.user_id.text.slice(3));
				}initCountDownBomb(){
				var end_time=ActivityM.instance.getActivityEndTime('bomb');
				var now=new Date().getTime();
				var now_time=Math.floor((now / 1000));
				var diff_time=end_time-now_time;
				if (diff_time < 0){
					diff_time=0;
				};
				var hoursleft=Math.floor((diff_time)/ 3600);
				var minutesleft=Math.floor(((diff_time)% 3600)/ 60);
				var secondsleft=(diff_time)% 60;
				if (minutesleft < 10)minutesleft="0"+minutesleft;
				if (secondsleft < 10)secondsleft="0"+secondsleft;
				var text="活动剩余:\n";
				if (hoursleft < 10){
					text=text+" ";
				}
				text=text+hoursleft+":"+minutesleft+":"+secondsleft;
				this.activity_count_down.text=text;
				}startPlay(){
				this.addActivityPointShow();
				this.useTicketBtn.visible=ActivityM.instance.activityTicketContinueTime;
				this.redPackBtn.visible=ActivityM.instance.redPackTicketContinueTime;
				this.resetRightBtn();
				this._index=this._index+1;
				if (this._index < this._horseTipArray.length){
					GameEventDispatch.instance.event("TestHorse",[this._horseTipArray[this._index]]);
				}
				}resetRightBtn(){
				if (this.useTicketBtn.visible && this.redPackBtn.top==100){
					this.redPackBtn.top=210;
					}else if (!this.useTicketBtn.visible && this.redPackBtn.visible){
					this.redPackBtn.top=100;
				}
				}onBankBtn(event){
				if (!RoleInfoM.instance.is_bind_tel){
					var info=new CertificationInfo();
					info.openFrom="bank";
					CertificationM.instance.info=info;
					CertificationM.instance.OpenCertification();
					}else{
					var info=new CertificationInfo();
					info.openFrom="bank";
					CertificationM.instance.info=info;
					CertificationM.instance.OpenCertification();
				}
				}onUseTicketBtn(event){
				UiManager.instance.loadView("UseTicket",null,"SMALL_TO_BIG");
				}onRedPackBtn(event){
				UiManager.instance.loadView("RedActivity",null,"SMALL_TO_BIG");
				}onBtnCopyClick(event){
				WxC.wx_set_clipboard_data(this.user_id.text.slice(3));
				}onActivityBtn(event){
				UiManager.instance.loadView("Activity",null,"SMALL_TO_BIG");
				}onRankBtn(event){
				UiManager.instance.loadView("Rank",null,"SMALL_TO_BIG");
				}onChangeSettingBtn(event){
				UiManager.instance.loadView("Setting",null,"SMALL_TO_BIG");
				}clickRegister(event){
				WxC.subscribeInfo([2]);
				UiManager.instance.loadView("Register",null,"SMALL_TO_BIG");
				}onCollectBtn(event){
				UiManager.instance.loadView("CollectLead",null,"SMALL_TO_BIG");
				}onCertificationBtn(event){
				if (CertificationM.instance.isOpenCertification()){
					var info=new CertificationInfo();
					info.openFrom="main";
					CertificationM.instance.info=info;
					CertificationM.instance.OpenCertification();
				}
				}onShortGiftBtn(){
				WebSocketManager.instance.send(50001,{});
				UiManager.instance.loadView("ShortGift",null,"SMALL_TO_BIG");
				}openShop(event){
				event.stopPropagation();{
					GameEventDispatch.instance.event("Shop","tab_coin");
				}
				}init(){
				if (RuleM.instance.isList==true){
					RuleM.instance.isList==false;
					var arr=ConfigManager.filter("cfg_scene",function(conf){
						return conf.type==0 && conf.hidden_battery_level > RoleInfoM.instance.getBattery()
					});
					for (var i=0;i < arr.length;i++){
						arr[i]['is_match']=false;
					}
					arr.push({"is_match":true,"spine_name":"jinjiyuchang"});
					if (arr.length !=this.chapterArr.length){
						for (var i=0;i < this.levelList.cells.length;i++){
							this.levelList.cells[i].getChildByName("sp").removeChildByName('spine');
						}
						this.chapterArr=arr;
						this.levelList.array=this.chapterArr;
					}
				}
				}updateItem(cell,index){
				var battery=RoleInfoM.instance.getBattery();
				var cfg=cell.dataSource;
				var ele_unlock_image=cell.getChildByName("unlockImageBg");
				var ele_unlock_image_txt=cell.getChildByName("unlockTxt");
				var ele_item_img=cell.getChildByName("sp");
				var activityImg=cell.getChildByName("activityImg");
				activityImg.visible=false;
				if (ActivityM.instance.activityPictureConfig && ActivityM.instance.activityPictureConfig[5]){
					activityImg.skin=ActivityM.instance.activityPictureConfig[5];
				}
				ele_item_img.offAll(Event.CLICK);
				if (ele_item_img.getChildByName("spine")==null){
					var spineRoot=new Sprite();
					var spine=new SpineTemplet(cfg.spine_name);
					spineRoot.addChild(spine);
					spine.play(0,true);
					spine.pivot(spine.spineWidth / 2,spine.spineHeight / 2);
					spineRoot.name="spine";
					spineRoot.x=175;
					spineRoot.y=190;
					cell.getChildByName("sp").addChild(spineRoot);
				}
				if (!cfg.is_match){
					activityImg.visible=this.isOpenPoint(cfg.id);
					ele_item_img.offAll(Event.CLICK);
					ele_unlock_image.visible=false;
					ele_unlock_image_txt.visible=false;
					ele_unlock_image_txt.value=cfg.unlockImage;
					if (battery < cfg.unlock){
						ele_unlock_image.visible=true;
						ele_unlock_image_txt.visible=true;
					}
					ele_item_img.on(Event.CLICK,this,this.gamePage(cfg));
					}else{
					if (ActivityM.instance.isShowMatchActivity){
						activityImg.visible=true;
						}else{
						activityImg.visible=this.isOpenPoint(5);
					}
					ele_unlock_image.visible=false;
					ele_unlock_image_txt.visible=false;
					ele_item_img.offAll(Event.CLICK);
					ele_item_img.on(Event.CLICK,this,this.onMatchBtnClick);
				}
				}isOpenPoint(scenId){
				if (ActivityM.instance.activityPictureConfig && ActivityM.instance.activityPictureConfig[5]){
					switch (scenId){
						case 1:
							return false;
						case 2:
							return ActivityM.instance.isShowRewRebate;
						case 3:
							return ActivityM.instance.isShowRewRebate;
						case 4:
							return ActivityM.instance.isShowSinceRebate;
						case 5:
							return ActivityM.instance.isShowDayMatchRebate;
						}
				}
				return false;
				}gamePage(cfg){
				var _$this=this;
				return function (){
					_$this._cfg=cfg;
					var batteryLevel=RoleInfoM.instance.getBattery();
					if (batteryLevel >=cfg.unlock){
						LoginM.instance.sceneId=cfg.id;
						GameEventDispatch.instance.event("StartLoad",[1]);
						}else{
						GameEventDispatch.instance.event("MsgTp",cfg.msg_tip_id);
					}
				}
				}onMatchBtnClick(){
				if (MatchM.instance.contestOpen && MatchM.instance.contestOpen==1){
					UiManager.instance.loadView("NewMatch",null,"SMALL_TO_BIG");
					}else{
					GameEventDispatch.instance.event("MsgTipContent","比赛场尚未开启");
				}
			}
			// UiManager.instance.loadView("Match",null,ShowType.SMALL_TO_BIG);
			firstCharge(){
				UiManager.instance.loadView("FirstCharge",null,"SMALL_TO_BIG");
				}onFriendBtn(){
				UiManager.instance.loadView("Friend",null,"SMALL_TO_BIG");
				}firstSubscription(){
				UiManager.instance.loadView("Subscription",null,"SMALL_TO_BIG");
				}exchange(){
				UiManager.instance.loadView("Exchange",null,"SMALL_TO_BIG");
				}pack(){
				UiManager.instance.loadView("Pack",null,"SMALL_TO_BIG");
				}refreshMonthCard(){
				this.initMonthCardIcon();
				}initMonthCardIcon(){
				this.month_icon.offAll(Event.CLICK);
				if (RoleInfoM.instance.haveValidMonthCard()){
					var cards=RoleInfoM.instance.getMonthCard();
					for (var id in cards){
						if (cards[id].can_accept){
							this.month_icon.on(Event.CLICK,this,function(event){
								event.stopPropagation();
								var a=new S2c_14006();
								a.id=id;
								WebSocketManager.instance.send(14006,a);
							});
							return
						}
					}
					this.month_icon.on(Event.CLICK,this,function(event){
						event.stopPropagation();
						UiManager.instance.loadView("MonthCard",{id:18},"SMALL_TO_BIG");
					});
					}else{
					this.month_icon.on(Event.CLICK,this,function(event){
						event.stopPropagation();
						UiManager.instance.loadView("MonthCard",{id:18},"SMALL_TO_BIG");
					});
				}
				}initFirstChargeBtn(){
				if (ShopC.instance.isShowFirstIcon()){
					this.firstChargeBtn.visible=true;
					}else{
					this.firstChargeBtn.visible=false;
					this.closeSubIco();
				}
				this.resetIcon();
				}closeSubIco(){
				if (RoleInfoM.instance.getFirstSubscription()){
					this.subscriptionBtn.visible=true;
					}else{
					this.subscriptionBtn.visible=false;
				}
				this.resetIcon();
				}showRedPoint(){
				var red_points=RoleInfoM.instance.getRedPoints();
				var vertical_h=10;
				var horizontal_percent=0.75;
				if (8 & red_points){
					RedpointC.instance.removeRedPoint(this.registerBtn);
					RedpointC.instance.addRedPointToIcon(this.registerBtn,horizontal_percent,vertical_h);
					}else{
					RedpointC.instance.removeRedPoint(this.registerBtn);
				}
				if (16 & red_points){
					RedpointC.instance.removeRedPoint(this.firstChargeBtn);
					RedpointC.instance.addRedPointToIcon(this.firstChargeBtn,horizontal_percent,vertical_h);
					}else{
					RedpointC.instance.removeRedPoint(this.firstChargeBtn);
				}
				if (64 & red_points){
					RedpointC.instance.removeRedPoint(this.shopBtn);
					RedpointC.instance.addRedPointToIcon(this.shopBtn,horizontal_percent,vertical_h);
					}else{
					RedpointC.instance.removeRedPoint(this.shopBtn);
				}
				if (64 & red_points){
					RedpointC.instance.removeRedPoint(this.month_icon);
					RedpointC.instance.addRedPointToIcon(this.month_icon,horizontal_percent,vertical_h);
					}else{
					RedpointC.instance.removeRedPoint(this.month_icon);
				}
				if (128 & red_points){
					RedpointC.instance.removeRedPoint(this.packBtn);
					RedpointC.instance.addRedPointToIcon(this.packBtn,horizontal_percent,vertical_h);
					}else{
					RedpointC.instance.removeRedPoint(this.packBtn);
				}
				if (!ENV.isShowDied()){
					if ((8192 & red_points)&& !LevelM.instance.rankDoubleReward){
						RedpointC.instance.removeSpinePoint(this.ranking_btn);
						RedpointC.instance.addSpinePointToIcon(this.ranking_btn,horizontal_percent+0.1,vertical_h+20);
						}else{
						RedpointC.instance.removeSpinePoint(this.ranking_btn);
					}
					}else{
					RedpointC.instance.removeSpinePoint(this.ranking_btn);
				}
				}shortRed(){
				var vertical_h=10;
				var horizontal_percent=0.75;
				var arr_red=RoleInfoM.instance.calcRed();
				for (var i=0;i < arr_red.length;i++){
					if (arr_red[i]==1){
						RedpointC.instance.removeRedPoint(this.shortGiftBtn);
						RedpointC.instance.addRedPointToIcon(this.shortGiftBtn,horizontal_percent,vertical_h);
						break ;
						}else{
						RedpointC.instance.removeRedPoint(this.shortGiftBtn);
					}
				}
				}showFriendRedPoint(){
				var vertical_h=10;
				var horizontal_percent=0.75;
				if (FriendM.instance.noApplyFriendList()){
					RedpointC.instance.removeRedPoint(this.friendBtn);
					RedpointC.instance.addRedPointToIcon(this.friendBtn,horizontal_percent,vertical_h);
					}else{
					RedpointC.instance.removeRedPoint(this.friendBtn);
				}
				}addActivityPointShow(){
				var vertical_h=10;
				var horizontal_percent=0.75;
				if (ActivityM.instance.isShowShopRebate){
					RedpointC.instance.removeActivityPoint(this.shopBtn);
					RedpointC.instance.addActivityPointToIcon(this.shopBtn,horizontal_percent,vertical_h,false);
					}else{
					RedpointC.instance.removeActivityPoint(this.shopBtn);
				}
				if (WxC.isInMiniGame()&& ActivityM.instance.isShowShareRebate){
					RedpointC.instance.removeActivityPoint(this.shareBtn);
					RedpointC.instance.addActivityPointToIcon(this.shareBtn,horizontal_percent,vertical_h,false);
					}else{
					RedpointC.instance.removeActivityPoint(this.shareBtn);
				}
				if (ActivityM.instance.activityTicketContinueTime){
					RedpointC.instance.removeActivityPoint(this.useTicketBtn);
					RedpointC.instance.addActivityPointToIcon(this.useTicketBtn,horizontal_percent,vertical_h,false);
					}else{
					RedpointC.instance.removeActivityPoint(this.useTicketBtn);
				}
				if (LevelM.instance.rankDoubleReward){
					RedpointC.instance.removeDoubleRewardPoint(this.ranking_btn);
					RedpointC.instance.addDoubleRewardPointToIcon(this.ranking_btn,horizontal_percent-0.2,vertical_h-15,false);
					}else{
					RedpointC.instance.removeDoubleRewardPoint(this.ranking_btn);
				}
				if (ActivityM.instance.isShowMainRank){
					RedpointC.instance.removeActivityPoint(this.ranking_btn);
					RedpointC.instance.addActivityPointToIcon(this.ranking_btn,horizontal_percent,vertical_h,false);
					}else{
					RedpointC.instance.removeActivityPoint(this.ranking_btn);
				}
				}start(){
				UiManager.instance.loadView("HorseTip");
				}startMovie(){
				this.horseTxt.x=this.horseTxt.x-3;
				}clickPath(){
				UiManager.instance.loadView("TestImpact");
			}
			//GameEventDispatch.instance.event(GameEvent.RewardFish);
			addCoin(event){
				event.stopPropagation();
				GameEventDispatch.instance.event("Shop","tab_coin");
				}addMini(event){
				event.stopPropagation();
				GameEventDispatch.instance.event("Shop","tab_mini");
				}addDiamond(event){
				event.stopPropagation();
				GameEventDispatch.instance.event("Shop","tab_diamond");
				}profileUpdate(){
				var tmpCoin=(RoleInfoM.instance.getCoin()-RuleM.instance.coinCount+RoleInfoM.instance.getBindCoin());
				if (RoleInfoM.instance.getAvatar()){
					if (this.playimg.skin !=RoleInfoM.instance.getAvatar()){
						this.playimg.skin=RoleInfoM.instance.getAvatar();
					}
				};
				var coin;
				var diamond=RoleInfoM.instance.getDiamond()+"";
				if (tmpCoin < 0){
					tmpCoin=0;
				}
				coin=tmpCoin+"";
				this.goldCount.text=coin;
				this.diamondCount.text=diamond;
				if (WxC.isInMiniGame()){
					this.miniCount.text=RoleInfoM.instance.mini_balance+"";
				}
				if (coin.length > 10 || diamond.length > 10){
					var scale=0.8;
					this.goldCount.scale(scale,scale);
					this.diamondCount.scale(scale,scale);
					}else{
					this.goldCount.scale(1,1);
					this.diamondCount.scale(1,1);
				}
				this.levelCount.text="lv."+RoleInfoM.instance.getLevel()+"";
				this.nickname.text=LoginInfoM.instance.filterName(GameTools.formatNickName(RoleInfoM.instance.getName()));
				this.syncBankInfoEnd();
				this.levelList.refresh();
				}syncBankInfoEnd(){
				if (T360C.is360Game()){
					this.user_id.text="ID:"+StartParam.instance.getParam("uid");
					if (WxC.isInMiniGame()){
						this.btnCopy.visible=true;
						this.btnCopy.disabled=false;
						this.btnCopy.offAll(Event.CLICK);
						this.btnCopy.on(Event.CLICK,this,this.onBtnCopyClick);
						}else{
						this.btnCopy.visible=false;
						this.user_id.offAll(Event.CLICK);
						this.user_id.on(Event.CLICK,this,this.onCopyUserId);
					}
					}else{
					if (StartParam.instance.getParam("jjhid")&& StartParam.instance.getParam("jjhid").length > 0){
						this.user_id.text="ID:"+StartParam.instance.getParam("jjhid");
						if (WxC.isInMiniGame()){
							this.btnCopy.visible=true;
							this.btnCopy.disabled=false;
							this.btnCopy.offAll(Event.CLICK);
							this.btnCopy.on(Event.CLICK,this,this.onBtnCopyClick);
							}else{
							this.btnCopy.visible=false;
							this.user_id.offAll(Event.CLICK);
							this.user_id.on(Event.CLICK,this,this.onCopyUserId);
						}
						}else{
						if (WxC.isInMiniGame()){
							this.btnCopy.visible=true;
							this.btnCopy.disabled=true;
							}else{
							this.btnCopy.visible=false;
						}
						this.user_id.text="绑定成功获取ID";
					}
				}
				}upgradeBattery(){
				this.levelList.refresh();
				}isIphoneXCrossScreen(){
				var isIphoneXCrossScreen=GameTools.isCrossScreen()&& Browser.clientWidth==812 && Browser.onIOS;
				return isIphoneXCrossScreen
				}screenResize(){
				this.bg_img.width=1280;
				this.bg_img.height=720;
				this.maskNovice.width=Laya.stage.width;
				this.maskNovice.height=Laya.stage.height;
				if ((Laya.stage.height / Laya.stage.width)> (720 / 1280)){
					this.bg_img.height=Laya.stage.height;
					}else{
					this.bg_img.width=Laya.stage.width;
				}
				this.levelList.y=Laya.stage.height / 2;
				this.levelList.width=Laya.stage.width;
				this.shareBtn.visible=ENV.openSharePage;
				this.shareBtn.left=70;
				if (this.isIphoneXCrossScreen()){
					if (ScreenAdaptManager.instance.notch=="left"){
						this.shareBtn.left=20+this.iphoneXOffset;
						}else if (ScreenAdaptManager.instance.notch=="right"){
					}
				}
				this.size(Laya.stage.width,Laya.stage.height);
				}resetRoom(){
				var c2s=new C2s_12001();
				c2s.scene_id=this._cfg.id;
				WebSocketManager.instance.send(12001,c2s);
				}updateMiniBalance(){
				this.miniCount.text=RoleInfoM.instance.mini_balance+"";
				}onClickPlay(){
				this.noviceBox.visible=false;
				this.maskNovice.visible=false;
				WebSocketManager.instance.send(37000,{"is_finish":0,"step_id":'step1'});
				}onClickNotPlay(){
				this.noviceBox.visible=false;
				this.maskNovice.visible=false;
				GameEventDispatch.instance.event("StartNoviceGuide",['steps1']);
				}checkNovice(){
				var step1_data=RoleInfoM.instance.guide_status['step1'];
				if (step1_data){
					if (step1_data.status==0){
						this.noviceBox.visible=true;
						this.maskNovice.visible=true;
					}
				}
				}openBankView(){
				UiManager.instance.loadView("Bank",null,"SMALL_TO_BIG");
				}noviceSliderContest(){
				this.levelList.tweenTo(10,2000);
				}noviceOpenContest(){
				this.onMatchBtnClick();
				}noviceListChange(value){
				this.levelList.scrollBar.value=value;
				}syncActivityData(){
				this.levelList.refresh();
				}register(){
				GameEventDispatch.instance.on("SyncBankCoin",this,this.syncBankInfoEnd);
				GameEventDispatch.instance.on("OpenBankView",this,this.openBankView);
				GameEventDispatch.instance.on("UpdateProfile",this,this.profileUpdate);
				GameEventDispatch.instance.on("UpdateFirstCharge",this,this.initFirstChargeBtn);
				GameEventDispatch.instance.on("ShowRedPoint",this,this.showRedPoint);
				GameEventDispatch.instance.on("BatteryBuyRet",this,this.upgradeBattery);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("MonthCardUpdate",this,this.refreshMonthCard);
				LoginM.instance.pageId="main_page";
				if (LoginM.instance.IsfirstEntryGame){
					UiManager.instance.loadView("InsideNotice");
				}
				GameEventDispatch.instance.on("UpdateMiniBalance",this,this.updateMiniBalance);
				GameEventDispatch.instance.on("CloseRegisterPage",this,this.checkNovice);
				GameEventDispatch.instance.on("NoviceSliderContest",this,this.noviceSliderContest);
				GameEventDispatch.instance.on("NoviceOpenContest",this,this.noviceOpenContest);
				GameEventDispatch.instance.on("NoviceListChange",this,this.noviceListChange);
				GameEventDispatch.instance.on("SyncSubscriptionIco",this,this.closeSubIco);
				GameEventDispatch.instance.on("isCollect",this,this.collectUpdate);
				GameEventDispatch.instance.on("LoadMiniAdRes",this,this.initMiniBtn);
				GameEventDispatch.instance.on("syncShortData",this,this.shortRed);
				GameEventDispatch.instance.on("SyncCertificationInfo",this,this.refreshCertificationInfo);
				GameEventDispatch.instance.on("WxMiniLoginComplete",this,this.refreshGetWxInfo);
				GameEventDispatch.instance.on("refreshApplyFriendList",this,this.showFriendRedPoint);
				GameEventDispatch.instance.on("SyncActivityStatus",this,this.syncActivityData);
				}unRegister(){
				GameEventDispatch.instance.off("SyncBankCoin",this,this.syncBankInfoEnd);
				GameEventDispatch.instance.off("OpenBankView",this,this.openBankView);
				GameEventDispatch.instance.off("LoadMiniAdRes",this,this.initMiniBtn);
				Laya.timer.clear(this,this.updataIndexMiniPro);
				GameEventDispatch.instance.off("UpdateProfile",this,this.profileUpdate);
				GameEventDispatch.instance.off("UpdateFirstCharge",this,this.initFirstChargeBtn);
				GameEventDispatch.instance.off("ShowRedPoint",this,this.showRedPoint);
				GameEventDispatch.instance.off("BatteryBuyRet",this,this.upgradeBattery);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("MonthCardUpdate",this,this.refreshMonthCard);
				LoginM.instance.IsfirstEntryGame=false;
				GameEventDispatch.instance.off("UpdateMiniBalance",this,this.updateMiniBalance);
				GameEventDispatch.instance.off("CloseRegisterPage",this,this.checkNovice);
				GameEventDispatch.instance.off("NoviceSliderContest",this,this.noviceSliderContest);
				GameEventDispatch.instance.off("NoviceOpenContest",this,this.noviceOpenContest);
				GameEventDispatch.instance.off("NoviceListChange",this,this.noviceListChange);
				GameEventDispatch.instance.off("SyncSubscriptionIco",this,this.closeSubIco);
				GameEventDispatch.instance.off("isCollect",this,this.collectUpdate);
				GameEventDispatch.instance.off("syncShortData",this,this.shortRed);
				GameEventDispatch.instance.off("SyncCertificationInfo",this,this.refreshCertificationInfo);
				GameEventDispatch.instance.off("WxMiniLoginComplete",this,this.refreshGetWxInfo);
				GameEventDispatch.instance.off("refreshApplyFriendList",this,this.showFriendRedPoint);
				GameEventDispatch.instance.off("SyncActivityStatus",this,this.syncActivityData);
			}
		}

		view.mainPage.MainPageView=Laya.MainPageView=MainPageView;	
		

		class MaskView extends MaskUI{
			constructor (){
				super();
				var _$this=this;
				Laya.stage.on(Event.CLICK,this,function(){
					_$this.play();
				});
			}
			StartGames(parm=null){
				}play(){
				var soundPath=ConfigManager.getConfValue("cfg_global",1,"click_sound");
				if (WxC.isInMiniGame()){
					soundPath="wxlocal/click.mp3";
				}
				GameSoundManager.playSound(soundPath);
				}register(){
			}unRegister(){}
		}

		view.mask.MaskView=Laya.MaskView=MaskView;	
		

		class MatchPage extends MatchPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.select_type="";
				this.cache_time=5000;
				//接口缓存毫秒数
				this.last_time=0;
				//比赛列表数据
				this.match_data={};
				//获胜比赛列表数据
				this.win_match_data={};
				this.match_list_arr=[];
				this.win_match_list_arr=[];
				this.select_match_data={};
			}
			// 'daily','challenge','match','snatch'
			StartGames(parm=null){
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,null);
				this.joinBox.visible=false;
				this._startX=this.x;
				this._startY=this.y;
				this.list1.array=[];
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.rankQuitBtn.on(Event.CLICK,this,this.onRankQuitBtnClick);
				this.ruleQuitBtn.on(Event.CLICK,this,this.onRuleQuitBtnClick);
				this.rule_btn.on(Event.CLICK,this,this.onClickRuleBtn);
				this.joinBtn.on(Event.CLICK,this,this.onJoinBtn);
				this.list1.renderHandler=new Handler(this,this.updateItem);
				this.list_rank.renderHandler=new Handler(this,this.updateDailyRankItem);
				this.list_rank2.renderHandler=new Handler(this,this.updateChallengeRankItem);
				this.tab1.on(Event.CLICK,this,this.onTab1Btn);
				this.tab2.on(Event.CLICK,this,this.onTab2Btn);
				this.tab3.on(Event.CLICK,this,this.onTab3Btn);
				this.tab4.on(Event.CLICK,this,this.onTab4Btn);
				this.screenResize();
				this.onTab1Btn();
				this.addActivityPointShow();
				this.rank_box.visible=false;
				this.rule_box.visible=false;
				}addActivityPointShow(){
				var vertical_h=10;
				var horizontal_percent=0.75;
				if (ActivityM.instance.isShowDayMatchRebate){
					RedpointC.instance.removeActivityPoint(this.tab1);
					RedpointC.instance.addActivityPointToIcon(this.tab1,horizontal_percent,vertical_h,false);
					}else{
					RedpointC.instance.removeActivityPoint(this.tab1);
				}
				}onJoinBtn(){
				var value=this.roomInput.text;
				var pattern_room=/^[0-9]*[1-9][0-9]*$/;
				if (pattern_room.test(value)){
					MatchM.instance.initMatchimgGameData();
					var roomId=parseInt(value);
					LoginM.instance.roomId=roomId;
					WebSocketManager.instance.send(12110,{roomNumber:LoginM.instance.roomId});
					}else{
					GameEventDispatch.instance.event("MsgTipContent","请输入正确的房间号");
				}
				}synFindMatchGameData(){
				if (!RoleInfoM.instance.isConsumeEnough(MatchM.instance.findRoomData.costId,MatchM.instance.findRoomData.costNum)&& !MatchM.instance.findRoomData.isFree){
					if (MatchM.instance.findRoomData.costId==1){
						GameEventDispatch.instance.event("MsgTipContent","金币不足");
					}
					else if (MatchM.instance.findRoomData.costId==4){
						GameEventDispatch.instance.event("MsgTipContent","钻石不足");
						}else{
						GameEventDispatch.instance.event("MsgTipContent","鱼雷不足");
					}
					}else{
					var content="确认报名？";
					if (MatchM.instance.findRoomData.isFree){
						content="确认报名（本场比赛可免费进行)";
						}else{
						if (MatchM.instance.findRoomData.costId==1){
							content="确认报名（本场比赛需花费"+MatchM.instance.findRoomData.costNum+"金币)";
						}
						else if (MatchM.instance.findRoomData.costId==4){
							content="确认报名（本场比赛需花费"+MatchM.instance.findRoomData.costNum+"钻石)";
							}else{
							content="确认报名（本场比赛需花费"+MatchM.instance.findRoomData.costNum+"枚普通鱼雷)";
						}
					};
					var info=new QuitTipInfo();
					info.state=1;
					info.content=content;
					info.confirmCallback=Handler.create(this,this.joinRoomSuccess);
					info.autoCloseTime=10;
					GameEventDispatch.instance.event("QuitTip",info);
				}
				}joinRoomSuccess(){
				LoginM.instance.setContestId(LoginM.instance.roomId,7);
				GameEventDispatch.instance.event("StartLoad",[1]);
				}clearAllElement(){
				this.tab1.selected=false;
				this.tab2.selected=false;
				this.tab3.selected=false;
				this.tab4.selected=false;
				this.list1.visible=false;
				this.joinBox.visible=false;
				this.list1.height=420;
				}onTab4Btn(){
				this.clearAllElement();
				this.tab4.selected=true;
				this.list1.visible=true;
				this.roomInput.text="";
				this.select_type="snatch";
				this.getMatchList();
				this.getWinMatchList();
				}onTab3Btn(){
				this.clearAllElement();
				this.tab3.selected=true;
				this.list1.visible=true;
				this.joinBox.visible=true;
				this.select_type="match";
				this.getMatchList();
				this.getWinMatchList();
				this.list1.height=332;
				}onTab2Btn(){
				this.clearAllElement();
				this.tab2.selected=true;
				this.list1.visible=true;
				this.roomInput.text="";
				this.select_type="challenge";
				this.getMatchList();
				this.getWinMatchList();
				}onTab1Btn(){
				this.clearAllElement();
				this.tab1.selected=true;
				this.list1.visible=true;
				this.roomInput.text="";
				this.select_type="daily";
				this.getMatchList();
				this.getWinMatchList();
				}getWinMatchList(){
				var _$this=this;
				var token=StartParam.instance.getParam("access_token");
				ApiManager.instance.get_not_receive_reward(
				token,
				Handler.create(this,function(result){
					_$this.win_match_data=result.data;
					_$this.setMatchListDate();
					_$this.wait_ani.visible=false;
				}),
				Handler.create(this,function(result){
					console.log("获取胜利比赛列表出错");
					console.log(result);
				}));
				}getMatchList(){
				var _$this=this;
				var token=StartParam.instance.getParam("access_token");
				var cur_d=new Date();
				var cur_time=cur_d.getTime();
				if (((cur_time-this.last_time))> this.cache_time){
					this.last_time=cur_time;
					this.wait_ani.visible=true;
					ApiManager.instance.get_match_list(
					token,
					Handler.create(this,function(result){
						_$this.match_data=result.data;
						_$this.setMatchListDate();
						_$this.wait_ani.visible=false;
					}),
					Handler.create(this,function(result){
						console.log("获取比赛列表出错");
						console.log(result);
					}));
					}else{
					this.setMatchListDate();
				}
				}setMatchListDate(){
				if (this.select_type){
					if (this.match_data){
						this.match_list_arr=this.match_data[this.select_type] || [];
					}
					if (this.win_match_data){
						this.win_match_list_arr=this.win_match_data[this.select_type] || [];
					}
					for (var i=0;i < this.win_match_list_arr.length;i++){
						this.win_match_list_arr[i].is_win=true;
						this.win_match_list_arr[i].name=this.win_match_list_arr[i].contest_name;
					}
					for (var i=0;i < this.match_list_arr.length;i++){
						this.match_list_arr[i].is_win=false;
					};
					var not_start_arr=[];
					var start_arr=[];
					var end_arr=[];
					for (var i=0;i < this.match_list_arr.length;i++){
						var execute_status=this.match_list_arr[i].execute_status;
						if (execute_status=="not_start"){
							not_start_arr.push(this.match_list_arr[i]);
							}else if (execute_status=="start"){
							if (this.match_list_arr[i].sub_type==2){
								start_arr.unshift(this.match_list_arr[i]);
								}else{
								start_arr.push(this.match_list_arr[i]);
							}
							}else if (execute_status=="end"){
							end_arr.push(this.match_list_arr[i]);
						}
					}
					this.list1.array=this.win_match_list_arr.concat(start_arr).concat(not_start_arr).concat(end_arr);
				}
				}screenResize(){
				var contentWidth=850;
				var contentHeight=660;
				var contentStartX=215;
				var contentStartY=30;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				this.rankQuitBtn.left=contentStartX-posXOff;
				this.rankQuitBtn.top=contentStartY-posYOff;
				this.ruleQuitBtn.left=contentStartX-posXOff;
				this.ruleQuitBtn.top=contentStartY-posYOff;
				}match_sign(d){
				MatchM.instance.initMatchimgGameData();
				LoginM.instance.setContestId(d.id,d.scene_id);
				GameEventDispatch.instance.event("StartLoad",[1]);
				}getMatchRank(){
				var _$this=this;
				var token=StartParam.instance.getParam("access_token");
				var match_rank_arr=[];
				var rewards_arr=this.select_match_data.reward_set;
				for (var i=0;i < rewards_arr.length;i++){
					var rewards=[];
					for (var j=0;j < rewards_arr[i].length;j+=2){
						rewards.push({reward_item_id:rewards_arr[i][j],reward_item_num:rewards_arr[i][j+1]});
					}
					match_rank_arr.push({rewards:rewards,rank:i+1});
				}
				this.wait_ani.visible=true;
				var match_id=null;
				if (this.select_match_data['is_win']){
					match_id=this.select_match_data.contest_id;
					}else{
					match_id=this.select_match_data.id;
				}
				ApiManager.instance.get_contest_daily_rank_list(
				token,
				match_id,
				Handler.create(this,function(result){
					var data=result.data;
					for (var i=0;i < data['top'].length;i++){
						match_rank_arr[i].avatar=data['top'][i].avatar;
						match_rank_arr[i].nickname=data['top'][i].nickname;
						match_rank_arr[i].integral=data['top'][i].integral;
					}
					_$this.list_rank.array=match_rank_arr;
					if (data['max_place'] > 0){
						_$this.myrank.text=data['max_place']+"";
						}else{
						_$this.myrank.text="未上榜";
					}
					_$this.list_rank.refresh();
					_$this.wait_ani.visible=false;
				}),
				Handler.create(this,function(result){
					console.log("获取比赛排名列表出错");
					console.log(result);
				}));
				}format(st){
				return st.getHours()+':'+(st.getMinutes()< 10 ? "0" :"")+st.getMinutes()
				}init_rule(){
				if (this.select_match_data){
					if (this.select_match_data.type=='daily'){
						this.rule_match_type.text="日常赛";
						}else if (this.select_match_data.type=='challenge'){
						this.rule_match_type.text="挑战赛";
						}else if (this.select_match_data.type=='match'){
						this.rule_match_type.text="匹配赛";
					};
					var st=new Date(this.select_match_data['start_time'] *1000);
					var et=new Date(this.select_match_data['end_time'] *1000);
					this.rule_match_time.text=this.format(st)+'~'+this.format(et);
					var time_span=this.select_match_data['end_time']-this.select_match_data['start_time'];
					this.rule_match_long.text=this.select_match_data.continue_time+"秒";
					var cfg=cfg_scene.instance(this.select_match_data.scene_id);
					this.rule_match_battery.text=cfg_battery.instance(cfg.unlock).comsume+"倍炮解锁";
					this.rule_match_desc.text=cfg.description;
				}
				}onDailyMatchClick(d){
				this.select_match_data=d;
				this.rank_box.visible=true;
				this.daily_box.visible=true;
				this.challenge_box.visible=false;
				this.match_title.text=this.select_match_data['name'];
				this.updateSignBtn(this.rank_sign_box,this.select_match_data);
				this.init_rule();
				this.list_rank.scrollTo(0);
				this.getMatchRank();
				}onMatchMatchClick(d){
				this.select_match_data=d;
				this.rank_box.visible=true;
				this.daily_box.visible=false;
				this.challenge_box.visible=true;
				this.match_title.text=this.select_match_data['name'];
				this.updateSignBtn(this.rank_sign_box,this.select_match_data);
				this.init_rule();
				this.list_rank2.scrollTo(0);
				var arr2=[];
				arr2.push(this.select_match_data['reward_set'][2]);
				arr2.push(this.select_match_data['reward_set'][3]);
				arr2.push(this.select_match_data['reward_set'][4]);
				this.list_rank2.array=arr2;
				}onChallengeMatchClick(d){
				this.select_match_data=d;
				this.match_title.text=this.select_match_data['name'];
				this.rank_box.visible=true;
				this.daily_box.visible=false;
				this.challenge_box.visible=true;
				this.updateSignBtn(this.rank_sign_box,this.select_match_data);
				this.init_rule();
				this.list_rank2.scrollTo(0);
				var arr2=this.select_match_data['reward_set'].slice(0);
				this.list_rank2.array=arr2.reverse();
				}updateChallengeRankItem(cell,index){
				var d=cell.dataSource;
				var ele_rank=cell.getChildByName("rank");
				var rewardsSet=[];
				if (this.select_match_data["type"]=="match"){
					ele_rank.text=(index+2)+"人局";
					rewardsSet=d[0];
					}else{
					ele_rank.text="第"+(this.select_match_data["max_second"]-index)+"轮";
					rewardsSet=d;
				};
				var ele_list_reward=cell.getChildByName("list_reward");
				ele_list_reward.renderHandler=new Handler(this,this.updateItemReward);
				var rewards=[];
				for (var i=0;i < rewardsSet.length;i+=2){
					rewards.push({reward_item_id:rewardsSet[i],reward_item_num:rewardsSet[i+1]});
				}
				ele_list_reward.array=rewards;
				if (rewards.length==1){
					ele_list_reward.pivotX=-100;
					}else{
					ele_list_reward.pivotX=0;
				}
				}updateDailyRankItem(cell,index){
				var d=cell.dataSource;
				var ele_player_name=cell.getChildByName("player_name");
				var ele_level=cell.getChildByName("imgBox").getChildByName("level");
				var ele_image=cell.getChildByName("imgBox").getChildByName("playimg");
				var ele_point=cell.getChildByName("point");
				var ele_rank_icon=cell.getChildByName("rank_icon");
				var ele_rank=cell.getChildByName("rank");
				ele_rank_icon.visible=false;
				ele_rank.visible=false;
				if (0==index){
					ele_rank_icon.visible=true;
					ele_rank_icon.skin="ui/match/rank1.png";
					}else if (1==index){
					ele_rank_icon.visible=true;
					ele_rank_icon.skin="ui/match/rank2.png";
					}else if (2==index){
					ele_rank_icon.visible=true;
					ele_rank_icon.skin="ui/match/rank3.png";
					}else{
					ele_rank.visible=true;
					ele_rank.text=index+1+"";
				}
				ele_image.skin="ui/common/nan.png";
				if (d.avatar){
					ele_image.skin=d.avatar;
					}else{
					ele_image.skin="ui/common/nan.png";
				}
				if (d.nickname){
					ele_player_name.text=LoginInfoM.instance.filterName(d.nickname);
					}else{
					ele_player_name.text="";
				}
				if (d.integral >=0 && d.integral !=null){
					ele_point.text=d.integral+"";
					}else{
					ele_point.text="";
				}
				if (d.level){
					ele_level.text="lv："+d.level;
					}else{
					ele_level.text="";
				};
				var ele_list_reward=cell.getChildByName("list_reward");
				ele_list_reward.renderHandler=new Handler(this,this.updateItemReward);
				var rewards=d.rewards;
				ele_list_reward.array=rewards;
				if (rewards.length==1){
					ele_list_reward.pivotX=-100;
					}else{
					ele_list_reward.pivotX=0;
				}
				}updateSignBtn(cell,d){
				var _$this=this;
				var ele_sign_text=cell.getChildByName("sign_text");
				var ele_accept_text=cell.getChildByName("accept_text");
				var ele_sign_price=cell.getChildByName("sign_price");
				var ele_sign_price_unit=cell.getChildByName("sign_price_unit");
				var ele_join_btn=cell.getChildByName("join_btn");
				if (!d["consume_goods_id"]){
					d["consume_goods_id"]=1;
				}
				ele_sign_price_unit.skin=ConfigManager.getConfValue("cfg_goods",d["consume_goods_id"],"waceIcon");
				ele_sign_text.visible=false;
				ele_sign_price.visible=false;
				ele_sign_price_unit.visible=false;
				ele_accept_text.visible=false;
				ele_join_btn.gray=false;
				ele_sign_price_unit.gray=false;
				ele_sign_price.gray=false;
				ele_sign_text.gray=false;
				ele_join_btn.gray=false;
				ele_join_btn.offAll(Event.CLICK);
				var cfg=cfg_scene.instance(d.scene_id);
				if (d.is_win){
					ele_accept_text.visible=true;
					ele_join_btn.on(Event.CLICK,this,function(event){
						event.stopPropagation();
						WebSocketManager.instance.send(35005,{contest_id:d.contest_id});
					});
					}else{
					ele_join_btn.gray=false;
					ele_sign_price_unit.gray=false;
					ele_sign_price.gray=false;
					ele_sign_text.gray=false;
					ele_join_btn.gray=false;
					if (d.execute_status=="not_start"){
						ele_sign_text.skin="ui/match/mianfei.png";
						ele_sign_text.visible=true;
						ele_sign_text.gray=true;
						ele_join_btn.gray=true;
						ele_join_btn.on(Event.CLICK,this,function(event){
							event.stopPropagation();
							GameEventDispatch.instance.event("MsgTipContent","比赛未开始");
						});
						}else if (d.execute_status=="end"){
						ele_sign_text.skin="ui/common_ex/t_expired.png";
						ele_sign_text.visible=true;
						ele_sign_text.gray=true;
						ele_join_btn.gray=true;
						ele_join_btn.on(Event.CLICK,this,function(event){
							event.stopPropagation();
							GameEventDispatch.instance.event("MsgTipContent","比赛已结束");
						});
						}else if (d.execute_status=="start"){
						if (d.free_times > 0){
							ele_sign_text.skin="ui/match/mianfei.png";
							ele_sign_text.visible=true;
							}else{
							ele_sign_text.visible=false;
							ele_sign_price.visible=true;
							ele_sign_price_unit.visible=true;
							ele_sign_price.value=d.consume_gold;
						}
						if (RoleInfoM.instance.getBattery()>=cfg.unlock){
							if (!RoleInfoM.instance.isConsumeEnough(d.consume_goods_id,d.consume_gold)&& d.free_times <=0){
								ele_sign_text.gray=true;
								ele_join_btn.gray=true;
								ele_sign_price.gray=true;
								ele_sign_price_unit.gray=true;
								ele_join_btn.on(Event.CLICK,this,function(event){
									event.stopPropagation();
									if (d.consume_goods_id==1){
										GameEventDispatch.instance.event("MsgTipContent","金币不足");
									}
									else if (d.consume_goods_id==4){
										GameEventDispatch.instance.event("MsgTipContent","钻石不足");
										}else{
										GameEventDispatch.instance.event("MsgTipContent","鱼雷不足");
									}
								});
								}else{
								var content="确认报名？";
								if (d.free_times > 0){
									content="确认报名（本场比赛可免费进行)";
									}else{
									if (d.consume_goods_id==1){
										content="确认报名（本场比赛需花费"+d.consume_gold+"金币)";
									}
									else if (d.consume_goods_id==4){
										content="确认报名（本场比赛需花费"+d.consume_gold+"钻石)";
										}else{
										content="确认报名（本场比赛需花费"+d.consume_gold+"枚普通鱼雷)";
									}
								}
								ele_join_btn.on(Event.CLICK,this,function(event){
									event.stopPropagation();
									var info=new QuitTipInfo();
									info.state=1;
									info.content=content;
									info.confirmCallback=Handler.create(this,_$this.match_sign,[d]);
									info.conFirmArgs=d;
									info.autoCloseTime=10;
									GameEventDispatch.instance.event("QuitTip",info);
								});
							}
							}else{
							ele_sign_text.gray=true;
							ele_join_btn.gray=true;
							ele_sign_price.gray=true;
							ele_sign_price_unit.gray=true;
							ele_join_btn.on(Event.CLICK,this,function(event){
								event.stopPropagation();
								GameEventDispatch.instance.event("MsgTipContent",cfg_battery.instance(cfg.unlock).comsume+"倍炮解锁");
							});
						}
					}
				}
				}updateItem(cell,index){
				var d=cell.dataSource;
				var ele_match_name=cell.getChildByName("match_name");
				var ele_time_label=cell.getChildByName("time_label");
				var ele_clock_image=cell.getChildByName("clock");
				var match_head_icon_img=cell.getChildByName("match_head_icon");
				var cfg=cfg_scene.instance(d.scene_id);
				var begin_time=new Date(d.start_time *1000);
				var end_time=new Date(d.end_time *1000);
				var begin_minutes=(begin_time.getMinutes()< 10 ? "0" :"")+begin_time.getMinutes();
				var end_minutes=(end_time.getMinutes()< 10 ? "0" :"")+end_time.getMinutes();
				ele_time_label.text=begin_time.getHours()+":"+begin_minutes+"~"+end_time.getHours()+":"+end_minutes;
				var ele_list_reward=cell.getChildByName("list_reward");
				cell.offAll(Event.CLICK);
				ele_list_reward.renderHandler=new Handler(this,this.updateItemReward);
				this.updateSignBtn(cell,d);
				if (d.is_win){
					ele_time_label.visible=false;
					ele_match_name.text=d.contest_name;
					var rewards_arr=d.reward_set[0];
					var rewards=[];
					for (var i=0;i < rewards_arr.length;i=i+2){
						rewards.push({
							reward_item_id:rewards_arr[i],
							reward_item_num:rewards_arr[i+1]
						});
					}
					ele_list_reward.array=rewards;
					match_head_icon_img.skin=cfg_goods.instance(rewards_arr[0]).icon;
					ele_clock_image.visible=false;
					cell.on(Event.CLICK,this,this.onDailyMatchClick,[d]);
					}else{
					ele_clock_image.visible=true;
					ele_time_label.visible=true;
					if ("daily"==d.type){
						cell.on(Event.CLICK,this,this.onDailyMatchClick,[d]);
						}else if ("challenge"==d.type){
						cell.on(Event.CLICK,this,this.onChallengeMatchClick,[d]);
						}else if ("match"==d.type){
						cell.on(Event.CLICK,this,this.onMatchMatchClick,[d]);
					}
					ele_match_name.text=d.name;
					var rewards_arr=d.reward_set;
					var show_rewards_arr=[];
					if ("match"==d.type){
						show_rewards_arr=rewards_arr[4][0];
						}else if ("challenge"==d.type){
						show_rewards_arr=rewards_arr[rewards_arr.length-1];
						}else{
						show_rewards_arr=rewards_arr[0];
					}
					match_head_icon_img.skin=cfg_goods.instance(show_rewards_arr[0]).icon;
					var rewards=[];
					for (var i=0;i < show_rewards_arr.length;i=i+2){
						rewards.push({
							reward_item_id:show_rewards_arr[i],
							reward_item_num:show_rewards_arr[i+1]
						});
					}
					ele_list_reward.array=rewards;
				}
				}updateItemReward(cell,index){
				var ele_reward_img=cell.getChildByName("reward_type");
				var ele_reward_text=cell.getChildByName("reward_text");
				var data=cell.dataSource;
				ele_reward_img.skin=cfg_goods.instance(data.reward_item_id+"").icon;
				ele_reward_text.text='x '+ActivityM.instance.exchangeConversion(data.reward_item_id,data.reward_item_num);
				}onQuitBtnClick(){
				UiManager.instance.closePanel("Match",true);
				}onRankQuitBtnClick(){
				this.rank_box.visible=false;
				}onRuleQuitBtnClick(){
				this.rule_box.visible=false;
				}onClickRuleBtn(){
				this.rule_box.visible=true;
			}
			//'daily','match','snatch','challenge'
			endDailyMatchSign(){
				UiManager.instance.closePanel("Match",true);
				}endSnatchMatchSign(){
				UiManager.instance.closePanel("Match",true);
				}endDailyAcceptReward(){
				this.onTab1Btn();
				this.rank_box.visible=false;
				}noviceSignContest(){
				var d=this.list1.cells[0].dataSource;
				if (d.execute_status=="start"){
					var content="确认报名？";
					var info=new QuitTipInfo();
					info.state=1;
					info.content=content;
					info.confirmCallback=Handler.create(this,this.match_sign,[d]);
					info.conFirmArgs=d;
					info.autoCloseTime=0;
					GameEventDispatch.instance.event("QuitTip",info);
					}else{
					if (d.execute_status=="not_start"){
						GameEventDispatch.instance.event("MsgTipContent","比赛未开始");
						}else if (d.execute_status=="end"){
						GameEventDispatch.instance.event("MsgTipContent","比赛已结束");
					}
					GameEventDispatch.instance.event("CloseNovice",null);
				}
				}noviceSignContestConfirm(){
				var d=this.list1.cells[0].dataSource;
				this.match_sign(d);
				}unRegister(){
				GameEventDispatch.instance.off("SynFindMatchGameData",this,this.synFindMatchGameData);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("EndDailyMatchSign",this,this.endDailyMatchSign);
				GameEventDispatch.instance.off("EndSnatchMatchSign",this,this.endSnatchMatchSign);
				GameEventDispatch.instance.off("EndAcceptDailyMatchReward",this,this.endDailyAcceptReward);
				GameEventDispatch.instance.off("NoviceSignContest",this,this.noviceSignContest);
				GameEventDispatch.instance.off("NoviceSignContestConfirm",this,this.noviceSignContestConfirm);
				}register(){
				GameEventDispatch.instance.on("SynFindMatchGameData",this,this.synFindMatchGameData);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("EndDailyMatchSign",this,this.endDailyMatchSign);
				GameEventDispatch.instance.on("EndSnatchMatchSign",this,this.endSnatchMatchSign);
				GameEventDispatch.instance.on("EndAcceptDailyMatchReward",this,this.endDailyAcceptReward);
				GameEventDispatch.instance.on("NoviceSignContest",this,this.noviceSignContest);
				GameEventDispatch.instance.on("NoviceSignContestConfirm",this,this.noviceSignContestConfirm);
			}
		}

		view.match.MatchPage=Laya.MatchPage=MatchPage;	
		

		class MatchSettlePage extends MatchSettlePageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this._maxWin=0;
				this.match_data=null;
			}
			StartGames(param=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.match_data=param;
				this._maxWin=param.maxWin;
				this.screenResize();
				this.daily_box.visible=false;
				this.challenge_box.visible=false;
				this.matchResultBox.visible=false;
				this.list_reward.renderHandler=new Handler(this,this.updateItemReward);
				if (param['isWin']){
					this.roundTxt.text=(param["winCount"])+'/'+this._maxWin;
					}else{
					this.roundTxt.text=(param["winCount"]+1)+'/'+this._maxWin;
				}
				if (param['type']=='daily'){
					this.daily_box.visible=true;
					this.rank_label.text=param['rank']+"/"+param['total_num'];
					this.score.value=param['score'];
					this.max_score.text="本场比赛最高得分："+param['max_score'];
					}else if (param['type']=='challenge'){
					this.list_reward.visible=true;
					this.challenge_box.visible=true;
					this.reward_bg.visible=true;
					var winCount=this.match_data['winCount'];
					if (param['isWin']){
						this.win_title.skin='ui/matchSettle/shengli.png';
						this.win_fight_box.visible=true;
						this.fail_fight_box.visible=false;
						if (WxC.isInMiniGame()){
						}
						if (winCount < this._maxWin){
							this.list_reward.visible=false;
							this.reward_bg.visible=false;
							this.win_rount_txt1.visible=true;
							this.win_txt1.visible=false;
							this.win_txt2.visible=false;
							}else{
							this.list_reward.visible=true;
							this.reward_bg.visible=true;
							var rewards_arr=this.match_data["award"];
							var rewards_item=rewards_arr[winCount-1];
							var rewards=[];
							for (var i=0;i < rewards_item.length;i=i+2){
								rewards.push({
									reward_item_id:rewards_item[i],
									reward_item_num:rewards_item[i+1]
								});
							}
							this.list_reward.array=rewards;
							this.win_rount_txt1.visible=false;
							this.win_txt1.visible=true;
							this.win_txt2.visible=true;
						}
						}else{
						var rewards_arr=this.match_data["award"];
						if (winCount==0){
							this.list_reward.visible=false;
							this.reward_bg.visible=false;
							}else{
							this.list_reward.visible=true;
							this.reward_bg.visible=true;
							var rewards_item=rewards_arr[winCount-1];
							var rewards=[];
							for (var i=0;i < rewards_item.length;i=i+2){
								rewards.push({
									reward_item_id:rewards_item[i],
									reward_item_num:rewards_item[i+1]
								});
							}
							this.list_reward.array=rewards;
						}
						if (WxC.isInMiniGame()){
						}
						this.win_title.skin='ui/matchSettle/shib.png';
						this.win_fight_box.visible=false;
						this.fail_fight_box.visible=true;
					}
					}else if (param['type']=='match'){
					this.cancelMatchBtn.on(Event.CLICK,this,this.onCancelMatchBtn);
					this.againBtn.on(Event.CLICK,this,this.onAgainBtn);
					this.matchingSynRusultMsg();
				}
				this.challenge_btn.on(Event.CLICK,this,this.onChallengeClick);
				if (WxC.isInMiniGame()){
				}
				this.confirm_btn.on(Event.CLICK,this,this.onClickConfirm);
				this.retry_coin.text=this.match_data['consume_gold']+"";
				this.retry_btn.offAll(Event.CLICK);
				if (this.match_data.free_times <=0 && RoleInfoM.instance.getCoin()< this.match_data.consume_gold){
					this.retry_btn.gray=true;
					this.retry_text.gray=true;
					this.retry_btn.on(Event.CLICK,this,function(event){
						event.stopPropagation();
						GameEventDispatch.instance.event("MsgTipContent","金币不足");
					});
					}else{
					this.retry_btn.gray=false;
					this.retry_text.gray=false;
					this.retry_btn.on(Event.CLICK,this,this.onClickRetry);
				}
				}onCancelMatchBtn(event){
				if (LoginM.instance.pageId=="main_page"){
					this.closeMatchSettlePanel();
					}else{
					event.stopPropagation();
					this.tip();
				}
				}tip(){
				var info=new QuitTipInfo();
				info.state=1;
				info.content="是否退出房间？";
				info.confirmCallback=Handler.create(this,this.closeMatchSettlePanel);
				info.confirmMsg="ReturnConfirm";
				info.autoCloseTime=10;
				GameEventDispatch.instance.event("QuitTip",info);
				}closeMatchSettlePanel(){
				UiManager.instance.closePanel('MatchSettle',false);
				}onAgainBtn(){
				var _$this=this;
				if (LoginM.instance.pageId=="main_page"){
					var info=new QuitTipInfo();
					info.state=1;
					info.content="确认报名？";
					info.confirmCallback=Handler.create(this,function(){
						UiManager.instance.closePanel('MatchSettle',false);
						MatchM.instance.initMatchimgGameData();
						if ('match'==MatchM.instance.resultMsg.type){
							_$this.match_sign(MatchM.instance.resultMsg.contest_id,5);
						}
					});
					info.conFirmArgs=MatchM.instance.resultMsg;
					info.autoCloseTime=10;
					GameEventDispatch.instance.event("QuitTip",info);
					}else{
					if (FightM.instance.isMatchingGame()&& MatchM.instance.isMatchSart==1){
						WebSocketManager.instance.send(12112,null);
						UiManager.instance.closePanel('MatchSettle',false);
					}
				}
				}matchingSynRusultMsg(){
				this.matchResultBox.visible=true;
				this.matchWinBox.visible=false;
				this.matchFallBox.visible=false;
				this.resultTimeBox.visible=false;
				var msg=MatchM.instance.resultMsg;
				if (msg.rank==1){
					var rew=[];
					for (var i=0;i < msg.reward_item_ids.length;i++){
						rew.push({
							reward_num:"x"+ActivityM.instance.exchangeConversion(msg.reward_item_ids[i],msg.reward_item_nums[i]),
							reward_id:cfg_goods.instance(""+msg.reward_item_ids[i]).icon
						});
					}
					this.matchRewardList.renderHandler=new Handler(this,this.updateItemMatchReward);
					this.matchWinBox.visible=true;
					this.rewardListBg.width=110 *rew.length;
					this.matchRewardList.width=80 *rew.length+(rew.length-1)*20;
					this.matchRewardList.array=rew;
					}else{
					this.matchFallBox.visible=true;
					this.matchRankLabel.text=msg.rank+"/"+msg.player_nums;
					this.matchMaxLabel.text="本场比赛最高得分："+msg.score;
				}
				if (msg.is_free){
					this.matchCostImage.skin=cfg_goods.instance(msg.consume_ids[0]+"").icon;
					this.matchCostLabel.text="免费";
					}else{
					this.matchCostImage.skin=cfg_goods.instance(msg.consume_ids[0]+"").icon;
					this.matchCostLabel.text=msg.consume_nums[0]+"";
				}
				}updateItemMatchReward(cell,index){
				var config=cell.dataSource;
				var reward_type=cell.getChildByName("reward_type");
				var reward_text=cell.getChildByName("reward_text");
				reward_type.skin=config.reward_id;
				reward_text.text=config.reward_num;
				}updateItemReward(cell,index){
				var ele_reward_img=cell.getChildByName("reward_type");
				var ele_reward_text=cell.getChildByName("reward_text");
				var data=cell.dataSource;
				ele_reward_img.skin=cfg_goods.instance(data.reward_item_id+"").icon;
				ele_reward_text.text='x '+ActivityM.instance.exchangeConversion(data.reward_item_id,data.reward_item_num);
				}onClickConfirm(){
				WebSocketManager.instance.send(12003,null);
				UiManager.instance.closePanel('MatchSettle',false);
				}onShareClick(){
				WxC.area_share();
				}areaShareSuccess(){
				WebSocketManager.instance.send(12003,null);
				WebSocketManager.instance.send(12051,{id:this.match_data.contest_id,replay:true});
				UiManager.instance.closePanel('MatchSettle',false);
				}onChallengeClick(){
				if (this.match_data['isWin']){
					if (this.match_data['winCount']==this._maxWin){
						WebSocketManager.instance.send(35002,{id:this.match_data.contest_id});
						}else{
						WebSocketManager.instance.send(12003,null);
						if (this.match_data["failCount"]==1){
							WebSocketManager.instance.send(12051,{id:this.match_data.contest_id,replay:true});
						}
						else{
							WebSocketManager.instance.send(12051,{id:this.match_data.contest_id,replay:false});
						}
						UiManager.instance.closePanel('MatchSettle',false);
					}
					}else{
					WebSocketManager.instance.send(35002,{id:this.match_data.contest_id});
					WebSocketManager.instance.send(12003,null);
					UiManager.instance.closePanel('MatchSettle',false);
				}
				}match_sign(contest_id,scene_id){
				LoginM.instance.setContestId(contest_id,scene_id);
				GameEventDispatch.instance.event("StartLoad",[1]);
				}onClickRetry(event){
				var _$this=this;
				event.stopPropagation();
				var info=new QuitTipInfo();
				info.state=1;
				info.content="确认报名？";
				info.confirmCallback=Handler.create(this,function(){
					UiManager.instance.closePanel('MatchSettle',false);
					WebSocketManager.instance.send(12003,null);
					if ('daily'==_$this.match_data.type){
						_$this.match_sign(_$this.match_data.contest_id,5);
					}
				});
				info.conFirmArgs=this.match_data;
				info.autoCloseTime=10;
				GameEventDispatch.instance.event("QuitTip",info);
				}screenResize(){
				var contentWidth=850;
				var contentHeight=660;
				var contentStartX=215;
				var contentStartY=30;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				}endChallengeAcceptReward(){
				UiManager.instance.closePanel('MatchSettle',false);
				WebSocketManager.instance.send(12003,null);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				GameEventDispatch.instance.off("EndAcceptMatchReward",this,this.endChallengeAcceptReward);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("AreaShareSucess",this,this.areaShareSuccess);
				}register(){
				GameEventDispatch.instance.on("EndAcceptMatchReward",this,this.endChallengeAcceptReward);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("AreaShareSucess",this,this.areaShareSuccess);
			}
		}

		view.matchSettle.MatchSettlePage=Laya.MatchSettlePage=MatchSettlePage;	
		

		class MonthCardPage extends MonthCardPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.giftUserId=null;
				this.curPage=0;
				//this.arr=null;
				this.card_id=18;
			}
			StartGames(parm=null){
				if (parm && parm["id"]){
					this.card_id=parm["id"];
				}
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,null);
				this._startX=this.x;
				this._startY=this.y;
				this.tip_box.visible=false;
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.quit_gift_box.on(Event.CLICK,this,this.onQuitBoxBtn);
				this.scroll_left.on(Event.CLICK,this,this.onScrollLeft);
				this.scroll_right.on(Event.CLICK,this,this.onScrollRight);
				this.list.renderHandler=new Handler(this,this.updateItem);
				this.arr=ConfigManager.filter("cfg_commodity",function(cfg){
					return cfg.tab=="tab_package" && cfg.card_type==0
				});
				this.list.array=this.arr;
				for (var i=0;i < this.arr.length;i++){
					if (this.arr[i].id==this.card_id){
						this.curPage=i;
						break
					}
				}
				this.list.scrollTo(this.curPage);
				this.resetCardTitle();
				this.onScrollEnd();
				this.screenResize();
				}resetCardTitle(){
				this.card_title.skin=this.arr[this.curPage].card_title2;
				}onScrollRight(){
				++this.curPage;
				this.list.tweenTo(this.curPage,300);
				this.resetCardTitle();
				this.onScrollEnd();
				}onScrollLeft(){
				--this.curPage;
				this.list.tweenTo(this.curPage,300);
				this.resetCardTitle();
				this.onScrollEnd();
				}onScrollEnd(){
				this.scroll_left.visible=true;
				this.scroll_right.visible=true;
				if (this.curPage==0){
					this.scroll_left.visible=false;
				}
				if (this.curPage==this.list.length-1){
					this.scroll_right.visible=false;
				}
				}updateItem(cell,index){
				var config=cell.dataSource;
				var ele_day_num=cell.getChildByName("day_num");
				var buy_box=cell.getChildByName("buy_box");
				var send_box=cell.getChildByName("send_box");
				var list_reward1=cell.getChildByName("list_reward1");
				var list_reward2=cell.getChildByName("list_reward2");
				var list_reward3=cell.getChildByName("list_reward3");
				ele_day_num.text=config.card_duration+"";
				this.initBuyClick(buy_box,config);
				send_box.offAll(Event.CLICK);
				send_box.on(Event.CLICK,this,this.initSendClick,[config]);
				this.init_list_reward(list_reward1,list_reward2,list_reward3,config);
				}initBuyClick(buy_box,config){
				var ele_price=buy_box.getChildByName('price');
				buy_box.offAll(Event.CLICK);
				ele_price.value=Math.ceil(config.currency_amount / LoginInfoM.instance.getShopRate())+"";
				buy_box.on(Event.CLICK,this,function(){
					if (WxC.isInMiniGame()){
						if (RoleInfoM.instance.mini_balance >=config.mini_currency_amount){
							if (CertificationM.instance.isOpenCertification()){
								var certInfo=new CertificationInfo();
								certInfo.openFrom="month";
								certInfo.buyInfo=config;
								CertificationM.instance.info=certInfo;
								CertificationM.instance.OpenCertification();
								}else{
								var info=new QuitTipInfo();
								info.state=1;
								info.content="确认购买？";
								info.confirmMsg="ShopBuy";
								info.conFirmArgs=config;
								info.autoCloseTime=10;
								GameEventDispatch.instance.event("QuitTip",info);
							}
							UiManager.instance.closePanel("MonthCard",true);
							}else{
							if (Browser.onIOS){
								GameEventDispatch.instance.event("MsgTp",47);
								}else{
								UiManager.instance.closePanel("MonthCard",true);
								var infoTxt="您仍需购买"+WxC.getMiniPayAmount(config)+"集结币";
								var info=new QuitTipInfo();
								info.state=1;
								info.content=infoTxt;
								if (ENV.channelType==3){
									info.content=info.content.replace("集结币","元宝");
								}
								info.confirmMsg="ShopBuy";
								info.conFirmArgs=config;
								info.autoCloseTime=10;
								if (CertificationM.instance.isOpenCertification()){
									var certInfo=new CertificationInfo();
									certInfo.openFrom="shop";
									certInfo.quitInfo=info;
									CertificationM.instance.info=certInfo;
									CertificationM.instance.OpenCertification();
									}else{
									GameEventDispatch.instance.event("QuitTip",info);
								}
							}
						}
						}else{
						if (CertificationM.instance.isOpenCertification()){
							var certInfo=new CertificationInfo();
							certInfo.openFrom="month";
							certInfo.buyInfo=config;
							CertificationM.instance.info=certInfo;
							CertificationM.instance.OpenCertification();
							}else{
							var info=new QuitTipInfo();
							info.state=1;
							info.content="确认购买？";
							info.confirmMsg="ShopBuy";
							info.conFirmArgs=config;
							info.autoCloseTime=10;
							GameEventDispatch.instance.event("QuitTip",info);
						}
						UiManager.instance.closePanel("MonthCard",true);
					}
				});
				}initSendClick(cfg){
				var mini_battery=ConfigManager.getConfValue("cfg_global",1,"min_battery");
				if (RoleInfoM.instance.getBattery()<=mini_battery){
					GameEventDispatch.instance.event("MsgTipContent",cfg_battery.instance(mini_battery+1).comsume+"倍炮台，开放赠送功能");
					return;
				}
				if (CertificationM.instance.isOpenCertification()){
					var certInfo=new CertificationInfo();
					certInfo.openFrom="Gift";
					certInfo.buyInfo=cfg;
					CertificationM.instance.info=certInfo;
					CertificationM.instance.OpenCertification();
					}else{
					this.adultPlayer(cfg);
				}
				}adultPlayer(cfg){
				this.tip_box.pivotX=Laya.stage.mouseX;
				this.tip_box.pivotY=Laya.stage.mouseY;
				this.tip_box.x=Laya.stage.mouseX;
				this.tip_box.y=Laya.stage.mouseY;
				this.tip_box.scaleX=0;
				this.tip_box.scaleY=0;
				GameEventDispatch.instance.event("CloseWait");
				Tween.to(this.tip_box,{scaleX:1.05,scaleY:1.05},300,null,Handler.create(this,this.showComplete));
				this.input_userid.text="";
				this.tip_box.visible=true;
				this.quit_gift_box.visible=true;
				this.query_btn.on(Event.CLICK,this,this.onQueryUserID);
				this.gift_confirm.on(Event.CLICK,this,this.onGiftConfirm,[cfg]);
				}showComplete(){
				Tween.to(this.tip_box,{scaleX:1,scaleY:1},250);
				}onQueryUserID(){
				var _$this=this;
				var pattern_user_id=/^[1-9][0-9]+$/;
				if (!pattern_user_id.test(this.input_userid.text)){
					GameEventDispatch.instance.event("MsgTipContent","用户ID不符合规范");
					}else{
					var user_id=this.input_userid.text;
					var token=StartParam.instance.getParam("access_token");
					ApiManager.instance.queryUserName(token,user_id,Handler.create(this,function(result){
						if ("success"==result.code){
							var data=result.data;
							var nickName=data.nickname;
							var userId=data.id;
							_$this.username.text=LoginInfoM.instance.filterName(GameTools.formatNickName(nickName,20));
							if (data.avatar){
								_$this.userimg.skin=data.avatar;
							}
							_$this.userinfo_box.visible=true;
							_$this.giftUserId=userId;
							}else if ("user_not_found"==result.code){
							GameEventDispatch.instance.event("MsgTipContent","用户不存在");
						}
						}),Handler.create(this,function(result){
						console.log("error");
						console.log(result);
					}));
				}
				}onGiftConfirm(re){
				var pattern_user_id=/^[1-9][0-9]+$/;
				if (this.input_userid.text==""){
					GameEventDispatch.instance.event("MsgTipContent","请输入用户ID");
					}else if (!pattern_user_id.test(this.input_userid.text)){
					GameEventDispatch.instance.event("MsgTipContent","用户ID不符合规范");
					}else if (!this.giftUserId){
					GameEventDispatch.instance.event("MsgTipContent","请点击查询按钮，确认用户身份");
					}else{
					this.onQuitBoxBtn();
					var data={item_id:re.good_ids[0],item_count:1,user_id:this.giftUserId,buy_month_card:true};
					WxC.isInMiniGame()? data['platform']="mini" :data['platform']=StartParam.instance.getParam("platform");
					if (WxC.isInMiniGame()){
						if (RoleInfoM.instance.mini_balance >=re.mini_currency_amount){
							WebSocketManager.instance.send(14017,data);
							}else{
							WxC.wx_requestPayment(re);
						}
						}else{
						WebSocketManager.instance.send(14017,data);
					}
				}
				}onQuitBoxBtn(){
				this.tip_box.visible=false;
				this.quit_gift_box.visible=false;
				this.quitBtn.visible=true;
				this.input_userid.text="";
				this.username.text="";
				this.userinfo_box.visible=false;
				}updateItemReward(cell,index){
				var ele_reward_img=cell.getChildByName("reward_type");
				var ele_reward_text=cell.getChildByName("reward_text");
				var data=cell.dataSource;
				ele_reward_img.skin=cfg_goods.instance(data.reward_item_id+"").icon;
				ele_reward_text.text='x '+data.reward_item_num;
				}init_list_reward(list_reward1,list_reward2,list_reward3,cfg){
				list_reward1.renderHandler=new Handler(this,this.updateItemReward);
				list_reward2.renderHandler=new Handler(this,this.updateItemReward);
				list_reward3.renderHandler=new Handler(this,this.updateItemReward);
				var rewards1=[];
				var rewards2=[];
				var rewards3=[];
				var total_reward_coin=0;
				var total_reward_diamond=0;
				for (var i=0;i < cfg.reward_item_ids.length;i++){
					rewards1.push({
						reward_item_id:cfg.reward_item_ids[i],
						reward_item_num:cfg.reward_item_nums[i]
					});
					if (1==cfg_goods.instance(cfg.reward_item_ids[i]).type){
						total_reward_coin+=cfg.reward_item_nums[i];
					}
					if (4==cfg_goods.instance(cfg.reward_item_ids[i]).type){
						total_reward_diamond+=cfg.reward_item_nums[i];
					}
				};
				var cfgObj=cfg_commodity.instance(18);
				for (var i=0;i < cfgObj.reward_item_ids.length;i++){
					rewards2.push({
						reward_item_id:cfg.reward_item_ids[i],
						reward_item_num:cfgObj.reward_item_nums[i]
					});
					if (1==cfg_goods.instance(cfg.reward_item_ids[i]).type){
						total_reward_coin+=cfgObj.reward_item_nums[i] *cfg.card_duration;
					}
					if (4==cfg_goods.instance(cfg.reward_item_ids[i]).type){
						total_reward_diamond+=cfgObj.reward_item_nums[i] *cfg.card_duration;
					}
				}
				rewards3.push({reward_item_id:1,reward_item_num:total_reward_coin});
				rewards3.push({reward_item_id:4,reward_item_num:total_reward_diamond});
				list_reward1.array=rewards1;
				list_reward2.array=rewards2;
				list_reward3.array=rewards3;
				}screenResize(){
				var contentWidth=800;
				var contentHeight=550;
				var contentStartX=240;
				var contentStartY=100;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quit_gift_box.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				this.quit_gift_box.top=contentStartY-posYOff;
				}onQuitBtnClick(){
				UiManager.instance.closePanel("MonthCard",true);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("OpenGift",this,this.adultPlayer);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("OpenGift",this,this.adultPlayer);
			}
		}

		view.monthCard.MonthCardPage=Laya.MonthCardPage=MonthCardPage;	
		

		class FishPage extends fishPageUI{
			constructor (){
				super();
				this.uniId=1;
				//this.paoImage=null;
				this.isClick=true;
				this.isShow=false;
				this.isClickBtn=true;
				this.isClickPanel=false;
				this.rewardFishCount=0;
				this.rewardCoinCount=0;
				this.isClickGun=true;
				this.isClickP=false;
				this.isGunShow=false;
				//this.giveCoin=NaN;
				//this.powerOneTxt=null;
				//this.powerTwoTxt=null;
				//this.pro=null;
				//this.needDiaClip=null;
				//this.haveDiaClip=null;
				//this.giveClip=null;
				//private var image:Image;
				//this.seatCSkinList=null;
				//this.desX=NaN;
				//子弹目标x
				//this.desY=NaN;
				//子弹目标y
				//this.jichiNumOne=null;
				//this.jichiNumTwo=null;
				//this.jichP=null;
				//this.jiNowCount=null;
				//this.baseFishCount=null;
				this.enterSetPao=false;
				//this.skillImageOne=null;
				//this.skillImageTwo=null;
				//this.skillImageThree=null;
				//this.skillImageFour=null;
				//this.skillImageFive=null;
				//this.skillImageSix=null;
				//this.skillClipOne=null;
				//this.skillClipTwo=null;
				//this.skillClipThree=null;
				//this.skillClipFour=null;
				//this.skillClipFive=null;
				//this.skillClipSix=null;
				//this.aniOne=null;
				//this.aniTwo=null;
				//this.aniThree=null;
				//this.aniFour=null;
				//this.aniFive=null;
				this.IsOneClick=true;
				this.IsTwoClick=true;
				this.IsThreeClick=true;
				this.IsFourClick=true;
				this.IsFiveClick=true;
				//this.violentOne=null;
				//this.violentTwo=null;
				//this.violentThree=null;
				//this.violentFour=null;
				//this.violentOneBg=null;
				//this.violentTwoBg=null;
				//this.violentThreeBg=null;
				//this.violentFourBg=null;
				//this.paoOneMount=null;
				//this.paoTwoMount=null;
				//this.paoThreeMount=null;
				//this.paoFourMount=null;
				//this.diamondOne=null;
				//this.diamondTwo=null;
				//this.diamondThree=null;
				//this.diamondFour=null;
				//this.diamondFive=null;
				//this.diamondSix=null;
				this._bulletMaxTip=false;
				this.unlockBatteryTip=false;
				this.unlockBatteryTipTime=0;
				this.rewardFishTip=false;
				this.rewardFishTipTime=0;
				//this.guide=null;
				//this.clip=null;
				this.isUpdate=false;
				this.unLockOut=false;
				//解锁动画在外面
				this.unLockInside=true;
				//解锁动画在里面
				this.lotteryOut=false;
				//抽奖动画在外面；
				this.lotteryInside=true;
				//抽奖动画
				this.isAtuoFire=true;
				//不自动法袍
				this.isAuto=true;
				this.startId=0;
				this.endId=0;
				this.selectBoomIndex=0;
				this.isLevel=false;
				//this._leftTime=NaN;
				//this._onlineCount=NaN;
				this._coinUnchangeTime=0;
				this._rewardNameArr=["点击进行普通抽奖","点击进行青铜抽奖","点击进行白银抽奖","点击进行黄金抽奖","点击进行钻石抽奖","点击进行至尊抽奖"];
				//this._rewardLevelName=null;
				// 提示转圈动画
				//this._task_spine=null;
				//this._battery_spine=null;
				//this._lottery_spine=null;
				//this.month_icon_bg=null;
				//this.lottery_icon_bg=null;
				//this.battery_icon_bg=null;
				this.showOffTime=0;
				this.isPlayingRankAni=false;
				this.continuousShootLeftTime=0;
				this.mouseMoveValid=false;
				// ele_reward_text.text='x '+data.reward_item_num;
				this.task_percent={};
				this.unfinish_arr=[];
				this.FireStateSetPuaseUiName="";
				this.FireState=1;
				this._shootBulletInfo=new BulletInfo();
				this._shootOnlineInfo=new C2s_shootBullet();
				var _$this=this;
				this.cancelImg.on(Event.CLICK,this,function(event){
					_$this.useSkill(_$this.selectBoomIndex);
					event.stopPropagation();
				});
			}
			StartGames(parm=null){
				WebSocketManager.instance.send(19009,null);
				if (FightM.instance.seatId <=0){
					this.paoone.visible=true;
					this.taione.visible=true;
					this.goldOne.visible=true;
					this.coinOne.visible=true;
					this.kuangone.visible=true;
					return;
				}
				this.FireState=1;
				this.enterSetPao=true;
				this._coinUnchangeTime=0;
				this.seatCSkinList=[0,0,0,0];
				LoginM.instance.roomId=-1;
				this.on(Event.MOUSE_DOWN,this,this.mouseDown);
				this.on(Event.MOUSE_MOVE,this,this.mouseMove);
				this.on(Event.MOUSE_OUT,this,this.mouseOut);
				this.on(Event.MOUSE_UP,this,this.mouseUp);
				this.on(Event.CLICK,this,this.clickPanel);
				this.yuleiList.renderHandler=new Handler(this,this.yuleiRenderHander);
				this.paoImage=this.paoone;
				this.initViolent();
				this.initPowerUi();
				this.initEvent();
				this.initUi();
				this.fightPlayerUpdate();
				BackBox.instance.init(this.backPanel);
				MatchInfoBox.instance.init(this.matchRoomPanel);
				MatchResultBox.instance.init(this.matchResultPanel);
				this.playTaskShine();
				this.playBatteryShine();
				this.playLotteryShine();
				this.playMonthCardShine();
				this.updateFishCount();
				GameEventDispatch.instance.event("EnterFightPage");
				this.updatePower();
				this.gunImg.on(Event.CLICK,this,this.clickGunImg);
				this.gunBoxOne.on(Event.CLICK,this,this.clickBoxOne);
				this.gunBoxTwo.on(Event.CLICK,this,this.clickBoxTwo);
				this.poweradd.on(Event.CLICK,this,this.clickPowerAdd);
				this.powersub.on(Event.CLICK,this,this.clickPowerSub);
				this.changeSkinBtn.on(Event.CLICK,this,this.onChangeSkinBtn);
				this.skill_1.on(Event.CLICK,this,this.clickSkill1);
				this.skill_2.on(Event.CLICK,this,this.clickSkill2);
				this.skill_3.on(Event.CLICK,this,this.clickSkill3);
				this.skill_4.on(Event.CLICK,this,this.clickSkill4);
				this.skill_5.on(Event.CLICK,this,this.clickSkill5);
				this.skill_6.on(Event.CLICK,this,this.clickSkill6);
				this.skill_1.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.skill_2.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.skill_3.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.skill_4.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.skill_5.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.skill_6.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.alreadyOne.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.alreadyTwo.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.alreadyThree.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.alreadyFour.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.cancle.visible=false;
				this.initSkillUi();
				this.updateSKill();
				this.initSkillAni();
				this.initGuide();
				this.gunImg.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.gunBoxOne.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.gunBoxTwo.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.box_task.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.changeSkinBtn.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.poweradd.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.powersub.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.month.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.countBox.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.receiveImg.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.nchou.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.buchou.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.taione.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.taitwo.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.taithree.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.taifour.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.since.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.auto.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.cancle.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.lqjlani.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.onLineBox.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.matchWaitBox.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.waitBtn.on(Event.CLICK,this,this.onPrepareBtn);
				this.auto.on(Event.CLICK,this,this.clickAtuo);
				this.cancle.on(Event.CLICK,this,this.cancleAuto);
				this.initMask();
				this.violenUpdate();
				this.cancelImg.visible=FightManager.instance.getSkillBoomSelectFlag();
				this.cancelImg1.visible=FightManager.instance.getSkillBoomSelectFlag();
				this.skillUpdate();
				if (RuleM.instance.isShowScene){
					this.box_task.visible=false;
					}else{
					this.box_task.visible=true;
				}
				this.refreshTask();
				this.list_reward.renderHandler=new Handler(this,this.updateItemReward);
				this.showRedPoint();
				this.initMonthCardIcon();
				this.reward.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.since.on(Event.CLICK,this,this.clickIntergal);
				this.clip=new FontClip();
				this.since.visible=ENV.isShowDied()? false :RuleM.instance.isShowScene;
				this.resetUi();
				Laya.timer.frameLoop(1,this,this.frameUpdate);
				Laya.timer.loop(1000,this,this.updateTime);
				this.updateCoinCount();
				this.startSign();
				this.totalIntergal.changeText("积分:"+Math.floor(RoleInfoM.instance.getAwardScore())+"");
				this.initMatchingGame();
				this.initWarningList();
				this.playGetIn();
				this.onLineReward();
				this.refreshLottery();
				this.doubleCoin.on(Event.CLICK,this,this.onDoubleCoin);
				this.doubleChance.on(Event.CLICK,this,this.onDoubleChance);
				this.doubleCoin.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.doubleChance.on(Event.MOUSE_DOWN,this,this.downSkip);
				this.initDoubleRate();
			}
			// initRankAniBox();
			clickIntergal(){
				UiManager.instance.loadView("Rule");
				}onRankAniBox(){
				UiManager.instance.loadView("Rank",null,"SMALL_TO_BIG");
				}initRankAniBox(){
				this.isPlayingRankAni=false;
				this.rankAniImg.visible=false;
				this.rankAniBox.centerX=-900;
				if (ENV.isShowDied()){
					return;
				}
				if (LoginInfoM.instance.isShowRankAniBox==1 && FightM.instance.isShowRankAni()){
					ApiManager.instance.get_rank_list(StartParam.instance.getParam("access_token"),function(result){
						LevelM.instance.setTodayStrIsHaveReward(result);
					});
					Laya.timer.once(5000,this,this.actionRankAni);
				}
				}actionRankAni(){
				if (!this.isPlayingRankAni){
					this.isPlayingRankAni=true;
					this.rankAni.play(0,false);
					Laya.timer.once(3000,this,this.rankAniEnd);
				}
				}rankAniEnd(){
				if (LoginInfoM.instance.isShowRankAniBox==0){
					this.rankAniImg.visible=false;
					this.rankAniBox.centerX=-900;
					this.isPlayingRankAni=false;
					return;
				}
				if (this.isPlayingRankAni){
					if (LevelM.instance.isCanReward){
						this.rankAniLable.text="领取排行榜奖励啦!!!";
						this.rankAniLable.fontSize=25;
						}else{
						if (LevelM.instance.todayStrIsHaveReward){
							this.rankAniLable.text="保持当前实力榜排名，明日登录可领取奖励哦!!!";
							}else{
							this.rankAniLable.text="进入实力榜就有排名奖励哦!!!";
						}
					}
					if (this.rankAniImg.visible==false){
						this.rankAniImg.visible=true;
					}
				}
				}onPrepareBtn(){
				if (FightM.instance.isMatchingGame()&& MatchM.instance.isMatchSart==0){
					WebSocketManager.instance.send(12101,null);
				}
				}endChangeBatteryRate(){
				this.initDoubleRate();
				}initDoubleRate(){
				var cfg=cfg_scene.instance(FightM.instance.sceneId+"");
				this.doubleCoin.visible=false;
				this.doubleCoin.gray=false;
				this.doubleCoinLock.visible=false;
				this.doubleCoinCancel.visible=false;
				this.doubleChance.visible=false;
				this.doubleChance.gray=false;
				this.doubleChanceLock.visible=false;
				this.doubleChanceCancel.visible=false;
				if (cfg.doubleRate[0]==1){
					this.doubleCoin.visible=true;
					if (RoleInfoM.instance.canDoubelCoin()){
						this.doubleCoin.gray=false;
						this.doubleCoinLock.visible=false;
						if (RoleInfoM.instance.coin_rate==1){
							this.doubleCoinCancel.visible=false;
							}else{
							this.doubleCoinCancel.visible=true;
						}
						}else{
						this.doubleCoin.gray=true;
						this.doubleCoinLock.visible=true;
					}
				}
				if (cfg.doubleRate[1]==1){
					this.doubleChance.visible=true;
					if (RoleInfoM.instance.canDoubelChance()){
						this.doubleChance.gray=false;
						this.doubleChanceLock.visible=false;
						if (RoleInfoM.instance.chance_rate==1){
							this.doubleChanceCancel.visible=false;
							}else{
							this.doubleChanceCancel.visible=true;
						}
						}else{
						this.doubleChance.gray=true;
						this.doubleChanceLock.visible=true;
					}
				}
				}unlockDouble(type){
				WebSocketManager.instance.send(13009,{type:type});
				}onDoubleCoin(){
				if (RoleInfoM.instance.canDoubelCoin()){
					if (RoleInfoM.instance.coin_rate==1){
						WebSocketManager.instance.send(13007,{coin:2});
						}else{
						WebSocketManager.instance.send(13007,{coin:1});
					}
					}else{
					var info=new QuitTipInfo();
					info.state=1;
					info.content="解锁10000倍炮时可免费激活，是否使用500钻石立即激活？";
					info.confirmCallback=Handler.create(this,this.unlockDouble,['coin']);
					info.conFirmArgs=['coin'];
					info.autoCloseTime=10;
					GameEventDispatch.instance.event("QuitTip",info);
				}
				}onDoubleChance(){
				if (RoleInfoM.instance.canDoubelChance()){
					if (RoleInfoM.instance.chance_rate==1){
						WebSocketManager.instance.send(13007,{chance:2});
						}else{
						WebSocketManager.instance.send(13007,{chance:1});
					}
					}else{
					var info=new QuitTipInfo();
					info.state=1;
					info.content="解锁2000倍炮时可免费激活，是否使用500钻石立即激活？";
					info.confirmCallback=Handler.create(this,this.unlockDouble,['chance']);
					info.conFirmArgs=['chance'];
					info.autoCloseTime=10;
					GameEventDispatch.instance.event("QuitTip",info);
				}
				}startWave(){
				this.coinWave(1200,70,-10,-110);
			}
			//在线奖励功能
			onLineReward(){
				this.lqjlani.play(0,true);
				this._leftTime=OnLineM.instance.getLeftTime();
				this.refreshOnline();
				this.onLineBox.on(Event.CLICK,this,this.clickReceive);
			}
			// Laya.timer.loop(1000,this,startTime);
			startTime(){
				if (this._leftTime >=1){
					this._leftTime=this._leftTime-1;
					this.updateOnlintTime(this._leftTime);
				}
				}updateOnlintTime(time){
				if (time <=0){
					time=0;
				}
				this.leftTime.text=this.timeUtils(time)+"";
				}clickReceive(){
				if (this.countBox.mouseEnabled==true){
					var s2c=new S2c_22000();
					s2c.id=OnLineM.instance.RewardIndex;
					WebSocketManager.instance.send(22000,s2c);
					}else{
					GameTools.buttonEffect(this.receiveImg,0.8,0.8);
				}
				}timeUtils(time){
				var minute=Math.floor(time / 60)+"";
				var second=Math.floor(time % 60)+"";
				if (minute < 10){
					minute="0"+minute;
				}
				if (second < 10){
					second="0"+second;
				};
				var m=minute+":"+second;
				return m;
				}refreshOnline(){
				var obj=OnLineM.instance.getAwardState(OnLineM.instance.RewardIndex-1);
				this.rewardCount.text=obj.count;
				this.receiveImg.skin=obj.rewardUrl;
				this.receiveImg.visible=obj.isTimeVisible;
				this.receiveImg.y=80;
				this.countBox.mouseEnabled=obj.enable;
				this.leftTime.visible=obj.isTimeVisible;
				this.getImg.visible=!obj.isTimeVisible;
				this.timeBox.visible=obj.isVisible;
				this.countBox.visible=obj.isVisible;
				this.lqjlani.visible=!obj.isTimeVisible;
				this._onlineCount=obj.count;
			}
			//在线奖励动效
			OnLineImgEffect(){
				this.receiveImg.visible=false;
				this.lqjlani.play(0,true);
			}
			//Laya.timer.frameLoop(1,this,giftShowOff);
			giftShowOff(){
				var delta=Laya.timer.delta;
				var distance=15;
				var origin_y=80;
				var y=origin_y-distance;
				var upTime=600;
				var totalTime=2000;
				var downTime=totalTime-upTime;
				this.showOffTime+=delta;
				if (this.showOffTime > totalTime){
					this.showOffTime=0;
					this.receiveImg.y=origin_y;
					}else{
					if (this.showOffTime < upTime){
						this.receiveImg.y=Ease.sineIn(this.showOffTime,origin_y,-distance,upTime);
						}else{
						this.receiveImg.y=Ease.bounceOut(this.showOffTime-upTime,y,distance,downTime);
					}
				}
				}pngPaoUpdate(pao){
				var paoMount=pao.getChildAt(1);
				var spineAni=paoMount.getChildAt(0);
				if (spineAni && (spineAni instanceof view.fish.BatteryImgAction )){
					spineAni.update();
				}
				}frameUpdate(){
				this.paoAnimationCheck();
				this.startRoate();
				this.shootTick();
				this.pngPaoUpdate(this.paoone);
				this.pngPaoUpdate(this.paotwo);
				this.pngPaoUpdate(this.paothree);
				this.pngPaoUpdate(this.paofour);
				}cancleAuto(event){
				this.stopAuto();
				event.stopPropagation();
				}stopAuto(){
				if (this.FireState==0){
					Laya.timer.clear(this,this.continuousShoot);
				}
				this.cancle.visible=false;
				this.FireState=1;
				}pauseAuto(){
				if (this.FireState==0){
					Laya.timer.clear(this,this.continuousShoot);
					this.FireState=2;
				}
				}resumeAuto(){
				if (this.FireState==2){
					if (!FightManager.instance.getSkillBoomSelectFlag()&& !FightM.instance.isOwnLock()&& this.fishPageAutoShootEnable()){
						Laya.timer.frameLoop(1,this,this.continuousShoot);
						this.FireState=0;
					}
				}
				}fishPageAutoShootEnable(){
				var ret=true;
				var uiLayer=null;
				for (var i=0;i < Laya.stage.numChildren;i++){
					uiLayer=Laya.stage.getChildAt(i);
					if (uiLayer && uiLayer.visible && uiLayer.name.length > 0 && uiLayer.zOrder > this.zOrder){
						if (uiLayer.name !="Levelup" &&
							uiLayer.name !="HorseTip" &&
						uiLayer.name !="GoldTip" &&
						uiLayer.name !="Mask" &&
						uiLayer.name !="Prize"){
							ret=false;
							break ;
						}
					}
				}
				return ret;
				}clickAtuo(event){
				if (!FightManager.instance.getSkillBoomSelectFlag()&& !FightM.instance.isOwnLock()){
					this.desX=20+Math.random()*(1280-40);
					this.desY=50+Math.random()*(720-100);
					this.continuousShootLeftTime=FightM.instance.getShootInterval();
					this.FireState=0;
					this.cancle.visible=true;
					this.isAtuoFire=false;
					Laya.timer.frameLoop(1,this,this.continuousShoot);
				}
				if (FightManager.instance.getSkillBoomSelectFlag()){
					GameEventDispatch.instance.event("MsgTp",39);
					}else if (FightM.instance.isOwnLock()){
					GameEventDispatch.instance.event("MsgTp",38);
				}
				event.stopPropagation();
				}iphoneXLeftLayout(){
				this.changeSkinBtn.left=20+GameTools.iphoneXOffset;
				this.month.left=20+GameTools.iphoneXOffset;
				this.unlockBox.left=-527+GameTools.iphoneXOffset;
				this.lottey.left=-527+GameTools.iphoneXOffset;
				this.backPanel.left=-359+GameTools.iphoneXOffset;
				}iphoneXLeftLayoutReset(){
				this.changeSkinBtn.left=70;
				this.unlockBox.left=-477;
				this.lottey.left=-477;
				this.backPanel.left=-359;
				this.month.left=70;
				}iphoneXRightLayout(){
				this.skill_bg.right=-30+GameTools.iphoneXOffset;
				this.skill_1.right=2+GameTools.iphoneXOffset;
				this.skill_2.right=2+GameTools.iphoneXOffset;
				this.skill_3.right=2+GameTools.iphoneXOffset;
				this.skill_4.right=2+GameTools.iphoneXOffset;
				this.skill_5.right=2+GameTools.iphoneXOffset;
				this.skill_6.right=2+GameTools.iphoneXOffset;
				this.yulei.right=-55+GameTools.iphoneXOffset;
				}iphoneXRightLayoutReset(){
				this.skill_bg.right=20;
				this.skill_1.right=52;
				this.skill_2.right=52;
				this.skill_3.right=52;
				this.skill_4.right=52;
				this.skill_5.right=52;
				this.skill_6.right=52;
				this.yulei.right=-5;
				}isMateShow(){
				var ret=false;
				var uiLayer=null;
				for (var i=0;i < Laya.stage.numChildren;i++){
					uiLayer=Laya.stage.getChildAt(i);
					if (uiLayer && uiLayer.visible && uiLayer.name.length > 0){
						if (uiLayer.name=="Mate"){
							ret=true;
							break ;
						}
					}
				}
				return ret;
				}isMatchSettleShow(){
				var ret=false;
				var uiLayer=null;
				for (var i=0;i < Laya.stage.numChildren;i++){
					uiLayer=Laya.stage.getChildAt(i);
					if (uiLayer && uiLayer.visible && uiLayer.name.length > 0){
						if (uiLayer.name=="MatchSettle"){
							ret=true;
							break ;
						}
					}
				}
				return ret;
				}syncActivityStatus(){
				if (ActivityM.instance.redPackTicketContinueTime && FightM.instance.coinShootScene()&& RuleM.instance.isRewardShowScene()){
					this.lottey.visible=true;
					}else{
					this.lottey.visible=false;
				}
				if (this.lottey.visible==true){
					this.lottey.centerY=-13;
					this.month.centerY=74;
					}else{
					this.month.centerY=-22;
				}
				}resetUi(){
				this.paoone.y=GameTools.designPosYMapScreenPosY(692);
				this.paoone.x=GameTools.designPosXMapScreenPosX(430);
				this.box_1.x=this.paoone.x-402;
				this.box_1.y=this.paoone.y-76;
				this.powerOne.x=this.paoone.x;
				this.powerOne.y=this.paoone.y+2;
				this.paotwo.x=GameTools.designPosXMapScreenPosX(1280 / 2+210);
				this.paotwo.y=GameTools.designPosYMapScreenPosY(720-28);
				this.box_2.x=this.paotwo.x-94;
				this.box_2.y=this.paotwo.y-76;
				this.powerTwo.x=this.paotwo.x;
				this.powerTwo.y=this.paotwo.y+2;
				this.dentwo.x=this.paotwo.x+110;
				this.dentwo.y=this.paotwo.y-6;
				this.paothree.y=GameTools.designPosYMapScreenPosY(30);
				this.paothree.x=this.paotwo.x;
				this.powerThree.x=this.paothree.x;
				this.powerThree.y=this.paothree.y-4;
				this.box_3.x=this.paothree.x-94;
				this.box_3.y=this.paothree.y-32;
				this.denthree.x=this.paothree.x+110;
				this.denthree.y=this.paothree.y+10;
				this.paofour.y=GameTools.designPosYMapScreenPosY(30);
				this.paofour.x=this.paoone.x;
				this.powerFour.x=this.paofour.x;
				this.powerFour.y=this.paofour.y-4;
				this.denfour.x=this.paofour.x-110;
				this.denfour.y=this.paofour.y+10;
				this.box_4.x=this.paofour.x-382;
				this.box_4.y=this.paofour.y-32;
				this.since.x=Laya.stage.width / 2;
				this.since.y=10;
				this.box_task.x=Laya.stage.width / 2;
				this.box_task.y=10;
				if (GameTools.isIphoneXCrossScreen()){
					if (ScreenAdaptManager.instance.notch=="left"){
						this.iphoneXLeftLayout();
						this.iphoneXRightLayoutReset();
						}else if (ScreenAdaptManager.instance.notch=="right"){
						this.iphoneXRightLayout();
						this.iphoneXLeftLayoutReset();
					}
					}else{
					this.iphoneXRightLayoutReset();
					this.iphoneXLeftLayoutReset();
				}
				this.size(Laya.stage.width,Laya.stage.height);
				FightManager.instance.setLockLinePosArray([this.paoone.x,this.paoone.y,this.paotwo.x,this.paotwo.y,this.paothree.x,this.paothree.y,this.paofour.x,this.paofour.y]);
				this.unlockBox.visible=FightM.instance.coinShootScene();
				this.changeSkinBtn.visible=FightM.instance.coinShootScene();
				BackBox.instance.resetUi();
				MatchInfoBox.instance.resetUi();
				if (!ENV.isShowDied()){
					this.month.visible=FightM.instance.coinShootScene();
					}else{
					this.month.visible=false;
				}
				this.syncActivityStatus();
				this.onLineBox.visible=FightM.instance.coinShootScene();
				this.seatZsOne.visible=FightM.instance.coinShootScene();
				this.seatJifenOne.visible=!FightM.instance.coinShootScene();
				this.coinOne.visible=FightM.instance.coinShootScene();
				this.ccoinOne.visible=!FightM.instance.coinShootScene();
				this.auto.visible=FightM.instance.coinShootScene();
				this.autoTimeTip.visible=FightM.instance.coinShootScene();
				this.contestTimeBox.visible=false;
				if (!FightM.instance.isMatchingGame()){
					this.contestTimeBox.visible=!this.isMateShow();
					FightM.instance.initCountDown(FightM.instance.getContestEndTime(),this.contestTimeText);
				}
				GameEventDispatch.instance.event("PaoOneReset",[this.paoone.x,this.paoone.y]);
				}closeAllMatchGameModule(){
				this.alreadyOne.visible=false;
				this.alreadyTwo.visible=false;
				this.alreadyThree.visible=false;
				this.alreadyFour.visible=false;
				}startAgainMatchingGame(){
				MatchM.instance.initMatchimgGameData(true);
				this.initMatchingGame();
				}updateMatchingGamePanel(){
				if (!this.isMatchSettleShow()){
					this.initMatchingGame();
				}
			}
			//匹配赛 刷新界面
			initMatchingGame(){
				if (FightM.instance.isMatchingGame()){
					this.waitBox.visible=false;
					this.waitBtn.visible=false;
					if (!MatchM.instance.isMatchSart){
						this.matchWaitBox.visible=true;
						this.closeAllMatchGameModule();
						this.playerMatchingGameStateShow();
						}else{
						this.matchWaitBox.visible=false;
						this.closeAllMatchGameModule();
					}
					}else{
					this.matchWaitBox.visible=false;
					this.closeAllMatchGameModule();
				}
				}playerMatchingGameStateShow(){
				var seatInfo;
				seatInfo=FightM.instance.getSeatInfo(FightM.instance.getSeatIdByShowSeatId(1));
				if (seatInfo){
					if (MatchM.instance.prepareState[1]){
						this.waitBox.visible=true;
						this.alreadyOne.visible=true;
						}else{
						this.waitBtn.visible=true;
					}
				}
				seatInfo=FightM.instance.getSeatInfo(FightM.instance.getSeatIdByShowSeatId(2));
				if (seatInfo){
					if (MatchM.instance.prepareState[2]){
						this.alreadyTwo.visible=true;
					}
				}
				seatInfo=FightM.instance.getSeatInfo(FightM.instance.getSeatIdByShowSeatId(3));
				if (seatInfo){
					if (MatchM.instance.prepareState[3]){
						this.alreadyThree.visible=true;
					}
				}
				seatInfo=FightM.instance.getSeatInfo(FightM.instance.getSeatIdByShowSeatId(4));
				if (seatInfo){
					if (MatchM.instance.prepareState[4]){
						this.alreadyFour.visible=true;
					}
				}
				}useBoom(skillIndex,event){
				this.selectBoomIndex=skillIndex;
				this.useSkill(skillIndex);
				this.yulei.visible=false;
				event.stopPropagation();
				}clickOnline(){
				UiManager.instance.loadView("OnLineReward",null,"SMALL_TO_BIG");
				}boomUpdate(){
				this.cancelImg1.visible=FightManager.instance.getSkillBoomSelectFlag();
				this.cancelImg.visible=FightManager.instance.getSkillBoomSelectFlag();
				if (FightManager.instance.getSkillBoomSelectFlag()){
					this.pauseAuto();
					}else{
					this.resumeAuto();
				}
				}violenUpdate(){
				this.violentOne.visible=FightM.instance.isShowSeatViolent(1);
				this.violentOneBg.visible=FightM.instance.isShowSeatViolent(1);
				this.violentTwo.visible=FightM.instance.isShowSeatViolent(2);
				this.violentTwoBg.visible=FightM.instance.isShowSeatViolent(2);
				this.violentThree.visible=FightM.instance.isShowSeatViolent(3);
				this.violentThreeBg.visible=FightM.instance.isShowSeatViolent(3);
				this.violentFour.visible=FightM.instance.isShowSeatViolent(4);
				this.violentFourBg.visible=FightM.instance.isShowSeatViolent(4);
				}initMask(){
				if (!this.roateMaskOne.getChildAt(0)){
					this.roateMaskOne.addChild(AnimalManger.instance.load("cd"));
					this.roateMaskTwo.addChild(AnimalManger.instance.load("cd"));
					this.roateMaskThree.addChild(AnimalManger.instance.load("cd"));
					this.roateMaskFour.addChild(AnimalManger.instance.load("cd"));
					this.roateMaskFive.addChild(AnimalManger.instance.load("cd"));
					this.roateMaskSix.addChild(AnimalManger.instance.load("cd"));
				}
				}rotateRoation(remainTime,totalTime,maskSp,id){
				if (remainTime > 0){
					var ani=maskSp.getChildAt(0);
					var percent=Math.floor((totalTime-remainTime *1000)*80 / totalTime);
					ani.interval=100000;
					ani.play(percent,false);
					maskSp.visible=true;
					}else{
					maskSp.visible=false;
				}
				}startRoate(){
				this.rotateRoation(this.remainTime(0),this.totalTime(0),this.roateMaskOne,0);
				this.rotateRoation(this.remainTime(1),this.totalTime(1),this.roateMaskTwo,1);
				this.rotateRoation(this.remainTime(2),this.totalTime(2),this.roateMaskThree,2);
				this.rotateRoation(this.remainTime(3),this.totalTime(3),this.roateMaskFour,3);
				this.rotateRoation(this.getBoomRamainTime(),this.totalTime(4),this.roateMaskFive,4);
				this.rotateRoation(this.remainTime(10),this.totalTime(10),this.roateMaskSix,10);
				}initViolent(){
				if (!this.violentOne){
					var paotaiName="paotai";
					var paoshengName="paosheng";
					this.paoOneMount=new Sprite();
					this.violentOne=AnimalManger.instance.load(paoshengName);
					this.violentOneBg=AnimalManger.instance.load(paotaiName);
					this.violentOne.pivot((ConfigManager.getConfValue("cfg_anicollision",paoshengName,"pivotX")),
					ConfigManager.getConfValue("cfg_anicollision",paoshengName,"pivotY"));
					this.violentOneBg.pivot((ConfigManager.getConfValue("cfg_anicollision",paotaiName,"pivotX")),
					ConfigManager.getConfValue("cfg_anicollision",paotaiName,"pivotY"));
					this.violentOne.play(0,true);
					this.violentOneBg.play(0,true);
					this.paoone.addChild(this.violentOneBg);
					this.paoone.addChild(this.paoOneMount);
					this.paoone.addChild(this.violentOne);
					this.paoTwoMount=new Sprite();
					this.violentTwo=AnimalManger.instance.load(paoshengName);
					this.violentTwoBg=AnimalManger.instance.load(paotaiName);
					this.violentTwo.pivot((ConfigManager.getConfValue("cfg_anicollision",paoshengName,"pivotX")),
					ConfigManager.getConfValue("cfg_anicollision",paoshengName,"pivotY"));
					this.violentTwoBg.pivot((ConfigManager.getConfValue("cfg_anicollision",paotaiName,"pivotX")),
					ConfigManager.getConfValue("cfg_anicollision",paotaiName,"pivotY"));
					this.violentTwo.play(0,true);
					this.violentTwoBg.play(0,true);
					this.paotwo.addChild(this.violentTwoBg);
					this.paotwo.addChild(this.paoTwoMount);
					this.paotwo.addChild(this.violentTwo);
					this.paoThreeMount=new Sprite();
					this.violentThree=AnimalManger.instance.load(paoshengName);
					this.violentThreeBg=AnimalManger.instance.load(paotaiName);
					this.violentThree.pivot((ConfigManager.getConfValue("cfg_anicollision",paoshengName,"pivotX")),
					ConfigManager.getConfValue("cfg_anicollision",paoshengName,"pivotY"));
					this.violentThreeBg.pivot((ConfigManager.getConfValue("cfg_anicollision",paotaiName,"pivotX")),
					ConfigManager.getConfValue("cfg_anicollision",paotaiName,"pivotY"));
					this.violentThree.play(0,true);
					this.violentThreeBg.play(0,true);
					this.violentThreeBg.scaleY=-1;
					this.paothree.addChild(this.violentThreeBg);
					this.paothree.addChild(this.paoThreeMount);
					this.paothree.addChild(this.violentThree);
					this.paoFourMount=new Sprite();
					this.violentFour=AnimalManger.instance.load(paoshengName);
					this.violentFourBg=AnimalManger.instance.load(paotaiName);
					this.violentFour.pivot((ConfigManager.getConfValue("cfg_anicollision",paoshengName,"pivotX")),
					ConfigManager.getConfValue("cfg_anicollision",paoshengName,"pivotY"));
					this.violentFourBg.pivot((ConfigManager.getConfValue("cfg_anicollision",paotaiName,"pivotX")),
					ConfigManager.getConfValue("cfg_anicollision",paotaiName,"pivotY"));
					this.violentFour.play(0,true);
					this.violentFourBg.play(0,true);
					this.violentFourBg.scaleY=-1;
					this.paofour.addChild(this.violentFourBg);
					this.paofour.addChild(this.paoFourMount);
					this.paofour.addChild(this.violentFour);
				}
				}goodsUpdate(){
				this.updateSKill();
				}skillUpdate(){
				this.updateSkillBtn();
				}updateSkillBtn(){
				}startInex(id){
				var skillId=FightM.instance.getSkillId(id);
				var cdLeftTime=FightM.instance.getSkillCdLeftTime(skillId);
				var totalTime=SkillM.instance.skillTime(id);
				var t=totalTime / 36;
				var remainTimw=totalTime-cdLeftTime;
				var index=remainTimw / t;
				return index *10+-90;
				}totalTime(id){
				return SkillM.instance.skillTime(id);
			}
			//抽奖状态的旋转效果
			lotteryEffect(){
				}getBoomRamainTime(){
				var lt=0;
				for (var boomSkillId=6;boomSkillId <=10;boomSkillId++){
					var cdLeftTime=FightM.instance.getSkillCdLeftTime(boomSkillId);
					if (cdLeftTime > lt){
						lt=cdLeftTime;
					}
				}
				if (lt <=0){
					lt=0;
				}
				return lt
				}remainTime(id){
				var skillId=FightM.instance.getSkillId(id);
				var cdLeftTime=FightM.instance.getSkillCdLeftTime(skillId);
				if (cdLeftTime <=0){
					cdLeftTime=0;
				}
				return cdLeftTime;
			}
			//开始角度
			startEngel(id){
				var skillId=FightM.instance.getSkillId(id);
				var cdLeftTime=FightM.instance.getSkillCdLeftTime(skillId);
				var totalTime=SkillM.instance.skillTime(id);
				var t=totalTime / 36;
				var remainTimw=totalTime-cdLeftTime;
				var index=remainTimw / t;
				return index *10+-90;
			}initSkillAni(){}
			// aniFive.visible=false;
			initSkillUi(){
				this.skillImageOne=this.skill_1.getChildByName("skill_1");
				this.skillImageTwo=this.skill_2.getChildByName("skill_2");
				this.skillImageThree=this.skill_3.getChildByName("skill_3");
				this.skillImageFour=this.skill_4.getChildByName("skill_4");
				this.skillImageFive=this.skill_5.getChildByName("skill_5");
				this.skillClipOne=this.skill_1.getChildByName("skillClip_1");
				this.skillClipTwo=this.skill_2.getChildByName("skillClip_2");
				this.skillClipThree=this.skill_3.getChildByName("skillClip_3");
				this.skillClipFour=this.skill_4.getChildByName("skillClip_4");
				this.skillClipFive=this.skill_5.getChildByName("skillClip_5");
				this.skillClipSix=this.skill_6.getChildByName("skillClip_1");
				this.diamondOne=this.skill_1.getChildByName("zs");
				this.diamondTwo=this.skill_2.getChildByName("zs");
				this.diamondThree=this.skill_3.getChildByName("zs");
				this.diamondFour=this.skill_4.getChildByName("zs");
				this.diamondFive=this.skill_5.getChildByName("zs");
				this.diamondFive.visible=false;
				this.diamondSix=this.skill_6.getChildByName("zs");
				this.diamondSix.visible=false;
				}yuleiRenderHander(cell,index){
				var config=cell.dataSource;
				var iconImg=cell.getChildByName("icon");
				var yulei_count=cell.getChildByName("yulei_count");
				iconImg.skin=config.icon;
				this.setFontClipValue(yulei_count,SkillM.instance.skillCount(5+index)+"");
				cell.offAll(Event.CLICK);
				cell.offAll(Event.MOUSE_DOWN);
				cell.on(Event.CLICK,this,this.useBoom,[5+index]);
				cell.on(Event.MOUSE_DOWN,this,this.downSkip);
				}updateSKill(){
				var arr=[
				{skill:this.skill_1,diamond:this.diamondOne,skill_count:this.skillClipOne,index:0},
				{skill:this.skill_2,diamond:this.diamondTwo,skill_count:this.skillClipTwo,index:1},
				{skill:this.skill_3,diamond:this.diamondThree,skill_count:this.skillClipThree,index:2}];
				!ENV.isShowDied()&& arr.push({skill:this.skill_4,diamond:this.diamondFour,skill_count:this.skillClipFour,index:3});
				this.skill_4.visible=!ENV.isShowDied();
				arr.push(
				{skill:this.skill_5,diamond:this.diamondFive,skill_count:this.skillClipFive,index:5});
				var centerArr=[-135,-45,45,135,225,315];
				var pointIndex=0;
				for (var i=0;i < arr.length;i++){
					var skillBox=arr[i].skill;
					var diamond=arr[i].diamond;
					var skillCount=arr[i].skill_count;
					var index=arr[i].index;
					var isYulei=index==5;
					if (SkillM.instance.skillUrl(index)!=null){
						skillBox.visible=true;
						skillBox.centerY=centerArr[pointIndex];
						pointIndex++;
						if (isYulei){
							this.yuleiList.array=FightM.instance.getyuleiItems();
							this.yuleiList.width=this.yuleiList.array.length *89;
							this.yuleiList.x=500-this.yuleiList.array.length *89;
							this.yuleiBg.width=this.yuleiList.array.length *89+125;
							var total_count=0;
							for (var i=0;i < this.yuleiList.array.length;i++){
								total_count+=SkillM.instance.skillCount(index+i);
							}
							this.setFontClipValue(skillCount,total_count+"");
							}else{
							if (SkillM.instance.skillCount(index)> 0){
								diamond.visible=false;
								this.setFontClipValue(skillCount,SkillM.instance.skillCount(index)+"");
								}else if (index==10){
								this.setFontClipValue(skillCount,"0");
								}else{
								diamond.visible=true;
								this.setFontClipValue(skillCount,SkillM.instance.diamondCount(index)+"");
							}
						}
						}else if (index==10 && FightM.instance.coinShootScene()){
						skillBox.visible=true;
						skillBox.centerY=centerArr[pointIndex];
						pointIndex++;
						}else{
						skillBox.visible=false;
					}
				}
				this.skill_bg.height=pointIndex *90;
				this.skill_bg.centerY=(pointIndex-4)*45;
				this.diamondSix.visible=false;
				this.skillClipSix.visible=true;
				this.skill_6.visible=false;
				}closeOtherBars(event){
				this.deblockGoEffect();
				this.lotteryGoEffect();
				}useSkill(skillIndex){
				var skillId=FightM.instance.getSkillId(skillIndex);
				var cdLeftTime=FightM.instance.getSkillCdLeftTime(skillId);
				if (cdLeftTime <=0 && skillId > 0){
					var skillType=ConfigManager.getConfValue("cfg_skill",skillId,"skill_type");
					if (skillType==5){
						if (SkillM.instance.skillCount(skillIndex)<=0){
							GameEventDispatch.instance.event("MsgTp",2);
							}else{
							FightManager.instance.setSkillBoomSelectFlag(skillId);
						}
						}else if (skillType==6){
						if (SkillM.instance.skillCount(skillIndex)<=0){
							GameEventDispatch.instance.event("MsgTp",40);
							}else{
							FightManager.instance.useSkill(skillId);
						}
						}else{
						if (!FightManager.instance.getSkillBoomSelectFlag()){
							if (SkillM.instance.isConsumeEnough(skillIndex)){
								FightManager.instance.useSkill(skillId);
								}else{
								if (WxC.isHideShop()){
									GameEventDispatch.instance.event("MsgTipContent","钻石不足");
									}else{
									var info=new QuitTipInfo();
									info.state=1;
									info.content="钻石不足是否前去充值";
									info.confirmMsg="Shop";
									info.conFirmArgs="tab_diamond";
									info.autoCloseTime=10;
									if (RoleInfoM.instance.isSkillResTip()){
										GameEventDispatch.instance.event("QuitTip",info);
										}else{
										var tmpInfo=new QuitTipInfo();
										var diamondNum=SkillM.instance.skillDiamondCount(skillId);
										tmpInfo.state=1;
										tmpInfo.content="道具不足，是否花费"+diamondNum+"钻石释放该技能";
										tmpInfo.confirmMsg="UseGoodsConfirmAndJumpToShop";
										tmpInfo.conFirmArgs=info;
										tmpInfo.autoCloseTime=10;
										GameEventDispatch.instance.event("QuitTip",tmpInfo);
									}
								}
							}
						}
					}
				}
				}downSkip(event){
				event.stopPropagation();
				}clickSkill1(event){
				this.useSkill(0);
				event.stopPropagation();
				}clickSkill6(event){
				this.useSkill(10);
				event.stopPropagation();
				}aniOnePlayComplete(){
				this.IsOneClick=true;
			}
			// aniOne.visible=false;
			clickSkill2(event){
				this.useSkill(1);
				event.stopPropagation();
				}aniTwoComplete(){
				this.IsTwoClick=true;
				this.aniTwo.visible=false;
				}clickSkill3(event){
				this.useSkill(2);
				event.stopPropagation();
				}aniThreeComplete(){
				this.IsThreeClick=true;
				this.aniThree.visible=false;
				}clickSkill4(event){
				this.useSkill(3);
				event.stopPropagation();
				}aniFourComplete(){
				this.IsFourClick=true;
				this.aniFour.visible=false;
				}clickSkill5(event){
				if (this.getBoomRamainTime()<=0){
					this.yulei.visible=!this.yulei.visible;
				}
				event.stopPropagation();
				}staraniFiveComplete(){
				this.IsFiveClick=true;
				this.aniFive.visible=false;
				}initUi(){
				this.jichP=this.buchou.getChildByName("pre");
				this.jiNowCount=this.buchou.getChildByName("now");
				this.baseFishCount=this.buchou.getChildByName("base");
				this.jichiNumTwo=this.nchou.getChildByName("rewCount");
				this._rewardLevelName=this.nchou.getChildByName("ctxt");
				this.autoTimeTip.visible=false;
				this.setFontClipValue(this.diamodOne,"0");
				this.setFontClipValue(this.diamodTwo,"0");
				this.setFontClipValue(this.diamodThree,"0");
				this.setFontClipValue(this.diamodFour,"0");
				}clickPowerAdd(event){
				this.lotteryGoEffect();
				event.stopPropagation();
				var sceneId=FightM.instance.getSceneId();
				var useBattery=FightM.instance.getOwnUseBattery();
				var nextBattry=useBattery;
				var ownBattery=RoleInfoM.instance.getBattery();
				var sceneMinMag=ConfigManager.getConfValue("cfg_scene",sceneId,"min_mag");
				var sceneMaxMag=ConfigManager.getConfValue("cfg_scene",sceneId,"max_mag");
				if (useBattery==sceneMaxMag){
					GameEventDispatch.instance.event("MsgTp",24);
				}
				if (FightM.instance.isMatchingGame()){
					if (useBattery < sceneMaxMag){
						nextBattry++;
						}else{
						nextBattry=sceneMinMag;
					}
					}else{
					if (useBattery < sceneMaxMag && useBattery < ownBattery){
						nextBattry++;
						}else{
						nextBattry=sceneMinMag;
					}
				};
				var protoData=new C2s_13003();
				protoData.skin=0;
				protoData.battery=nextBattry;
				WebSocketManager.instance.send(13003,protoData);
				}_clickPowerSub(){
				var sceneId=FightM.instance.getSceneId();
				var useBattery=FightM.instance.getOwnUseBattery();
				var nextBattry=useBattery;
				var ownBattery=RoleInfoM.instance.getBattery();
				var sceneMinMag=ConfigManager.getConfValue("cfg_scene",sceneId,"min_mag");
				var sceneMaxMag=ConfigManager.getConfValue("cfg_scene",sceneId,"max_mag");
				if (useBattery==sceneMinMag){
					GameEventDispatch.instance.event("MsgTp",25);
				}
				if (FightM.instance.isMatchingGame()){
					if (useBattery > sceneMinMag){
						nextBattry--;
						}else{
						nextBattry=sceneMaxMag;
					}
					}else{
					if (useBattery > sceneMinMag){
						nextBattry--;
						}else{
						nextBattry=Math.min(ownBattery,sceneMaxMag);
					}
				};
				var protoData=new C2s_13003();
				protoData.skin=0;
				protoData.battery=nextBattry;
				WebSocketManager.instance.send(13003,protoData);
				}clickPowerSub(event){
				this.lotteryGoEffect();
				event.stopPropagation();
				this._clickPowerSub();
				}clickBoxTwo(event){
				event.stopPropagation();
				GameEventDispatch.instance.event("Shop","tab_diamond");
				}collcet(){
				if (this.nchou.x==8){
					this.chu.play(0,false);
				}
				}unlockbattery(){
				WebSocketManager.instance.send(13001,null);
				this.unlockBatteryTip=false;
				this.unlockBatteryTipTime=new Date().getTime();
				}clickBoxOne(event){
				event.stopPropagation();
				this.unlockbattery();
				}initPowerUi(){
				this.powerOneTxt=this.gunBoxOne.getChildByName("ptxt");
				this.giveClip=this.gunBoxOne.getChildByName("rewardCount");
				this.pro=this.gunBoxTwo.getChildByName("pre");
				this.powerTwoTxt=this.gunBoxTwo.getChildByName("ptxt");
				this.needDiaClip=this.gunBoxTwo.getChildByName("needZ");
				this.haveDiaClip=this.gunBoxTwo.getChildByName("yZuan");
				}hideGunShow(){
				this.paoCollect();
				}updatePower(){
				var power=GunM.instance.getNextPower(RoleInfoM.instance.getBattery());
				if (power < 0){
					this.gunImg.visible=false;
					this.battery_icon_bg.visible=false;
					this.gunBoxOne.visible=false;
					this.gunBoxTwo.visible=false;
					this.hideGunShow();
					return;
				};
				var needCount=GunM.instance.needDiamod(RoleInfoM.instance.getBattery());
				var haveCount=RoleInfoM.instance.getDiamond();
				var giveCount=GunM.instance.giveCount(RoleInfoM.instance.getBattery());
				this.updatePowerData(power,haveCount,needCount,giveCount);
				}updatePowerData(power,haveCount,needCount,giveCount){
				if (haveCount >=needCount){
					this.gunBoxOne.visible=true;
					this.gunBoxTwo.visible=false;
					this.battery_icon_bg.visible=true;
					if (this.isAuto){
						this.isAuto=false;
						this.deblockComeEffect();
						this.unlockBatteryTip=true;
						this.unlockBatteryTipTime=new Date().getTime();
					}
					}else{
					this.isAuto=true;
					this.gunBoxOne.visible=false;
					this.gunBoxTwo.visible=true;
					this.battery_icon_bg.visible=false;
				}
				if (power < 0){
					this.gunImg.visible=false;
					this.battery_icon_bg.visible=false;
					this.gunBoxOne.visible=false;
					this.gunBoxTwo.visible=false;
				}
				this.powerOneTxt.changeText("点击解锁"+power+"倍炮");
				this.powerTwoTxt.changeText("点击解锁"+power+"倍炮");
				this.setFontClipValue(this.haveDiaClip,haveCount+"");
				this.setFontClipValue(this.needDiaClip,needCount+"");
				this.setFontClipValue(this.giveClip,giveCount+"");
				this.pro.value=haveCount / needCount;
				}clickGunImg(event){
				GameTools.buttonEffect(this.gunImg);
				this.playLockEffect();
				this.lotteryGoEffect();
				event.stopPropagation();
				this.updatePower();
				if (this.isClickGun){
				}
				}paoRelease(){
				if (this.gunBoxTwo.x==-327){
					this.release.play(0,false);
				}
				}releaseComplete(){
				this.isGunShow=true;
				this.isClickP=true;
				}onChangeSkinBtn(event){
				GameTools.buttonEffect(this.changeSkinBtn);
				this.lotteryGoEffect();
				this.deblockGoEffect();
				event.stopPropagation();
				GameEventDispatch.instance.event("ClearRedPoint",4);
				UiManager.instance.loadView("ChangeSkin",null,"SMALL_TO_BIG");
				}taskDaily(){
				GameEventDispatch.instance.event("RefreshTaskDaily");
				UiManager.instance.loadView("TaskDaily",null,"SMALL_TO_BIG");
				}updateFishCount(){
				this.totalIntergal.changeText("积分:"+Math.floor(RoleInfoM.instance.getAwardScore()));
				this.rewardCoinCount=RoleInfoM.instance.getFcoin();
				this.rewardFishCount=RoleInfoM.instance.getFcount();
				if (this.rewardFishCount > 5)
					this.rewardCoinCount=RoleInfoM.instance.getFcoin();
				this.rewardFishCount=RoleInfoM.instance.getFcount();
				if (this.rewardFishCount >=RewardM.instance.baseFishCount()){
					if (RuleM.instance.isShowScene){
						this.lottery_icon_bg.visible=false;
						}else{
						this.lottery_icon_bg.visible=true;
					}
					if (RuleM.instance.isShowScene==false){
						this.nchou.visible=true;
						}else{
						this.nchou.visible=false;
					}
					this.buchou.visible=false;
					if (!this.rewardFishTip){
						this.rewardFishTip=true;
						this.rewardFishTipTime=new Date().getTime();
					}
					}else{
					this.lottery_icon_bg.visible=false;
					this.nchou.visible=false;
					this.buchou.visible=true;
				}
				this.jichP.value=this.rewardFishCount / RewardM.instance.baseFishCount();
				this.setFontClipValue(this.jichiNumTwo,this.rewardCoinCount+"");
				this.setFontClipValue(this.jiNowCount,this.rewardFishCount+"");
				var seatInfo;
				var seatId=0;
				var unreachNum=0;
				seatId=FightM.instance.getSeatIdByShowSeatId(1);
				seatInfo=FightM.instance.getSeatInfo(seatId);
				if (seatInfo){
					if (!FightM.instance.coinShootScene()){
						unreachNum=FightM.instance.getGoodsUnreachNum(seatInfo.agent,201);
						}else{
						unreachNum=FightM.instance.getGoodsUnreachNum(seatInfo.agent,4);
					}
				}
				if (!FightM.instance.coinShootScene()){
					this.setFontClipValue(this.diamodOne,RoleInfoM.instance.getContestScore()-unreachNum+"");
					}else{
					this.setFontClipValue(this.diamodOne,(RoleInfoM.instance.getDiamond()-unreachNum)+"");
				}
				this.setFontClipValue(this.baseFishCount,RewardM.instance.baseFishCount()+"");
				var nextPower=GunM.instance.getNextPower(RoleInfoM.instance.getBattery());
				if (nextPower > 0){
					var needCount=GunM.instance.needDiamod(RoleInfoM.instance.getBattery());
					var haveCount=RoleInfoM.instance.getDiamond();
					if (haveCount > needCount && !this.unlockBatteryTip){
					}
				}
				this.updatePower();
				GameEventDispatch.instance.event("UpdateFish");
				if (!FightM.instance.coinShootScene()){
					this.contestScoreUpdate();
					MatchInfoBox.instance.countPlayerRankInfo();
				}
				}playWait(den){
				Tween.to(den,{scaleX:0.8,scaleY:0.8},5000,null,Handler.create(this,this.play,[den]));
				}play(m){
				Tween.to(m,{scaleX:1,scaleY:1},5000,null,Handler.create(this,this.playWait,[m]));
			}playNext(m){}
			//Tween.to(m,{scaleX:0.8,scaleY:0.8},5000,null,Handler.create(this,play,[m]));
			playGetGoods(i,goodsId,pos_x,pos_y,delay,isOwn,rnd){
				var effect=GoodsFlyEffect.Create(goodsId,pos_x,pos_y,this.PaoPoint(i).x,this.PaoPoint(i).y,delay,this,isOwn,rnd);
				GoodsFlyManager.instance.addFlyEffect(effect);
				return effect.getEffectTime();
				return 0;
				}PaoPoint(i){
				switch (i){
					case 1:{
							return new Point(this.box_1.x+this.coinOne.x,this.box_1.y+this.coinOne.y);
							break ;
						}
					case 2:{
							return new Point(this.box_2.x+this.coinTwo.x,this.box_2.y+this.coinTwo.y);
							break ;
						}
					case 3:{
							return new Point(this.box_3.x+this.coinThree.x,this.box_3.y+this.coinThree.y);
							break ;
						}
					case 4:{
							return new Point(this.box_4.x+this.coinFour.x,this.box_4.y+this.coinFour.y);
							break ;
						}
					default :{
							return null;
							break ;
						}
					}
				}initEvent(){
				this.reward.on(Event.CLICK,this,this.clickreward);
				this.nchou.on(Event.CLICK,this,this.clickBox);
				this.buchou.on(Event.CLICK,this,this.clickBox);
				}clickBox(event){
				WebSocketManager.instance.send(15003,null);
				GameEventDispatch.instance.event("RewardFish",[this.rewardFishCount,this.rewardCoinCount]);
				this.lotteryGoEffect();
				this.deblockGoEffect();
				event.stopPropagation();
				}paoCollect(){
				if (this.gunBoxTwo.x==8 && (this.nchou.x==-327 || this.nchou.x==8)){
					this.collect.play(0,false);
				}
				}clickreward(event){
				GameTools.buttonEffect(this.reward);
				this.playLotteryEffect();
				this.deblockGoEffect();
				if (this.isShow==false && this.isClickBtn==true){
					this.isClickBtn=false;
					event.stopPropagation();
					this.jin.on(Event.COMPLETE,this,this.showComplete);
				}
			}
			//Tween.to(rewardBox,{x:980},400,null,Handler.create(this,showComplete));
			paoJin(){
				if (this.nchou.x==-327 && (this.gunBoxTwo.x==8 || this.gunBoxTwo.x==-327)){
					this.jin.play(0,false);
					}else if (this.nchou.x==8 && (this.gunBoxTwo.x==8 || this.gunBoxTwo.x==-327)){
					this.chu.play(0,false);
				}
				}showComplete(){
				this.isShow=true;
				this.isClickPanel=true;
			}
			//发射子弹
			shootBullet(endX,endY){
				if (MatchResultBox.instance.view().visible==true){
					return;
				}
				if (FightM.instance.getSceneId()<=0 ||
					FightM.instance.getOwnUseBattery()<=0){
					return;
				}
				switch (FightM.instance.seatId){
					case 1:{
							this.paoImage=this.paoone;
							break ;
						}
					case 2:{
							this.paoImage=this.paotwo;
							break ;
						}
					case 3:{
							this.paoImage=this.paothree;
							break ;
						}
					case 4:{
							this.paoImage=this.paofour;
							break ;
						}
					}
				if (GameConst.fix_left_down_pos){
					this.paoImage=this.paoone;
				};
				var refAngle=GameTools.CalLineAngleP4(GameTools.screenPosXMapDesignPosX(this.paoImage.x),GameTools.screenPosYMapDesignPosY(this.paoImage.y)
				,endX,endY);
				var skin_id=RoleInfoM.instance.getCurSkin();
				var lenArray=ConfigManager.getConfValue("cfg_battery_skin",skin_id,"offLen");
				this._shootBulletInfo.showDelay=0;
				var angle=NaN;
				var radian=NaN;
				var deltaX=NaN;
				var deltaY=NaN;
				var length=NaN;
				var comsume=ConfigManager.getConfValue("cfg_battery",FightM.instance.getOwnUseBattery(),"comsume");
				var catchCount=ConfigManager.getConfValue("cfg_battery_skin",RoleInfoM.instance.getCurSkin(),"catch_count");
				var multi=ConfigManager.getConfValue("cfg_battery_skin",RoleInfoM.instance.getCurSkin(),"multi");
				var totalCoin=RoleInfoM.instance.getCoin()+RoleInfoM.instance.getBindCoin();
				if (!FightM.instance.coinShootScene()){
					totalCoin=RoleInfoM.instance.getContestCoin();
				}
				comsume=comsume *catchCount *FightM.instance.getCoinRate()*FightM.instance.getChangeRate();
				if (FightM.instance.seatId > 0){
					if (!FightManager.instance.isBulletReachMaxNum()){
						var seatInfo=FightM.instance.getSeatInfo(FightM.instance.seatId);
						if (totalCoin >=comsume){
							{
								var multiOffsetInfo=ConfigManager.getConfValue("cfg_battery_skin",RoleInfoM.instance.getCurSkin(),"offAngle");
								var offX=ConfigManager.getConfValue("cfg_battery_skin",RoleInfoM.instance.getCurSkin(),"offX");
								this._shootOnlineInfo.bt=FightM.instance.getOwnUseBattery();
								this._shootOnlineInfo.sk=RoleInfoM.instance.getCurSkin();
								this._shootOnlineInfo.sr=1;
								this._shootOnlineInfo.index=FightM.instance.seatId;
								this._shootOnlineInfo.tick=FightManager.instance.getCurTick();
								this._shootBulletInfo.sr=this._shootOnlineInfo.sr;
								this._shootBulletInfo.sk=this._shootOnlineInfo.sk;
								this._shootBulletInfo.tick=this._shootOnlineInfo.tick;
								this._shootBulletInfo.fuid=0;
								this._shootBulletInfo.index=this._shootOnlineInfo.index;
								this._shootBulletInfo.count=ConfigManager.getConfValue("cfg_battery_skin",this._shootBulletInfo.sk,"catch_count");
								this._shootBulletInfo.showDelay=0;
								this._shootBulletInfo.agent=FightM.instance.getOwnAgent();
								for (var i=0;i < multi;i++){
									angle=refAngle+multiOffsetInfo[i];
									deltaX=GameTools.CalCosBySheet(angle);
									deltaY=GameTools.CalSinBySheet(angle);
									length=lenArray[i];
									this._shootBulletInfo.startX=GameTools.screenPosXMapDesignPosX(this.paoImage.x)+offX[i]+deltaX *length;
									this._shootBulletInfo.startY=GameTools.screenPosYMapDesignPosY(this.paoImage.y)+deltaY *length;
									this._shootBulletInfo.endX=this._shootBulletInfo.startX+deltaX *length;
									this._shootBulletInfo.endY=this._shootBulletInfo.startY+deltaY *length;
									this._shootOnlineInfo.startX=FightM.instance.getMirrorPosXByOwnSeat(Math.floor(this._shootBulletInfo.startX));
									this._shootOnlineInfo.startY=FightM.instance.getMirrorPosYByOwnSeat(Math.floor(this._shootBulletInfo.startY));
									this._shootOnlineInfo.endX=FightM.instance.getMirrorPosXByOwnSeat(Math.floor(this._shootBulletInfo.endX));
									this._shootOnlineInfo.endY=FightM.instance.getMirrorPosYByOwnSeat(Math.floor(this._shootBulletInfo.endY));
									this._shootBulletInfo.endX=this._shootOnlineInfo.endX;
									this._shootBulletInfo.endY=this._shootOnlineInfo.endY;
									this._shootBulletInfo.startX=this._shootOnlineInfo.startX;
									this._shootBulletInfo.startY=this._shootOnlineInfo.startY;
									if (this._shootBulletInfo.startX >=0 && this._shootBulletInfo.startX <=Laya.stage.width &&
										this._shootBulletInfo.startY >=0 && this._shootBulletInfo.startY <=Laya.stage.height){
										this._shootOnlineInfo.uid=FightM.instance.getBulletUid();
										this._shootBulletInfo.uniId=this._shootOnlineInfo.uid;
										if (0==i){
											this._shootOnlineInfo.m=1;
											GameEventDispatch.instance.event("OnlineBullet",this._shootBulletInfo);
											}else{
											this._shootOnlineInfo.m=0;
										}
										GameEventDispatch.instance.event("NewBullet",this._shootBulletInfo);
										var preDate=new Date();
										WebSocketManager.instance.send(12014,this._shootOnlineInfo);
										GameEventDispatch.instance.event("NoviceGuideShoot",null);
										var nowDate=new Date();
										if (nowDate.getTime()-preDate.getTime()> 3){
										}
										}else{
									}
									this._bulletMaxTip=false;
									totalCoin-=comsume;
									if (totalCoin < comsume){
										break ;
									}
								}
							}
							}else{
							Laya.timer.clear(this,this.continuousShoot);
							this.stopAuto();
							if (FightM.instance.coinShootScene()){
								if (ENV.isShowBannerAndAD()){
									var canPlayAd=AdM.instance.watch_times < AdM.instance.total_times;
									if (canPlayAd){
										var info=new QuitTipInfo();
										info.state=1;
										info.content="观看广告即可领取金币奖励";
										info.confirmEvent="Shop";
										info.confirmEventArgs=["tab_coin"];
										info.cancelEvent="ShowAd";
										info.cancelEventArgs=[];
										info.leftTxt="观看广告";
										info.rightTxt="立即购买";
										info.middleTxt="观看广告";
										if (Browser.onIOS){
											info.state=2;
											info.confirmEvent="ShowAd";
											info.confirmEventArgs=[];
										}
										info.isHaveTime=false;
										GameEventDispatch.instance.event("QuitTip",info);
										}else{
										GameEventDispatch.instance.event("MsgTp",3);
										GameEventDispatch.instance.event("Shop","tab_coin");
									}
									}else{
									GameEventDispatch.instance.event("MsgTp",3);
									GameEventDispatch.instance.event("Shop","tab_coin");
								}
								}else{
							}
						}
						}else{
						if (!this._bulletMaxTip){
							GameEventDispatch.instance.event("MsgTp",19);
							this._bulletMaxTip=true;
						}
					}
				}
				}shootTick(){
				this.continuousShootLeftTime-=Laya.timer.delta / 1000;
				}continuousShoot(){
				if (this.continuousShootLeftTime <=0){
					this.shootBullet(this.desX,this.desY);
					this.continuousShootLeftTime=FightM.instance.getShootInterval();
				}
				}mouseDown(event){
				this.desX=GameTools.screenPosXMapDesignPosX(event.stageX);
				this.desY=GameTools.screenPosYMapDesignPosY(event.stageY);
				this.mouseMoveValid=true;
				if (this.isShow==true && this.isClickPanel==true){
					return;
				}
				if (this.isGunShow==true && this.isClickP==true){
					return;
				}
				if (this.continuousShootLeftTime > 0){
					return
				}
				this.yulei.visible=false;{
					if (!FightManager.instance.touchHandle(event.stageX,event.stageY)){
						this.continuousShootLeftTime=FightM.instance.getShootInterval();
						Laya.timer.frameLoop(1,this,this.continuousShoot);
						this.shootBullet(this.desX,this.desY);
					}
				}
				}mouseMove(event){
				if (this.mouseMoveValid){
					this.desX=GameTools.screenPosXMapDesignPosX(event.stageX);
					this.desY=GameTools.screenPosYMapDesignPosY(event.stageY);
				}
			}
			//event.stageY;
			mouseOut(event){
				this.mouseMoveValid=false;
				if (this.FireState==1){
					Laya.timer.clear(this,this.continuousShoot);
				}
				}mouseUp(event){
				this.mouseMoveValid=false;
				if (this.FireState==1){
					Laya.timer.clear(this,this.continuousShoot);
				}
				}playPaoStand(pao,seatId){
				if (pao.visible && this.seatCSkinList[seatId-1] > 0){
					var spineAni;
					var paoMount=pao.getChildAt(1);
					spineAni=paoMount.getChildAt(0);
					if (spineAni && !spineAni.isPlaying()){
						spineAni.play("stand",true);
					}
				}
				}paoAnimationCheck(){
				this.playPaoStand(this.paoone,FightM.instance.getSeatIdByShowSeatId(1));
				this.playPaoStand(this.paotwo,FightM.instance.getSeatIdByShowSeatId(2));
				this.playPaoStand(this.paothree,FightM.instance.getSeatIdByShowSeatId(3));
				this.playPaoStand(this.paofour,FightM.instance.getSeatIdByShowSeatId(4));
				}clickPanel(event){
				if (!this.rewardFishTip || ((new Date().getTime()-this.rewardFishTipTime)/ 1000)> 10){
				}
				if (!this.unlockBatteryTip || ((new Date().getTime()-this.unlockBatteryTipTime)/ 1000)> 10){
					this.deblockGoEffect();
				}
				if (this.isShow==true && this.isClickPanel==true){
					this.isClickPanel=false;
					return;
				}
				if (this.isGunShow==true && this.isClickP==true){
					return;
				}
				}setFontClipValue(font,str){
				if (font.value !=str){
					font.value=str;
				}
				}updateGold(countOne,countTwo,countThree,countFour){
				this.setFontClipValue(this.goldOne,countOne+"");
				this.setFontClipValue(this.goldTwo,countTwo+"");
				this.setFontClipValue(this.goldThree,countThree+"");
				this.setFontClipValue(this.goldFour,countFour+"");
				}satrt(){
				this.isClick=true;
				}playEffenct(seatId){
				var spineAni;
				var paoMount=this.paoImage.getChildAt(1);
				spineAni=paoMount.getChildAt(0);
				if (spineAni){
					spineAni.play("attack",false);
				}
				}setPaoRotation(data){
				var violentAni;
				var violentAniBg;
				switch (data.seat_id){
					case 1:{
							this.paoImage=this.paoone;
							violentAni=this.violentOne;
							violentAniBg=this.violentOneBg;
							break ;
						}
					case 2:{
							this.paoImage=this.paotwo;
							violentAni=this.violentTwo;
							violentAniBg=this.violentTwoBg;
							break ;
						}
					case 3:{
							this.paoImage=this.paothree;
							violentAni=this.violentThree;
							violentAniBg=this.violentThreeBg;
							break ;
						}
					case 4:{
							this.paoImage=this.paofour;
							violentAni=this.violentFour;
							violentAniBg=this.violentFourBg;
							break ;
						}
					};
				var paoAni=this.paoImage.getChildAt(1);
				paoAni.rotation=data.angle;
				violentAni.rotation=data.angle;
				this.playEffenct(data.seat_id);
				}onlineBullet(data){
				var info=data;
				var showSeatId=FightM.instance.getShowSeatId(info.index);
				var violentAni;
				var violentAniBg;
				switch (showSeatId){
					case 1:{
							this.paoImage=this.paoone;
							violentAni=this.violentOne;
							violentAniBg=this.violentOneBg;
							break ;
						}
					case 2:{
							this.paoImage=this.paotwo;
							violentAni=this.violentTwo;
							violentAniBg=this.violentTwoBg;
							break ;
						}
					case 3:{
							this.paoImage=this.paothree;
							violentAni=this.violentThree;
							violentAniBg=this.violentThreeBg;
							break ;
						}
					case 4:{
							this.paoImage=this.paofour;
							violentAni=this.violentFour;
							violentAniBg=this.violentFourBg;
							break ;
						}
					}
				this.playEffenct(info.index);
				var startX=GameTools.designPosXMapScreenPosX(FightM.instance.getMirrorPosXByOwnSeat(info.startX));
				var endX=GameTools.designPosXMapScreenPosX(FightM.instance.getMirrorPosXByOwnSeat(info.endX));
				var startY=GameTools.designPosYMapScreenPosY(FightM.instance.getMirrorPosYByOwnSeat(info.startY));
				var endY=GameTools.designPosYMapScreenPosY(FightM.instance.getMirrorPosYByOwnSeat(info.endY));
				var angle=GameTools.CalLineAngleP4(startX,startY,endX,endY);
				var paoAni=this.paoImage.getChildAt(1);
				paoAni.rotation=angle;
				violentAni.rotation=angle;
				if (info.index==FightM.instance.seatId){
					var soundPath=ConfigManager.getConfValue("cfg_global",1,"shoot_sound");
					if (WxC.isInMiniGame()){
						soundPath="wxlocal/shoot.mp3";
					}
					GameSoundManager.playSound(soundPath);
				}
				}receiveHandshake(data){
				WebSocketManager.instance.send(12001,null);
				}updatePlayerStatus(seatInfo,pao,tai,gold,rotation,wait,coin,kuang,paoLabel,role,name,seatId,vipFont,violentAni,roleImg){
				if (seatInfo){
					var paoMount=pao.getChildAt(1);
					if (!pao.visible || !paoMount.getChildAt(0)){
						pao.visible=true;
						tai.visible=true;
						gold.visible=true;
						coin.visible=true;
						kuang.visible=true;
						paoLabel.visible=true;
						role.visible=true;
						name.visible=true;
						paoMount.rotation=rotation;
						violentAni.rotation=rotation;
						pao.rotation=0;
					}
					if (seatInfo.avatar !=roleImg.skin){
						if (seatInfo.avatar==null || seatInfo.avatar.length <=0){
							roleImg.skin="ui/common/nan.png";
							}else{
							roleImg.skin=seatInfo.avatar;
						}
					}
					if (wait){
						wait.visible=false;
					}
					if (this.seatCSkinList[seatId-1] !=seatInfo.cskin){
						this.seatCSkinList[seatId-1]=seatInfo.cskin;
						var spineAni;
						var aniName=ConfigManager.getConfValue("cfg_battery_skin",this.seatCSkinList[seatId-1],"ani");
						var aniPngName=ConfigManager.getConfValue("cfg_battery_skin",this.seatCSkinList[seatId-1],"batteryImg1");
						spineAni=paoMount.getChildAt(0);
						if (spineAni){
							spineAni.removeSelf();
						}
						if (aniPngName && aniPngName.length > 0){
							spineAni=new BatteryImgAction();
							spineAni.loadImage(aniPngName);
							}else{
							spineAni=new SpineTemplet(aniName);
						}
						paoMount.addChild(spineAni);
						spineAni.play("born",false);
					}
					this.setFontClipValue(paoLabel,ConfigManager.getConfValue("cfg_battery",seatInfo.battery,"comsume"));
					this.setFontClipValue(vipFont,seatInfo.level+"");
					name.changeText(LoginInfoM.instance.filterName(MatchM.instance.matchNameRule(seatInfo.name)));
					}else{
					if (pao.visible){
						pao.visible=false;
						tai.visible=false;
						gold.visible=false;
						coin.visible=false;
						kuang.visible=false;
						paoLabel.visible=false;
						role.visible=false;
						name.visible=false;
					}
					if (roleImg.skin !="ui/common/nan.png"){
						roleImg.skin="ui/common/nan.png";
					}
					if (wait){
						wait.visible=true;
						Tween.clearAll(wait);
						this.playWait(wait);
					}
					this.seatCSkinList[seatId-1]=0;
				}
				}fightPlayerUpdate(){
				var seatInfo;
				var seatId=0;
				seatId=FightM.instance.getSeatIdByShowSeatId(1);
				seatInfo=FightM.instance.getSeatInfo(seatId);
				this.updatePlayerStatus(seatInfo,this.paoone,this.taione,this.goldOne,270,null,this.coinOne,this.kuangone,this.powerOne,
				this.roleOne,this.nameOne,seatId,this.fontVipOne,this.violentOne,this.playimgOne);
				if (WxC.isInMiniGame()&& WxC.author==1){
					this.nameOne.text=LoginInfoM.instance.filterName(RoleInfoM.instance.getName());
					if (this.playimgOne.skin !=RoleInfoM.instance.getAvatar()){
						this.playimgOne.skin=RoleInfoM.instance.getAvatar();
					}
				}
				seatId=FightM.instance.getSeatIdByShowSeatId(2);
				seatInfo=FightM.instance.getSeatInfo(seatId);
				this.updatePlayerStatus(seatInfo,this.paotwo,this.taitwo,this.goldTwo,270,this.dentwo,this.coinTwo,this.kuangtwo,this.powerTwo,this.roleTwo,
				this.nameTwo,seatId,this.fontVipTwo,this.violentTwo,this.playimgTwo);
				this.diamondBoxTwo.visible=!FightM.instance.coinShootScene()&& null !=seatInfo;
				this.coinTwo.visible=FightM.instance.coinShootScene()&& null !=seatInfo;
				this.ccoinTwo.visible=!FightM.instance.coinShootScene()&& null !=seatInfo;
				seatId=FightM.instance.getSeatIdByShowSeatId(3);
				seatInfo=FightM.instance.getSeatInfo(seatId);
				this.updatePlayerStatus(seatInfo,this.paothree,this.taithree,this.goldThree,90,this.denthree,this.coinThree,this.kuangthree,this.powerThree,this.roleThree,
				this.nameThree,seatId,this.fontVipThree,this.violentThree,this.playimgThree);
				this.diamondBoxThree.visible=!FightM.instance.coinShootScene()&& null !=seatInfo;
				this.coinThree.visible=FightM.instance.coinShootScene()&& null !=seatInfo;
				this.ccoinThree.visible=!FightM.instance.coinShootScene()&& null !=seatInfo;
				seatId=FightM.instance.getSeatIdByShowSeatId(4);
				seatInfo=FightM.instance.getSeatInfo(seatId);
				this.updatePlayerStatus(seatInfo,this.paofour,this.taifour,this.goldFour,90,this.denfour,this.coinFour,this.kuangfour,this.powerFour,this.roleFour,
				this.nameFour,seatId,this.fontVipFour,this.violentFour,this.playimgFour);
				this.diamondBoxFour.visible=!FightM.instance.coinShootScene()&& null !=seatInfo;
				this.coinFour.visible=FightM.instance.coinShootScene()&& null !=seatInfo;
				this.ccoinFour.visible=!FightM.instance.coinShootScene()&& null !=seatInfo;
				this.fightCoinUpdate(null);
				}contestScoreUpdate(){
				var seatInfo;
				seatInfo=FightM.instance.getSeatInfo(FightM.instance.getSeatIdByShowSeatId(2));
				if (seatInfo){
					this.setFontClipValue(this.diamodTwo,String(seatInfo.contestScore));
				}
				seatInfo=FightM.instance.getSeatInfo(FightM.instance.getSeatIdByShowSeatId(3));
				if (seatInfo){
					this.setFontClipValue(this.diamodThree,String(seatInfo.contestScore));
				}
				seatInfo=FightM.instance.getSeatInfo(FightM.instance.getSeatIdByShowSeatId(4));
				if (seatInfo){
					this.setFontClipValue(this.diamodFour,String(seatInfo.contestScore));
				}
				}goldUpdate(gold,diamond,value){
				var len=(value+"").length;
				this.setFontClipValue(gold,value+"");
				if (len > 10){
					var scale=0.6 / 2;
					gold.scale(scale,scale);
					if (diamond){
						diamond.scale(scale,scale);
					}
					}else{
					var scale=0.8 / 2;
					gold.scale(scale,scale);
					if (diamond){
						diamond.scale(scale,scale);
					}
				}
				}fightCoinUpdate(data){
				var seatInfo;
				var coin=0;
				seatInfo=FightM.instance.getSeatInfo(FightM.instance.getSeatIdByShowSeatId(1));
				if (seatInfo){
					coin=seatInfo.coin-RuleM.instance.coinCount+seatInfo.skipCoin;
					if (!FightM.instance.coinShootScene()){
						coin=seatInfo.contestCoin;
					}
					if (coin < 0){
						coin=0;
					}
					this.goldUpdate(this.goldOne,this.diamodOne,coin);
				}
				seatInfo=FightM.instance.getSeatInfo(FightM.instance.getSeatIdByShowSeatId(2));
				if (seatInfo){
					coin=seatInfo.coin;
					if (!FightM.instance.coinShootScene()){
						coin=seatInfo.contestCoin;
					}
					if (coin < 0){
						coin=0;
					}
					this.goldUpdate(this.goldTwo,null,coin);
				}
				seatInfo=FightM.instance.getSeatInfo(FightM.instance.getSeatIdByShowSeatId(3));
				if (seatInfo){
					coin=seatInfo.coin;
					if (!FightM.instance.coinShootScene()){
						coin=seatInfo.contestCoin;
					}
					if (coin < 0){
						coin=0;
					}
					this.goldUpdate(this.goldThree,null,coin);
				}
				seatInfo=FightM.instance.getSeatInfo(FightM.instance.getSeatIdByShowSeatId(4));
				if (seatInfo){
					coin=seatInfo.coin;
					if (!FightM.instance.coinShootScene()){
						coin=seatInfo.contestCoin;
					}
					if (coin < 0){
						coin=0;
					}
					this.goldUpdate(this.goldFour,null,coin);
				}
				}showGetGoodsEffect(data){
				data.useTime=this.playGetGoods(data.seat_id,data.goodId,data.pos_x,data.pos_y,data.delay,data.isOwn,data.rnd);
				}exitFight(data){
				GoodsFlyManager.instance.removeInvalidEffect(true);
				UiManager.instance.closePanel("Fish",false);
				}batteryBuyRet(data){
				this.updatePower();
				var award=data.award;
				this.coinWave(award[1],90,-164,-110);
				this.initDoubleRate();
				}finishTask(task_id){
				var a=new C2s_19000();
				a.task_id=task_id;
				a.is_daily=true;
				WebSocketManager.instance.send(19000,a);
				}updateItemReward(cell,index){
				var ele_reward_img=cell.getChildByName("reward_type");
				var ele_reward_text=cell.getChildByName("reward_text");
				var data=cell.dataSource;
				ele_reward_img.skin=cfg_goods.instance(data.reward_item_id+"").icon;
				ele_reward_text.changeText('x '+data.reward_item_num);
				}refreshTaskTotal(){
				this.task_percent={};
				this.unfinish_arr=[];
				this.refreshTask();
			}
			//提示解锁炮弹
			playMonthCardShine(){
				if (!this.month_icon_bg){
					this.month_icon_bg=new SpineTemplet("guang1");
					this.month_icon_bg.play("icon_cj",true);
					this.month_icon_bg.setPos(17,27);
					this.month_icon_bg.visible=false;
					this.month_icon_bg.setPivot(0,0);
				}
				if (!this.lottery_icon_bg){
					this.lottery_icon_bg=new SpineTemplet("guang1");
					this.lottery_icon_bg.play("icon_js",true);
					this.lottery_icon_bg.setPos(18,18);
					this.lottery_icon_bg.visible=false;
					this.lottery_icon_bg.setPivot(0,0);
				}
				if (!this.battery_icon_bg){
					this.battery_icon_bg=new SpineTemplet("guang1");
					this.battery_icon_bg.play("icon_js",true);
					this.battery_icon_bg.setPos(17,17);
					this.battery_icon_bg.visible=false;
					this.battery_icon_bg.setPivot(0,0);
				}
				this.reward.addChild(this.lottery_icon_bg);
				this.gunImg.addChild(this.battery_icon_bg);
				this.month.addChild(this.month_icon_bg);
			}
			//抽奖长边框
			playLotteryShine(){
				if (!this._lottery_spine){
					this._lottery_spine=new SpineTemplet("guang1");
					this._lottery_spine.play("zuobiankuang",true);
					this._lottery_spine.setPos(79,24);
					this._lottery_spine.visible=true;
					this._lottery_spine.setPivot(0,0);
					this._lottery_spine.setScale(0.9,0.75);
				}
				this.nchou.addChild(this._lottery_spine);
			}
			//提示解锁炮弹
			playBatteryShine(){
				if (!this._battery_spine){
					this._battery_spine=new SpineTemplet("guang1");
					this._battery_spine.play("zuobiankuang",true);
					this._battery_spine.setPos(80,26);
					this._battery_spine.visible=true;
					this._battery_spine.setPivot(0,0);
					this._battery_spine.setScale(0.9,0.74);
				}
				this.gunBoxOne.addChild(this._battery_spine);
			}
			//提示每日任务
			playTaskShine(){
				if (!this._task_spine){
					this._task_spine=new SpineTemplet("guang1");
					this._task_spine.play("25_meire",true);
					this._task_spine.setPos(68,25);
					this._task_spine.visible=false;
					this._task_spine.setPivot(0,0);
					this._task_spine.setScale(0.91,0.85);
				}
				this.box_task.addChild(this._task_spine);
				}refreshTask(){
				var _$this=this;
				var task_ids=RoleInfoM.instance.getTaskDailyIds();
				var confs=ConfigManager.filter("cfg_task",function(item){
					return task_ids.indexOf(item.id)>-1
				});
				var taskData=RoleInfoM.instance.getTaskDaily();
				this.box_task.offAll(Event.CLICK);
				var finish_arr=[];
				for (var i=0;i < confs.length;i++){
					var task_id=confs[i].id;
					var percent=TaskC.instance.taskPercent(taskData,confs[i]);
					var old_percent=0;
					if (Object.keys(this.task_percent).indexOf(task_id+"")>=0){
						old_percent=this.task_percent[task_id+""];
					}
					this.task_percent[task_id+""]=percent;
					var is_accept=taskData.rec_ids.indexOf(confs[i].id)>-1;
					var is_finish=percent==1;
					var index=this.unfinish_arr.indexOf(task_id);
					if (this.unfinish_arr.indexOf(task_id)<-1){
						this.unfinish_arr.push(task_id);
					}
					if (is_accept){
						if (index >=0){
							this.unfinish_arr.splice(index,1);
						}
						}else if (is_finish){
						if (index >=0){
							this.unfinish_arr.splice(index,1);
						}
						finish_arr.push(task_id);
						}else{
						if (index < 0){
							this.unfinish_arr.push(task_id);
							}else{
							if (percent > old_percent){
								this.unfinish_arr.splice(index,1);
								this.unfinish_arr.unshift(task_id);
							}
						}
					}
				}
				if (finish_arr.length > 0){
					var task_id=finish_arr[0];
					var taskConfig=cfg_task.instance(task_id);
					var rewards=[];
					for (var i=0;i < taskConfig.reward_item_ids.length;i++){
						if (ActivityM.instance.activityIsActive('bonus')){
							rewards.push({
								reward_item_id:taskConfig.activity_item_ids[i],
								reward_item_num:taskConfig.activity_item_nums[i]
							});
							}else{
							rewards.push({
								reward_item_id:taskConfig.reward_item_ids[i],
								reward_item_num:taskConfig.reward_item_nums[i]
							});
						}
					}
					this.list_reward.array=rewards;
					if (rewards.length==1){
						this.list_reward.pivotX=-52;
						this.click_a.pivotX=-35;
						}else{
						this.click_a.pivotX=0;
						this.list_reward.pivotX=0;
					}
					this.list_reward.visible=true;
					this.click_a.visible=true;
					this.p_task.visible=false;
					this.p_txt.visible=false;
					this._task_spine.visible=true;
					this.task_icon.visible=false;
					this.task_icon_bg.visible=false;
					this.task_icon.skin=taskConfig.img_url;
					this.task_name.changeText(taskConfig.task_name);
					this.task_name.visible=false;
					if (!RuleM.instance.isShowScene){
						this.box_task.visible=true;
					}
					this.box_task.on(Event.CLICK,this,function(event){
						event.stopPropagation();
						_$this.finishTask(task_id);
					});
					}else if (this.unfinish_arr.length > 0){
					var task_id=this.unfinish_arr[0];
					var taskConfig=cfg_task.instance(task_id);
					var percent=TaskC.instance.taskPercent(taskData,taskConfig);
					this.p_task.visible=true;
					this.p_txt.visible=true;
					this.setFontClipValue(this.p_txt,TaskC.instance.getCurTaskValue(taskData,taskConfig)+"/"+taskConfig.task_value_n);
					this.p_task.value=percent;
					this.list_reward.visible=false;
					this.click_a.visible=false;
					this.task_name.changeText(taskConfig.task_name);
					this.task_name.visible=true;
					this._task_spine.visible=false;
					this.task_icon.visible=true;
					this.task_icon.skin=taskConfig.img_url;
					this.task_icon_bg.visible=true;
					if (!RuleM.instance.isShowScene){
						this.box_task.visible=true;
					}
					this.box_task.on(Event.CLICK,this,function(event){
						event.stopPropagation();
						_$this.taskDaily();
					});
					}else{
					this.box_task.visible=false;
				}
				if (!FightM.instance.coinShootScene()){
					this.box_task.visible=false;
				}
			}
			// box_task.visible=false
			initMonthCardIcon(){
				this.month_icon.offAll(Event.CLICK);
				this.month_icon_bg.visible=false;
				if (ENV.isShowDied()){
					return;
				}
				if (WxC.isHideShop()){
					if (RoleInfoM.instance.haveValidMonthCard()){
						this.month_icon.skin="ui/common_ex/icon_yk1.png";
						this.month_icon.visible=true;
						var cards=RoleInfoM.instance.getMonthCard();
						for (var id in cards){
							if (cards[id].can_accept){
								this.month_icon.on(Event.CLICK,this,function(event){
									event.stopPropagation();
									var a={};
									a.id=id;
									WebSocketManager.instance.send(14006,a);
								});
								this.month_icon_bg.visible=true;
								return;
							}
						}
						this.month_icon_bg.visible=false;
						}else{
						this.month_icon.visible=false;
						this.month_icon_bg.visible=false;
					}
					}else{
					if (ShopC.instance.isShowFirstIcon()){
						this.month_icon.skin="ui/common_ex/icon_sc.png";
						if (RoleInfoM.instance.getChargeTimes()> 0){
							this.month_icon_bg.visible=true;
						}
						this.month_icon.on(Event.CLICK,this,function(event){
							event.stopPropagation();
							UiManager.instance.loadView("FirstCharge",null,"SMALL_TO_BIG");
						});
						}else{
						if (RoleInfoM.instance.haveValidMonthCard()){
							this.month_icon.skin="ui/common_ex/icon_yk1.png";
							var cards=RoleInfoM.instance.getMonthCard();
							for (var id in cards){
								if (cards[id].can_accept){
									this.month_icon.on(Event.CLICK,this,function(event){
										event.stopPropagation();
										var a={};
										a.id=id;
										WebSocketManager.instance.send(14006,a);
									});
									this.month_icon_bg.visible=true;
									return;
								}
							}
							this.month_icon.on(Event.CLICK,this,function(event){
								event.stopPropagation();
								GameEventDispatch.instance.event("Shop","tab_package");
							});
							this.month_icon_bg.visible=false;
							}else{
							this.month_icon.skin="ui/common_ex/icon_yk.png";
							this.month_icon_bg.visible=false;
							this.month_icon.on(Event.CLICK,this,function(event){
								event.stopPropagation();
								UiManager.instance.loadView("MonthCard",{id:18},"SMALL_TO_BIG");
							});
						}
					}
				}
				}showRedPoint(){
				var red_points=RoleInfoM.instance.getRedPoints();
				if (4 & red_points){
					RedpointC.instance.removeRedPoint(this.changeSkinBtn);
					RedpointC.instance.addRedPointToIcon(this.changeSkinBtn,0.75,6);
					}else{
					RedpointC.instance.removeRedPoint(this.changeSkinBtn);
				}
				BackBox.instance.showRedPoint();
				}initGuide(){
				this.guide=AnimalManger.instance.load("guide");
				this.guide.pivotX=ConfigManager.getConfValue("cfg_anicollision","guide","pivotX");
				this.guide.pivotY=ConfigManager.getConfValue("cfg_anicollision","guide","pivotX");
				this.addChild(this.guide);
				this.guide.play(0,true);
				this.guide.visible=false;
				this.guide.name="guide";
				}showGuide(config){
				var target=null;
				var x=NaN;
				var y=NaN;
				switch (config.task_type){
					case 2:
						target=this.reward;
						this.guide.x=33;
						this.guide.y=33;
						break ;
					case 4:
						this.guide.x=44;
						this.guide.y=44;
					switch (config.task_value_f){
						case 21:
							target=this.skill_1;
							break ;
						case 22:
							target=this.skill_2;
							break ;
						case 23:
							target=this.skill_3;
							break ;
						case 24:
							target=this.skill_4;
							break ;
						case 51:
							target=this.skill_6;
							break ;
						}
					break ;
					case 5:
					this.guide.x=33;
					this.guide.y=33;
					target=this.gunImg;
					break ;
				}
				if (target){
					this.guide.visible=true;
					target.addChild(this.guide);
					Laya.timer.once(5000,this,function(){
						target.removeChildByName("guide");
					});
				}
				}bossComingInit(fish_id){
				var _$this=this;
				var comeSound=ConfigManager.getConfValue("cfg_fish",fish_id,"comeSound");
				if (comeSound.length > 0){
					GameSoundManager.playSound(comeSound);
				};
				var scene_id=FightM.instance.sceneId;
				this.boss_img.skin="ui/fish/boss_"+scene_id+".png";
				this.boss_txt.skin="ui/fish/welcome_boss_"+scene_id+".png";
				if (scene_id==3){
					this.boss_coming.skin="ui/fish/boss_txt_carry.png";
					}else{
					this.boss_coming.skin="ui/fish/boss_txt_coming.png";
				}
				this.boss_img.visible=true;
				this.boss_txt.visible=true;
				this.boss_txt_bg.visible=true;
				this.boss_coming.visible=true;
				this.boss_mask_top.visible=true;
				this.boss_mask_bottom.visible=true;
				this.boss_warning.visible=true;
				this.boss_warning2.visible=true;
				var that=this;
				var t1=Tween.to(this.boss_warning,{x:-2000},5000,null);
				var t2=Tween.to(this.boss_warning2,{x:-2000},5000,null);
				Tween.to(this.boss_img,{centerX:-200},250,Ease.linearIn,Handler.create(that,function(){
					Laya.timer.once(800,that,function(){
						Tween.to(_$this.boss_img,{scaleX:1.2,scaleY:1.2},100,Ease.linearIn,Handler.create(that,function(){
							Tween.to(_$this.boss_img,{
								scaleX:0,
								scaleY:0,
								alpha:0
								},300,Ease.linearIn,Handler.create(that,function(){
								_$this.boss_img.visible=false;
								_$this.boss_img.scale(1,1);
								_$this.boss_img.centerX=-1200;
								_$this.boss_img.alpha=1;
							}));
						}));
					});
				}));
				Tween.to(this.boss_txt_bg,{centerX:200},300,Ease.linearIn,Handler.create(that,function(){
					Laya.timer.once(800,that,function(){
						Tween.to(_$this.boss_txt_bg,{scaleX:1.2,scaleY:1.2},100,Ease.linearIn,Handler.create(that,function(){
							Tween.to(_$this.boss_txt_bg,{
								scaleX:0,
								scaleY:0,
								alpha:0
								},300,Ease.linearIn,Handler.create(that,function(){
								_$this.boss_txt_bg.visible=false;
								_$this.boss_txt_bg.scale(1,1);
								_$this.boss_txt_bg.centerX=-1000;
								_$this.boss_txt_bg.alpha=1;
							}));
						}));
					});
				}));
				Tween.to(this.boss_coming,{centerX:350},350,Ease.linearIn,Handler.create(that,function(){
					Laya.timer.once(800,that,function(){
						Tween.to(_$this.boss_coming,{
							scaleX:1.2,
							scaleY:1.2
							},100,Ease.linearIn,Handler.create(that,function(){
							Tween.to(_$this.boss_coming,{
								scaleX:0,
								scaleY:0,
								alpha:0
								},300,Ease.linearIn,Handler.create(that,function(){
								_$this.boss_coming.visible=false;
								_$this.boss_coming.scale(1,1);
								_$this.boss_coming.centerX=1000;
								_$this.boss_coming.alpha=1;
								Tween.clear(t1);
								Tween.clear(t2);
								_$this.boss_mask_top.visible=false;
								_$this.boss_mask_bottom.visible=false;
								_$this.boss_warning.visible=false;
								_$this.boss_warning2.visible=false;
								_$this.boss_warning.x=-334;
								_$this.boss_warning2.x=-334;
							}));
						}));
					});
				}));
				}initWarningList(){
				this.boss_warning.renderHandler=new Handler(this,this.updateWarning);
				this.boss_warning.array=[{},{},{},{},{},{},{},{},{},{},{},{},{}];
				}updateWarning(cell,index){
				var img=cell.getChildByName("warning");
				img.skin="ui/fish/boss_warn.png";
				}playBossComing(fish_id){
				this.bossComingInit(fish_id);
				}fishTide(){
				var _$this=this;
				var that=this;
				this.boss_mask_top.visible=true;
				this.boss_mask_bottom.visible=true;
				this.boss_warning.visible=true;
				this.boss_warning2.visible=true;
				this.fishTideImg.visible=true;
				var t1=Tween.to(this.boss_warning,{x:-2000},5000,null);
				var t2=Tween.to(this.boss_warning2,{x:-2000},5000,null);
				Tween.to(this.fishTideImg,{centerX:-0},250,Ease.linearIn,Handler.create(that,function(){
					Laya.timer.once(1600,that,function(){
						_$this.fishTideImg.visible=false;
						_$this.fishTideImg.centerX=-1200;
						Tween.clear(t1);
						Tween.clear(t2);
						_$this.boss_mask_top.visible=false;
						_$this.boss_mask_bottom.visible=false;
						_$this.boss_warning.visible=false;
						_$this.boss_warning2.visible=false;
						_$this.boss_warning.x=-334;
						_$this.boss_warning2.x=-334;
					});
				}));
				}playGetIn(){
				var _$this=this;
				var scene_id=FightM.instance.sceneId;
				var that=this;
				var scene_cfg=cfg_scene.instance(scene_id);
				if (scene_cfg.show_ani){
					this.welcome_txt.skin="ui/fish/welcome_"+scene_id+".png";
					this.welcome_boss.skin="ui/fish/welcome_boss_"+scene_id+".png";
					this.welcome_bg.visible=true;
					this.welcome_boss.visible=true;
					this.welcome_txt.visible=true;
					Tween.to(this.welcome_bg,{centerX:-20},250,Ease.linearIn,Handler.create(that,function(){
						Laya.timer.once(800,that,function(){
							_$this.welcome_bg.visible=false;
							_$this.welcome_bg.centerX=-1200;
						});
					}));
					Tween.to(this.welcome_txt,{centerX:-50},250,Ease.backInOut,Handler.create(that,function(){
						Laya.timer.once(800,that,function(){
							_$this.welcome_txt.visible=false;
							_$this.welcome_txt.centerX=-900;
						});
					}));
					Tween.to(this.welcome_boss,{centerX:250},250,Ease.backInOut,Handler.create(that,function(){
						Laya.timer.once(800,that,function(){
							_$this.welcome_boss.visible=false;
							_$this.welcome_boss.centerX=1200;
						});
					}));
					}else{
				}
				}startSign(){
				if (RegiM.instance.isGet){
					UiManager.instance.loadView("Register",null,"SMALL_TO_BIG");
				}
				}shootError(data){
				this.autoFireReset();
			}
			// Laya.timer.clear(this,this.continuousShoot);
			gamereset(){
				this.autoFireReset();
			}
			// Laya.timer.clear(this,this.continuousShoot);
			onFinishReward(){
				this.rewardFishTip=false;
				}loadUi(data){
				if (this.FireState==0){
					var name=data;
					if (name !="Levelup" &&
						name !="HorseTip" &&
					name !="GoldTip"){
						this.FireStateSetPuaseUiName=name;
						Laya.timer.clear(this,this.continuousShoot);
						this.FireState=2;
					}
				}
				}closeUi(data){
				this.resumeAuto();
				}stopLock(){
				this.resumeAuto();
				}lockStart(){
				this.pauseAuto();
				}goShop(){
				UiManager.instance.loadView("MonthCard",{id:18});
				}getCatchShowEffectPos(data){
				if (data.seat_id==1){
					data.x=this.box_1.x+this.roleOne.x+39;
					data.y=this.box_1.y+this.roleOne.y+39;
					}else if (data.seat_id==2){
					data.x=this.box_2.x+this.roleTwo.x+39;
					data.y=this.box_2.y+this.roleTwo.y+39;
					}else if (data.seat_id==3){
					data.x=this.box_3.x+this.roleThree.x+39;
					data.y=this.box_3.y+this.roleThree.y+39;
					}else{
					data.x=this.box_4.x+this.roleFour.x+39;
					data.y=this.box_4.y+this.roleFour.y+39;
				}
				data.getPos=true;
				}getPaoPos(data){
				if (data.seat_id==1){
					data.x=this.paoone.x;
					data.y=this.paoone.y;
					}else if (data.seat_id==2){
					data.x=this.paotwo.x;
					data.y=this.paotwo.y;
					}else if (data.seat_id==3){
					data.x=this.paothree.x;
					data.y=this.paothree.y;
					}else{
					data.x=this.paofour.x;
					data.y=this.paofour.y;
				}
				data.getPos=true;
				}screenResize(){
				this.resetUi();
				}update(){
				this.isUpdate=true;
			}
			//Laya.timer.loop(1000,this,updateTime);
			addActivityPointShow(){
				var vertical_h=10;
				var horizontal_percent=0.75;
				if (ActivityM.instance.isShowRewRebate){
					RedpointC.instance.removeActivityPoint(this.reward);
					RedpointC.instance.addActivityPointToIcon(this.reward,horizontal_percent-0.2,vertical_h-20,false);
					}else{
					RedpointC.instance.removeActivityPoint(this.reward);
				}
				if (ActivityM.instance.isShowSinceRebate){
					RedpointC.instance.removeActivityPoint(this.since);
					RedpointC.instance.addActivityPointToIcon(this.since,horizontal_percent,vertical_h,false);
					}else{
					RedpointC.instance.removeActivityPoint(this.since);
				}
				}updateTime(){
				this.addActivityPointShow();
				if (this.isUpdate){
					RuleM.instance.second=RuleM.instance.second-1;
					if (RuleM.instance.second==-1){
						RuleM.instance.second=59;
						RuleM.instance.minute=RuleM.instance.minute-1;
						if (RuleM.instance.minute < 0){
							RuleM.instance.minute=59;
						}
					}
					this.currentTime.changeText(RuleM.instance.showTime);
				}
				if (FightM.instance.getAutoTime()> 0 && FightM.instance.coinShootScene()){
					this.autoTimeTip.visible=true;
					this.autoTimeTip.changeText(FightM.instance.getAutoTimeStr());
					}else{
					this.autoTimeTip.visible=false;
				}
				this._coinUnchangeTime+=1;
				if (this._coinUnchangeTime > 600){
					GameEventDispatch.instance.event("CloseNovice",null);
					this.fightReturn();
					var tmpInfo=new QuitTipInfo();
					tmpInfo.isHaveTime=false;
					tmpInfo.state=2;
					tmpInfo.content=ConfigManager.getConfValue("cfg_tip",43,"txtContent");
					GameEventDispatch.instance.event("QuitTip",tmpInfo);
					UiManager.instance.closePanel("Red",false);
				}
				this.startTime();
				if (!FightM.instance.coinShootScene()){
					if (!FightM.instance.isMatchingGame()){
						this.contestTimeBox.visible=!this.isMateShow();
						if (this.contestTimeBox.visible){
							FightM.instance.contestEndTimeSub();
							FightM.instance.initCountDown(FightM.instance.getContestEndTime(),this.contestTimeText);
						}
						}else{
						if (this.contestTimeBox.visible !=false){
							this.contestTimeBox.visible=false;
						}
						MatchInfoBox.instance.updateTime();
					}
				}
				}contestFightStart(){
				if (!FightM.instance.isMatchingGame()){
					this.contestTimeBox.visible=!this.isMateShow();
				}
				}updateGoldPool(){
				this.updateCoinCount();
				}updateCoinCount(){
				this.totalCoin.changeText(FightM.instance.getGoldPoolTotalValue()+"");
				}signUpdate(data){
				this.startSign();
			}
			//获取了鱼的数量
			getAward(count){
				this.coinWave(count,70,-10,-110);
				this.lotteryComeEffect();
				Laya.timer.once(100,this,this.refresh);
				}refresh(){
				RewardM.instance.setInfo();
				this.rewardFishCount=RoleInfoM.instance.getFcount();
				this.startId=RewardM.instance.selectTab(this.rewardCoinCount);
				this._rewardLevelName.text=this._rewardNameArr[this.startId];
				if (this.startId !=this.endId || this.rewardFishCount==RewardM.instance.baseFishCount()){
					this.isLevel=true;
					Laya.timer.once(10000,this,this.remainShou);
					}else{
					Laya.timer.once(3000,this,this.shou);
				}
				this.endId=this.startId;
				}refreshLottery(){
				RewardM.instance.setInfo();
				this.rewardFishCount=RoleInfoM.instance.getFcount();
				this.startId=RewardM.instance.selectTab(this.rewardCoinCount);
				this._rewardLevelName.text=this._rewardNameArr[this.startId];
				}remainShou(){
				this.isLevel=false;
				this.lotteryGoEffect();
				}shou(){
				if (this.isLevel==false){
					this.lotteryGoEffect();
				}
				}coinWave(count,clipX,clipY,endY){
				var clip=new FontClip("font/font_1.png","/.+-0123456789枚万亿");
				clip.value="+"+count+"";
				clip.centerY=clipY;
				clip.left=clipX;
				clip.anchorX=0.5;
				clip.anchorY=0.5;
				clip.scaleX=1 / 2;
				clip.scaleY=1 / 2;
				this.addChild(clip);
				Laya.timer.once(1500,this,this.hideClip,[clip]);
				Tween.to(clip,{scaleX:4 / 2,scaleY:4 / 2},500,null,Handler.create(this,this.waveComplete,[clip,endY]));
				}hideClip(clip){
				if (clip !=null){
					clip.visible=false;
				}
				}waveComplete(clip,endY){
				Tween.to(clip,{
					scaleX:2,
					scaleY:2,
					alpha:0.5
				},500,null,Handler.create(this,this.scaleComplete,[clip,endY]));
				}lotteryWave(count,clipX,clipY){
				var clip=new FontClip("font/font_1.png","/.+-0123456789枚万亿");
				clip.value="+"+count+"";
				clip.centerY=clipY;
				clip.left=clipX;
				clip.anchorX=0.5;
				clip.anchorY=0.5;
				clip.scaleX=1 / 2;
				clip.scaleY=1 / 2;
				this.addChild(clip);
				Tween.to(clip,{scaleX:3,scaleY:3},800,null,Handler.create(this,this.waveFirstComplete,[clip]));
				}waveFirstComplete(clip){
				Tween.to(clip,{scaleX:0,scaleY:0},800,null,Handler.create(this,this.waveSecondComplete,[clip]));
				}waveSecondComplete(clip){
				this.removeChild(clip);
				Tween.clearAll(clip);
				}scaleComplete(clip,endY){
				Tween.to(clip,{centerY:endY,alpha:0},500,null,Handler.create(this,this.yComplete,[clip]));
				}yComplete(clip){
				this.removeChild(clip);
				Tween.clearAll(clip);
				}jinComplete(){
				Laya.timer.once(1000,this,this.startShou);
				}startShou(){
				if (this.nchou.x==8){
					this.chu.play(0,false);
				}
			}
			//解锁出来动效
			deblockComeEffect(){
				if (this.unLockInside){
					this.unLockInside=false;
					this.collect.play(0,false);
					this.collect.on(Event.COMPLETE,this,this.collectComplete);
				}
				}collectComplete(){
				this.unLockOut=true;
				this.unLockInside=false;
			}
			//播放解锁动效
			playLockEffect(){
				this.deblockComeEffect();
				this.deblockGoEffect();
			}
			//解锁进来动效
			deblockGoEffect(){
				if (this.unLockOut){
					this.unLockOut=false;
					this.release.play(0,false);
					this.release.on(Event.COMPLETE,this,this.releaComplete);
				}
				}releaComplete(){
				this.unLockOut=false;
				this.unLockInside=true;
			}
			//播放抽奖出来动效
			lotteryComeEffect(){
				if (ENV.isShowDied()){
					return;
				}
				if (this.lotteryInside || this.nchou.x==0){
					this.lotteryInside=false;
					this.chu.play(0,false);
					this.chu.on(Event.COMPLETE,this,this.chuComplete);
				}
				}chuComplete(){
				this.lotteryOut=true;
				this.lotteryInside=false;
			}
			//播放抽奖进去动效
			lotteryGoEffect(){
				if (ENV.isShowDied()){
					return;
				}
				if (this.lotteryOut || this.nchou.x==535){
					this.lotteryOut=false;
					this.jin.play(0,false);
					this.jin.on(Event.COMPLETE,this,this.jinEComplete);
				}
				}jinEComplete(){
				this.lotteryInside=true;
				this.lotteryOut=false;
			}
			//播放抽奖动效
			playLotteryEffect(){
				this.lotteryComeEffect();
				this.lotteryGoEffect();
				}fightReturn(){
				if (FightM.instance.seatId > 0){
					WebSocketManager.instance.send(12003,null);
					}else{
					this.exitFight(null);
				}
				}autoFireReset(){
				this.cancle.visible=false;
				this.FireState=2;
				Laya.timer.clear(this,this.continuousShoot);
				}autoShootTimeOut(){
				this.stopAuto();
				}playerCoinChange(){
				this._coinUnchangeTime=0;
				}register(){
				WebSocketManager.instance.send(15003,null);
				GameEventDispatch.instance.on("SystemReset",this,this.gamereset);
				GameEventDispatch.instance.on("OnlineBullet",this,this.onlineBullet);
				GameEventDispatch.instance.on("FightStop",this,this.exitFight);
				GameEventDispatch.instance.on("MatchingGameAgainStart",this,this.startAgainMatchingGame);
				GameEventDispatch.instance.on("MatchingGameSynState",this,this.updateMatchingGamePanel);
				GameEventDispatch.instance.on("FightPlayerUpdate",this,this.fightPlayerUpdate);
				GameEventDispatch.instance.on("FightCoinUpdate",this,this.fightPlayerUpdate);
				GameEventDispatch.instance.on("ShowGetCoinEffect",this,this.showGetGoodsEffect);
				GameEventDispatch.instance.on("BatteryBuyRet",this,this.batteryBuyRet);
				GameEventDispatch.instance.on("SyncActivityStatus",this,this.syncActivityStatus);
				GameEventDispatch.instance.on("RefreshTaskDaily",this,this.refreshTask);
				GameEventDispatch.instance.on("RefreshTaskDailyTotal",this,this.refreshTaskTotal);
				GameEventDispatch.instance.on("FinishTaskDaily",this,this.refreshTask);
				GameEventDispatch.instance.on("BoomSelectUpdate",this,this.boomUpdate);
				GameEventDispatch.instance.on("SkillUpdate",this,this.skillUpdate);
				GameEventDispatch.instance.on("GoodsUpdate",this,this.goodsUpdate);
				GameEventDispatch.instance.on("ViolentUpdate",this,this.violenUpdate);
				GameEventDispatch.instance.on("UpdateProfile",this,this.updateFishCount);
				GameEventDispatch.instance.on("ShowGuide",this,this.showGuide);
				GameEventDispatch.instance.on("ShowRedPoint",this,this.showRedPoint);
				GameEventDispatch.instance.on("FinishReward",this,this.onFinishReward);
				GameEventDispatch.instance.on("ShootError",this,this.shootError);
				GameEventDispatch.instance.on("ReturnConfirm",this,this.fightReturn);
				GameEventDispatch.instance.on("LoadUi",this,this.loadUi);
				GameEventDispatch.instance.on("CloseUi",this,this.closeUi);
				GameEventDispatch.instance.on("ShowFishCoin",this,this.getAward);
				GameEventDispatch.instance.on("SignInUpdate",this,this.signUpdate);
				GameEventDispatch.instance.on("UpdateGoldPoolInfo",this,this.updateGoldPool);
				GameEventDispatch.instance.on("UpdataTime",this,this.update);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("GetCatchShowEffectEndPos",this,this.getCatchShowEffectPos);
				GameEventDispatch.instance.on("GoShop",this,this.goShop);
				GameEventDispatch.instance.on("lockStart",this,this.lockStart);
				GameEventDispatch.instance.on("stopLock",this,this.stopLock);
				GameEventDispatch.instance.on("AutoShootTimeOut",this,this.autoShootTimeOut);
				GameEventDispatch.instance.on("MonthCardUpdate",this,this.initMonthCardIcon);
				GameEventDispatch.instance.on("UpdateFirstCharge",this,this.initMonthCardIcon);
				GameEventDispatch.instance.on("PlayBossComeIn",this,this.playBossComing);
				GameEventDispatch.instance.on("WelcomeGetIn",this,this.playGetIn);
				GameEventDispatch.instance.on("FishComing",this,this.fishTide);
				GameEventDispatch.instance.on("OnlineAwardUpdate",this,this.receive);
				GameEventDispatch.instance.on("StartRefersh",this,this.starRefreshOnline);
				LoginM.instance.pageId="fish_page";
				GameEventDispatch.instance.on("PlayerCoinChange",this,this.playerCoinChange);
				GameEventDispatch.instance.on("GetPaoPos",this,this.getPaoPos);
				GameEventDispatch.instance.on("SetPaoRotation",this,this.setPaoRotation);
				GameEventDispatch.instance.on("ContestFightStart",this,this.contestFightStart);
				GameEventDispatch.instance.on("NoviceGuideUnlockBattery",this,this.unlockbattery);
				GameEventDispatch.instance.on("NoviceGuideChangeBattery",this,this._clickPowerSub);
				GameEventDispatch.instance.on("NoviceShoot",this,this.mouseDown);
				GameEventDispatch.instance.on("NoviceShootUp",this,this.mouseUp);
				GameEventDispatch.instance.on("NoviceShootMove",this,this.mouseMove);
				GameEventDispatch.instance.on("BatteryRateChagne",this,this.endChangeBatteryRate);
				GameEventDispatch.instance.on("CloseOtherBar",this,this.closeOtherBars);
				BackBox.instance.register();
				MatchInfoBox.instance.register();
				MatchResultBox.instance.register();
				}starRefreshOnline(){
				OnLineM.instance.isAni=true;
				this.refreshOnline();
			}
			//OnLineImgEffect();
			receive(data){
				OnLineM.instance.isAni=false;
				this._leftTime=OnLineM.instance.getLeftTime();
				this.getImg.visible=false;
				this.leftTime.visible=true;
				this.refreshOnline();
				this.receiveImg.skin="ui/fish/lqjl_2.png";
				Laya.timer.once(500,this,this.resetImg);
				}resetImg(){
				this.refreshOnline();
				}unRegister(){
				Tween.clearAll(this.dentwo);
				Tween.clearAll(this.denthree);
				Tween.clearAll(this.denfour);
				this.autoFireReset();
				Laya.timer.clear(this,this.paoAnimationCheck);
				Laya.timer.clear(this,this.shootTick);
				Laya.timer.clear(this,this.updateTime);
				Laya.timer.clear(this,this.frameUpdate);
				GameEventDispatch.instance.off("SystemReset",this,this.gamereset);
				GameEventDispatch.instance.off("OnlineBullet",this,this.onlineBullet);
				GameEventDispatch.instance.off("MatchingGameAgainStart",this,this.startAgainMatchingGame);
				GameEventDispatch.instance.off("MatchingGameSynState",this,this.updateMatchingGamePanel);
				GameEventDispatch.instance.off("FightStop",this,this.exitFight);
				GameEventDispatch.instance.off("FightPlayerUpdate",this,this.fightPlayerUpdate);
				GameEventDispatch.instance.off("FightCoinUpdate",this,this.fightPlayerUpdate);
				GameEventDispatch.instance.off("ShowGetCoinEffect",this,this.showGetGoodsEffect);
				GameEventDispatch.instance.off("BatteryBuyRet",this,this.batteryBuyRet);
				GameEventDispatch.instance.off("RefreshTaskDaily",this,this.refreshTask);
				GameEventDispatch.instance.off("FinishTaskDaily",this,this.refreshTask);
				GameEventDispatch.instance.off("RefreshTaskDailyTotal",this,this.refreshTaskTotal);
				GameEventDispatch.instance.off("CloseUi",this,this.closeUi);
				GameEventDispatch.instance.off("BoomSelectUpdate",this,this.boomUpdate);
				GameEventDispatch.instance.off("SkillUpdate",this,this.skillUpdate);
				GameEventDispatch.instance.off("GoodsUpdate",this,this.goodsUpdate);
				GameEventDispatch.instance.off("ViolentUpdate",this,this.violenUpdate);
				GameEventDispatch.instance.off("UpdateProfile",this,this.updateFishCount);
				GameEventDispatch.instance.off("SyncActivityStatus",this,this.syncActivityStatus);
				GameEventDispatch.instance.off("ShowGuide",this,this.showGuide);
				if (this.rankAni.isPlaying){
					this.rankAni.stop();
				}
				this.rankAniBox.centerX=-900;
				this.rankAniImg.visible=false;
				GameEventDispatch.instance.off("ShowRedPoint",this,this.showRedPoint);
				GameEventDispatch.instance.off("FinishReward",this,this.onFinishReward);
				GameEventDispatch.instance.off("ShootError",this,this.shootError);
				GameEventDispatch.instance.off("ReturnConfirm",this,this.fightReturn);
				GameEventDispatch.instance.off("LoadUi",this,this.loadUi);
				GameEventDispatch.instance.off("UpdateGoldPoolInfo",this,this.updateGoldPool);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("GetCatchShowEffectEndPos",this,this.getCatchShowEffectPos);
				GameEventDispatch.instance.off("GoShop",this,this.goShop);
				GameEventDispatch.instance.off("lockStart",this,this.lockStart);
				GameEventDispatch.instance.off("stopLock",this,this.stopLock);
				GameEventDispatch.instance.on("AutoShootTimeOut",this,this.autoShootTimeOut);
				GameEventDispatch.instance.off("MonthCardUpdate",this,this.initMonthCardIcon);
				GameEventDispatch.instance.off("UpdateFirstCharge",this,this.initMonthCardIcon);
				GameEventDispatch.instance.off("PlayBossComeIn",this,this.playBossComing);
				GameEventDispatch.instance.off("WelcomeGetIn",this,this.playGetIn);
				GameEventDispatch.instance.off("FishComing",this,this.fishTide);
				GameEventDispatch.instance.off("OnlineAwardUpdate",this,this.receive);
				GameEventDispatch.instance.off("StartRefersh",this,this.starRefreshOnline);
				GameEventDispatch.instance.off("PlayerCoinChange",this,this.playerCoinChange);
				GameEventDispatch.instance.off("GetPaoPos",this,this.getPaoPos);
				GameEventDispatch.instance.off("SetPaoRotation",this,this.setPaoRotation);
				GameEventDispatch.instance.off("ContestFightStart",this,this.contestFightStart);
				this.yulei.visible=false;
				this.playimgOne.skin="ui/common/nan.png";
				this.playimgTwo.skin="ui/common/nan.png";
				this.playimgThree.skin="ui/common/nan.png";
				this.playimgFour.skin="ui/common/nan.png";
				GameEventDispatch.instance.off("NoviceGuideUnlockBattery",this,this.unlockbattery);
				GameEventDispatch.instance.off("NoviceGuideChangeBattery",this,this._clickPowerSub);
				GameEventDispatch.instance.off("NoviceShoot",this,this.mouseDown);
				GameEventDispatch.instance.off("NoviceShootUp",this,this.mouseUp);
				GameEventDispatch.instance.off("NoviceShootMove",this,this.mouseMove);
				GameEventDispatch.instance.off("BatteryRateChagne",this,this.endChangeBatteryRate);
				GameEventDispatch.instance.off("CloseOtherBar",this,this.closeOtherBars);
				BackBox.instance.unRegister();
				MatchInfoBox.instance.unRegister();
				MatchResultBox.instance.unRegister();
			}
			// roateRoation(remainTime(4),totalTime(4),spFive);
			get oneStartIndex (){
				return null;
			}
			set oneStartIndex(value){super.oneStartIndex=value;}
		}

		view.fish.FishPage=Laya.FishPage=FishPage;	
		

		class NewMatchPage extends NewMatchPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.listData=[];
				this.listData_two=[];
				this.listData_four=[];
				this.page_now=1;
				this.page_all=1;
				this.match_data={};
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.bmask.on(Event.CLICK,this,null);
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.list1.renderHandler=new Handler(this,this.updateList);
				this.list1.array=[];
				this.page_now=1;
				WebSocketManager.instance.send(12114,{});
				this.getMatchList();
				this.initView();
				this.screenResize();
				this.dataClean();
				Laya.timer.loop(1000,this,this.autoRefreshData);
				}initView(){
				this.tab1.selected=true;
				this.tab2.selected=false;
				this.maxValueTips.visible=false;
				this.rule_box.visible=false;
				this.create_box.visible=false;
				this.tab1.on(Event.CLICK,this,this.onTab1);
				this.tab2.on(Event.CLICK,this,this.onTab2);
				this.ruleBtn.on(Event.CLICK,this,this.onRuleBtn);
				this.ruleQuitBtn.on(Event.CLICK,this,this.onRuleQuitBtn);
				this.createBtn.on(Event.CLICK,this,this.onCreateBtn);
				this.createQuitBtn.on(Event.CLICK,this,this.onCreatQuitBtn);
				this.create_btn.on(Event.CLICK,this,this.onCreatMatch);
				this.maxValue.clickHandler=new Handler(this,this.onMaxValue,[],false);
				this.addActivityPointShow();
				}addActivityPointShow(){
				var vertical_h=1;
				var horizontal_percent=0.75;
				if (ActivityM.instance.isShowMatchActivity){
					this.activityTip.visible=true;
					RedpointC.instance.removeActivityPoint(this.tab2);
					RedpointC.instance.addActivityPointToIcon(this.tab2,horizontal_percent,vertical_h,false);
					}else{
					this.activityTip.visible=false;
					RedpointC.instance.removeActivityPoint(this.tab2);
				}
				}onTab1(){
				this.tab1.selected=true;
				this.tab2.selected=false;
				this.listPro();
				}onTab2(){
				this.tab1.selected=false;
				this.tab2.selected=true;
				this.listPro();
				}dataClean(){
				this.listData_two=[];
				this.listData_four=[];
				if (MatchM.instance.matchData !=null){
					this.listData=MatchM.instance.matchData["data"];
					for (var i=0;i < this.listData.length;i++){
						if (this.listData[i].max_num==2){
							this.listData_two.push(this.listData[i]);
							}else if (this.listData[i].max_num==4){
							this.listData_four.push(this.listData[i]);
						}
					}
					this.listPro();
				}
				}listPro(){
				if (this.tab1.selected){
					if (this.listData_two.length > 6){
						this.page_all=parseInt(this.listData_two.length / 6)+1;
						}else{
						this.page_all=1;
					}
					this.page_now=this.page_now > this.page_all ? 1 :this.page_now;
					this.list1.array=this.listData_two.slice((this.page_now-1)*6);
					}else{
					if (this.listData_four.length > 6){
						this.page_all=parseInt(this.listData_four.length / 6)+1;
						}else{
						this.page_all=1;
					}
					this.page_now=this.page_now > this.page_all ? 1 :this.page_now;
					this.list1.array=this.listData_four.slice((this.page_now-1)*6);
				}
				if (this.list1.array.length==0){
					this.waitTips.visible=true;
					}else{
					this.waitTips.visible=false;
				}
				this.refreshJoinBox();
				}refreshJoinBox(){
				this.pageNum.text=this.page_now+"/"+this.page_all;
				this.lastBtn.on(Event.CLICK,this,this.onLastBtn);
				this.nextBtn.on(Event.CLICK,this,this.onNextBtn);
				}onLastBtn(){
				if (this.page_now==1){
					GameEventDispatch.instance.event("MsgTipContent","当前已经在第一页");
					}else{
					this.page_now=this.page_now-1;
					this.listPro();
				}
				}onNextBtn(){
				if (this.page_now==this.page_all){
					GameEventDispatch.instance.event("MsgTipContent","当前已经在最后一页");
					}else{
					this.page_now=this.page_now+1;
					this.listPro();
				}
				}autoRefreshData(){
				WebSocketManager.instance.send(12114,{});
				}getMatchList(){
				var _$this=this;
				var token=StartParam.instance.getParam("access_token");
				ApiManager.instance.get_match_list(
				token,
				Handler.create(this,function(result){
					_$this.match_data=result.data;
					_$this.wait_ani.visible=false;
				}),
				Handler.create(this,function(result){
					console.log("获取比赛列表出错");
					console.log(result);
				}));
				}updateList(cell,index){
				var data=cell.dataSource;
				var ele_bg=cell.getChildByName("boxBg");
				var ele_pro=cell.getChildByName("pro");
				var ele_time=cell.getChildByName("time");
				var ele_name=cell.getChildByName("name");
				var ele_coinNums=cell.getChildByName("coinNums");
				var ele_playerCount=cell.getChildByName("playerCount");
				ele_coinNums.text=parseInt(data.fee / 10000)+"万";
				ele_name.text=parseInt(data.fee / 10000)+"万比赛房间";
				this.conversion(ele_time,data.time);
				ele_playerCount.text=data.num+"/"+data.max_num;
				ele_pro.value=data.num / data.max_num;
				ele_bg.offAll(Event.CLICK);
				if (data.running==0){
					if (data.num==data.max_num){
						ele_bg.skin="ui/newMatch/img_di_lv.png";
						ele_pro.skin="ui/newMatch/bar2.png";
						}else{
						ele_bg.on(Event.CLICK,this,this.applyMatch,[data.roomNumber]);
						ele_bg.skin="ui/newMatch/img_di_l.png";
						ele_pro.skin="ui/newMatch/bar2.png";
					}
					}else{
					ele_bg.skin="ui/newMatch/img_di_h.png";
					ele_pro.skin="ui/newMatch/bar1.png";
				}
				}conversion(table,value){
				if (value==30){
					table.text="时长:30秒";
					}else if (value==180){
					table.text="时长:3分钟";
					}else if (value==300){
					table.text="时长:5分钟";
				}
				}applyMatch(roomNumber){
				var info=new QuitTipInfo();
				info.state=1;
				info.content="确认报名？";
				info.confirmCallback=Handler.create(this,this.queryRoomState,[roomNumber]);
				info.autoCloseTime=10;
				GameEventDispatch.instance.event("QuitTip",info);
				}GetIntoMatchRoom(){
				MatchM.instance.initMatchimgGameData();
				LoginM.instance.setContestId(this.match_data.match[0].id,7);
				GameEventDispatch.instance.event("StartLoad",[1]);
				}queryRoomState(roomId){
				LoginM.instance.roomId=roomId;
				WebSocketManager.instance.send(12110,{roomNumber:roomId});
				}onRuleBtn(){
				this.rule_box.visible=true;
				}onCreateBtn(){
				this.initCreateBox();
				this.chipList.renderHandler=new Handler(this,this.updateChipList);
				this.chipList.array=[1,10,100,200];
				}initCreateBox(){
				var _$this=this;
				this.create_box.visible=true;
				this.chipList.visible=false;
				this.arrowBtn.skin="ui/newMatch/btn_xs.png";
				this.selectedChip.label="1万";
				this.arrowBtn.on(Event.CLICK,this,this.onArrowBtn);
				this.createBg.on(Event.CLICK,this,function(){
					_$this.chipList.visible=false;
					_$this.arrowBtn.skin="ui/newMatch/btn_xs.png";
				});
				}onArrowBtn(){
				this.chipList.visible=!this.chipList.visible;
				if (this.chipList.visible){
					this.arrowBtn.skin="ui/newMatch/btn_xx.png";
					}else{
					this.arrowBtn.skin="ui/newMatch/btn_xs.png";
				}
				}onMaxValue(){
				if (this.maxValue.selected){
					this.selectedChip.label="200万";
					this.chipList.visible=false;
					this.maxValueTips.visible=true;
					this.arrowBtn.disabled=true;
					}else{
					this.maxValueTips.visible=false;
					this.arrowBtn.disabled=false;
				}
				}updateChipList(cell,index){
				var num=cell.dataSource;
				var ele_btn=cell.getChildByName("btn");
				ele_btn.label=num+"万";
				ele_btn.offAll(Event.CLICK);
				ele_btn.on(Event.CLICK,this,this.refreshCreateBox,[num]);
				}refreshCreateBox(num){
				this.selectedChip.label=num+"万";
				this.onArrowBtn();
				}onCreatMatch(){
				var times=[30,180,300];
				var num=[2,4];
				var coin=RoleInfoM.instance.getCoin();
				var bindCoin=RoleInfoM.instance.getBindCoin();
				var realCoin=coin-bindCoin;
				if (realCoin < 10000){
					GameEventDispatch.instance.event("MsgTipContent","金币不足10000无法创建比赛");
					}else{
					LoginM.instance.setContestId(this.match_data.match[0].id,7);
					if (this.maxValue.selected){
						var a={id:LoginM.instance.getContestId(),time_t:times[this.timeRadio.selectedIndex],num_t:num[this.numRadio.selectedIndex],fee_t:0};
						}else{
						var a={
							id:LoginM.instance.getContestId(),
							time_t:times[this.timeRadio.selectedIndex],
							num_t:num[this.numRadio.selectedIndex],
							fee_t:parseInt(this.selectedChip.label)
						};
					}
					MatchM.instance.storageData=a;
					MatchM.instance.initMatchimgGameData();
					GameEventDispatch.instance.event("StartLoad",[1]);
				}
				}screenResize(){
				var contentWidth=850;
				var contentHeight=660;
				var contentStartX=215;
				var contentStartY=30;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				}onRuleQuitBtn(){
				this.rule_box.visible=false;
				}onCreatQuitBtn(){
				this.create_box.visible=false;
				}onQuitBtnClick(){
				UiManager.instance.closePanel("NewMatch",false);
				Laya.timer.clearAll(this);
				}unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("RefreshMatchData",this,this.dataClean);
				GameEventDispatch.instance.off("EndDailyMatchSign",this,this.onQuitBtnClick);
				GameEventDispatch.instance.off("GetIntoMatchRoom",this,this.GetIntoMatchRoom);
				GameEventDispatch.instance.off("SyncActivityStatus",this,this.addActivityPointShow);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("RefreshMatchData",this,this.dataClean);
				GameEventDispatch.instance.on("EndDailyMatchSign",this,this.onQuitBtnClick);
				GameEventDispatch.instance.on("GetIntoMatchRoom",this,this.GetIntoMatchRoom);
				GameEventDispatch.instance.on("SyncActivityStatus",this,this.addActivityPointShow);
			}
		}

		view.newMatch.NewMatchPage=Laya.NewMatchPage=NewMatchPage;	
		

		class MateView extends pipeiUI{
			constructor (){
				super();
				//this._totalTime=NaN;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._totalTime=0;
				this.screenResize();
				this.remainTime.text="0秒......";
				this.bgMask.on(Event.CLICK,this,this.clickMask);
				this.startCount();
				this.closeBtn.on(Event.CLICK,this,this.onCloseClick);
				}onCloseClick(){
				WebSocketManager.instance.send(12057,null);
				UiManager.instance.closePanel("Mate",false);
				}clickMask(){
				}startCount(){
				Laya.timer.loop(1000,this,this.addTime);
				}addTime(){
				this._totalTime=this._totalTime+1;
				this.remainTime.text=this._totalTime+"秒......";
				}gamereset(){
				UiManager.instance.closePanel("Mate",false);
				}exitFight(){
				UiManager.instance.closePanel("Mate",false);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("SystemReset",this,this.gamereset);
				GameEventDispatch.instance.on("FightStop",this,this.exitFight);
				}screenResize(){
				this.size(Laya.stage.width,Laya.stage.height);
				}unRegister(){
				Laya.timer.clear(this,this.addTime);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("SystemReset",this,this.gamereset);
				GameEventDispatch.instance.off("FightStop",this,this.exitFight);
			}
		}

		view.mate.MateView=Laya.MateView=MateView;	
		

		class NoviceGuidePage extends NoviceGuidePageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.timeLine1=new TimeLine();
			}
			maskClick(event){
				event.stopPropagation();
				}StartGames(parm=null){
				var _$this=this;
				this._startX=this.x;
				this._startY=this.y;
				this.screenResize();
				this.noviceGuideRefresh();
				this.mask2.on(Event.CLICK,this,this.maskClick);
				this.list1.visible=false;
				this.list1.array=[1];
				this.list1.hScrollBarSkin="";
				this.list1.scrollBar.on(Event.CHANGE,this,function(event){
					var value=_$this.list1.scrollBar.value;
					if (_$this.list1.scrollBar.value > 1500){
						GameEventDispatch.instance.event("NoviceListFinish");
						GameEventDispatch.instance.event("NoviceListChange",[1780]);
					}
					GameEventDispatch.instance.event("NoviceListChange",[value]);
				});
				var steps1_box=this.getChildByName('steps1');
				var steps2_box=this.getChildByName('steps2');
				var steps3_box=this.getChildByName('steps3');
				steps1_box.visible=false;
				steps2_box.visible=false;
				steps3_box.visible=false;
				if (NoviceC.instance.curData.step_list_name=='steps1'){
					steps1_box.visible=true;
					}else if (NoviceC.instance.curData.step_list_name=='steps2'){
					steps2_box.visible=true;
					}else if (NoviceC.instance.curData.step_list_name=='steps3'){
					steps3_box.visible=true;
				}
				}clickComponent(event){
				event.stopPropagation();
				GameEventDispatch.instance.event("FinishGuide");
				}clickView(){
				GameEventDispatch.instance.event("FinishGuide");
				}screenResize(){
				var step_box=this.getChildByName('steps1');
				step_box.height=Laya.stage.height;
				step_box.width=Laya.stage.width;
				var step_box2=this.getChildByName('steps2');
				step_box2.height=Laya.stage.height;
				step_box2.width=Laya.stage.width;
				var step_box3=this.getChildByName('steps3');
				step_box3.height=Laya.stage.height;
				step_box3.width=Laya.stage.width;
				this.mask2.width=Laya.stage.width;
				this.mask2.height=Laya.stage.height;
				this.size(Laya.stage.width,Laya.stage.height);
				}clearAll(stepName){
				var steps1=this.getChildByName(stepName);
				var steps1_childs=steps1._children;
				if (steps1_childs){
					for (var i=0;i < steps1_childs.length;i++){
						steps1_childs[i].visible=false;
					}
				}
				}resetPassClick(){
				var d=NoviceC.instance.curData;
				this.off(Event.CLICK,this,this.clickComponent);
				this.off(Event.CLICK,this,this.clickView);
				this.off(Event.MOUSE_DOWN,this,this.onMouseDown);
				this.off(Event.MOUSE_UP,this,this.onMouseUp);
				this.off(Event.MOUSE_MOVE,this,this.onMouseMove);
				this.onMouseUp(null);
				this.mask2.alpha=0.6;
				if (d.type=='shoot'){
					this.mask2.alpha=0;
					this.on(Event.MOUSE_DOWN,this,this.onMouseDown);
					this.on(Event.MOUSE_UP,this,this.onMouseUp);
					this.on(Event.MOUSE_MOVE,this,this.onMouseMove);
					}else{
					if (d.click_event=='view'){
						this.on(Event.CLICK,this,this.clickView);
						}else if (d.click_event=='view_drag'){
						this.list1.visible=true;
						}else if (d.click_event=='name'){
						var component=this.getChildByName(d.step_list_name).getChildByName(d.step_box_name).getChildByName(d.click_name);
						if (component){
							component.offAll(Event.CLICK);
							component.on(Event.CLICK,this,this.clickComponent);
						}
					}
				}
				}onMouseDown(event){
				GameEventDispatch.instance.event("NoviceShoot",[event]);
				}onMouseUp(event){
				GameEventDispatch.instance.event("NoviceShootUp",[event]);
				}onMouseMove(event){
				GameEventDispatch.instance.event("NoviceShootMove",[event]);
				}addEffect1(ele){
				ele.anchorX=0.5;
				ele.anchorY=0.5;
				ele.x=ele.x+ele.width / 2;
				ele.y=ele.y+ele.height / 2;
				this.timeLine1.reset();
				this.timeLine1.to(ele,{
					scaleX:1.05,
					scaleY:0.95
					},500).to(ele,{
					scaleX:1,
					scaleY:1
					},500).to(ele,{
					scaleX:0.95,
					scaleY:1.05
					},500).to(ele,{
					scaleX:1,
					scaleY:1
				},500);
				this.timeLine1.play(0,true);
				}noviceGuideRefresh(){
				this.clearAll("steps1");
				this.clearAll("steps2");
				this.clearAll("steps3");
				var d=NoviceC.instance.curData;
				if (d.click_event=='view_drag'){
					this.list1.visible=true;
					}else{
					this.list1.visible=false;
				}
				if (d.step_box_name && d.step_list_name){
					var box_step=this.getChildByName(d.step_list_name).getChildByName(d.step_box_name);
					box_step.visible=true;
					var posData=NoviceC.instance.stepPosData[d.type];
					if (posData){
						box_step.right=posData.right-50;
						box_step.bottom=posData.bottom-40;
					}
					if (d.effect_name1){
						this.addEffect1(box_step.getChildByName(d.effect_name1));
					}
				}
				this.resetPassClick();
				}paoOneReset(x,y){
				var steps1=this.getChildByName('steps1');
				var show1=steps1.getChildByName('step_click1');
				var show2=steps1.getChildByName('step_click2');
				var show3=steps1.getChildByName('step_change');
				var steps2=this.getChildByName('steps2');
				var show2_1=steps2.getChildByName('step_click4');
				show2_1.x=x-330;
				show2_1.y=y-170;
				show1.x=x-70;
				show1.y=y-170;
				show2.x=x-330;
				show2.y=y-170;
				show3.x=x-190;
				show3.y=y-100;
				}register(){
				GameEventDispatch.instance.on("NoviceGuideRefresh",this,this.noviceGuideRefresh);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("PaoOneReset",this,this.paoOneReset);
				}unRegister(){
				this.clearAll("steps1");
				this.clearAll("steps2");
				this.clearAll("steps3");
				GameEventDispatch.instance.off("NoviceGuideRefresh",this,this.noviceGuideRefresh);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("PaoOneReset",this,this.paoOneReset);
			}
		}

		view.noviceGuide.NoviceGuidePage=Laya.NoviceGuidePage=NoviceGuidePage;	
		

		class PackPage extends PackPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.giftData=null;
				//当前赠送物品的数据
				this.giftUserId=null;
				this.inputCount=1;
				this.curSelectIndex=0;
			}
			maskClick(event){
				event.stopPropagation();
				}getPackItems(){
				var count=0;
				var goods=ConfigManager.filter("cfg_goods",function(cfg){
					if (cfg.packed==1){
						if (cfg.can_use && cfg.type==6){
							count=RoleInfoM.instance.getGoodsItemNum(cfg.id);
							if (count==0){
								return false;
							}
						}
						return true;
					}
					return false;
				});
				goods.sort(function(a,b){
					return a.pack_index-b.pack_index;
				});
				return goods;
				}StartGames(parm=null){
				this.hitTestPrior=false;
				this.quitOrder.visible=false;
				this.quit_gift_box.visible=false;
				this.bmask.on(Event.CLICK,this,null);
				this.mask1.on(Event.CLICK,this,this.maskClick);
				this.mask2.on(Event.CLICK,this,this.maskClick);
				this._startX=this.x;
				this._startY=this.y;
				this.list1.vScrollBarSkin="";
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.quitOrder.on(Event.CLICK,this,this.onQuitOrderBtnClick);
				this.curSelectIndex=0;
				this.list1.renderHandler=new Handler(this,this.updateItem);
				this.list2.renderHandler=new Handler(this,this.updateItem2);
				this.screenResize();
				this.goodsUpdate();
				this.quit_gift_box.on(Event.CLICK,this,this.quitGiftBtn);
				this.gift_confirm.on(Event.CLICK,this,this.onGiftConfirm);
				this.tip_box.visible=false;
				this.query_btn.on(Event.CLICK,this,this.onQueryUserID);
				this.gift_records_btn.on(Event.CLICK,this,this.onGiftRecord);
				this.gift_records_btn.visible=false;
				this.use_prop.x=-12;
				this.use_all_prop.x=-12;
				this.order_view.visible=false;
				this.list2.array=[];
				this.item_count.value="1";
				this.count_jia.on(Event.CLICK,this,this.countJia);
				this.count_jian.on(Event.CLICK,this,this.countJian);
				this.userinfo_box.visible=false;
				this.showRedPoint();
				GameTools.clipTxt(this.useAllPropClip,"全部使用","green");
				}useProp(good_count){
				if (good_count==0){
					GameEventDispatch.instance.event("MsgTipContent","道具不足");
					}else{
					this.tip_box.visible=false;
					this.quit_gift_box.visible=false;
					WebSocketManager.instance.send(14028,{id:this.giftData.id});
				}
				}showRedPoint(){
				var red_points=RoleInfoM.instance.getRedPoints();
				if (128 & red_points){
					this.gift_record_txt_1.visible=true;
					this.gift_record_txt_2.visible=false;
					}else{
					this.gift_record_txt_1.visible=false;
					this.gift_record_txt_2.visible=true;
				}
				}clearCountTimer(){
				Laya.timer.clear(this,this.countJia);
				Laya.timer.clear(this,this.countJian);
				}countJianFast(){
				var _$this=this;
				var that=this;
				Laya.timer.once(300,that,function(){
					Laya.timer.loop(100,that,_$this.countJian);
				});
				}countJiaFast(){
				var _$this=this;
				var that=this;
				Laya.timer.once(300,that,function(){
					Laya.timer.loop(100,this,_$this.countJia);
				});
				}countJia(){
				this.inputCount=this.inputCount+1;
				this.item_count.value=this.inputCount+"";
				}countJian(){
				if (this.inputCount > 1){
					this.inputCount=this.inputCount-1;
				}
				this.item_count.value=this.inputCount+"";
				}getOrders(){
				var _$this=this;
				this.list2.array=[];
				var token=StartParam.instance.getParam("access_token");
				ApiManager.instance.giftList(token,1,Handler.create(this,function(result){
					if ("success"==result.code){
						var arr=result.data.rows;
						_$this.list2.array=arr;
						}else{
						console.log("error");
						console.log(result);
					}
					}),Handler.create(this,function(result){
					console.log("error");
					console.log(result);
				}));
				}onGiftRecord(){
				this.getOrders();
				this.tip_box.visible=false;
				this.quit_gift_box.visible=false;
				this.order_view.visible=true;
				this.quitOrder.visible=true;
				this.quitBtn.visible=false;
				this.mask2.visible=true;
				this.list2.scrollTo(0);
				}onQueryUserID(){
				var _$this=this;
				var pattern_user_id=/^[1-9][0-9]+$/;
				if (!pattern_user_id.test(this.input_userid.text)){
					GameEventDispatch.instance.event("MsgTipContent","用户ID不符合规范");
					}else{
					var user_id=this.input_userid.text;
					var token=StartParam.instance.getParam("access_token");
					ApiManager.instance.queryUserName(token,user_id,Handler.create(this,function(result){
						if ("success"==result.code){
							var data=result.data;
							var nickName=data.nickname;
							var userId=data.id;
							_$this.username.text=LoginInfoM.instance.filterName(GameTools.formatNickName(nickName,20));
							if (data.avatar){
								_$this.userimg.skin=data.avatar;
							}
							_$this.userinfo_box.visible=true;
							_$this.giftUserId=userId;
							}else if ("user_not_found"==result.code){
							GameEventDispatch.instance.event("MsgTipContent","用户不存在");
						}
						}),Handler.create(this,function(result){
						console.log("error");
						console.log(result);
					}));
				}
				}quitGiftBtn(){
				this.tip_box.visible=false;
				this.quitBtn.visible=true;
				this.quit_gift_box.visible=false;
				this.input_userid.text="";
				this.username.text="";
				this.userinfo_box.visible=false;
				this.mask1.visible=false;
				}screenResize(){
				var contentWidth=1070;
				var contentHeight=650;
				var contentStartX=110;
				var contentStartY=30;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quit_gift_box.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				this.quit_gift_box.top=contentStartY-posYOff;
				this.quitOrder.left=contentStartX-posXOff;
				this.quitOrder.top=contentStartY-posYOff;
				this.tip_box.left=contentStartX-posXOff;
				this.tip_box.top=contentStartY-posYOff;
				}gift(){
				var item_count=this.inputCount;
				var data={item_id:this.giftData.id,item_count:item_count,user_id:this.giftUserId};
				WebSocketManager.instance.send(14017,data);
				}giftConfirm(gift_id){
				var data={gift_id:gift_id};
				WebSocketManager.instance.send(14019,data);
				}onGiftConfirm(){
				var pattern_user_id=/^[1-9][0-9]+$/;
				if (this.input_userid.text==""){
					GameEventDispatch.instance.event("MsgTipContent","请输入用户ID");
					}else if (!pattern_user_id.test(this.input_userid.text)){
					GameEventDispatch.instance.event("MsgTipContent","用户ID不符合规范");
					}else if (!this.giftUserId){
					GameEventDispatch.instance.event("MsgTipContent","请点击查询按钮，确认用户身份");
					}else{
					var item_count=this.inputCount;
					var info=new QuitTipInfo();
					info.state=1;
					info.content="<span>确认赠送</span> <span style='color:red'>&nbsp;"+this.giftData.name+" x "+item_count+"&nbsp;</span> <span>给 </span> <span  style='color:red'>&nbsp;"+GameTools.nameSkip(this.username.text)+"&nbsp;</span><span>？</span>";
					info.confirmCallback=Handler.create(this,this.gift,[item_count]);
					info.autoCloseTime=10;
					GameEventDispatch.instance.event("QuitTip",info);
				}
				}onGift(good_count){
				var mini_battery=ConfigManager.getConfValue("cfg_global",1,"min_battery");
				if (RoleInfoM.instance.getBattery()< mini_battery){
					GameEventDispatch.instance.event("MsgTipContent",cfg_battery.instance(mini_battery).comsume+"倍炮台，开放赠送功能");
					return;
				};
				var month_card=RoleInfoM.instance.getMonthCard();
				var have_month_card=false;
				for (var key in month_card){
					if (!month_card[key].is_expired){
						have_month_card=true;
						break ;
					}
				}
				if (!have_month_card){
					GameEventDispatch.instance.event("MsgTipContent","激活月卡，开放赠送功能");
					return;
				}
				if (good_count==0){
					GameEventDispatch.instance.event("MsgTipContent","道具不足");
					}else{
					this.tip_box.pivotX=Laya.stage.mouseX;
					this.tip_box.pivotY=Laya.stage.mouseY;
					this.tip_box.x=Laya.stage.mouseX;
					this.tip_box.y=Laya.stage.mouseY;
					this.tip_box.scaleX=0;
					this.tip_box.scaleY=0;
					GameEventDispatch.instance.event("CloseWait");
					Tween.to(this.tip_box,{scaleX:1.05,scaleY:1.05},300,null,Handler.create(this,this.showComplete));
					this.inputCount=1;
					this.item_count.value="1";
					this.giftUserId=null;
					this.tip_box.visible=true;
					this.box1.visible=false;
					this.box2.visible=true;
					this.quit_gift_box.visible=true;
					this.quitBtn.visible=false;
					this.input_userid.text="";
					this.username.text="";
					this.mask1.visible=true;
				}
				}updateItem2(cell,index){
				var d=cell.dataSource;
				var ele_item_name=cell.getChildByName("item_name");
				var ele_gift_name=cell.getChildByName("gift_name");
				var ele_receive_name=cell.getChildByName("receive_name");
				var ele_item_date=cell.getChildByName("time");
				var ele_item_op=cell.getChildByName("op");
				var ele_item_op_bg=cell.getChildByName("op_bg");
				var ele_item_img=cell.getChildByName("item_img");
				var ele_sender_img=cell.getChildByName("gift_avatar");
				var ele_receive_img=cell.getChildByName("receive_avatar");
				ele_item_name.text="x "+d.item_num;
				ele_gift_name.text=LoginInfoM.instance.filterName(GameTools.formatNickName(d.sender_nickname,8));
				ele_receive_name.text=LoginInfoM.instance.filterName(GameTools.formatNickName(d.receipt_nickname,8));
				ele_item_date.text=d.created_time.substring(5);
				ele_item_img.skin=cfg_goods.instance(d.item_id).icon;
				if (d.sender_avatar){
					ele_sender_img.skin=d.sender_avatar;
				}
				if (d.receipt_avatar){
					ele_receive_img.skin=d.receipt_avatar;
				}
				ele_item_op_bg.offAll(Event.CLICK);
				ele_item_op_bg.visible=false;
				if (d.is_me==1){
					if (d.status=="issued"){
						ele_item_op.skin="ui/pack/beib_fasong.png";
						}else if (d.status=="finished"){
						ele_item_op.skin="ui/pack/beib_linqu.png";
						}else{
						ele_item_op.skin="";
					}
					}else{
					if (d.status=="issued"){
						ele_item_op_bg.visible=true;
						ele_item_op.skin="ui/common_ex/t_accept.png";
						ele_item_op_bg.on(Event.CLICK,this,this.giftConfirm,[d.id]);
						}else if (d.status=="finished"){
						ele_item_op.skin="ui/pack/beib_linqu.png";
						}else{
						ele_item_op.skin="";
					}
				}
				}onItemClick(){
				var _$this=this;
				var d=this.giftData;
				this.detail_icon.skin=d.icon;
				this.detail_name.text=d.name;
				this.detail_desc.text=d.desc;
				this.gift_icon.skin=d.icon;
				this.gift_name.text=d.name;
				this.gift_btn.offAll(Event.CLICK);
				this.use_prop.offAll(Event.CLICK);
				this.gift_btn.visible=false;
				this.use_all_prop.visible=false;
				GameTools.clipTxt(this.usePropFontClip,"使用","green");
				var item_count=this.getItemCount();
				if (d.can_use){
					if (d.type==12){
						if (RoleInfoM.instance.haveValidMonthCard()){
							this.gift_btn.visible=false;
							this.use_prop.visible=true;
							this.use_prop.on(Event.CLICK,this,this.onUsePropClick,[d]);
							this.useBtn.on(Event.CLICK,this,this.useGoods,[item_count]);
							this.grantBtn.on(Event.CLICK,this,function(event){
								var mini_battery=ConfigManager.getConfValue("cfg_global",1,"min_battery");
								if (RoleInfoM.instance.getBattery()< mini_battery){
									GameEventDispatch.instance.event("MsgTipContent",cfg_battery.instance(mini_battery).comsume+"倍炮台，开放赠送功能");
									return;
								}
								_$this.box1.visible=false;
								_$this.box2.visible=true;
							});
							}else{
							this.use_prop.on(Event.CLICK,this,this.useGoods,[item_count]);
							this.gift_btn.visible=false;
							this.use_prop.visible=true;
						}
					}
					else if (d.type==15){
						this.use_prop.on(Event.CLICK,this,this.useGoods,[item_count]);
						this.gift_btn.visible=false;
						this.use_prop.visible=true;
						}else if (d.type==6){
						this.use_all_prop.on(Event.CLICK,this,this.useGoods,[item_count]);
						this.gift_btn.visible=false;
						this.use_prop.visible=false;
						this.use_all_prop.visible=true;
					}
					}else{
					if (d.type==8){
						GameTools.clipTxt(this.usePropFontClip,"兑换","green");
						this.use_prop.visible=true;
						this.use_prop.on(Event.CLICK,this,this.openExchangePage);
						}else{
						this.use_prop.visible=false;
					}
				}
				if (d.is_gift){
					this.gift_btn.gray=false;
					this.gift_btn.on(Event.CLICK,this,this.onGift,[item_count]);
					}else{
				}
			}
			// gift_btn.gray=true
			openExchangePage(){
				this.onQuitBtnClick();
				UiManager.instance.loadView("Exchange",null,"SMALL_TO_BIG");
				}onUsePropClick(d){
				if (RoleInfoM.instance.getGoodsItemNum(d.id)<=0){
					GameEventDispatch.instance.event("MsgTipContent","道具不足");
					return
				}
				this.tip_box.pivotX=Laya.stage.mouseX;
				this.tip_box.pivotY=Laya.stage.mouseY;
				this.tip_box.x=Laya.stage.mouseX;
				this.tip_box.y=Laya.stage.mouseY;
				this.tip_box.scaleX=0;
				this.tip_box.scaleY=0;
				GameEventDispatch.instance.event("CloseWait");
				Tween.to(this.tip_box,{scaleX:1.05,scaleY:1.05},300,null,Handler.create(this,this.showComplete));
				this.title_txt.text="是否使用"+d.name+"?";
				this.tip_box.visible=true;
				this.quit_gift_box.visible=true;
				this.box1.visible=true;
				this.box2.visible=false;
				}showComplete(){
				Tween.to(this.tip_box,{scaleX:1,scaleY:1},250);
				}useGoods(nums){
				var info=new QuitTipInfo();
				info.state=1;
				info.content="确认使用？";
				info.confirmCallback=Handler.create(this,this.useProp,[nums]);
				info.autoCloseTime=10;
				GameEventDispatch.instance.event("QuitTip",info);
				}getItemCount(){
				var count=0;
				if (this.giftData.type==8){
					count=RoleInfoM.instance.getExchange();
				}
				else if (this.giftData.type==6){
					count=RoleInfoM.instance.getGoodsItemNum(this.giftData.id);
				}
				else if (this.giftData.type==12){
					count=RoleInfoM.instance.getGoodsItemNum(this.giftData.id);
				}
				else if (this.giftData.type==15){
					count=RoleInfoM.instance.getGoodsItemNum(this.giftData.id);
				}
				return count
				}updateItem(cell,index){
				var _$this=this;
				var d=cell.dataSource;
				var that=this;
				var ele_img=cell.getChildByName("img");
				var select_bg=cell.getChildByName("select_bg");
				var ele_count=cell.getChildByName("item_count");
				select_bg.visible=false;
				if (this.curSelectIndex==index){
					select_bg.visible=true;
				};
				var item_count=0;
				if (d.type==8){
					item_count=RoleInfoM.instance.getExchange();
				}
				else if (d.type==6){
					item_count=RoleInfoM.instance.getGoodsItemNum(d.id);
				}
				else if (d.type==12 || d.type==15){
					item_count=RoleInfoM.instance.getGoodsItemNum(d.id);
				}
				else if (d.type==11){
					item_count=RoleInfoM.instance.activity_ticket;
				}
				else if (d.type==13){
					item_count=RoleInfoM.instance.worldcup_coin;
				}
				ele_count.text=""+item_count;
				if (0==index && this.giftData==null){
					this.giftData=d;
					this.onItemClick();
				}
				ele_img.offAll(Event.CLICK);
				ele_img.on(Event.CLICK,that,function(){
					_$this.giftData=d;
					_$this.curSelectIndex=index;
					_$this.onItemClick();
					_$this.list1.refresh();
				});
				ele_img.skin=d.icon;
				}onQuitBtnClick(){
				UiManager.instance.closePanel("Pack",true);
				}onQuitOrderBtnClick(){
				this.order_view.visible=false;
				this.quitOrder.visible=false;
				this.quitBtn.visible=true;
				this.mask2.visible=false;
				}giftFinish(result){
				this.list1.array=this.getPackItems();
				this.quitGiftBtn();
				}giftConfirmFinish(result){
				this.list1.array=this.getPackItems();
				this.getOrders();
				}isDigitalString(str){
				for (var i=0;i < str.length;i++){
					if (str[i] < '0' || str[i] > '9'){
						return false;
					}
				}
				return true;
				}getClipBoard(content){
				if (content){
					if (content.length==10 && this.isDigitalString(content)){
						this.input_userid.text=content;
						}else{
						GameEventDispatch.instance.event("MsgTp",51);
					}
					}else{
					GameEventDispatch.instance.event("MsgTp",50);
				}
				}goodsUpdate(){
				this.curSelectIndex=0;
				this.list1.scrollTo(0);
				this.list1.array=this.getPackItems();
				this.giftData=this.list1.array[0];
				this.onItemClick();
				}endUseMonthCard(){
				this.onItemClick();
				}unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("GiftFinish",this,this.giftFinish);
				GameEventDispatch.instance.off("GiftConfirmFinish",this,this.giftConfirmFinish);
				GameEventDispatch.instance.off("ShowRedPoint",this,this.showRedPoint);
				GameEventDispatch.instance.off("WxGetClipBoard",this,this.getClipBoard);
				GameEventDispatch.instance.off("GoodsUpdate",this,this.goodsUpdate);
				GameEventDispatch.instance.off("EndUseMonthCard",this,this.endUseMonthCard);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("GiftFinish",this,this.giftFinish);
				GameEventDispatch.instance.on("GiftConfirmFinish",this,this.giftConfirmFinish);
				GameEventDispatch.instance.on("ShowRedPoint",this,this.showRedPoint);
				GameEventDispatch.instance.on("WxGetClipBoard",this,this.getClipBoard);
				GameEventDispatch.instance.on("GoodsUpdate",this,this.goodsUpdate);
				GameEventDispatch.instance.on("EndUseMonthCard",this,this.endUseMonthCard);
			}
		}

		view.pack.PackPage=Laya.PackPage=PackPage;	
		

		class PathEditorView extends PathEditorUI{
			constructor (){
				super();
				//this.spArr=null;
				this._isDown=false;
				this.namesArr=["1","2","3","4","5"];
				this.pArr=[];
				this.k=0;
				//this._lineTest=null;
				this.rectWidth=4;
				this.selectPointIndex=-1;
				this.mirrorType=0;
				//0:未镜像 1:x镜像 2:y镜像 3:xy镜像
				this.maxPoint=320000;
				this.drawPoint=120;
				this.aniInfo=new Dictionary();
				this.pointInfo=new Dictionary();
				this.pInfo=[];
				this.imageArr=[];
				this.pointThree=new Point();
			}
			StartGames(parm=null){
				this._lineTest=new Sprite();
				this.addChild(this._lineTest);
				this.initData();
				this.nextBtn.on(Event.CLICK,this,this.clickNext);
				this.preBtn.on(Event.CLICK,this,this.clickPre);
				this.mirrorBtn.on(Event.CLICK,this,this.mirrorClick);
				this.uniformBtn.on(Event.CLICK,this,this.clickUniform);
				this.on(Event.MOUSE_DOWN,this,this.mouseDown);
				this.on(Event.MOUSE_MOVE,this,this.mouseMove);
				this.on(Event.MOUSE_UP,this,this.mouseUp);
				this.drawPath(0);
				this.updateData(this.getControlPoints(this.aniInfo.get(this.k).angle,this.k),this.aniInfo.get(this.k).angle,this.aniInfo.get(this.k).patharg);
				Laya.timer.loop(100,this,this.start);
				}clickUniform(){
				var Length=this.getPathLength(this.aniInfo.get(this.k).angle,this.k);
				var uniformArray=this.getTickT(Length,this.aniInfo.get(this.k).angle,this.k);
				this.cureLength.text=""+Length;
				var str="";
				for (var i=0;i < uniformArray.length;i++){
					if (i > 0){
						str+=", "+this.getNumFun(uniformArray[i],4);
					}
					else{
						str+=this.getNumFun(uniformArray[i],4);
					}
				}
				this.uniformInfo.text=str;
				}mirrorClick(){
				this.mirrorType+=1;
				if (this.mirrorType > 3){
					this.mirrorType=0;
				}
				if (0==this.mirrorType){
					this.mirrorTip.text="未镜像";
				}
				else if (1==this.mirrorType){
					this.mirrorTip.text="x镜像";
				}
				else if (2==this.mirrorType){
					this.mirrorTip.text="y镜像";
				}
				else if (3==this.mirrorType){
					this.mirrorTip.text="xy镜像";
				}
				}mouseUp(event){
				this.selectPointIndex=-1;
				this.clickUniform();
				}mouseDown(event){
				var i=0;
				var startX=0;
				var startY=0;
				var endX=0;
				var endY=0;
				this.selectPointIndex=-1;
				for (i=0;i < this.pArr[this.k].length-1;i++){
					startX=this.pArr[this.k][i].x-this.rectWidth;
					startY=this.pArr[this.k][i].y-this.rectWidth;
					endX=this.pArr[this.k][i].x+this.rectWidth;
					endY=this.pArr[this.k][i].y+this.rectWidth;
					if (event.stageX >=startX && event.stageX <=endX &&
						event.stageY >=startY && event.stageY <=endY){
						this.selectPointIndex=i;
						if (this.selectPointIndex >=0){
							this.selectPointTip.text="当前选中点("+(this.selectPointIndex+1)+", x = "+this.pArr[this.k][this.selectPointIndex].x+", y = "+this.pArr[this.k][this.selectPointIndex].y;
						}
						else{
							this.selectPointTip.text="当前未选中点";
						}
						break ;
					}
				}
				}mouseMove(event){
				if (this.selectPointIndex >=0){
					this.pArr[this.k][this.selectPointIndex].x=event.stageX;
					this.pArr[this.k][this.selectPointIndex].y=event.stageY;
					if (this.selectPointIndex >=0){
						this.selectPointTip.text="当前选中点("+(this.selectPointIndex+1)+", x = "+this.pArr[this.k][this.selectPointIndex].x+", y = "+this.pArr[this.k][this.selectPointIndex].y;
					}
					else{
						this.selectPointTip.text="当前未选中点";
					}
				}
				}start(){
				this.aniInfo.get(this.k).angle=parseInt(this.startAngle.text);
				this.aniInfo.get(this.k).patharg=parseFloat(this.bezierArg.text);
				this.drawPath(this.k);
				this.updateData(this.getControlPoints(this.aniInfo.get(this.k).angle,this.k),this.aniInfo.get(this.k).angle,this.aniInfo.get(this.k).patharg);
				}updateData(array,angle,arg){
				var str="";
				for (var i=0;i < array.length;i++){
					if (i > 0){
						str+=", "+this.getNumFun(array[i],2);
					}
					else{
						str+=this.getNumFun(array[i],2);
					}
				};
				var m=this.k+1;
				this.beiLength.text=str;
				this.startAngle.text=angle+"";
				this.bezierArg.text=arg+"";
				this.pathtxt.text="路径ID:"+this.namesArr[this.k]+"("+m+"/"+this.namesArr.length+")";
				}clickPre(){
				if (this.k > 0){
					this.k=this.k-1;
					}else{
					this.k=14;
				}
				this.selectPointIndex=-1;
				this.selectPointTip.text="当前未选中点";
				this.drawPath(this.k);
				this.updateData(this.getControlPoints(this.aniInfo.get(this.k).angle,this.k),this.aniInfo.get(this.k).angle,this.aniInfo.get(this.k).patharg);
				this.clickUniform();
				}clickNext(){
				if (this.k < this.namesArr.length-1){
					this.k=this.k+1;
					}else{
					this.k=0;
				}
				this.selectPointIndex=-1;
				this.selectPointTip.text="当前未选中点";
				this.drawPath(this.k);
				this.updateData(this.getControlPoints(this.aniInfo.get(this.k).angle,this.k),this.aniInfo.get(this.k).angle,this.aniInfo.get(this.k).patharg);
				this.clickUniform();
				}getTickT(totalLen,startAngle,k){
				var retArray=[];
				var time=this.aniInfo.get(k).time;
				var totalTicks=Math.ceil(time / GameConst.fixed_update_time);
				var tickLen=totalLen *GameConst.fixed_update_time / time;
				var varLen=0;
				var i=0;
				var j=0;
				var deltaX=0;
				var deltaY=0;
				var lineAngle=0;
				var lineCenterPoint=new Point();
				var halfLength=0;
				var bezierPoint=new Point();
				var pathArg=this.aniInfo.get(k).patharg;
				var length=0;
				for (i=0;i < this.pArr[k].length-1;i++){
					var radian=startAngle *Math.PI / 180;
					deltaX=Math.cos(radian);
					deltaY=Math.sin(radian);
					lineAngle=GameTools.CalLineAngle(this.pArr[k][i],this.pArr[k][i+1]);
					lineCenterPoint.x=(this.pArr[k][i].x+this.pArr[k][i+1].x)/ 2;
					var deltaAngle=Math.abs(lineAngle-startAngle);
					halfLength=GameTools.CalPointLen(this.pArr[k][i],this.pArr[k][i+1])/ 2;
					length=halfLength *2 *pathArg;
					bezierPoint.x=this.pArr[k][i].x+deltaX *length;
					bezierPoint.y=this.pArr[k][i].y+deltaY *length;
					startAngle=GameTools.CalLineAngle(bezierPoint,this.pArr[k][i+1]);
					var prex=this.pArr[k][i].x;
					var prey=this.pArr[k][i].y;
					for (j=0;j <=this.maxPoint;j++){
						var x=0;
						var y=0;
						var t=j / this.maxPoint;
						var minust=1-t;
						x=minust *minust *this.pArr[k][i].x+
						2 *t *minust *bezierPoint.x+t *t *this.pArr[k][i+1].x;
						y=minust *minust *this.pArr[k][i].y+
						2 *t *minust *bezierPoint.y+t *t *this.pArr[k][i+1].y;
						varLen+=GameTools.CalPointLen(new Point(x,y),new Point(prex,prey));
						if (varLen >=tickLen){
							varLen=0;
							retArray.push(t);
						}
						prex=x;
						prey=y;
					}
				}
				if (varLen > 0){
					retArray.push(1);
				}
				return retArray;
				}getControlPoints(startAngle,k){
				var retArray=[];
				var lineAngle=0;
				var deltaX=0;
				var deltaY=0;
				var i=0;
				var j=0;
				var length=0;
				var halfLength=0;
				var lineCenterPoint=new Point();
				var bezierPoint=new Point();
				var pathArg=this.aniInfo.get(k).patharg;
				for (i=0;i < this.pArr[k].length-1;i++){
					var radian=startAngle *Math.PI / 180;
					deltaX=Math.cos(radian);
					deltaY=Math.sin(radian);
					lineAngle=GameTools.CalLineAngle(this.pArr[k][i],this.pArr[k][i+1]);
					lineCenterPoint.x=(this.pArr[k][i].x+this.pArr[k][i+1].x)/ 2;
					var deltaAngle=Math.abs(lineAngle-startAngle);{
						halfLength=GameTools.CalPointLen(this.pArr[k][i],this.pArr[k][i+1])/ 2;
						length=halfLength *2 *pathArg;
						bezierPoint.x=this.pArr[k][i].x+deltaX *length;
						bezierPoint.y=this.pArr[k][i].y+deltaY *length;
						startAngle=GameTools.CalLineAngle(bezierPoint,this.pArr[k][i+1]);
						var tmpLen=0;
						var prex=this.pArr[k][i].x;
						var prey=this.pArr[k][i].y;
						for (j=0;j <=this.drawPoint;j++){
							var x=0;
							var y=0;
							var t=j / this.drawPoint;
							var minust=1-t;
							x=minust *minust *this.pArr[k][i].x+
							2 *t *minust *bezierPoint.x+t *t *this.pArr[k][i+1].x;
							y=minust *minust *this.pArr[k][i].y+
							2 *t *minust *bezierPoint.y+t *t *this.pArr[k][i+1].y;
							tmpLen+=GameTools.CalPointLen(new Point(x,y),new Point(prex,prey));
							prex=x;
							prey=y;
						}
						retArray.push(bezierPoint.x,bezierPoint.y,tmpLen);
					}
				}
				return retArray;
				}getPathLength(startAngle,k){
				var lineAngle=0;
				var deltaX=0;
				var deltaY=0;
				var i=0;
				var j=0;
				var length=0;
				var halfLength=0;
				var lineCenterPoint=new Point();
				var bezierPoint=new Point();
				var tmpLen=0;
				var pathArg=this.aniInfo.get(k).patharg;
				for (i=0;i < this.pArr[k].length-1;i++){
					var radian=startAngle *Math.PI / 180;
					deltaX=Math.cos(radian);
					deltaY=Math.sin(radian);
					lineAngle=GameTools.CalLineAngle(this.pArr[k][i],this.pArr[k][i+1]);
					lineCenterPoint.x=(this.pArr[k][i].x+this.pArr[k][i+1].x)/ 2;
					var deltaAngle=Math.abs(lineAngle-startAngle);{
						halfLength=GameTools.CalPointLen(this.pArr[k][i],this.pArr[k][i+1])/ 2;
						length=halfLength *2 *pathArg;
						bezierPoint.x=this.pArr[k][i].x+deltaX *length;
						bezierPoint.y=this.pArr[k][i].y+deltaY *length;
						startAngle=GameTools.CalLineAngle(bezierPoint,this.pArr[k][i+1]);
						var prex=this.pArr[k][i].x;
						var prey=this.pArr[k][i].y;
						for (j=0;j <=this.maxPoint;j++){
							var x=0;
							var y=0;
							var t=j / this.maxPoint;
							var minust=1-t;
							x=minust *minust *this.pArr[k][i].x+
							2 *t *minust *bezierPoint.x+t *t *this.pArr[k][i+1].x;
							y=minust *minust *this.pArr[k][i].y+
							2 *t *minust *bezierPoint.y+t *t *this.pArr[k][i+1].y;
							tmpLen+=GameTools.CalPointLen(new Point(x,y),new Point(prex,prey));
							prex=x;
							prey=y;
						}
					}
				}
				return tmpLen;
				}drawPath(k){
				var drawPointNum=0;
				var startAngle=this.aniInfo.get(k).angle;
				var pathArg=this.aniInfo.get(k).patharg;
				var lineAngle=0;
				var deltaX=0;
				var deltaY=0;
				var i=0;
				var j=0;
				var length=0;
				var halfLength=0;
				var lineCenterPoint=new Point();
				var bezierPoint=new Point();
				this._lineTest.graphics.clear();
				for (i=0;i < this.pArr[k].length;i++){
					this._lineTest.graphics.drawRect(this.pArr[k][i].x-3,this.pArr[k][i].y-3,6,6,"#ff0000");
				}
				for (i=0;i < this.pArr[k].length-1;i++){
					var radian=startAngle *Math.PI / 180;
					deltaX=Math.cos(radian);
					deltaY=Math.sin(radian);
					lineAngle=GameTools.CalLineAngle(this.pArr[k][i],this.pArr[k][i+1]);
					lineCenterPoint.x=(this.pArr[k][i].x+this.pArr[k][i+1].x)/ 2;
					var deltaAngle=Math.abs(lineAngle-startAngle);{
						halfLength=GameTools.CalPointLen(this.pArr[k][i],this.pArr[k][i+1])/ 2;
						length=halfLength *2 *pathArg;
						bezierPoint.x=this.pArr[k][i].x+deltaX *length;
						bezierPoint.y=this.pArr[k][i].y+deltaY *length;
						startAngle=GameTools.CalLineAngle(bezierPoint,this.pArr[k][i+1]);
						for (j=0;j <=this.drawPoint;j++){
							var x=0;
							var y=0;
							var t=j / this.drawPoint;
							var minust=1-t;
							x=minust *minust *this.pArr[k][i].x+
							2 *t *minust *bezierPoint.x+t *t *this.pArr[k][i+1].x;
							y=minust *minust *this.pArr[k][i].y+
							2 *t *minust *bezierPoint.y+t *t *this.pArr[k][i+1].y;
							if (1===this.mirrorType){
								x=x+(Laya.stage.width / 2-x)*2;
							}
							else if (2===this.mirrorType){
								y=y+(Laya.stage.height / 2-y)*2;
							}
							else if (3===this.mirrorType){
								x=x+(Laya.stage.width / 2-x)*2;
								y=y+(Laya.stage.height / 2-y)*2;
							}
							if (i > 3 || j > (this.maxPoint / 2)){
								this._lineTest.graphics.drawRect(x-this.rectWidth / 2,y-this.rectWidth / 2,this.rectWidth,this.rectWidth,"#00ff00");
							}
							else{
								this._lineTest.graphics.drawRect(x-this.rectWidth / 2,y-this.rectWidth / 2,this.rectWidth,this.rectWidth,"#ff0000");
							}
						}
					}
				}
				for (i=0;i < this.pArr[k].length;i++){
					if (i==this.selectPointIndex){
						this._lineTest.graphics.drawRect(this.pArr[k][i].x-this.rectWidth,this.pArr[k][i].y-this.rectWidth,this.rectWidth *2,this.rectWidth *2,"#0000ff");
					}
					else{
						this._lineTest.graphics.drawRect(this.pArr[k][i].x-this.rectWidth,this.pArr[k][i].y-this.rectWidth,this.rectWidth *2,this.rectWidth *2,"#ff0000");
					}
				}
				}initData(){
				var index=0;
				var i=0;
				this.namesArr=[];
				var sheet=ConfigManager.getConfBySheet("cfg_fishgrouppath");
				for (var id in sheet){
					this.namesArr[index++]=""+parseInt(id);
				}
				for (i=0;i < this.namesArr.length;i++){
					var data=ConfigManager.getConfObject("cfg_fishgrouppath",this.namesArr[i]);
					this.aniInfo.set(i,data);
				}
				for (i=0;i < this.namesArr.length;i++){
					var arr=this.aniInfo.get(i).path;
					this.pInfo.push(arr);
				}
				for (var j=0;j < this.pInfo.length;j++){
					var pointArr=[];
					for (var k=0;k < this.pInfo[j].length;k+=2){
						var point=new Point(this.pInfo[j][k],this.pInfo[j][k+1]);
						pointArr.push(point);
					}
					this.pArr.push(pointArr);
				}
				}drawCure(points){
				var sp=new Sprite();
				var len=points.length;
				if (len < 3){
					return
				};
				var ctrlX=2 *points[1].x-0.5 *(points[0].x+points[2].x);
				var ctrlY=2 *points[1].y-0.5 *(points[0].y+points[2].y);
				sp.graphics.drawCurves(points[0].x,points[0].y,[0,0,ctrlX-points[0].x,ctrlY-points[0].y,points[2].x-points[0].x,points[2].y-points[0].y],"#ffffff",3);
				if (len==3){
					return;
				}
				for (var i=2;i < len-1;i++){
					ctrlX=2 *points[i].x-ctrlX;
					ctrlY=2 *points[i].y-ctrlY;
					sp.graphics.drawCurves(points[i].x,points[i].y,[0,0,ctrlX-points[i].x,ctrlY-points[i].y,points[i+1].x-points[i].x,points[i+1].y-points[i].y],"#ffffff",3);
				}
				this.addChild(sp);
				}upImage(image,event){
				event.stopPropagation();
				}clicksp(){
				}upPanel(event){
				}moviePanel(){
				}getNumFun(n,count){
				var dis=Math.pow(10,count);
				n=Math.round(n *dis)/ dis;
				return n;
				}register(){
			}unRegister(){}
		}

		view.pathEditor.PathEditorView=Laya.PathEditorView=PathEditorView;	
		

		class PrizeView extends prizeUI{
			constructor (){
				super();
				//this._imgUrl=null;
				//this._count=NaN;
				//this.goodsId=NaN;
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.activityBox.visible=false;
				this.prizeBox.visible=false;
				if (ActivityM.instance.isShowSinceRebate){
					this.activityBox.visible=true;
					this.activityBox.array=RuleM.instance.activityID;
					this.activityBox.repeatX=RuleM.instance.activityID.length;
					}else{
					this.prizeBox.visible=true;
					this._imgUrl=RuleM.instance.imageUrl;
					this.goodsId=RuleM.instance.goodsId;
					this._count=RuleM.instance.coinCount;
				}
				this.priziIcon.skin=this._imgUrl;
				this.coinCount.text=this._count+"";
				this.bmask.on(Event.CLICK,this,this.clickMask);
				this.receiveBtn.on(Event.CLICK,this,this.clickReceive);
				this.activityBox.renderHandler=new Handler(this,this.onActivityRender);
				GameEventDispatch.instance.event("UpdateProfile",null);
				GameEventDispatch.instance.event("PlayerCoinChange",null);
				this.screenResize();
				}onActivityRender(cell,index){
				var cofig=cell.dataSource;
				var img=cell.getChildByName("activityIcon");
				var Num=cell.getChildByName("activityNum");
				img.skin=cfg_goods.instance(""+cofig).icon;
				Num.text=RuleM.instance.activityNum[index]+"";
				}clickMask(){
				}clickReceive(){
				if (ActivityM.instance.isShowSinceRebate){
					GameEventDispatch.instance.event("RewardTip",[RuleM.instance.activityID,RuleM.instance.activityNum]);
					}else{
					GameEventDispatch.instance.event("RewardTip",[[this.goodsId],[this._count]]);
				}
				UiManager.instance.closePanel("Prize",false);
				}screenResize(){
				var contentWidth=700;
				var contentHeight=450;
				var contentStartX=290;
				var contentStartY=155;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				RuleM.instance.coinCount=0;
				this._count=0;
				GameEventDispatch.instance.event("UpdateProfile",null);
				GameEventDispatch.instance.event("FightCoinUpdate",null);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.prize.PrizeView=Laya.PrizeView=PrizeView;	
		

		class QuickRegisterView extends QuickRegisterPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.codeTime=60;
				this.confirmDelayTime=5;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.initBox(parm);
				this.nameInput.on(Event.FOCUS_CHANGE,this,this.onFocusChange);
				this.idCardInput.on(Event.FOCUS_CHANGE,this,this.onFocusChange);
				this.telephoneInput.on(Event.FOCUS_CHANGE,this,this.onFocusChange);
				this.confirmCode.on(Event.FOCUS_CHANGE,this,this.onFocusChange);
				this.confirmBtn.on(Event.CLICK,this,this.onConfirmBtn);
				this.cancelBtn.on(Event.CLICK,this,this.onCancelBtn);
				this.quitBtn.on(Event.CLICK,this,this.onCancelBtn);
				this.cancelBtn4.on(Event.CLICK,this,this.onCancelBtn);
				this.copyBtn.on(Event.CLICK,this,this.onCopyBtn);
				this.confirmBtn2.on(Event.CLICK,this,this.onConfirmBtn2);
				this.getCode.on(Event.CLICK,this,this.onGetCode);
				this.confirmBtn3.on(Event.CLICK,this,this.onConfirmBtn3);
				this.confirmBtn4.on(Event.CLICK,this,this.onConfirmBtn4);
				GameTools.clipTxt(this.clipConfirm,"确定","red");
				GameTools.clipTxt(this.confirmClip,"确定","red");
				GameTools.clipTxt(this.fontClip1,"确定","red");
				GameTools.clipTxt(this.fontClip2,"确定","red");
				GameTools.clipTxt(this.clipCancel,"取消","green");
				GameTools.clipTxt(this.cancelClip,"取消","green");
				this.screenResize();
				this.bmask.on(Event.CLICK,this,this.clickMask);
				}onGetCode(){
				var telephone=this.telephoneInput.text;
				if (telephone==""){
					GameEventDispatch.instance.event("MsgTipContent","请输入手机号码");
					return;
					}else if (telephone.length !=11){
					GameEventDispatch.instance.event("MsgTipContent","请输入正确的手机号码");
					return;
				}
				WebSocketManager.instance.send(33014,{phone:telephone,type:2});
				}onCopyBtn(){
				GameTools.copyText(this.link.text);
				}onConfirmBtn2(){
				UiManager.instance.closePanel("QuickRegister",false);
				}onConfirmBtn4(){
				UiManager.instance.closePanel("Certification",false);
				this.hideAll();
				this.box1.visible=true;
				}onConfirmBtn3(){
				this.onCancelBtn();
				}initBox(parm=null){
				if (parm==null){
					this.hideAll();
					this.box2.visible=true;
					this.jjhAccount.text=RoleInfoM.instance.jjhNumber;
					this.jjhId.text=RoleInfoM.instance.jjhId;
					}else if (parm=="bank"){
					this.hideAll();
					this.box1.visible=true;
					}else if (parm=="certifucation"){
					this.hideAll();
					this.prompt_box.visible=true;
				}
				}clearInput(){
				this.nameInput.text="";
				this.idCardInput.text="";
				this.telephoneInput.text="";
				this.confirmCode.text="";
				}onFocusChange(){
				this.nameInput.repaint();
				this.idCardInput.repaint();
				this.telephoneInput.repaint();
				this.confirmCode.repaint();
				this.repaint();
				}checkCardId(str){
				if (str.length < 18){
					return false;
				};
				var arr=[];
				var sum=0;
				for (var i=0;i < str.length;i++){
					if (arr[i] !="X"){
						arr[i]=(str [i]);
						}else{
						arr[i]=str[i];
					}
				}
				sum=arr[0] *7+arr[1] *9+arr[2] *10+arr[3] *5+arr[4] *8+arr[5] *4+arr[6] *2+arr[7] *1
				+arr[8] *6+arr[9] *3+arr[10] *7+arr[11] *9+arr[12] *10+arr[13] *5+arr[14] *8
				+arr[15] *4+arr[16] *2;
				sum=1-sum;
				if ((sum % 11+11)==11 || arr[17]==(sum % 11+11)|| (arr[17]=="X" && (sum % 11+11)==10)){
					return true;
				}
				return false;
				}getAge(identityCard){
				var len=(identityCard+"").length;
				if (len==0){
					return 0;
					}else{
					if ((len !=15)&& (len !=18)){
						return 0;
					}
				};
				var strBirthday="";
				if (len==18){
					strBirthday=identityCard.substr(6,4)+"/"+identityCard.substr(10,2)+"/"+identityCard.substr(12,2);
				}
				if (len==15){
					strBirthday="19"+identityCard.substr(6,2)+"/"+identityCard.substr(8,2)+"/"+identityCard.substr(10,2);
				};
				var birthDate=new Date(strBirthday);
				var nowDateTime=new Date();
				var age=nowDateTime.getFullYear()-birthDate.getFullYear();
				if (nowDateTime.getMonth()< birthDate.getMonth()|| (nowDateTime.getMonth()==birthDate.getMonth()&& nowDateTime.getDate()< birthDate.getDate())){
					age--;
				}
				return age;
				}onConfirmBtn(){
				var nameReg=/^[\u4E00-\u9FA5]{2,6}$/;
				var name=this.nameInput.text;
				var cardId=this.idCardInput.text;
				var telephone=this.telephoneInput.text;
				var code=this.confirmCode.text;
				var idCardReg=/^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/;
				if (name==""){
					GameEventDispatch.instance.event("MsgTipContent","请输入真实姓名");
					return;
					}else if (!nameReg.test(name)){
					GameEventDispatch.instance.event("MsgTipContent","输入姓名不符合规范");
					return;
				}
				else if (cardId==""){
					GameEventDispatch.instance.event("MsgTipContent","请输入身份证号");
					return;
					}else if (!idCardReg.test(cardId)|| !this.checkCardId(this.idCardInput.text)){
					GameEventDispatch.instance.event("MsgTipContent","输入的身份证号不规范");
					return;
					}else if (telephone==""){
					GameEventDispatch.instance.event("MsgTipContent","请输入手机号码");
					return;
					}else if (telephone.length !=11){
					GameEventDispatch.instance.event("MsgTipContent","请输入正确的手机号码");
					return;
					}else if (code==""){
					GameEventDispatch.instance.event("MsgTipContent","请输入验证码");
					return;
					}else if (code.length !=6){
					GameEventDispatch.instance.event("MsgTipContent","请输入正确的验证码");
					return;
				}
				if (this.getAge(cardId)&& this.getAge(cardId)< 18){
					GameTools.showTip("您未满18周岁，无法注册");
					}else{
					WebSocketManager.instance.send(60001,{name:name,cardId:cardId,ageType:1,phone:telephone,code:code,is_quick_reg:1});
				}
				RoleInfoM.instance.tel=this.telephoneInput.text;
				this.clearCodeTimer();
				}onCancelBtn(isCancel=true){
				this.clearInput();
				UiManager.instance.closePanel("QuickRegister",false);
				var certInfo=new CertificationInfo();
				certInfo.openFrom="quick_register";
				CertificationM.instance.info=certInfo;
				UiManager.instance.loadView("Certification",null,"SMALL_TO_BIG");
				}clickMask(){
				}screenResize(){
				var contentWidth=700;
				var contentHeight=450;
				var contentStartX=290;
				var contentStartY=155;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				}getCodeResult(data){
				if (data.code==0){
					GameTools.showTip("发送验证码成功");
					this.codeTimer.visible=true;
					this.codeTimer.text=this.codeTime+"s";
					Laya.timer.loop(1000,this,this.updateCodeTime);
					this.getCode.disabled=true;
					}else{
					GameEventDispatch.instance.event("MsgTipContent","发送验证码失败");
				}
				}updateCodeTime(){
				this.codeTime=this.codeTime-1;
				if (this.codeTime <=0){
					this.clearCodeTimer();
					return
				}
				this.codeTimer.text=this.codeTime+"s";
				}clearCodeTimer(){
				Laya.timer.clear(this,this.updateCodeTime);
				this.codeTimer.visible=false;
				this.getCode.disabled=false;
				this.codeTime=60;
				}hideAll(){
				this.box1.visible=false;
				this.box2.visible=false;
				this.box3.visible=false;
				this.prompt_box.visible=false;
				}showJJhInfo(){
				GameEventDispatch.instance.event("MsgTipContent","注册成功");
				this.hideAll();
				this.box3.visible=true;
				this.jjhAccount2.text=RoleInfoM.instance.jjhNumber;
				this.jjhId2.text=RoleInfoM.instance.jjhId;
				this.jjhPass.text=RoleInfoM.instance.jjhPass;
				this.bankPsd2.text=RoleInfoM.instance.bankPass;
				this.confirmDelay.text=this.confirmDelayTime+"s";
				this.confirmDelay.visible=true;
				this.confirmBtn3.disabled=true;
				Laya.timer.loop(1000,this,this.updateConfirmTime);
				}updateConfirmTime(){
				this.confirmDelayTime=this.confirmDelayTime-1;
				if (this.confirmDelayTime <=0){
					this.clearConfirmTimer();
					return
				}
				this.confirmDelay.text=this.confirmDelayTime+"s";
				}clearConfirmTimer(){
				Laya.timer.clear(this,this.clearConfirmTimer);
				this.confirmDelay.visible=false;
				this.confirmBtn3.disabled=false;
				this.confirmDelayTime=60;
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on(String(33015),this,this.getCodeResult);
				GameEventDispatch.instance.on("UpdateJJHAcInfo",this,this.showJJhInfo);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off(String(33015),this,this.getCodeResult);
				GameEventDispatch.instance.off("UpdateJJHAcInfo",this,this.showJJhInfo);
			}
		}

		view.quickRegister.QuickRegisterView=Laya.QuickRegisterView=QuickRegisterView;	
		

		class RankPage extends RankPageUI{
			constructor (){
				super();
				this.select_type=0;
				//0--财富 1--实力
				//this.my_gold_rank=0;
				this.my_gold_reward=[1,0];
				//this.my_strength_rank=0;
				this.my_strength_reward=[1,0];
				//this.gold_rank_list=null;
				//this.strength_rank_list=null;
				this.strengthRankDes="<span style='color:white'>根据当日捕鱼消耗进行排名，排行榜每10分钟更新一次；</span><span style='color:red;font-weight:bold'>奖励只保留一天</span><span style='color:white'>，请及时领取</span>";
				this.coinRankDes="<span style='color:white'>根据携带金币数量进行排名，排行榜每10分钟更新一次；</span><span style='color:red;font-weight:bold'>奖励只保留一天</span><span style='color:white'>，请及时领取</span>";
				this.last_time=0;
				this.match_data={};
				this.clickRewardBtn=[0,0];
				this._startX=0;
				this._startY=0;
				//this._giveAwayArr=null;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,null);
				this.desHTML.pos(-10,6);
				this.desHTML.style.width=776;
				this.desHTML.style.height=29;
				this.desHTML.style.fontSize=16;
				this.desHTML.style.align="center";
				this.desHTML.style.valign="middle";
				this._startX=this.x;
				this._startY=this.y;
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.getRewardBtn.on(Event.CLICK,this,this.onGetRewardBtn);
				this.list1.renderHandler=new Handler(this,this.updateItem);
				this.gold_btn.on(Event.CLICK,this,this.onGoldBtn);
				this.strength_btn.on(Event.CLICK,this,this.onStrengthBtn);
				this.wait_ani.play(0,true);
				this._giveAwayArr=[];
				if (ActivityM.instance.isShowMainRank){
					if (WxC.isInMiniGame()){
						this._giveAwayArr=ActivityM.instance._getCommonActivityConfig(105)["wx"];
						}else{
						this._giveAwayArr=ActivityM.instance._getCommonActivityConfig(105)["h5"];
					}
				}
				if (LoginM.instance.pageId=="fish_page"){
					if (LevelM.instance.coinRankLv > 0){
						if (LevelM.instance.strengthRankLv > 0){
							this.onStrengthBtn();
							}else{
							this.onGoldBtn();
						}
						}else{
						this.onStrengthBtn();
					}
					}else{
					this.onGoldBtn();
				}
				this.screenResize();
				}onGetRewardBtn(){
				if (this.clickRewardBtn[this.select_type] <=0){
					this.clickRewardBtn[this.select_type]=1;
					WebSocketManager.instance.send(42001,{type:(this.select_type+1)});
					}else{
					GameEventDispatch.instance.event("MsgTipContent","正在领取奖励，请勿频繁点击");
				}
				}synRankReward(){
				this.getRewardBtn.visible=false;
				this.clickRewardBtn=[0,0];
				var rankNum=-1;
				var rankReward=-1;
				if (0==this.select_type){
					if (LevelM.instance.coinReward.length > 0){
						this.getRewardBtn.visible=true;
						this.rank_introduce.text="昨日\n排名";
						this.gold_introduce.text="昨日\n奖励";
						rankReward=LevelM.instance.coinReward[1];
						rankNum=LevelM.instance.coinRankLv;
						}else{
						this.rank_introduce.text="我的\n排名";
						this.gold_introduce.text="我的\n奖励";
						rankReward=this.my_gold_reward[1];
						rankNum=this.my_gold_rank;
					}
					this.list1.array=this.gold_rank_list;
					}else{
					if (LevelM.instance.strengthReward.length > 0){
						this.getRewardBtn.visible=true;
						this.rank_introduce.text="昨日\n排名";
						this.gold_introduce.text="昨日\n奖励";
						rankReward=LevelM.instance.strengthReward[1];
						rankNum=LevelM.instance.strengthRankLv;
						}else{
						this.rank_introduce.text="我的\n排名";
						this.gold_introduce.text="我的\n奖励";
						rankReward=this.my_strength_reward[1];
						rankNum=this.my_strength_rank;
					}
					this.list1.array=this.strength_rank_list;
				}
				this.goldImg.skin=cfg_goods.instance(this.my_gold_reward[0]+"").waceIcon;
				this.goldLabel.text=rankReward+"";
				if ((rankNum > 1000)|| (rankNum <=0)){
					this.rank_num.text="未上榜";
					}else{
					this.rank_num.text=rankNum+"";
				}
				}onGoldBtn(){
				this.select_type=0;
				this.getRankList();
				this.desHTML.innerHTML=this.coinRankDes;
				this.list1.scrollTo(0);
				this.gold_btn.selected=true;
				this.strength_btn.selected=false;
				}onStrengthBtn(){
				this.select_type=1;
				this.desHTML.innerHTML=this.strengthRankDes;
				this.getRankList();
				this.list1.scrollTo(0);
				this.gold_btn.selected=false;
				this.strength_btn.selected=true;
				}setDate(){
				this.my_gold_rank=this.match_data["gold_top_me"];
				this.my_strength_rank=this.match_data["strength_top_me"];
				this.gold_rank_list=this.match_data["gold_top"];
				this.strength_rank_list=this.match_data["strength_top"];
				if (this.gold_rank_list[(this.my_gold_rank-1)+""] && this.gold_rank_list[(this.my_gold_rank-1)+""].reward.length > 0){
					if (LevelM.instance.rankDoubleReward){
						this.my_gold_reward=[this.gold_rank_list[(this.my_gold_rank-1)+""].reward[0],
						(parseInt(this.gold_rank_list[(this.my_gold_rank-1)+""].reward[1])*2)];
						}else{
						this.my_gold_reward=this.gold_rank_list[(this.my_gold_rank-1)+""].reward;
					}
					}else{
					this.my_gold_reward=[1,0];
				}
				if (this.strength_rank_list[(this.my_strength_rank-1)+""] && this.strength_rank_list[(this.my_strength_rank-1)+""].reward.length > 0){
					if (LevelM.instance.rankDoubleReward){
						this.my_strength_reward=[this.strength_rank_list[(this.my_strength_rank-1)+""].reward[0],
						(parseInt(this.strength_rank_list[(this.my_strength_rank-1)+""].reward[1])*2)];
						}else{
						this.my_strength_reward=this.strength_rank_list[(this.my_strength_rank-1)+""].reward;
					}
					}else{
					this.my_strength_reward=[1,0];
				}
				this.synRankReward();
				}screenResize(){
				var contentWidth=850;
				var contentHeight=660;
				var contentStartX=215;
				var contentStartY=30;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				}getRankList(interval=true){
				var _$this=this;
				var token=StartParam.instance.getParam("access_token");
				var cur_d=new Date();
				var cur_time=cur_d.getTime();
				if (interval){
					if (((cur_time-this.last_time)/ 1000)> 3){
						this.last_time=cur_time;
						this.wait_ani.visible=true;
						ApiManager.instance.get_rank_list(token,function(result){
							LevelM.instance.setTodayStrIsHaveReward(result);
							_$this.match_data=result.data;
							_$this.setDate();
							_$this.wait_ani.visible=false;
						});
						}else{
						this.setDate();
					}
					}else{
					this.last_time=cur_time;
					this.wait_ani.visible=true;
					ApiManager.instance.get_rank_list(token,function(result){
						_$this.match_data=result.data;
						_$this.setDate();
						_$this.wait_ani.visible=false;
					});
				}
				}updateItem(cell,index){
				var data=cell.dataSource;
				var ele_player_name=cell.getChildByName("player_name");
				var ele_rank_icon=cell.getChildByName("rank_icon");
				var ele_rank=cell.getChildByName("rank");
				var ele_level=cell.getChildByName("level");
				var ele_bg=cell.getChildByName("bg");
				var ele_image=cell.getChildByName("imgBox").getChildByName("playimg");
				var goldBox=cell.getChildByName("goldBox");
				var item_num=goldBox.getChildByName("item_num");
				var ele_name_bg=goldBox.getChildByName("name_bg");
				var item_img=goldBox.getChildByName("item_img");
				var doubleImg=cell.getChildByName("doubleImg");
				var giveawayBox=cell.getChildByName("giveawayBox");
				giveawayBox.visible=false;
				if (ActivityM.instance.isShowMainRank){
					var giveawayImg=giveawayBox.getChildByName("giveawayImg");
					var giveawayLabel=giveawayBox.getChildByName("giveawayLabel");
					if (this.select_type==0){
						giveawayImg.skin=cfg_goods.instance(this._giveAwayArr["gold"][index][0]).icon;
						giveawayLabel.value=""+this._giveAwayArr["gold"][index][1];
						}else{
						giveawayImg.skin=cfg_goods.instance(this._giveAwayArr["strength"][index][0]).icon;
						giveawayLabel.value=""+this._giveAwayArr["strength"][index][1];
					}
					giveawayBox.visible=true;
				}
				goldBox.visible=false;
				doubleImg.visible=false;
				if (data['reward'].length > 0){
					item_num.text=data['reward'][1]+"";
					item_img.skin=cfg_goods.instance(data['reward'][0]+"").waceIcon;
					goldBox.visible=true;
					if (LevelM.instance.rankDoubleReward){
						doubleImg.visible=true;
					}
				}
				if (LoginM.instance.isNovicePlayer==true && data.is_hide==true){
					ele_player_name.text=LoginM.instance.replaceRankName;
					}else{
					ele_player_name.text=LoginInfoM.instance.filterName(data["nickname"]);
				}
				if (GameTools.getStringTrueLength(data["nickname"])> 14){
					ele_player_name.fontSize=16;
					}else{
					ele_player_name.fontSize=18;
				}
				ele_rank_icon.visible=true;
				ele_rank.visible=false;
				ele_level.text="lv."+data["level"];
				ele_image.skin="ui/common/nan.png";
				if (data["avatar"]){
					ele_image.skin=data["avatar"];
					}else{
					ele_image.skin="ui/common/nan.png";
				}
				ele_bg.skin="ui/rank/paih_zk2.png";
				ele_name_bg.skin="ui/rank/k2.png";
				if (0==this.select_type && index==(this.my_gold_rank-1)){
					ele_bg.skin="ui/rank/paih_zk1.png";
					ele_name_bg.skin="ui/rank/k3.png";
				}
				if (1==this.select_type && index==(this.my_strength_rank-1)){
					ele_bg.skin="ui/rank/paih_zk1.png";
					ele_name_bg.skin="ui/rank/k3.png";
				}
				if (0==index){
					ele_rank_icon.skin="ui/rank/rank1.png";
					}else if (1==index){
					ele_rank_icon.skin="ui/rank/rank2.png";
					}else if (2==index){
					ele_rank_icon.skin="ui/rank/rank3.png";
					}else{
					ele_rank_icon.visible=false;
					ele_rank.visible=true;
					ele_rank.text=index+1+"";
				}
				cell.offAll(Event.CLICK);
				cell.on(Event.CLICK,this,function(){
					FriendM.instance.searchFriend(data.user_id);
				});
				}onQuitBtnClick(){
				UiManager.instance.closePanel("Rank",true);
				if (LoginM.instance.pageId=="fish_page"){
					var info=new QuitTipInfo();
					info.state=4;
					if (LevelM.instance.todayCoinIsHaveReward || LevelM.instance.todayStrIsHaveReward){
						info.content="保持当前排名，明日登录即可领取排名奖励！";
						}else{
						info.content="进入排行榜，明日登录即可领取排名奖励！";
					}
					if (WxC.isInMiniGame()&& RoleInfoM.instance.subsState(1)==false){
						info.closeCallback=new Handler(this,this.comfirmHandler);
						info.confirmCallback=new Handler(this,this.comfirmHandler);
					}
					info.commonMsg="RankAniRefesh";
					info.autoCloseTime=10;
					GameEventDispatch.instance.event("QuitTip",info);
				}
				}comfirmHandler(){
				if (RoleInfoM.instance.subscribeState(1)==0){
					var info=new QuitTipInfo();
					info.state=5;
					info.commonMsg="OpenSubscibe";
					info.content="";
					info.middleTxt="订阅";
					info.isHaveTime=false;
					GameEventDispatch.instance.event("QuitTip",info);
					}else{
					GameEventDispatch.instance.event("OpenSubscibe");
				}
				}unRegister(){
				GameEventDispatch.instance.off(String(42003),this,this.getRankList);
				GameEventDispatch.instance.off("SyncActivityStatus",this,this.setDate);
				GameEventDispatch.instance.off("SynRankReward",this,this.synRankReward);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				}register(){
				GameEventDispatch.instance.on(String(42003),this,this.getRankList,[false]);
				GameEventDispatch.instance.on("SyncActivityStatus",this,this.setDate);
				GameEventDispatch.instance.on("SynRankReward",this,this.synRankReward);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
			}
		}

		view.rank.RankPage=Laya.RankPage=RankPage;	
		

		class RedActivityPage extends RedActivityPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,null);
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.findIntegralBtn.on(Event.CLICK,this,this.onFindIntegralBtn);
				this._startX=this.x;
				this._startY=this.y;
				this.screenResize();
				}onFindIntegralBtn(){
				UiManager.instance.loadView("PublicAccount",null,"SMALL_TO_BIG");
				}onQuitBtnClick(){
				UiManager.instance.closePanel("RedActivity",false);
				}screenResize(){
				var contentWidth=850;
				var contentHeight=660;
				var contentStartX=215;
				var contentStartY=30;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				}unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
			}
		}

		view.redActivity.RedActivityPage=Laya.RedActivityPage=RedActivityPage;	
		

		class RegisterPage extends RegisterPageUI{
			constructor (){
				super();
				//this.box=null;
				//this.c2s=null;
				//this.arr=null;
				//this.imageUrl=null;
				//this.goodsId=NaN;
				//this.count=NaN;
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.m_list.array=RegiM.instance.infoList;
				this.on(Event.CLICK,this,this.clickPanel);
				this.closeBtn.on(Event.CLICK,this,this.clickClose);
				this.c2s=new C2s_20002();
				this.screenResize();
				this.bmask.on(Event.CLICK,this,this.clickMask);
				}clickMask(){
				}screenResize(){
				this.bmask.width=Laya.stage.width *2;
				this.bmask.height=Laya.stage.height *2;
				this.closeBtn.left=5;
				this.closeBtn.top=5;
				this.size(Laya.stage.width,Laya.stage.height);
				}clickPanel(){
				this.arr=RegiM.instance.idArr;
				for (var i=0;i < this.arr.length;i++){
					if (RoleInfoM.instance.getSignInStatus(this.arr[i])==2){
						this.c2s.day=parseInt(this.arr[i]);
						WebSocketManager.instance.send(20002,this.c2s);
						break ;
					}
				}
				GameEventDispatch.instance.event("CloseRegisterPage");
				}roleCreateRet(data){
				if (data.code==0){
					this.goodsId=data.goods;
					this.count=data.num;
					Laya.timer.once(200,this,this.start);
					}else if (data.code==1){
					GameEventDispatch.instance.event("MsgTp",29);
					}else if (data.code==2){
					GameEventDispatch.instance.event("MsgTp",30);
					}else if (data.code==3){
					GameEventDispatch.instance.event("MsgTp",31);
				}
				}signUpdate(data){
				this.m_list.array=RegiM.instance.infoList;
			}
			//Laya.timer.once(200,this,start);
			start(){
				if (RegiM.instance.isGet){
					}else{
					UiManager.instance.closePanel("Register",true);
					GameEventDispatch.instance.event("RewardTip",[[this.goodsId],[this.count]]);
					GameEventDispatch.instance.event("Regic");
				}
				}clickClose(){
				UiManager.instance.closePanel("Register",true);
				}onSelect(e,index){
				if (e.type==Event.CLICK){
					this.arr=RegiM.instance.idArr;
					if (RoleInfoM.instance.getSignInStatus(this.arr[index])==2){
						this.c2s.day=index+1;
						WebSocketManager.instance.send(20002,this.c2s);
					}
				}
			}
			//GameEventDispatch.instance.on(String(20002),this,reveice);
			reveice(data){
				}register(){
				GameEventDispatch.instance.on("SignInUpdate",this,this.signUpdate);
				GameEventDispatch.instance.on(String(20003),this,this.roleCreateRet);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				GameEventDispatch.instance.off("SignInUpdate",this,this.signUpdate);
				GameEventDispatch.instance.off(String(20003),this,this.roleCreateRet);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
			get infoList (){
				var arr=[];
				for (var i=0;i < 50;i++){
					arr.push({txt:{text:i}});
				}
				return arr;
			}
			set infoList(value){super.infoList=value;}
		}

		view.register.RegisterPage=Laya.RegisterPage=RegisterPage;	
		

		class ResetLoadPage extends ResetLoadUI{
			constructor (){
				super();
				//this._type=null;
			}
			StartGames(parm=null){
				this.confirmBtn.on(Event.CLICK,this,this.clickConfirm);
				}clickConfirm(){
				}register(){
			}unRegister(){}
		}

		view.resetLoad.ResetLoadPage=Laya.ResetLoadPage=ResetLoadPage;	
		

		class ResetPage extends ResetLoginUI{
			constructor (){
				super();
			}
			StartGames(parm=null){
				this.closeBtn.on(Event.CLICK,this,this.clickClose);
				this.screenResize();
				}clickClose(){
				WxC.exitGame();
				}register(){
				GameEventDispatch.instance.on("CloseReset",this,this.closePage);
				GameEventDispatch.instance.on("WxReset",this,this.wxReset);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}wxReset(){
				GameEventDispatch.instance.event("WxResetLogin");
				}closePage(){
				UiManager.instance.closePanel("ResetLogin",false);
				}startReset(){
				GameEventDispatch.instance.event("WxResetLogin");
				}unRegister(){
				Laya.timer.clear(this,this.startReset);
				GameEventDispatch.instance.off("CloseReset",this,this.closePage);
				GameEventDispatch.instance.off("WxReset",this,this.wxReset);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				}screenResize(){
				this.size(Laya.stage.width,Laya.stage.height);
			}
		}

		view.resetLogin.ResetPage=Laya.ResetPage=ResetPage;	
		

		class RewardPageView extends rewpageUI{
			constructor (){
				super();
				//this.ani=null;
				//this.cardArr=null;
				//this.boxArr=null;
				//this.beiArr=null;
				//this.backArr=null;
				//this.frontArr=null;
				this.isChou=false;
				//this.baseFishCount=NaN;
				//this.baseCoinCount=NaN;
				this.nameArr=["ui/rewardPage/tab1.png","ui/rewardPage/tab2.png","ui/rewardPage/tab3.png","ui/rewardPage/tab4.png","ui/rewardPage/tab5.png","ui/rewardPage/tab6.png"];
				this.typeArr=[101,201,301,401,501,601];
				//this.tabId=NaN;
				//this.startId=NaN;
				this.isC=false;
				this._totalTime=10;
				this._startX=0;
				this._startY=0;
				this.isChouComplete=false;
				//this._fishCount=NaN;
				//this._coinCount=NaN;
				//this._firstContent=null;
				//this._userName=null;
				this._recordArr=[];
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.recordOne.style.width=600;
				this.recordTwo.style.width=600;
				this.recordThree.style.width=600;
				this.recordFour.style.width=600;
				this._userName=GameTools.formatNickName(RoleInfoM.instance.getName());
				this.initData();
				this._totalTime=10;
				this.time.text=this._totalTime+"";
				this.baseFishCount=RewardM.instance.baseFishCount();
				this.baseCoinCount=RewardM.instance.conditonValue(0);
				this.tablist.mouseEnabled=true;
				this.tablist.mouseEnabled=true;
				this.rewrarBtn.mouseEnabled=true;
				this.closeBtn.mouseEnabled=true;
				this.reardfishCount.value=RoleInfoM.instance.getFcoin()+"";
				this.nowcount.value=RoleInfoM.instance.getFcount()+"";
				this._fishCount=RoleInfoM.instance.getFcoin();
				this._coinCount=RoleInfoM.instance.getFcount();
				this.time.visible=false;
				this.reardfishCount.value=RoleInfoM.instance.getFcoin()+"";
				this.nowcount.value=RoleInfoM.instance.getFcount()+"";
				if (RoleInfoM.instance.getFcount()>=this.baseFishCount){
					this.tablist.selectedIndex=RewardM.instance.selectTab(RoleInfoM.instance.getFcoin());
					}else{
					this.tablist.selectedIndex=0;
				}
				this.startId=RewardM.instance.selectTab(RoleInfoM.instance.getFcoin());
				this.tabId=RewardM.instance.selectTab(RoleInfoM.instance.getFcoin());
				if (RoleInfoM.instance.getFcount()>=this.baseFishCount && RoleInfoM.instance.getFcoin()>=this.baseCoinCount){
					this.isC=false;
					this.lotteryState();
					}else{
					this.checkState();
					this.isC=true;
				}
				this.recevily();
				this.getData(RewardM.instance.rewardArr(this.tablist.selectedIndex));
				this.tablist.selectHandler=new Handler(this,this.onSelect);
				this.closeBtn.on(Event.CLICK,this,this.clickClose);
				this.rewrarBtn.on(Event.CLICK,this,this.clickReward);
				this.screenResize();
				this.repage.on(Event.CLICK,this,this.click);
				this.lotteryrecord();
				Laya.timer.loop(1000,this,this.refresh);
				}refresh(){
				WebSocketManager.instance.send(15003,null);
				}lotteryrecord(){
				this._recordArr=RewardM.instance.RecordArr;
				this.recordOne.style.fontSize=22;
				this.recordTwo.style.fontSize=22;
				this.recordThree.style.fontSize=22;
				this.recordFour.style.fontSize=22;
				if (this._recordArr.length > 0){
					this.recordOne.innerHTML=this._recordArr[0];
				}
				if (this._recordArr.length > 1){
					this.recordTwo.innerHTML=this._recordArr[1];
				}
				if (this._recordArr.length > 2){
					this.recordThree.innerHTML=this._recordArr[2];
				}
				if (this._recordArr.length > 3){
					this.recordFour.innerHTML=this._recordArr[3];
				}
				}refeFish(){
				var currentFishCount=RoleInfoM.instance.getFcoin();
				var currentCoinCount=RoleInfoM.instance.getFcount();
				if (this._fishCount !=currentFishCount || this._coinCount !=currentCoinCount){
					this._fishCount=currentFishCount;
					this._coinCount=currentCoinCount;
					this.baseFishCount=RewardM.instance.baseFishCount();
					this.baseCoinCount=RewardM.instance.conditonValue(0);
					this.reardfishCount.value=RoleInfoM.instance.getFcoin()+"";
					this.nowcount.value=RoleInfoM.instance.getFcount()+"";
					this.startId=RewardM.instance.selectTab(RoleInfoM.instance.getFcoin());
					this.tabId=RewardM.instance.selectTab(RoleInfoM.instance.getFcoin());
					if (RoleInfoM.instance.getFcount()>=this.baseFishCount){
						this.tablist.selectedIndex=RewardM.instance.selectTab(RoleInfoM.instance.getFcoin());
						this.getData(RewardM.instance.rewardArr(this.tablist.selectedIndex));
						GameEventDispatch.instance.event("TypeChange",[this.typeArr[this.startId]]);
						}else{
					}
					if (RoleInfoM.instance.getFcount()>=this.baseFishCount && RoleInfoM.instance.getFcoin()>=this.baseCoinCount){
						this.isC=false;
						this.lotteryState();
						}else{
						this.checkState();
						this.isC=true;
					}
				}
			}
			//recevily();
			click(){}
			//tablist.selectedIndex=3;
			screenResize(){
				var contentWidth=1040;
				var contentHeight=636;
				var contentStartX=120;
				var contentStartY=54;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.closeBtn.left=contentStartX-posXOff;
				this.closeBtn.top=contentStartY-posYOff;
				}stopTime(){
				Laya.timer.clear(this,this.start);
				this.time.visible=false;
				}He(){
				this.hee.play(0,false);
				this.hee.on(Event.COMPLETE,this,this.heComplete);
				}heComplete(){
				this.time.visible=true;
				Laya.timer.loop(1000,this,this.start);
				GameEventDispatch.instance.event("HeClick");
				}start(){
				this._totalTime=this._totalTime-1;
				this.updateTime(this._totalTime);
				}updateTime(count){
				if (count==0){
					Laya.timer.clear(this,this.start);
					this.time.visible=false;
					this.cardArr[this.getIndex(5)].clickback();
				}
				this.time.text=count+"";
				}reveice(data){
				this.isChouComplete=true;
				this.checkState();
				this.reardfishCount.value=RoleInfoM.instance.getFcoin()+"";
				if (data.code==0){
					var imageUrl=RewardM.instance.imageUrl(data.id);
					var count=RewardM.instance.rewardCount(data.id);
					var goodsId=RewardM.instance.goodsId(data.id);
					var rewardName=RewardM.instance.rewardName(data.id);
					if (data.rep==1){
						var cfg=cfg_goods.instance(data.rep_id+"");
						imageUrl=cfg.icon;
						count=data.rep_count;
						goodsId=data.rep_id;
						rewardName=count+"金币";
					}
					this.closeBtn.mouseEnabled=true;
					var extraReward=ActivityM.instance.getRewardPageExtra(data.id);
					if (goodsId==60){
						var countFormat=ActivityM.instance.exchangeConversion(60,count);
						GameEventDispatch.instance.event("PlayCard",[data.id,imageUrl,countFormat,rewardName]);
						}else{
						GameEventDispatch.instance.event("PlayCard",[data.id,imageUrl,count,rewardName]);
					}
					if (extraReward && ActivityM.instance.isShowRewRebate){
						GameEventDispatch.instance.event("RewardTip",[[goodsId,extraReward[0]],[count,extraReward[1]]]);
						}else{
						GameEventDispatch.instance.event("RewardTip",[[goodsId],[count]]);
					}
					GameEventDispatch.instance.event("FinishReward");
					}else{
					this.closeBtn.mouseEnabled=true;
					GameEventDispatch.instance.event("MsgTp",22);
				}
			}
			//抽奖状态
			lotteryState(){
				this.isChou=true;
				this.notip.skin="ui/rewardPage/cjts.png";
				this.rewrarBtn.skin="ui/rewardPage/kaishi.png";
				this.nowcount.value=RoleInfoM.instance.getFcoin()+"";
				if (this.tabId >=6){
					this.allCount.value=RewardM.instance.conditionShowValue(this.startId)+"";
					this.chouTxt.skin=this.nameArr[this.startId];
					this.pro.value=1;
					}else{
					this.chouTxt.skin=this.nameArr[this.tabId];
					this.allCount.value=RewardM.instance.conditionShowValue(this.tabId)+"";
					this.pro.value=RoleInfoM.instance.getFcoin()/ RewardM.instance.conditonValue(this.tabId);
				}
			}
			//检查状态
			checkState(){
				this.isChou=false;
				this.recevily();
				this.allCount.value=this.baseFishCount+"";
				this.nowcount.value=RoleInfoM.instance.getFcount()+"";
				this.notip.skin="ui/rewardPage/yubuzu.png";
				this.rewrarBtn.skin="ui/rewardPage/button_jiang.png";
				this.chouTxt.skin="ui/rewardPage/jjy.png";
				this.pro.value=RoleInfoM.instance.getFcount()/ this.baseFishCount;
				}clickReward(){
				if (this.isChou){
					this.tablist.mouseEnabled=false;
					this.rewrarBtn.mouseEnabled=false;
					this.closeBtn.mouseEnabled=false;
					GameEventDispatch.instance.event("ZhenFan");
					}else{
					GameEventDispatch.instance.event("FishTypeC");
				}
				}initData(){
				this.boxArr=[this.box_0,this.box_1,this.box_2,this.box_3,this.box_4,this.box_5];
				this.beiArr=[this.bei_0,this.bei_1,this.bei_2,this.bei_3,this.bei_4,this.bei_5];
				this.backArr=[this.fan_0,this.fan_1,this.fan_2,this.fan_3,this.fan_4,this.fan_5];
				this.frontArr=[this.zhen_0,this.zhen_1,this.zhen_2,this.zhen_3,this.zhen_4,this.zhen_5];
				this.cardArr=[];
				for (var i=0;i < 6;i++){
					var card=new Card(this.boxArr[i],this.beiArr[i],this.backArr[i],this.frontArr[i]);
					this.cardArr.push(card);
				}
				}rewardSelect(index){
				}clickClose(){
				UiManager.instance.closePanel("RewardPage",true);
				}onSelect(index){
				if (index !=this.startId && this.isChou && this.isC==false){
					this.colrFilter();
					}else{
					this.recevily();
				}
				if (this.isC==false){
					this.chouTxt.skin=this.nameArr[index];
					this.allCount.value=RewardM.instance.conditionShowValue(index)+"";
					this.pro.value=RoleInfoM.instance.getFcoin()/ RewardM.instance.conditonValue(index);
				}
				GameEventDispatch.instance.event("TypeChange",[this.typeArr[index]]);
				this.getData(RewardM.instance.rewardArr(index));
				var arr=RewardM.instance.rewardArr(index);
			}
			//
			getData(arr){
				for (var i=0;i < this.cardArr.length;i++){
					(this.cardArr[i]).setInfo(arr[i]);
				}
				}colrFilter(){
				var grayscaleMat=[
				0.4,0.4,0.4,0,0,
				0.4,0.4,0.4,0,0,
				0.4,0.4,0.4,0,0,
				0,0,0,1,0];
				var grayscaleFilter=new ColorFilter(grayscaleMat);
				this.rewrarBtn.filters=[grayscaleFilter];
				this.rewrarBtn.mouseEnabled=false;
				}recevily(){
				this.rewrarBtn.filters=[];
				this.rewrarBtn.mouseEnabled=true;
				}register(){
				GameEventDispatch.instance.event("TypeChange",[this.typeArr[this.startId]]);
				GameEventDispatch.instance.on(String(15002),this,this.reveice);
				GameEventDispatch.instance.on("He",this,this.He);
				GameEventDispatch.instance.on("StopTime",this,this.stopTime);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("UpdateFish",this,this.updateFish);
				GameEventDispatch.instance.on("RefreshLotteryRecord",this,this.regfresh);
				}regfresh(){
				this.lotteryrecord();
				}updateFish(){
				this.refeFish();
				}unRegister(){
				Laya.timer.clear(this,this.refresh);
				GameEventDispatch.instance.off(String(15002),this,this.reveice);
				GameEventDispatch.instance.off("He",this,this.He);
				GameEventDispatch.instance.off("StopTime",this,this.stopTime);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("UpdateFish",this,this.updateFish);
				GameEventDispatch.instance.off("RefreshLotteryRecord",this,this.regfresh);
				Laya.timer.clear(this,this.start);
				if (this.cardArr !=null){
					for (var i=0;i < this.cardArr.length;i++){
						(this.cardArr[i]).clearCLik();
					}
				}
				this.cardArr=null;
				}getIndex(index){
				return Math.round(Math.random()*(index));
			}
		}

		view.rewardPage.RewardPageView=Laya.RewardPageView=RewardPageView;	
		

		class RewardTipView extends RewardTipUI{
			constructor (){
				super();
				//this.ani=null;
				//this._imageArr=null;
				//this._pointArr=null;
				//this.boxArr=null;
				//this._countArr=null;
				//this.soundPath=null;
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this._imageArr=RTipM.instance.ImageArr;
				this._pointArr=RTipM.instance.pointList;
				this._countArr=RTipM.instance.countArr;
				this.denImg.visible=RTipM.instance.isShow;
				this.updateData();
				this.start();
				this.soundPath=ConfigManager.getConfValue("cfg_global",1,"get_sound");
				this.confirmBtn.on(Event.CLICK,this,this.stop);
				this.playSound();
				this.screenResize();
				}playSound(){
				GameSoundManager.playSound(this.soundPath);
				}click(event){
				event.stopPropagation();
				this.stop();
				}screenResize(){
				this.confirmBtn.width=Laya.stage.width *2;
				this.confirmBtn.height=Laya.stage.height *2;
				this.size(Laya.stage.width,Laya.stage.height);
				}start(){
				for (var i=0;i < this.boxArr.length;i++){
					(this.boxArr[i]).start();
				}
				}updateData(){
				this.boxArr=[];
				for (var i=0;i < this._imageArr.length;i++){
					var rewardBox=new ReardBox(this._imageArr[i],this._pointArr[i],this,this._countArr[i]);
					this.boxArr.push(rewardBox);
				}
				}stop(){
				for (var i=0;i < this.boxArr.length;i++){
					(this.boxArr[i]).stop();
				}
				}register(){
				GameEventDispatch.instance.on("CloseRewardTip",this,this.closePanel);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}closePanel(){
				UiManager.instance.closePanel("RewardTip",false);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				SoundManager.stopSound(this.soundPath);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.rewardTip.RewardTipView=Laya.RewardTipView=RewardTipView;	
		

		class RuleView extends ruleUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.activityBox.visible=false;
				this.nomalBox.visible=false;
				this._startX=this.x;
				this._startY=this.y;
				if (ActivityM.instance.isShowSinceRebate){
					this.activityBox.visible=true;
					var awardArr=ActivityM.instance._getCommonActivityConfig(6)["award"];
					this.awardImg.skin=cfg_goods.instance(awardArr[0]).icon;
					this.award.text=awardArr[1]+"";
					}else{
					this.nomalBox.visible=true;
				}
				this.screenResize();
				}screenResize(){
				this.size(Laya.stage.width,Laya.stage.height);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				this.bmask.on(Event.CLICK,this,this.clickPanel);
				}clickPanel(){
				UiManager.instance.closePanel("Rule",false);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				this.off(Event.CLICK,this,this.clickPanel);
			}
		}

		view.rule.RuleView=Laya.RuleView=RuleView;	
		

		class SettingPage extends SettingPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				//this._code=null;
				this.canbeCode=true;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,null);
				this._startX=this.x;
				this._startY=this.y;
				this.logoutBox.visible=false;
				this.setting_img.height=400;
				this.logoutBtn.visible=false;
				this.wxlogoutBox.visible=false;
				this.quitWxlogoutBox.visible=false;
				if (RoleInfoM.instance.is_bind_tel){
					this.logoutBtn.visible=true;
					this.setting_img.height=428;
				}
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.bgmBar.changeHandler=new Handler(this,this.onBgmChange);
				this.musicBar.changeHandler=new Handler(this,this.onMucicChange);
				this.feedBtn.on(Event.CLICK,this,this.clickFeed);
				this.muteBtn.on(Event.CLICK,this,this.onMuteBtnClick);
				this.logoutBtn.on(Event.CLICK,this,this.onLogOutBtn);
				this.quitWxlogoutBox.on(Event.CLICK,this,this.onQuitWxlogoutBox);
				this.logoutCheck.on(Event.CLICK,this,this.onLogOutCheck);
				this.logoutReturn.on(Event.CLICK,this,this.onLogOutReturn);
				this.startLogOutBtn.on(Event.CLICK,this,this.onStartLogOutBtn);
				this.copyLineBtn.on(Event.CLICK,this,this.onCopyLineBtn);
				if (WxC.isInMiniGame()){
					this.exitGame.visible=true;
					this.exitGame.on(Event.CLICK,this,this.onExitGame);
				}
				else{
					this.exitGame.visible=false;
				}
				this.provider_tel.text=StartParam.instance.getParam("provider_tel")+"";
				this.giftcodeBtn.on(Event.CLICK,this,this.showWriteGiftCode);
				this.screenResize();
				}onLogOutReturn(){
				this.logoutBox.visible=false;
				}onLogOutCheck(){
				if (this.logoutCheck.selected){
					this.startLogOutBtn.disabled=false;
					}else{
					this.startLogOutBtn.disabled=true;
				}
				}onQuitWxlogoutBox(){
				this.wxlogoutBox.visible=false;
				this.quitWxlogoutBox.visible=false;
				}onLogOutBtn(){
				if (ExchangeM.instance._platform==2){
					if (!Browser.onPC){
						LoginC.isCanExit=false;
					}
					Browser.window.open("https://www.jjhgame.com/logoff/apply");
					}else{
					this.wxlogoutBox.visible=true;
					this.quitWxlogoutBox.visible=true;
				}
				}onCopyLineBtn(){
				WxC.wx_set_clipboard_data("https://www.jjhgame.com/logoff/apply");
				}onStartLogOutBtn(){
				if (this.logoutCheck.selected){
					WebSocketManager.instance.send(60007,null);
				}
				}showWriteGiftCode(){
				this.writegiftcode.visible=true;
				this.codequiteBtn.visible=true;
				this.codeconfirmBtn.on(Event.CLICK,this,this.onCodeConfirmClick);
				this.codequiteBtn.on(Event.CLICK,this,this.onCodeQuiteClick);
				}onCodeConfirmClick(){
				var _$this=this;
				this._code=this.writegiftInput.text;
				if (this._code.length==0){
					GameEventDispatch.instance.event("MsgTipContent","礼包码不能为空");
				}
				else if (this._code.length > 0 && this.canbeCode){
					this.canbeCode=false;
					WebSocketManager.instance.send(39000,{key:this._code});
					Laya.timer.once(2000,this,function(){
						_$this.canbeCode=true;
					});
				}
				}onCodeQuiteClick(){
				this.writegiftInput.text="";
				this.writegiftcode.visible=false;
				this.codequiteBtn.visible=false;
				}clickFeed(){
				UiManager.instance.loadView("FeedBack",null,"SMALL_TO_BIG");
				}onExitGame(){
				WxC.exitGame();
				}screenResize(){
				var contentWidth=600;
				var contentHeight=450;
				var contentStartX=340;
				var contentStartY=100;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				this.quitWxlogoutBox.left=contentStartX-posXOff;
				this.quitWxlogoutBox.top=contentStartY-posYOff;
				this.logoutReturn.left=contentStartX-posXOff;
				this.logoutReturn.top=contentStartY-posYOff;
				this.codequiteBtn.left=contentStartX-posXOff;
				this.codequiteBtn.top=contentStartY-posYOff;
				}onQuitBtnClick(){
				UiManager.instance.closePanel("Setting",true);
				}anchorPoint(){
				var soundVolume=SoundManager.soundVolume;
				var musicVolume=SoundManager.musicVolume;
				if (soundVolume > 0.5){
					}else if (soundVolume < 0.5){
				}
				if (musicVolume > 0.5){
					}else if (musicVolume < 0.5){
				}
			}
			//__JS__('_czc.push(["_trackEvent","背景音乐","降低","",musicVolume,""]);')
			unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				this.anchorPoint();
				if (ENV.isShowBannerAndAD()){
					if (WxC.isInMiniGame()){
						WxC.instance.hideBannerAD();
					}
				}
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				if (ENV.isShowBannerAndAD()&& WxC.compareVersion(WxC.wxSDKVersion,"2.0.6")>=0){
					if (WxC.isInMiniGame()&& WxC.compareVersion(WxC.wxSDKVersion,"2.0.6")>=0){
						this.setting_img.y=70;
						WxC.instance.showBannerAD();
						}else{
						this.setting_img.y=160;
					}
					}else{
					this.setting_img.y=160;
				}
				}isMute(){
				return !this.bgmBar.value && !this.musicBar.value;
				}setDefault(){
				SoundManager.setMusicVolume(0.5);
				SoundManager.setSoundVolume(0.5);
				this.bgmBar.value=0.5 *100;
				this.musicBar.value=0.5 *100;
				}setMute(){
				SoundManager.setMusicVolume(0);
				SoundManager.setSoundVolume(0);
				this.bgmBar.value=0;
				this.musicBar.value=0;
				}onMuteBtnClick(){
				if (this.isMute()){
					this.setDefault();
					}else{
					this.setMute();
				}
				this.setMuteBtn();
				}setMuteBtn(){
				if (this.isMute()){
					this.muteBtn.skin="ui/setting/close.png";
					}else{
					this.muteBtn.skin="ui/setting/open.png";
				}
				}onBgmChange(value){
				SoundManager.setMusicVolume(value / 100);
				this.setMuteBtn();
				}onMucicChange(value){
				SoundManager.setSoundVolume(value / 100);
				this.setMuteBtn();
			}
		}

		view.setting.SettingPage=Laya.SettingPage=SettingPage;	
		

		class SharePage extends SharePageUI{
			constructor (){
				super();
				//this._nameArr=null;
				//this._itemArr=null;
				//this._infoArr=null;
				//this._userInfoArr=null;
				//this._headArr=null;
				//this._headnameArr=null;
				this._roationArr=[0,45,90,135,180,225,270,315];
				this._targetRoation=0;
				//this._prizeId=NaN;
				//this._grayArr=null;
				this._isClick=true;
				this._lotteryTimes=-1;
				this.noCanLotteryTims=0;
				this._isClose=true;
				this._type=-1;
				this._isClickLock=true;
				this._goodsArr=[];
				this._countsArr=[];
				//this._everyItemArr=null;
				//this._everyNameArr=null;
				this.initItem();
				this.initHead();
				this.initEveryItem();
			}
			StartGames(parm=null){
				this.clickAble();
				this.isShowShare();
				this._isClose=true;
				this._isClick=true;
				this._isClickLock=true;
				this._infoArr=ShareM.instance.shareInfoArr;
				this.initEvent();
				this.startLottery.on(Event.CLICK,this,this.clicklottery);
				this.noLottery.on(Event.CLICK,this,this.clickNoLottery);
				this.initData();
				this.screenResize();
				this.clickLock();
				this.onQuitHelp();
				var accessToken=WxC.accessToken;
				this.closeBtn.on(Event.CLICK,this,this.clickClose);
				this.helpBtn.on(Event.CLICK,this,this.openHelpBox);
				this.quitHelp.on(Event.CLICK,this,this.onQuitHelp);
				this.list1.renderHandler=new Handler(this,this.updateHelp);
				this.list1.hScrollBarSkin="";
				ApiManager.instance.shareInfo(accessToken,Handler.create(this,this.share),null);
				}clickNoLottery(){
				this.clickBuyOne();
				}isShowShare(){
				if (WxC.isInMiniGame()){
					this.evShareBtn.visible=WxM.instance.isShow;
					this.ThreeBar.visible=WxM.instance.isShow;
					this.addActivityPointShow();
				}
				if (ConfigManager.items("cfg_shareLottery_rule").length !=0){
					this.helpBtn.visible=true;
					}else{
					this.helpBtn.visible=false;
				}
				}addActivityPointShow(){
				var vertical_h=10;
				var horizontal_percent=0.75;
				if (ActivityM.instance.isShowShareRebate){
					RedpointC.instance.removeActivityPoint(this.evShareBtn);
					RedpointC.instance.addActivityPointToIcon(this.evShareBtn,horizontal_percent,vertical_h,false);
					}else{
					RedpointC.instance.removeActivityPoint(this.evShareBtn);
				}
				}initEvent(){
				this.evShareBtn.on(Event.CLICK,this,this.clickShare);
				this.lockingBtn.on(Event.CLICK,this,this.clickLock);
				this.wildBtn.on(Event.CLICK,this,this.clickWild);
				this.buyOneBtn.on(Event.CLICK,this,this.clickBuyOne);
				this.buyTenBtn.on(Event.CLICK,this,this.clickBuyTen);
				}clickBuyTen(){
				var info=new QuitTipInfo();
				info.state=1;
				info.content=ConfigManager.getConfValue("cfg_tip",71,"txtContent");
				info.confirmMsg="BoomLotteryTen";
				info.autoCloseTime=10;
				GameEventDispatch.instance.event("QuitTip",info);
				}openHelpBox(){
				this.helpBoxMask.visible=true;
				this.helpBox.visible=true;
				this.quitHelp.visible=true;
				this.list1.refresh();
				}onQuitHelp(){
				this.helpBox.visible=false;
				this.helpBoxMask.visible=false;
				this.quitHelp.visible=false;
				}updateHelp(cell,index){
				var date=cell.dataSource;
				var ele_icon=cell.getChildByName("icon");
				var ele_pro=cell.getChildByName("pro");
				var ele_desc=cell.getChildByName("desc");
				ele_icon.skin=cfg_goods.instance(date.id).icon;
				ele_pro.text=date.pro;
				ele_desc.text=date.desc;
				}boomLotteryTen(){
				this.clickUnable();
				var cs=new C2s_34004();
				cs.count=10;
				cs.type=this._type;
				WebSocketManager.instance.send(34004,cs);
				}clickUnable(){
				this.evShareBtn.mouseEnabled=false;
				this.lockingBtn.mouseEnabled=false;
				this.wildBtn.mouseEnabled=false;
				this.buyOneBtn.mouseEnabled=false;
				this.buyTenBtn.mouseEnabled=false;
				this.closeBtn.mouseEnabled=false;
				this.startLottery.mouseEnabled=false;
				this.noLottery.mouseEnabled=false;
				}clickAble(){
				this.evShareBtn.mouseEnabled=true;
				this.lockingBtn.mouseEnabled=true;
				this.wildBtn.mouseEnabled=true;
				this.buyOneBtn.mouseEnabled=true;
				this.closeBtn.mouseEnabled=true;
				this.startLottery.mouseEnabled=true;
				this.buyTenBtn.mouseEnabled=true;
				this.noLottery.mouseEnabled=true;
				}clickBuyOne(){
				var info=new QuitTipInfo();
				info.state=1;
				info.content=ConfigManager.getConfValue("cfg_tip",71,"txtContent");
				info.confirmMsg="BoomLotteryOne";
				info.autoCloseTime=10;
				GameEventDispatch.instance.event("QuitTip",info);
				}boomLotteryOne(){
				this.clickUnable();
				var cs=new C2s_34004();
				cs.count=1;
				cs.type=this._type;
				WebSocketManager.instance.send(34004,cs);
				}clickShare(){
				this.hideAll();
				this.helpBtn.visible=false;
				this.evShareBtn.selected=true;
				this.userImg.visible=true;
				this.startLottery.visible=true;
				this.panBox.visible=true;
				this.Sharelabel.visible=true;
				this.ThreeBar.visible=true;
				}clickLock(){
				this.hideAll();
				this.helpBtn.visible=true;
				this.oneBar.visible=true;
				this.lockingBtn.selected=true;
				this.buyBox.visible=true;
				this.noLottery.visible=true;
				this.everyBox.visible=true;
				this._type=1;
				this.onePrize.text="50000";
				this.tenPrize.text="500000";
				this.lockData();
				this.lockinglabel.visible=true;
				var help_arr=[];
				var cfg=ConfigManager.items("cfg_shareLottery_rule");
				for (var i=0;i < cfg.length;i++){
					if (cfg[i].lottry_id==1){
						help_arr.push({
							id:cfg[i].rewardId,
							pro:cfg[i].lottry_probability,
							desc:cfg[i].lottry_description
						});
					}
				}
				this.list1.array=help_arr;
				}clickWild(){
				this.hideAll();
				this.helpBtn.visible=true;
				this.TwoBar.visible=true;
				this.wildBtn.selected=true;
				this.buyBox.visible=true;
				this.noLottery.visible=true;
				this.everyBox.visible=true;
				this._type=2;
				this.wildData();
				this.onePrize.text="500000";
				this.tenPrize.text="5000000";
				this.wildlabel.visible=true;
				var help_arr=[];
				var cfg=ConfigManager.items("cfg_shareLottery_rule");
				for (var i=0;i < cfg.length;i++){
					if (cfg[i].lottry_id==2){
						help_arr.push({
							id:cfg[i].rewardId,
							pro:cfg[i].lottry_probability,
							desc:cfg[i].lottry_description
						});
					}
				}
				this.list1.array=help_arr;
				}hideAll(){
				this.evShareBtn.selected=false;
				this.lockingBtn.selected=false;
				this.wildBtn.selected=false;
				this.oneBar.visible=false;
				this.TwoBar.visible=false;
				this.ThreeBar.visible=false;
				this.buyBox.visible=false;
				this.userImg.visible=false;
				this.startLottery.visible=false;
				this.noLottery.visible=false;
				this.panBox.visible=false;
				this.everyBox.visible=false;
				this.Sharelabel.visible=false;
				this.lockinglabel.visible=false;
				this.wildlabel.visible=false;
				}clickClose(){
				if (this._isClose){
					UiManager.instance.closePanel("Share",false);
				}
				}clicklottery(){
				if (this._isClick==true){
					WebSocketManager.instance.send(34000,null);
					this.clickUnable();
					this._isClick=false;
				}
				}initHead(){
				this._headArr=[];
				this._headnameArr=[this.head_1,this.head_2,this.head_3,this.head_4,this.head_5];
				for (var i=0;i < this._headnameArr.length;i++){
					var head=new Head(this._headnameArr[i]);
					this._headArr.push(head);
				}
				}initItem(){
				this._itemArr=[];
				this._nameArr=[this.item_1,this.item_2,this.item_3,this.item_4,this.item_5,this.item_6,this.item_7,this.item_8];
				for (var i=0;i < this._nameArr.length;i++){
					var item=new Item(this._nameArr[i]);
					this._itemArr.push(item);
				}
				}initEveryItem(){
				this._everyItemArr=[];
				this._everyNameArr=[this.everyItem_1,this.everyItem_2,this.everyItem_3,this.everyItem_4,this.everyItem_5,this.everyItem_6,this.everyItem_7,this.everyItem_8];
				for (var i=0;i < this._everyNameArr.length;i++){
					var everyItem=new EveryItem(this._everyNameArr[i]);
					this._everyItemArr.push(everyItem);
				}
				}initData(){
				for (var i=0;i < this._itemArr.length;i++){
					(this._itemArr[i]).setItemInfo(this._infoArr[i]);
				}
				}lockData(){
				for (var i=0;i < this._everyItemArr.length;i++){
					(this._everyItemArr[i]).setItemInfo(this._infoArr[i],1);
				}
				}wildData(){
				for (var i=0;i < this._everyItemArr.length;i++){
					for (var i=0;i < this._everyItemArr.length;i++){
						(this._everyItemArr[i]).setItemInfo(this._infoArr[i],2);
					}
				}
				}clickTwo(){
				UiManager.instance.closePanel("Share",false);
				}share(obj){
				this._userInfoArr=[];
				this._grayArr=[];
				var noCanLotteryTims=0;
				if (obj["code"]=="success"){
					this._userInfoArr=obj["data"]["invited_user"];
					this._grayArr=obj["data"]["prize_ids"];
					this._lotteryTimes=obj["data"]["can_lottery_times"];
				}
				if (this._userInfoArr==null){
					this._userInfoArr=[];
				}
				if (this._grayArr==null){
					this._grayArr=[];
				}
				for (var i=0;i < 5;i++){
					(this._headArr[i]).setHeadInfo(this._userInfoArr[i]);
				}
				for (var i=0;i < this._grayArr.length;i++){
					var prizeId=this._grayArr[i];
					for (var j=0;j < 8;j++){
						if (this._itemArr[j].id==prizeId){
							this._itemArr[j].isDray();
						}
					}
				}
				if (this._userInfoArr.length > 0){
					noCanLotteryTims=this._userInfoArr.length-this._lotteryTimes;
					if (noCanLotteryTims > 0){
						for (var i=0;i < noCanLotteryTims;i++){
							(this._headArr[i]).haveLottery();
						}
					}
				}
				}tranTarget(id){
				var index=id-1;
				this._targetRoation=this._roationArr[index];
				var firstRoation=this.panBox.rotation+1000;
				Tween.to(this.panBox,{rotation:firstRoation},700,null,Handler.create(this,this.complete));
				}complete(){
				var secondRoation=this.panBox.rotation+800;
				Tween.to(this.panBox,{rotation:secondRoation},700,null,Handler.create(this,this.Oncomplete));
				}Oncomplete(){
				var thirdRaotion=this.panBox.rotation+600;
				Tween.to(this.panBox,{rotation:thirdRaotion},700,null,Handler.create(this,this.twocomplete));
				}twocomplete(){
				var n=Math.floor(this.panBox.rotation / 360);
				var currentRoation=this.panBox.rotation;
				var targetRoation=(n+2)*360+this._targetRoation;
				Tween.to(this.panBox,{rotation:targetRoation},700,null,Handler.create(this,this.threecomplete));
				}threecomplete(){
				this._isClose=true;
				this.clickAble();
				var c2s=new C2s_34002();
				c2s.prize_id=this._prizeId;
				WebSocketManager.instance.send(34002,c2s);
				}screenResize(){
				this.helpBoxMask.width=Laya.stage.width *2;
				this.helpBoxMask.height=Laya.stage.height *2;
				this.bgMask.width=Laya.stage.width *2;
				this.bgMask.height=Laya.stage.height *2;
				this.size(Laya.stage.width,Laya.stage.height);
				}showLottery(msg){
				this._isClick=true;
				if (msg.code==0){
					this.noCanLotteryTims=this.noCanLotteryTims+1;
					if (this.noCanLotteryTims > 0){
						for (var i=0;i < this.noCanLotteryTims;i++){
							(this._headArr[i]).haveLottery();
						}
					};
					var prizeId=msg["prize_id"];
					for (var i=0;i < this._itemArr.length;i++){
						if ((this._itemArr[i]).id==prizeId){
							(this._itemArr[i]).isDray();
						}
					};
					var goodsId=ShareM.instance.getGoodsId(prizeId);
					var count=ShareM.instance.count(prizeId);
					GameEventDispatch.instance.event("RewardTip",[[goodsId],[count]]);
				}
				}lotteryComplete(msg){
				if (msg.code==0){
					this._isClose=false;
					this._prizeId=msg["prize_id"];
					this.tranTarget(this._prizeId);
					}else if (msg.code==1){
					this._isClick=true;
					this.clickAble();
					}else if (msg.code==2){
					this._isClick=true;
					this.clickAble();
					GameEventDispatch.instance.event("MsgTipContent","今日抽奖次数已达到上限，请明日再来");
					}else if (msg.code==3){
					this._isClick=true;
					this.clickAble();
					GameEventDispatch.instance.event("MsgTipContent","抽奖次数不够，邀请好友可获得更多抽奖次数");
				}
				else if (msg.code==100){
					this.clickAble();
					this._isClick=true;
					}else{
					this.clickAble();
					this._isClick=true;
				}
				}register(){
				GameEventDispatch.instance.on(String(34001),this,this.lotteryComplete);
				GameEventDispatch.instance.on(String(34003),this,this.showLottery);
				GameEventDispatch.instance.on(String(34005),this,this.startZhuan);
				GameEventDispatch.instance.on(String(34007),this,this.getReward);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("BoomLotteryOne",this,this.boomLotteryOne);
				GameEventDispatch.instance.on("BoomLotteryTen",this,this.boomLotteryTen);
				}unRegister(){
				GameEventDispatch.instance.off(String(30001),this,this.lotteryComplete);
				GameEventDispatch.instance.off(String(34003),this,this.showLottery);
				GameEventDispatch.instance.off(String(34005),this,this.startZhuan);
				GameEventDispatch.instance.off(String(34007),this,this.getReward);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("BoomLotteryOne",this,this.boomLotteryOne);
				GameEventDispatch.instance.off("BoomLotteryTen",this,this.boomLotteryTen);
				}startRaote(){
				}getReward(msg){
				if (msg.code==0){
					var goodsArr=msg["reward_item_ids"];
					var countsArr=msg["reward_item_nums"];
					GameEventDispatch.instance.event("RewardTip",[goodsArr,countsArr]);
				}
				}roateTarget(id){
				var firstRoation=this.everyBox.rotation+500;
				Tween.to(this.everyBox,{rotation:firstRoation},375,null,Handler.create(this,this.Everycomplete));
				}Everycomplete(){
				var secondRoation=this.everyBox.rotation+400;
				Tween.to(this.everyBox,{rotation:secondRoation},375,null,Handler.create(this,this.EveryOncomplete));
				}EveryOncomplete(){
				var thirdRaotion=this.everyBox.rotation+300;
				Tween.to(this.everyBox,{rotation:thirdRaotion},375,null,Handler.create(this,this.Everytwocomplete));
				}Everytwocomplete(){
				var n=Math.floor(this.everyBox.rotation / 360);
				var currentRoation=this.everyBox.rotation;
				var targetRoation=(n+2)*360+45;
				GameEventDispatch.instance.event("RewardTip",[this._goodsArr,this._countsArr]);
				Tween.to(this.everyBox,{rotation:targetRoation},375,null,Handler.create(this,this.Everythreecomplete));
				}Everythreecomplete(){
				this.clickAble();
			}
			//WebSocketManager.instance.send(34006,null);
			startZhuan(msg){
				if (msg.code==0){
					this._countsArr=msg["reward_item_nums"];
					this._goodsArr=msg["reward_item_ids"];
					this.roateTarget(3);
					}else if (msg.code==1){
					this.clickAble();
					}else if (msg.code==2){
					this.clickAble();
					GameEventDispatch.instance.event("Shop","tab_coin");
					}else if (msg.code==3){
					this.clickAble();
					}else if (msg.code==99){
					}else if (msg.code==100){
				}
			}
		}

		view.share.SharePage=Laya.SharePage=SharePage;	
		

		class ShopPage extends ShopPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.giftUserId=null;
				//this.shop_uid=null;
				this.adItemId=23245255;
			}
			StartGames(parm=null){
				if (WxC.isInMiniGame()){
					ShopC.instance.sendSyncMiniBalance();
				}
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,null);
				this._startX=this.x;
				this._startY=this.y;
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.list1.renderHandler=new Handler(this,this.updateItem);
				this.list_card.renderHandler=new Handler(this,this.updateCardItem);
				this.list_card.hScrollBarSkin="";
				this.tab_coin.on(Event.CLICK,this,this.onTabCoinClick);
				this.tab_diamond.on(Event.CLICK,this,this.onTabDiamondClick);
				this.tab_skin.on(Event.CLICK,this,this.onTabSkinClick);
				this.tab_package.on(Event.CLICK,this,this.onTabPackageClick);
				if (WxC.isMiniLayout()){
					this.tab_extra.visible=false;
					this.tab_mini.visible=true;
					this.tab_mini.on(Event.CLICK,this,this.onTabMiniClick);
					this.boxYuanbao.visible=true;
					}else{
					this.tab_extra.visible=true;
					this.tab_mini.visible=false;
					this.boxYuanbao.visible=false;
				}
				this.onSelect(parm)();
				this.updateProfile();
				this.showRedPoint();
				this.shop_uid=this.genShopUid();
				this.screenResize();
				}genShopUid(){
				var ts=new Date().getTime()+"";
				return ts+1000+Math.floor(Math.random()*8999)+""
				}onTabCoinClick(){
				this.onRefresh('tab_coin');
				}onTabDiamondClick(){
				this.onRefresh('tab_diamond');
				}onTabSkinClick(){
				this.onRefresh('tab_skin');
				}onTabPackageClick(){
				this.onRefresh('tab_package');
				}onTabMiniClick(){
				this.onRefresh('tab_mini');
				}selectTab(tab_name){
				var dic;
				if (WxC.isInMiniGame()){
					dic={
						tab_skin:this.tab_skin,
						tab_diamond:this.tab_diamond,
						tab_coin:this.tab_coin,
						tab_package:this.tab_package,
						tab_mini:this.tab_mini
					};
					}else{
					dic={
						tab_skin:this.tab_skin,
						tab_diamond:this.tab_diamond,
						tab_coin:this.tab_coin,
						tab_package:this.tab_package
					};
				}
				this.clearSelect();
				var target=dic[tab_name];
				if (target==null){
					return;
				}
				target.selected=true;
				}clearSelect(){
				if (WxC.isInMiniGame()){
					this.tab_mini.selected=false;
				}
				this.tab_coin.selected=false;
				this.tab_diamond.selected=false;
				this.tab_skin.selected=false;
				this.tab_package.selected=false;
				}screenResize(){
				var contentWidth=1070;
				var contentHeight=650;
				var contentStartX=110;
				var contentStartY=30;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				}is_show_month_card(item){
				if (RoleInfoM.instance.haveValidMonthCard()){
					if (item.card_type==1){
						return true
						}else{
						return true
						if (RoleInfoM.instance.getMonthCard()[item.id]){
							return !RoleInfoM.instance.getMonthCard()[item.id].is_expired
						}
					}
					}else{
					return item.card_type==0
				}
				}need_show_single_item(item){
				if (item.is_single_buy==1){
					return RoleInfoM.instance.getPurchasedItems().indexOf(item.id)< 0
					}else{
					return true;
				}
				}onSelect(tab_name){
				var _$this=this;
				return function (){
					_$this.selectTab(tab_name);
					_$this.list1.visible=true;
					_$this.list_card.visible=false;
					if (tab_name=="tab_skin"){
						var skins=RoleInfoM.instance.getSkins();
						_$this.list1.array=ConfigManager.filter("cfg_commodity",function(item){
							if (item.activity=='worldcup2'){
								if (ActivityM.instance.worldCupActivityBatteryCanBuy()&& skins.indexOf(item.item_id)< 0){
									return true
									}else{
									return false
								}
								}else{
								return item.tab=="tab_skin" && skins.indexOf(item.item_id)< 0 && _$this.need_show_single_item(item)
							}
						});
						}else if (tab_name=="tab_coin"){
						var cfgs=ConfigManager.filter("cfg_commodity",function(item){
							return item.tab=="tab_coin" && _$this.need_show_single_item(item)
						});
						if (ENV.isShowBannerAndAD()&& WxC.compareVersion(WxC.wxSDKVersion,"2.0.6")>=0){
							var cfg=new cfg_commodity();
							var cfg_g=cfg_global.instance(1);
							cfg.img="ui/common/coin2.png";
							cfg.item_label=cfg_g.watchAdRewardNums[0]+"金币";
							cfg.id=_$this.adItemId;
							cfg.extra_item_count=1;
							cfg.extra_item_text="观看视频即可领取";
							cfg.mini_currency_amount=cfg_g.watchAdRewardNums[0];
							cfg.mini_currency_id=1;
							cfgs.unshift(cfg);
						}
						_$this.list1.array=cfgs;
						}else if (tab_name=="tab_package"){
						_$this.list1.visible=false;
						_$this.list_card.visible=true;
						_$this.list_card.array=ConfigManager.filter("cfg_commodity",
						function(item){
							return item.tab=="tab_package" && _$this.need_show_single_item(item)&& _$this.is_show_month_card(item)
						});
						}else if (tab_name=="tab_diamond"){
						_$this.list1.array=ConfigManager.filter("cfg_commodity",function(item){
							return item.tab=="tab_diamond" && _$this.need_show_single_item(item)
						});
						}else if (tab_name=="tab_mini"){
						_$this.list1.array=ConfigManager.filter("cfg_commodity",function(item){
							return item.tab=="tab_mini" && _$this.need_show_single_item(item)
						});
					}
				}
				}updateItemReward(cell,index){
				var ele_reward_img=cell.getChildByName("reward_type");
				var ele_reward_text=cell.getChildByName("reward_text");
				var data=cell.dataSource;
				ele_reward_img.skin=cfg_goods.instance(data.reward_item_id+"").icon;
				ele_reward_text.text='x '+data.reward_item_num;
				}updateCardItem(cell,index){
				var config=cell.dataSource;
				var ele_price=cell.getChildByName("price");
				var ele_price_unit=cell.getChildByName("price_unit");
				var ele_accept=cell.getChildByName("accept");
				var ele_remaining=cell.getChildByName("remain_day");
				var ele_btn=cell.getChildByName("btn");
				var ele_txt=cell.getChildByName("txt");
				var common_img=cell.getChildByName("common");
				var common_num=common_img.getChildByName("common_num");
				ele_btn.offAll(Event.CLICK);
				if (WxC.isInMiniGame()){
					ele_price.value=Math.ceil(config.mini_currency_amount / LoginInfoM.instance.getShopRate());
					}else{
					ele_price.value=Math.ceil(config.currency_amount / LoginInfoM.instance.getShopRate());
				}
				cell.getChildByName("card_title").skin=config.card_title;
				var list_reward=cell.getChildByName("list_reward");
				var month_card=RoleInfoM.instance.getMonthCard();
				var card=month_card[config.id];
				ele_accept.visible=false;
				ele_remaining.visible=false;
				ele_price.visible=false;
				ele_price_unit.visible=false;
				var obj=ActivityM.instance._getCommonActivityConfig(1);
				var shop_extra=null;
				if (obj){
					shop_extra=obj["month_card_daily_extra"];
				}
				if (ActivityM.instance.isShowShopRebate && shop_extra && shop_extra.length>1){
					ele_txt.visible=true;
					if (config.id==18){
						ele_txt.visible=false;
						common_img.visible=true;
						common_img.skin=cfg_goods.instance(shop_extra[0]+"").icon;
						common_num.value="x "+shop_extra[1];
						}else{
						common_img.visible=false;
						ele_txt.text="活动期间每天送活动券*"+shop_extra[1];
					}
					}else{
					common_img.visible=false;
					ele_txt.text=config.card_detail;
				};
				var have_buy=false;
				if (!card){
					ele_price.visible=true;
					ele_price_unit.visible=true;
					ele_btn.on(Event.CLICK,this,function(){
						if (WxC.isInMiniGame()){
							if (RoleInfoM.instance.mini_balance >=config.mini_currency_amount){
								if (config.card_type==1){
									GameEventDispatch.instance.event("ShopBuy",config);
									}else{
									UiManager.instance.closePanel("Shop",false);
									UiManager.instance.loadView("MonthCard",{"id":config.id},"SMALL_TO_BIG");
								}
								}else{
								if (Browser.onIOS){
									ele_btn.on(Event.CLICK,this,function(){
										GameEventDispatch.instance.event("MsgTp",47);
									});
									}else{
									if (config.card_type==1){
										GameEventDispatch.instance.event("ShopBuy",config);
										}else{
										UiManager.instance.closePanel("Shop",false);
										UiManager.instance.loadView("MonthCard",{"id":config.id},"SMALL_TO_BIG");
									}
								}
							}
							}else{
							UiManager.instance.closePanel("Shop",false);
							UiManager.instance.loadView("MonthCard",{"id":config.id},"SMALL_TO_BIG");
						}
					});
					}else{
					if (card.can_accept){
						ele_accept.visible=true;
						ele_btn.on(Event.CLICK,this,this.onAcceptMonthCardReward(config));
						have_buy=true;
						}else if (!card.is_expired){
						ele_remaining.visible=true;
						ele_remaining.text="还剩余"+card.left+"天";
						have_buy=true;
						}else{
						ele_price.visible=true;
						ele_price_unit.visible=true;
						ele_btn.on(Event.CLICK,this,function(){
							UiManager.instance.closePanel("Shop",false);
							UiManager.instance.loadView("MonthCard",{"id":config.id},"SMALL_TO_BIG");
						});
					}
				}
				list_reward.renderHandler=new Handler(this,this.updateItemReward);
				if (have_buy){
					var rewards=[];
					for (var i=0;i < config.good_ids.length;i++){
						rewards.push({
							reward_item_id:config.good_ids[i],
							reward_item_num:config.good_nums[i]
						});
					}
					list_reward.array=rewards;
					}else{
					var rewards=[];
					for (var i=0;i < config.good_ids.length;i++){
						rewards.push({
							reward_item_id:config.good_ids[i],
							reward_item_num:config.good_nums[i]
						});
					}
					list_reward.array=rewards;
				}
				if (rewards.length==1){
					list_reward.pivotX=-50;
					}else{
					list_reward.pivotX=0;
				}
			}
			// 商店活动额外奖励
			updateActivitySide(cell){
				var config=cell.dataSource;
				var bomb_img=cell.getChildByName("bomb");
				var bomb_num=bomb_img.getChildByName("bomb_num");
				var bombGift=ActivityM.instance.getShopExtraArrByShopId(config.id,'bomb');
				if (bombGift && ActivityM.instance.activityIsActive('bomb')){
					bomb_img.visible=true;
					bomb_img.skin=cfg_goods.instance(bombGift[0]+"").icon;
					bomb_num.value="x "+bombGift[1];
					}else{
					bomb_img.visible=false;
				};
				var bonus_img=cell.getChildByName("bonus");
				var bonus_num=bonus_img.getChildByName("bonus_num");
				var giftArr=ActivityM.instance.getShopExtraArrByShopId(config.id,'bonus');
				if (giftArr && ActivityM.instance.activityIsActive('bonus')){
					bonus_img.visible=true;
					bonus_img.skin=cfg_goods.instance(giftArr[0]+"").icon;
					bonus_num.value="x "+giftArr[1];
					}else{
					bonus_img.visible=false;
				};
				var activity_img=cell.getChildByName("activity");
				var activity_num=activity_img.getChildByName("activity_num");
				var giftArr=ActivityM.instance.getShopExtraArrByShopId(config.id,'worldcup2');
				if (giftArr && ActivityM.instance.activityIsActive('worldcup2')){
					activity_img.visible=true;
					activity_img.skin=cfg_goods.instance(giftArr[0]+"").icon;
					activity_num.value="x "+giftArr[1];
					}else{
					activity_img.visible=false;
				};
				var common_img=cell.getChildByName("common");
				var common_num=common_img.getChildByName("common_num");
				var giftArr=ActivityM.instance.getShopExtraArrByShopId(config.id,'multi_at');
				if (giftArr && ActivityM.instance.isShowShopRebate){
					common_img.visible=true;
					common_img.skin=cfg_goods.instance(giftArr[0]+"").icon;
					common_num.value="x "+giftArr[1];
					}else{
					common_img.visible=false;
				}
				}updateShopBuyBtn(cell){
				var _$this=this;
				var config=cell.dataSource;
				var ele_buy_btn=cell.getChildByName("btn");
				ele_buy_btn.offAll(Event.CLICK);
				var can_buy=true;
				if (config.activity=='worldcup2'){
					can_buy=ActivityM.instance.worldCupActivityBatteryCanBuy();
					}else{
					can_buy=true;
				}
				if (!can_buy){
					ele_buy_btn.gray=true;
					ele_buy_btn.on(Event.CLICK,this,function(){
						GameEventDispatch.instance.event("MsgTipContent","无法购买");
					});
					}else{
					if (WxC.isInMiniGame()){
						if (config.tab=="tab_mini"){
							if (Browser.onIOS){
								ele_buy_btn.on(Event.CLICK,this,function(){
									GameEventDispatch.instance.event("MsgTp",47);
								});
								}else{
								ele_buy_btn.on(Event.CLICK,this,function(){
									var info=new QuitTipInfo();
									info.state=1;
									info.content="确认购买？";
									info.confirmMsg="ShopBuy";
									info.conFirmArgs=config;
									info.autoCloseTime=10;
									info.confirmCallback=Handler.create(this,function(){
										BuriedManager.instance.addBuriedData(
										2,
										{id:config.id,status:1,shop_uid:_$this.shop_uid});
									});
									info.cancelCallback=Handler.create(this,function(){
										BuriedManager.instance.addBuriedData(
										3,
										{id:config.id,status:1,shop_uid:_$this.shop_uid});
									});
									if (CertificationM.instance.isOpenCertification()){
										var certInfo=new CertificationInfo();
										certInfo.openFrom="shop";
										certInfo.quitInfo=info;
										CertificationM.instance.info=certInfo;
										CertificationM.instance.OpenCertification();
										}else{
										GameEventDispatch.instance.event("QuitTip",info);
									}
									BuriedManager.instance.addBuriedData(
									1,
									{id:config.id,status:1,shop_uid:_$this.shop_uid});
								});
							}
							}else{
							if (RoleInfoM.instance.mini_balance >=config.mini_currency_amount){
								ele_buy_btn.on(Event.CLICK,this,function(){
									var info=new QuitTipInfo();
									info.state=1;
									info.content="确认购买？";
									info.confirmMsg="ShopBuy";
									info.conFirmArgs=config;
									info.autoCloseTime=10;
									info.confirmCallback=Handler.create(this,function(){
										BuriedManager.instance.addBuriedData(
										2,
										{id:config.id,status:1,shop_uid:_$this.shop_uid});
									});
									info.cancelCallback=Handler.create(this,function(){
										BuriedManager.instance.addBuriedData(
										3,
										{id:config.id,status:1,shop_uid:_$this.shop_uid});
									});
									if (CertificationM.instance.isOpenCertification()){
										var certInfo=new CertificationInfo();
										certInfo.openFrom="shop";
										certInfo.quitInfo=info;
										CertificationM.instance.info=certInfo;
										CertificationM.instance.OpenCertification();
										}else{
										GameEventDispatch.instance.event("QuitTip",info);
									}
									BuriedManager.instance.addBuriedData(
									1,
									{id:config.id,status:1,shop_uid:_$this.shop_uid});
								});
								}else{
								if (Browser.onIOS){
									ele_buy_btn.on(Event.CLICK,this,function(){
										GameEventDispatch.instance.event("MsgTp",47);
									});
									}else{
									ele_buy_btn.on(Event.CLICK,this,function(){
										var infoTxt="您仍需购买"+WxC.getMiniPayAmount(config)+"集结币";
										var info=new QuitTipInfo();
										info.state=1;
										info.content=infoTxt;
										if (ENV.channelType==3){
											info.content=info.content.replace("集结币","元宝");
										}
										info.confirmMsg="ShopBuy";
										info.conFirmArgs=config;
										info.autoCloseTime=10;
										info.confirmCallback=Handler.create(this,function(){
											BuriedManager.instance.addBuriedData(
											2,
											{id:config.id,status:1,shop_uid:_$this.shop_uid});
										});
										info.cancelCallback=Handler.create(this,function(){
											BuriedManager.instance.addBuriedData(
											3,
											{id:config.id,status:1,shop_uid:_$this.shop_uid});
										});
										if (CertificationM.instance.isOpenCertification()){
											var certInfo=new CertificationInfo();
											certInfo.openFrom="shop";
											certInfo.quitInfo=info;
											CertificationM.instance.info=certInfo;
											CertificationM.instance.OpenCertification();
											}else{
											GameEventDispatch.instance.event("QuitTip",info);
										}
										BuriedManager.instance.addBuriedData(
										1,
										{id:config.id,status:1,shop_uid:_$this.shop_uid});
									});
								}
							}
						}
						}else{
						ele_buy_btn.on(Event.CLICK,this,function(){
							var info=new QuitTipInfo();
							info.state=1;
							info.content="确认购买？";
							info.confirmMsg="ShopBuy";
							info.conFirmArgs=config;
							info.autoCloseTime=10;
							info.confirmCallback=Handler.create(this,function(){
								BuriedManager.instance.addBuriedData(
								2,
								{id:config.id,status:1,shop_uid:_$this.shop_uid});
							});
							info.cancelCallback=Handler.create(this,function(){
								BuriedManager.instance.addBuriedData(
								3,
								{id:config.id,status:1,shop_uid:_$this.shop_uid});
							});
							if (CertificationM.instance.isOpenCertification()){
								var certInfo=new CertificationInfo();
								certInfo.openFrom="shop";
								certInfo.quitInfo=info;
								CertificationM.instance.info=certInfo;
								CertificationM.instance.OpenCertification();
								}else{
								GameEventDispatch.instance.event("QuitTip",info);
							}
							BuriedManager.instance.addBuriedData(
							1,
							{id:config.id,status:1,shop_uid:_$this.shop_uid});
						});
					}
				}
				}updateItem(cell,index){
				var config=cell.dataSource;
				var dic={
					1:{price_unit:"ui/common_ex/unit_coin.png",unit:"金币"},
					4:{price_unit:"ui/common_ex/unit_diamond.png",unit:"钻石"},
					5:{price_unit:"ui/common_ex/unit_rmb.png",unit:"人民币"},
					100:{price_unit:"ui/common/icon_yuanbao.png",unit:"集结币"}
				};
				var currency_id=NaN;
				if (WxC.isInMiniGame()){
					currency_id=config.mini_currency_id;
					}else{
					currency_id=config.currency_id;
				};
				var gift_text=cell.getChildByName("gift_text");
				gift_text.text="";
				if (RoleInfoM.instance.getPurchasedItems().indexOf(config.id)> 0){
					if (config.extra_item_count > 0){
						gift_text.text=config.extra_item_text;
						}else{
						gift_text.text="";
					}
					}else{
					if (config.first_buy_gift_count > 0){
						gift_text.text=config.first_buy_text;
						}else if (config.extra_item_count > 0){
						gift_text.text=config.extra_item_text;
						}else{
						gift_text.text="";
					}
				};
				var price_text=cell.getChildByName("price_text");
				var ad_times=cell.getChildByName("ad_times");
				var price_unit=cell.getChildByName("price_unit");
				var price=cell.getChildByName("price");
				var bg_img=cell.getChildByName("bg");
				price_text.text=config.item_label;
				if (ENV.channelType==3){
					price_text.text=price_text.text.replace("集结币","元宝");
				}
				price_unit.skin=dic[currency_id].price_unit;
				if (WxC.isInMiniGame()){
					price.value=""+Math.ceil(config.mini_currency_amount / LoginInfoM.instance.getShopRate());
					}else{
					price.value=""+Math.ceil(config.currency_amount / LoginInfoM.instance.getShopRate());
				}
				this.updateActivitySide(cell);
				ad_times.visible=false;
				price_unit.visible=false;
				price.visible=false;
				var isAddItem=config.id==this.adItemId;
				if (isAddItem){
					bg_img.skin="ui/shop/bg_ad.png";
					ad_times.visible=true;
					ad_times.text="领取("+AdM.instance.watch_times+"/"+AdM.instance.total_times+")";
					}else{
					bg_img.skin="ui/shop/item_bg.png";
					price_unit.visible=true;
					price.visible=true;
				};
				var ele_img=cell.getChildByName("img");
				ele_img.skin=config.img;
				var side_img=cell.getChildByName("side");
				if (config.sidebar_img){
					side_img.visible=true;
					side_img.skin=config.sidebar_img;
					}else{
					side_img.visible=false;
				}
				cell.offAll(Event.CLICK);
				if (isAddItem){
					this.updateAdShowBtn(cell);
					}else{
					this.updateShopBuyBtn(cell);
				}
				}updateAdShowBtn(cell){
				var ele_buy_btn=cell.getChildByName("btn");
				ele_buy_btn.offAll(Event.CLICK);
				ele_buy_btn.on(Event.CLICK,this,this.onShowAdClick);
				}onShowAdClick(){
				if (AdM.instance.watch_times >=AdM.instance.total_times){
					GameEventDispatch.instance.event("MsgTipContent","今日观看次数已到达上线，请明日再来");
					}else{
					if (WxC.isInMiniGame()){
						WxC.instance.showVideoAD();
					}
				}
				}onAcceptMonthCardReward(record){
				return function (){
					var a=new S2c_14006();
					a.id=record.id;
					WebSocketManager.instance.send(14006,a);
				}
				}onQuitBtnClick(){
				UiManager.instance.closePanel("Shop",true);
				}updateProfile(){
				var coin=(RoleInfoM.instance.getCoin()-RuleM.instance.coinCount+RoleInfoM.instance.getBindCoin())+"";
				var diamond=RoleInfoM.instance.getDiamond()+"";
				this.coin_value.value=coin;
				this.diamond_value.value=diamond;
				this.updateMiniBalance();
				if (coin.length > 10 || diamond.length > 10){
					var scale=0.8;
					this.coin_value.scale(scale,scale);
					this.diamond_value.scale(scale,scale);
					}else{
					this.coin_value.scale(1,1);
					this.diamond_value.scale(1,1);
				}
				}onRefresh(tab_name){
				if (tab_name){
					this.onSelect(tab_name)();
					}else{
					this.list1.refresh();
					this.list_card.refresh();
				}
				}refreshMonthCard(){
				this.list_card.refresh();
				}addRedPointToIcon(target,x,y,click_once=false){
				var _$this=this;
				var img=new Image();
				img.name="red_point";
				img.skin="ui/common_ex/red_point.png";
				img.x=target.width *x;
				img.y=y;
				target.addChild(img);
				if (click_once){
					target.once(Event.CLICK,target,function(){
						_$this.removeRedPoint(target);
					});
				}
				}removeRedPoint(target){
				target.removeChildByName("red_point");
				}showRedPoint(){
				var red_points=RoleInfoM.instance.getRedPoints();
				if (64 & red_points){
					this.addRedPointToIcon(this.tab_package,0.9,6,false);
					}else{
					this.removeRedPoint(this.tab_package);
				}
				}updateMiniBalance(){
				if (WxC.isInMiniGame())
					this.mini_balance.value=RoleInfoM.instance.mini_balance+"";
				}onSyncADInfo(){
				this.list1.refresh();
				}unRegister(){
				GameEventDispatch.instance.off("UpdateMiniBalance",this,this.updateMiniBalance);
				GameEventDispatch.instance.off("UpdateProfile",this,this.updateProfile);
				GameEventDispatch.instance.off("ShopRefresh",this,this.onRefresh);
				GameEventDispatch.instance.off("MonthCardUpdate",this,this.refreshMonthCard);
				GameEventDispatch.instance.off("ShowRedPoint",this,this.showRedPoint);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("OnSyncAdWatchRemainTimes",this,this.onSyncADInfo);
				}register(){
				GameEventDispatch.instance.on("UpdateMiniBalance",this,this.updateMiniBalance);
				GameEventDispatch.instance.on("UpdateProfile",this,this.updateProfile);
				GameEventDispatch.instance.on("ShopRefresh",this,this.onRefresh);
				GameEventDispatch.instance.on("MonthCardUpdate",this,this.refreshMonthCard);
				GameEventDispatch.instance.on("ShowRedPoint",this,this.showRedPoint);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("OnSyncAdWatchRemainTimes",this,this.onSyncADInfo);
			}
		}

		view.shop.ShopPage=Laya.ShopPage=ShopPage;	
		

		class ShortGiftPage extends ShortGiftPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.listType=1;
				//this.redRoll=null;
			}
			UseTicketPage(){
				}StartGames(parm=null){
				this._startX=this.x;
				this._startY=this.y;
				this.hitTestPrior=false;
				this.redRoll=RoleInfoM.instance.calcRed();
				this.bmask.on(Event.CLICK,this,null);
				this.itemBtn_0.on(Event.CLICK,this,this.selectBox,[0]);
				this.itemBtn_1.on(Event.CLICK,this,this.selectBox,[1]);
				this.itemBtn_2.on(Event.CLICK,this,this.selectBox,[2]);
				this.close_btn.on(Event.MOUSE_DOWN,this,this.onClose);
				this.list1.renderHandler=new Handler(this,this.updateDate);
				this.list1.array=ConfigManager.items("cfg_actsign");
				this.list1.hScrollBarSkin="";
				this.addRed();
				this.updateBtn();
				this.initBox();
				this.screenResize();
				}initBox(){
				if (this.itemBtn_0.visible==false){
					this.selectBox(1);
					}else{
					this.selectBox(0);
				}
				this.scrollList();
				if (RoleInfoM.instance.short_pf==2){
					this.itemBtn_2.visible=false;
				}
				}updateBtn(){
				var now=parseInt(new Date().getTime()/ 1000);
				if (RoleInfoM.instance.curDay==RoleInfoM.instance.receive.length-1){
					if (StartParam.instance.getParam("ctime")+cfg_global.instance(1).sign_days *86400 < now){
						this.itemBtn_1.y=0;
						this.itemBtn_2.y=95;
						this.selectBox(1);
						this.itemBtn_0.visible=false;
					}
				}
				if (StartParam.instance.getParam("ctime")+cfg_global.instance(1).rech_days *86400 < now){
					this.itemBtn_1.visible=false;
				}
				if (StartParam.instance.getParam("ctime")+cfg_global.instance(1).upgrade_days *86400 < now){
					this.itemBtn_2.visible=false;
				}
				}selectBox(page){
				this.itemBtn_0.selected=false;
				this.itemBtn_1.selected=false;
				this.itemBtn_2.selected=false;
				this.itemBtn_0.skin="ui/shortGift/btn_fl_02.png";
				this.itemBtn_1.skin="ui/shortGift/btn_cz_02.png";
				this.itemBtn_2.skin="ui/shortGift/btn_cj_02.png";
				var now=Math.floor(new Date().getTime()/ 1000);
				var time=parseInt(StartParam.instance.getParam("ctime"));
				if (page==0){
					var remain=Math.floor(cfg_global.instance(1).sign_days *86400);
					var D=parseFloat((time+remain-now)/ 86400);
					var day=Math.floor(D);
					var H=Math.floor(((time+remain-now)-day *86400)/ 3600);
					var hour=Math.floor(H);
					this.listType=1;
					if (day < 0){
						this.remine_time.text="活动剩余时间：00天00小时";
						}else{
						this.remine_time.text="活动剩余时间："+day+"天"+hour+"小时";
					}
					this.scrollList();
					this.itemBtn_0.selected=true;
					this.itemBtn_0.skin="ui/shortGift/btn_fl_01.png";
					this.list1.array=ConfigManager.items("cfg_actsign");
					}else if (page==1){
					var remain=cfg_global.instance(1).rech_days *86400;
					var D=(time+remain-now)/ 86400;
					var day=parseInt(D);
					var H=(time+remain-now-day *86400)/ 3600;
					var hour=parseInt(H);
					this.listType=2;
					if (day < 0){
						this.remine_time.text="活动剩余时间：00天00小时";
						}else{
						this.remine_time.text="活动剩余时间："+day+"天"+hour+"小时";
					}
					this.scrollList();
					this.itemBtn_1.selected=true;
					this.itemBtn_1.skin="ui/shortGift/btn_cz_01.png";
					this.list1.array=this.filterRechData();
					}else if (page==2){
					var remain=cfg_global.instance(1).upgrade_days *86400;
					var D=(time+remain-now)/ 86400;
					var day=parseInt(D);
					var H=(time+remain-now-day *86400)/ 3600;
					var hour=parseInt(H);
					this.listType=3;
					if (day < 0){
						this.remine_time.text="活动剩余时间：00天00小时";
						}else{
						this.remine_time.text="活动剩余时间："+day+"天"+hour+"小时";
					}
					this.scrollList();
					this.itemBtn_2.selected=true;
					this.itemBtn_2.skin="ui/shortGift/btn_cj_01.png";
					this.list1.array=ConfigManager.items("cfg_upgradeRed");
				}
				this.list1.refresh();
				}addRed(){
				var vertical_h=10;
				var horizontal_percent=0.75;
				if (this.redRoll[0]==1){
					RedpointC.instance.removeRedPoint(this.itemBtn_0);
					RedpointC.instance.addRedPointToIcon(this.itemBtn_0,horizontal_percent,vertical_h);
					}else{
					RedpointC.instance.removeRedPoint(this.itemBtn_0);
				}
				if (this.redRoll[1]==1){
					RedpointC.instance.removeRedPoint(this.itemBtn_1);
					RedpointC.instance.addRedPointToIcon(this.itemBtn_1,horizontal_percent,vertical_h);
					}else{
					RedpointC.instance.removeRedPoint(this.itemBtn_1);
				}
				if (RoleInfoM.instance.short_pf !=2){
					if (this.redRoll[2]==1){
						RedpointC.instance.removeRedPoint(this.itemBtn_2);
						RedpointC.instance.addRedPointToIcon(this.itemBtn_2,horizontal_percent,vertical_h);
						}else{
						RedpointC.instance.removeRedPoint(this.itemBtn_2);
					}
				}
				}scrollList(){
				if (this.listType==1){
					if (RoleInfoM.instance.curDay < 3){
						this.list1.scrollTo(0);
						}else{
						this.list1.scrollTo(RoleInfoM.instance.curDay-2);
					}
				}
				if (this.listType==2){
					var arr=RoleInfoM.instance.pay_accept_ids;
					var len=0;
					if (RoleInfoM.instance.pay_accept_ids){
						len=arr.length;
						var newArr=arr.sort();
						this.list1.scrollTo(newArr[len-1]-1);
						}else{
						this.list1.scrollTo(0);
					}
				}
				if (this.listType==3){
					var arr=RoleInfoM.instance.level_accept_ids;
					var len=0;
					if (RoleInfoM.instance.level_accept_ids){
						len=arr.length;
						var newArr=arr.sort();
						this.list1.scrollTo(newArr[len-1]-1);
						}else{
						this.list1.scrollTo(0);
					}
				}
			}
			/*充值福利列表过滤*/
			filterRechData(){
				var arr=[];
				var cfg=ConfigManager.items("cfg_rech_award");
				var extra=1;
				for (var i=0;i < cfg.length;i++){
					if (RoleInfoM.instance.total >=cfg[i].rechSum){
						arr.push(cfg[i]);
						}else{
						if (extra < 3){
							extra++;
							arr.push(cfg[i]);
						}
					}
				}
				return arr
				}updateDate(cell,index){
				var config=cell.dataSource;
				var ele_img=cell.getChildByName("img");
				var ele_days=cell.getChildByName("days");
				var ele_num=cell.getChildByName("num");
				var ele_rightBtn=cell.getChildByName("rightBtn");
				var ele_received=cell.getChildByName("not_received");
				var ele_condition=cell.getChildByName("condition");
				var ele_progress=cell.getChildByName("progress");
				var sign_now=RoleInfoM.instance.curDay;
				ele_img.skin=cfg_goods.instance(config.reward_ids).icon;
				ele_days.text=config.title;
				ele_num.text=""+config.remark;
				if (this.listType==1){
					ele_progress.visible=false;
					if (index < sign_now){
						ele_condition.visible=false;
						if (RoleInfoM.instance.receive.indexOf(config.id)>-1){
							ele_received.visible=true;
							ele_rightBtn.visible=false;
							}else{
							ele_received.visible=false;
							ele_rightBtn.visible=true;
						}
						}else{
						ele_condition.visible=true;
						ele_rightBtn.visible=false;
						ele_received.visible=false;
						ele_condition.text="再登录"+(index+1-sign_now)+"天可领取";
					}
				}
				if (this.listType==2){
					if (RoleInfoM.instance.total >=config.rechSum){
						ele_condition.visible=false;
						ele_progress.visible=false;
						if (RoleInfoM.instance.pay_accept_ids.indexOf(config.id)>-1){
							ele_received.visible=true;
							ele_rightBtn.visible=false;
							}else{
							ele_received.visible=false;
							ele_rightBtn.visible=true;
						}
						}else{
						ele_condition.visible=true;
						ele_progress.visible=true;
						ele_rightBtn.visible=false;
						ele_received.visible=false;
						ele_condition.text="累计充值"+config.rechSum+"元可领取";
						ele_progress.text=RoleInfoM.instance.total+"/"+config.rechSum;
					}
				}
				if (this.listType==3){
					ele_condition.visible=false;
					if (RoleInfoM.instance.getLevel()>=config.level){
						ele_progress.visible=false;
						if (RoleInfoM.instance.level_accept_ids.indexOf(config.id)>-1){
							ele_received.visible=true;
							ele_rightBtn.visible=false;
							}else{
							ele_received.visible=false;
							ele_rightBtn.visible=true;
						}
						}else{
						ele_progress.visible=true;
						ele_rightBtn.visible=false;
						ele_received.visible=false;
						ele_progress.text="达到"+config.level+"级可领取";
					}
				}
				ele_rightBtn.on(Event.CLICK,this,this.onRightBtn,[config.id]);
				}onRightBtn(id){
				if (this.listType==1){
					WebSocketManager.instance.send(50003,{id:id});
					}else if (this.listType==2){
					WebSocketManager.instance.send(50005,{id:id});
					}else if (this.listType==3){
					WebSocketManager.instance.send(50007,{id:id});
				}
				}refreshList(){
				this.redRoll=RoleInfoM.instance.calcRed();
				this.list1.refresh();
				this.updateBtn();
				this.addRed();
				}onClose(){
				UiManager.instance.closePanel("ShortGift",false);
				}screenResize(){
				var contentWidth=600;
				var contentHeight=400;
				var contentStartX=340;
				var contentStartY=160;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.close_btn.left=contentStartX-posXOff;
				this.close_btn.top=contentStartY-posYOff;
			}
			//注册消息发送事件
			register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("syncShortData",this,this.refreshList);
			}
			//取消注册的消息发送事件
			unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("syncShortData",this,this.refreshList);
			}
		}

		view.shortGift.ShortGiftPage=Laya.ShortGiftPage=ShortGiftPage;	
		

		/**
		*...
		*@author ...
		*/
		class SubscriptionPage extends subscriptionUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.canbeCode=true;
			}
			screenResize(){
				var contentWidth=1070;
				var contentHeight=650;
				var contentStartX=110;
				var contentStartY=30;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.close_btn.left=contentStartX-posXOff;
				this.close_btn.top=contentStartY-posYOff;
				this.codequiteBtn.left=contentStartX-posXOff;
				this.codequiteBtn.top=contentStartY-posYOff;
			}
			/*INTERFACE manager.ResVo */
			StartGames(parm=null){
				this.hitTestPrior=false;
				this.codequiteBtn.visible=false;
				this._startX=this.x;
				this._startY=this.y;
				var _isInMiniGame=false;
				this.close_btn.on(Event.MOUSE_DOWN,this,this.onClose);
				if (WxC.isInMiniGame()){
					_isInMiniGame=true;
					}else{
					_isInMiniGame=false;
				}
				if (Browser.onWeiXin && !_isInMiniGame){
					this.initboxtxt("h5wxin");
					this.gotohttp.on(Event.MOUSE_DOWN,this,this.onGotosub);
				}
				else if (WxC.isInMiniGame()&& _isInMiniGame){
					this.initboxtxt("wx");
					this.copybtn.on(Event.MOUSE_DOWN,this,this.onBtnCopyClick);
				}
				else{
					this.initboxtxt("h5wxout");
				}
				this.giftcodeBtn.on(Event.CLICK,this,this.showWriteGiftCode);
				this.writegiftcode.visible=false;
				WebSocketManager.instance.send(41000,{});
				this.screenResize();
				}onBtnCopyClick(e){
				WxC.wx_set_clipboard_data("jjhbyh5");
				}initboxtxt(_str){
				var txtArr=[this.txtbox_wx,this.txtbox_h5wxin,this.txtbox_h5wxout];
				for (var i=0,_arr=txtArr;i < _arr.length;i++){
					_arr[i].visable=false;
				}
				switch (_str){
					case "wx":
						this.txtbox_h5wxout.visible=true;
						break ;
					case "h5wxin":
						this.txtbox_h5wxin.visible=true;
						break ;
					case "h5wxout":
						this.txtbox_h5wxout.visible=true;
						break ;
					}
				}showWriteGiftCode(){
				this.close_btn.visible=false;
				this.codequiteBtn.visible=true;
				this.writegiftcode.visible=true;
				this.codeconfirmBtn.on(Event.CLICK,this,this.onCodeConfirmClick);
				this.codequiteBtn.on(Event.CLICK,this,this.onCodeQuiteClick);
				}onCodeConfirmClick(){
				var _$this=this;
				var _code=this.writegiftInput.text;
				SubscriptionM.instance.setGiftcode(_code);
				if (_code.length==0){
					GameEventDispatch.instance.event("MsgTipContent","礼包码不能为空");
				}
				else if (_code.length > 0 && this.canbeCode){
					this.canbeCode=false;
					WebSocketManager.instance.send(41002,{key:_code});
					Laya.timer.once(2000,this,function(){
						_$this.canbeCode=true;
					});
				}
			}
			//WebSocketManager.instance.send(39000,{key:_code});
			onCodeQuiteClick(){
				this.writegiftInput.text="";
				this.writegiftcode.visible=false;
				this.close_btn.visible=true;
				this.codequiteBtn.visible=false;
				}subDisabled(){
				var _$this=this;
				if (!this.giftcodeBtn.disabled){
					this.giftcodeBtn.disabled=true;
					this.onCodeQuiteClick();
				}
				this.close_btn.on(Event.MOUSE_DOWN,this,function(){
					_$this.onClose();
					WebSocketManager.instance.send(41000,{});
				});
			}
			//状态查询
			setsubBtn(_ifdisabled=false){
				this.giftcodeBtn.disabled=!_ifdisabled;
				}onGotosub(){
				var base="MzI5MjgwMzczMw==";
				var suburl="https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz="+base+"#wechat_redirect";
				var suburl2="https://mp.weixin.qq.com/mp/profile_ext?action=home&__biz=MzI5MjgwMzczMw==&scene=124#wechat_redirect";
				var newIframe=window.open(suburl);
				var refresh=window.location.replace(suburl);
			}
			/*延时刷新
			*var onload:Object=__JS__('window').onload=function(){
				var url=suburl;
				if(url.indexOf("r=")==-1 ){
					var t=new Date();
					__JS__('window').location.href="<%=request.getContextPath()%>/url?r="+t.getTime();
				}
			}
			*/
			updateItem(cell,index){
				var d=cell.dataSource;
				var ele_remain=cell.getChildByName("reward");
				var ele_img=cell.getChildByName("img");
				ele_remain.text=d.num;
				ele_img.skin=d.icon;
				}updatelist(res){
				var ifStaticList=true;
				if (ifStaticList){
					this.giftlist.visible=false;
					return;
				};
				var listId=[];
				var listNum=[];
				for (var i=0;i < res.length;i++){
					listId.push(res[i][0]);
					listNum.push(res[i][1]);
				};
				var popArr=ConfigManager.filter("cfg_goods");
				var resArr=ConfigManager.filter("cfg_goods",function(item){
					for (var i=0;i < listId.length;i++){
						if (listId[i]==item.id){
							item.num=listNum[i];
							return item;
						}
					}
				});
				this.giftlist.array=resArr;
				this.giftlist.renderHandler=new Handler(this,this.updateItem);
				}onClose(){
				if (!RoleInfoM.instance.getFirstSubscription()){
					this.writegiftcode.visible=false;
					GameEventDispatch.instance.event("SyncSubscriptionIco");
				}
				UiManager.instance.closePanel("Subscription",false);
			}
			//关闭sub页
			unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("SubDisabled",this,this.subDisabled);
				GameEventDispatch.instance.off("UpdateGiftlist",this,this.updatelist);
				GameEventDispatch.instance.off("ResetSubBtn",this,this.setsubBtn);
				GameEventDispatch.instance.off("Closesubpanel",this,this.onClose);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("SubDisabled",this,this.subDisabled);
				GameEventDispatch.instance.on("UpdateGiftlist",this,this.updatelist);
				GameEventDispatch.instance.on("ResetSubBtn",this,this.setsubBtn);
				GameEventDispatch.instance.on("Closesubpanel",this,this.onClose);
			}
		}

		view.subscription.SubscriptionPage=Laya.SubscriptionPage=SubscriptionPage;	
		

		class TaskDailyPage extends TaskDailyPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.syncTask();
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,null);
				this._startX=this.x;
				this._startY=this.y;
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.list1.renderHandler=new Handler(this,this.updateItem);
				this.initTask();
				this.screenResize();
				}screenResize(){
				var contentWidth=1100;
				var contentHeight=700;
				var contentStartX=90;
				var contentStartY=10;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				}updateItemReward(cell,index){
				var ele_reward_img=cell.getChildByName("reward_type");
				var ele_reward_text=cell.getChildByName("reward_text");
				var data=cell.dataSource;
				ele_reward_img.skin=cfg_goods.instance(data.reward_item_id+"").icon;
				ele_reward_text.text='x '+data.reward_item_num;
				}updateItem(cell,index){
				var _$this=this;
				var taskConfig=cell.dataSource;
				var taskData=RoleInfoM.instance.getTaskDaily();
				var battery=RoleInfoM.instance.getBattery();
				var level=RoleInfoM.instance.getLevel();
				var ele_op=cell.getChildByName("op_box").getChildByName("op");
				var ele_op_text=cell.getChildByName("op_box").getChildByName("op_text");
				var ele_p=cell.getChildByName("p1");
				ele_op.stateNum=2;
				ele_op.visible=true;
				ele_op_text.visible=true;
				ele_op.offAll(Event.CLICK);
				ele_p.skin="ui/common_ex/p2.png";
				var list_reward=cell.getChildByName("list_reward");
				list_reward.renderHandler=new Handler(this,this.updateItemReward);
				var rewards=[];
				for (var i=0;i < taskConfig.reward_item_ids.length;i++){
					if (ActivityM.instance.activityIsActive('bonus')){
						rewards.push({
							reward_item_id:taskConfig.activity_item_ids[i],
							reward_item_num:taskConfig.activity_item_nums[i]
						});
					}
					else{
						rewards.push({
							reward_item_id:taskConfig.reward_item_ids[i],
							reward_item_num:taskConfig.reward_item_nums[i]
						});
					}
				}
				list_reward.array=rewards;
				if (rewards.length==1){
					list_reward.pivotX=-52;
					}else{
					list_reward.pivotX=0;
				}
				cell.getChildByName("task_name").text=taskConfig.task_name;
				cell.getChildByName("icon").skin=taskConfig.img_url;
				var percent=TaskC.instance.taskPercent(taskData,taskConfig);
				var is_accept=taskData.rec_ids.indexOf(taskConfig.id)>-1;
				var is_finish=percent==1;
				ele_p.value=percent;
				ele_op.stateNum=2;
				if (is_accept){
					ele_op.skin="ui/common_ex/btn_gray.png";
					ele_op.stateNum=1;
					ele_op_text.skin="ui/common_ex/t_accepted.png";
					cell.getChildByName("p1").value=1;
					}else if (is_finish){
					ele_op.skin="ui/common_ex/btn_yellow.png";
					ele_op_text.skin="ui/common_ex/t_accept.png";
					ele_op.on(Event.CLICK,this,this.onFinishTask(taskConfig.id));
					}else{
					ele_op.skin="ui/common_ex/btn_blue.png";
					ele_op_text.skin="ui/common_ex/t_go.png";
					ele_op.on(Event.CLICK,this,function(){
						GameEventDispatch.instance.event("ShowGuide",taskConfig);
						_$this.onQuitBtnClick();
						if (taskConfig.scene_id > 0 && taskConfig.scene_id !=FightM.instance.sceneId){
							WebSocketManager.instance.send(12003,null);
							LoginM.instance.sceneId=taskConfig.scene_id;
							GameEventDispatch.instance.event("StartLoad",[1]);
						}
					});
				}
			}
			// WebSocketManager.instance.send(12001,c2s);
			onFinishTask(task_id){
				return function (){
					var a=new C2s_19000();
					a.task_id=task_id;
					a.is_daily=true;
					WebSocketManager.instance.send(19000,a);
				}
				}syncTask(){
				var a=new C2s_19002();
				a.is_daily=true;
				WebSocketManager.instance.send(19002,a);
				}initTask(){
				var task_daily_ids=RoleInfoM.instance.getTaskDailyIds();
				var taskData=RoleInfoM.instance.getTaskDaily();
				var cfgs=ConfigManager.filter("cfg_task",function(item){
					return task_daily_ids.indexOf(item.id)>-1
				});
				var finish_arr=[];
				var unfinish_arr=[];
				var accept_arr=[];
				for (var i=0;i < cfgs.length;i++){
					var cfg=cfgs[i];
					var percent=TaskC.instance.taskPercent(taskData,cfg);
					var is_finish=percent==1;
					var is_accept=taskData.rec_ids.indexOf(cfg.id)>-1;
					if (is_accept){
						accept_arr.push(cfg);
						}else if (is_finish){
						finish_arr.push(cfg);
						}else{
						unfinish_arr.push(cfg);
					}
				}
				this.list1.array=finish_arr.concat(unfinish_arr,accept_arr);
				}onQuitBtnClick(){
				UiManager.instance.closePanel("TaskDaily",true);
				}curTask(){
				var task_ids=RoleInfoM.instance.getTaskDailyIds();
				var confs=ConfigManager.filter("cfg_task",function(item){
					return task_ids.indexOf(item.id)>-1
				});
				var taskData=RoleInfoM.instance.getTaskDaily();
				for (var i=0;i < confs.length;i++){
					var percent=TaskC.instance.taskPercent(taskData,confs[i]);
					var is_accept=taskData.rec_ids.indexOf(confs[i].id)>-1;
					var is_finish=percent==1;
					var finish_arr=[];
					var unfinish_arr=[];
					var task_id=confs[i].id;
					if (is_accept){
						continue
						}else if (is_finish){
						finish_arr.push(task_id);
						}else{
						unfinish_arr.push(task_id);
					}
				}
				}refresh(data){
				this.curTask();
				this.initTask();
				}unRegister(){
				GameEventDispatch.instance.off("RefreshTaskDaily",this,this.refresh);
				GameEventDispatch.instance.off("FinishTaskDaily",this,this.refresh);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				}register(){
				GameEventDispatch.instance.on("RefreshTaskDaily",this,this.refresh);
				GameEventDispatch.instance.on("FinishTaskDaily",this,this.refresh);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
			}
		}

		view.taskDaily.TaskDailyPage=Laya.TaskDailyPage=TaskDailyPage;	
		

		class TaskNewPage extends TaskNewPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				this.showOffTime=0;
				this.showOffTargets={};
			}
			StartGames(parm=null){
				this.tab1.selectHandler=new Handler(this,this.onTabChange);
				this.refresh_day_list();
				this.showOffTime=0;
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,null);
				this._startX=this.x;
				this._startY=this.y;
				for (var i=0;i < this.list_day.cells.length;i++){
					this.list_day.cells[i].getChildByName("list_reward").visible=false;
					this.list_day.cells[i].getChildByName("reward_bg").visible=false;
				}
				this.quitBtn.on(Event.CLICK,this,this.onQuitBtnClick);
				this.list1.renderHandler=new Handler(this,this.updateItem);
				this.list_day.renderHandler=new Handler(this,this.updateDayItem);
				var day_index=RoleInfoM.instance.getDayIndex();
				day_index=day_index > 7 ? 7 :day_index;
				this.onTabChange(day_index-1);
				this.refresh_main_p();
				this.showRedPoint();
				this.screenResize();
				}initCountDown(){
				var now=new Date();
				var hoursleft=23-now.getHours();
				var minutesleft=59-now.getMinutes();
				var secondsleft=59-now.getSeconds();
				if (minutesleft < 10)minutesleft="0"+minutesleft;
				if (secondsleft < 10)secondsleft="0"+secondsleft;
				this.countDown.text=hoursleft+":"+minutesleft+":"+secondsleft;
				}screenResize(){
				var contentWidth=1100;
				var contentHeight=700;
				var contentStartX=90;
				var contentStartY=10;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.quitBtn.left=contentStartX-posXOff;
				this.quitBtn.top=contentStartY-posYOff;
				}refresh_main_p(){
				var taskDatas=RoleInfoM.instance.getTaskNew();
				var day_index=RoleInfoM.instance.getDayIndex();
				if (day_index > 7){
					this.main_p.value=1;
					return
				};
				var today_percent=(taskDatas[day_index-1].rec_ids.length-1)/ (cfg_task_new.instance(day_index+"").task_ids.length);
				var is_all_finish=today_percent==1;
				if (is_all_finish){
					this.main_p.value=(day_index-1)/ 7+(1 / 7)*today_percent;
					}else{
					this.main_p.value=(day_index-1)/ 7+(1 / 7)*today_percent *0.7;
				}
				}refresh_day_list(){
				var taskDatas=RoleInfoM.instance.getTaskNew();
				var day_index=RoleInfoM.instance.getDayIndex();
				var list=[];
				for (var i=1;i <=7;i++){
					var day_override=TaskC.instance.new_task_override(i);
					var is_accept=taskDatas[i-1].a;
					var is_all_accept=day_override.is_all_accepted;
					var is_all_finish=day_override.is_all_finished;
					var is_expired=!is_all_finish && day_index > i;
					list.push({
						is_expired:is_expired,
						is_all_accept:is_all_accept,
						is_accept:is_accept
					});
				}
				this.list_day.array=list;
				}acceptNewDayReward(day_index){
				WebSocketManager.instance.send(19004,{day_index:day_index});
				}updateDayItem(cell,index){
				var _$this=this;
				var d=cell.dataSource;
				var ele_gift=cell.getChildByName("img_gift");
				var ele_text_bg=cell.getChildByName("txt_bg");
				var ele_txt_day=cell.getChildByName("txt_day");
				var ele_img_status=cell.getChildByName("img_status");
				var ele_list_reward=cell.getChildByName("list_reward");
				var ele_list_reward_bg=cell.getChildByName("reward_bg");
				cell.on(Event.MOUSE_DOWN,this,function(){
					for (var i=0;i < _$this.list_day.cells.length;i++){
						if (index !=i){
							_$this.list_day.cells[i].getChildByName("list_reward").visible=false;
							_$this.list_day.cells[i].getChildByName("reward_bg").visible=false;
						}
					}
					ele_list_reward_bg.visible=true;
					ele_list_reward.visible=true;
					ele_list_reward.renderHandler=new Handler(this,_$this.updateItemReward);
					var rewards=[];
					var c=cfg_task_new.instance(index+1+"");
					for (var i=0;i < c.reward_item_ids.length;i++){
						rewards.push({
							reward_item_id:c.reward_item_ids[i],
							reward_item_num:c.reward_item_nums[i]
						});
					}
					ele_list_reward.array=rewards;
				});
				cell.on(Event.MOUSE_UP,this,function(){
					ele_list_reward_bg.visible=false;
					ele_list_reward.visible=false;
				});
				var dic=["第一天","第二天","第三天","第四天","第五天","第六天","第七天"];
				ele_txt_day.text=dic[index];
				ele_gift.offAll(Event.CLICK);
				ele_gift.skin="ui/taskNew/gift.png";
				if (index==6){
					ele_gift.skin="ui/taskNew/gift2.png";
				}
				ele_text_bg.visible=false;
				ele_img_status.visible=false;
				if (d.is_accept){
					ele_gift.skin="ui/taskNew/liwu.png";
					ele_text_bg.visible=true;
					ele_img_status.visible=true;
					ele_img_status.skin="ui/common_ex/t_accepted.png";
					}else if (d.is_all_accept){
					this.showOffTargets[index+""]=ele_gift;
					ele_gift.on(Event.CLICK,this,function(){
						_$this.acceptNewDayReward(index+1);
						delete _$this.showOffTargets[index+""];
					});
					}else if (d.is_expired){
					ele_text_bg.visible=true;
					ele_img_status.visible=true;
					ele_img_status.skin="ui/common_ex/t_expired.png";
				}
				}clearShowOff(){
				Laya.timer.clear(this,this.giftShowOff);
				}startShowOff(){
				Laya.timer.frameLoop(1,this,this.giftShowOff);
				}giftShowOff(){
				var delta=Laya.timer.delta;
				var distance=15;
				var origin_y=33;
				var y=origin_y-distance;
				var upTime=600;
				var totalTime=2000;
				var downTime=totalTime-upTime;
				this.showOffTime+=delta;
				for (var i in this.showOffTargets){
					var target=this.showOffTargets[i];
					if (this.showOffTime > totalTime){
						this.showOffTime=0;
						target.y=origin_y;
						}else{
						if (this.showOffTime < upTime){
							target.y=Ease.sineIn(this.showOffTime,origin_y,-distance,upTime);
							}else{
							target.y=Ease.bounceOut(this.showOffTime-upTime,y,distance,downTime);
						}
					}
				}
				}updateItemReward(cell,index){
				var ele_reward_img=cell.getChildByName("reward_type");
				var ele_reward_text=cell.getChildByName("reward_text");
				var data=cell.dataSource;
				ele_reward_img.skin=cfg_goods.instance(data.reward_item_id+"").icon;
				ele_reward_text.text='x '+ActivityM.instance.exchangeConversion(data.reward_item_id,data.reward_item_num);
				}updateItem(cell,index){
				var _$this=this;
				var config=cell.dataSource;
				var taskDatas=RoleInfoM.instance.getTaskNew();
				var battery=RoleInfoM.instance.getBattery();
				var level=RoleInfoM.instance.getLevel();
				var day_index=parseInt(RoleInfoM.instance.getDayIndex());
				var taskData=taskDatas[TaskNewPage.curTabIndex-1];
				var ele_op=cell.getChildByName("op_box").getChildByName("op");
				var ele_op_text=cell.getChildByName("op_box").getChildByName("op_text");
				var ele_p=cell.getChildByName("p1");
				ele_op.stateNum=2;
				ele_op.visible=true;
				ele_op_text.visible=true;
				ele_op_text.gray=false;
				ele_op.stateNum=2;
				ele_op.offAll(Event.CLICK);
				ele_p.skin="ui/common_ex/p2.png";
				var list_reward=cell.getChildByName("list_reward");
				list_reward.renderHandler=new Handler(this,this.updateItemReward);
				var rewards=[];
				for (var i=0;i < config.reward_item_ids.length;i++){
					rewards.push({
						reward_item_id:config.reward_item_ids[i],
						reward_item_num:config.reward_item_nums[i]
					});
				}
				list_reward.array=rewards;
				if (rewards.length==1){
					list_reward.pivotX=-52;
					}else{
					list_reward.pivotX=0;
				}
				cell.getChildByName("task_name").text=config.task_name;
				cell.getChildByName("icon").skin=config.img_url;
				var is_accept=taskData.rec_ids.indexOf(config.id)>-1;
				var is_fature=TaskNewPage.curTabIndex > day_index;
				var is_today=TaskNewPage.curTabIndex==day_index;
				var is_old=TaskNewPage.curTabIndex < day_index;
				var percent=TaskC.instance.taskPercent(taskData,config);
				var is_finish=percent==1;
				ele_p.value=percent;
				ele_op.stateNum=2;
				if (is_accept){
					ele_op.skin="ui/common_ex/btn_gray.png";
					ele_op.stateNum=1;
					ele_op_text.skin="ui/common_ex/t_accepted.png";
					cell.getChildByName("p1").value=1;
					}else if (is_finish){
					ele_op.skin="ui/common_ex/btn_yellow.png";
					ele_op_text.skin="ui/common_ex/t_accept.png";
					ele_op.on(Event.CLICK,this,this.onFinishTask(config.id,TaskNewPage.curTabIndex));
					}else{
					if (is_old){
						ele_op.skin="ui/common_ex/btn_gray.png";
						ele_op.stateNum=1;
						ele_op_text.skin="ui/common_ex/t_expired.png";
						ele_p.skin="ui/common_ex/p3.png";
						}else{
						ele_op.skin="ui/common_ex/btn_blue.png";
						ele_op_text.skin="ui/common_ex/t_go.png";
						if (is_today){
							ele_op.on(Event.CLICK,this,function(){
								GameEventDispatch.instance.event("ShowGuide",config);
								_$this.onQuitBtnClick();
								var scene_id=config.scene_id;
								if (scene_id==0){
									}else{
									var cfg=cfg_scene.instance(scene_id);
									var batteryLevel=RoleInfoM.instance.getBattery();
									if (batteryLevel >=cfg.unlock){
										if (config.scene_id > 0 && config.scene_id !=FightM.instance.sceneId){
											WebSocketManager.instance.send(12003,null);
											LoginM.instance.sceneId=config.scene_id;
											GameEventDispatch.instance.event("StartLoad",[1]);
										}
										}else{
										GameEventDispatch.instance.event("MsgTp",cfg.msg_tip_id);
									}
								}
							});
						}
					}
				}
				if (is_fature){
					ele_op.stateNum=1;
					ele_op.skin="ui/common_ex/btn_gray.png";
					ele_op_text.skin="ui/common_ex/t_go.png";
					ele_op_text.gray=true;
					ele_p.value=0;
				}
				}onFinishTask(task_id,day_index){
				return function (){
					var a=new C2s_19000();
					a.task_id=task_id;
					a.day_index=day_index;
					WebSocketManager.instance.send(19000,a);
				}
				}onTabChange(index){
				this.showRedPoint();
				TaskNewPage.curTabIndex=index+1;
				var x=cfg_task_new.instance(TaskNewPage.curTabIndex+"");
				var task_ids=x.task_ids;
				this.tab1.selectedIndex=index;
				var taskDatas=RoleInfoM.instance.getTaskNew();
				var taskData=taskDatas[index];
				var finish_arr=[];
				var unfinish_arr=[];
				var accept_arr=[];
				var cfgs=ConfigManager.filter("cfg_task",function(item){
					return task_ids.indexOf(item.id)>-1
				});
				for (var i=0;i < cfgs.length;i++){
					var cfg=cfgs[i];
					var percent=TaskC.instance.taskPercent(taskData,cfg);
					var is_finish=percent==1;
					var is_accept=taskData.rec_ids.indexOf(cfg.id)>-1;
					if (is_accept){
						accept_arr.push(cfg);
						}else if (is_finish){
						finish_arr.push(cfg);
						}else{
						unfinish_arr.push(cfg);
					}
				}
				this.list1.array=finish_arr.concat(unfinish_arr,accept_arr);
				var day_index=RoleInfoM.instance.getDayIndex();
				if (TaskNewPage.curTabIndex > day_index){
					Laya.timer.clear(this,this.initCountDown);
					this.countDown.text="未开始";
					}else if (TaskNewPage.curTabIndex==day_index){
					this.initCountDown();
					Laya.timer.loop(1000,this,this.initCountDown);
					}else{
					Laya.timer.clear(this,this.initCountDown);
					this.countDown.text="已过期";
				}
				}onQuitBtnClick(){
				UiManager.instance.closePanel("TaskNew",true);
				}refresh(data){
				this.onTabChange(this.tab1.selectedIndex);
				this.refresh_day_list();
				this.refresh_main_p();
				}showRedPoint(data){
				var red_points=RoleInfoM.instance.getRedPoints();
				var day_index=RoleInfoM.instance.getDayIndex();
				if (day_index > 7){
					day_index=7;
				}
				if (1 & red_points){
					for (var i=1;i <=day_index;i++){
						var target=this.tab1.getChildByName("item"+(i-1));
						var day_override=TaskC.instance.new_task_override(i);
						if (day_override.have_can_accept){
							RedpointC.instance.removeRedPoint(target);
							if (this.tab1.selectedIndex+1==i){
								RedpointC.instance.addRedPointToIcon(target,0.87,3);
								}else{
								RedpointC.instance.addRedPointToIcon(target,0.78,8);
							}
							}else{
							RedpointC.instance.removeRedPoint(target);
						}
					}
				}
				}noviceGuideAccept(){
				console.log(this.list1.cells[0].dataSource);
				this.onFinishTask(this.list1.cells[0].dataSource.id,TaskNewPage.curTabIndex)();
				console.log("noviceGuideAccept");
				}unRegister(){
				GameEventDispatch.instance.off("RefreshTaskNew",this,this.refresh);
				GameEventDispatch.instance.off("FinishTaskNew",this,this.refresh);
				GameEventDispatch.instance.off("ShowRedPoint",this,this.showRedPoint);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				this.clearShowOff();
				GameEventDispatch.instance.off("NoviceGuideAcceptTaskNew",this,this.noviceGuideAccept);
				}register(){
				GameEventDispatch.instance.on("RefreshTaskNew",this,this.refresh);
				GameEventDispatch.instance.on("FinishTaskNew",this,this.refresh);
				GameEventDispatch.instance.on("ShowRedPoint",this,this.showRedPoint);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				this.startShowOff();
				GameEventDispatch.instance.on("NoviceGuideAcceptTaskNew",this,this.noviceGuideAccept);
			}
		}

		view.taskNew.TaskNewPage=Laya.TaskNewPage=TaskNewPage;
		TaskNewPage.curTabIndex=0;	
		

		class ImpactVIew extends testImapctUI{
			constructor (){
				super();
				//this._sp=null;
				//this._ani=null;
				//this._skeletonAni=null;
				//this._aniType=0;
				//this.w=NaN;
				//this.h=NaN;
				//this._$6_x=NaN;
				//this._$6_y=NaN;
				//this.data=null;
				//this.sp=null;
				//this.dx=NaN;
				//this.dy=NaN;
				this.i=1;
				this.id=1;
				//this.pX=NaN;
				//this.pY=NaN;
				//this.speed=NaN;
				//this.s=null;
				this.endAngle=-90;
				//this.point1=null;
				//this.point2=null;
				//this.point3=null;
				//this.spp=null;
				//this._par=null;
				//this.spppp=null;
				this.aniNames=[
				"linjiang"];
				this.aniInfo=new Object();
			}
			StartGames(parm=null){
				this.point1=new Point(500,500);
				this.point2=new Point(450,450);
				this.point3=new Point(400,500);
				this.money.x=this.point1.x;
				this.money.y=this.point1.y;
				this.spp=new Sprite();
				this.addChild(this.spp);
				this.drawCircle(this.point1);
				this.i=1;
				this.initData();
				this.updateData(null,this.i);
				var sprite=new Sprite();
				this.addChild(sprite);
				sprite.zOrder=100;
				sprite.graphics.drawRect(Laya.stage.width / 2-2,Laya.stage.height / 2-2,4,4,"#ff0000");
				this.initEvent();
				this.initView();
				this.skill.x=500;
				this.skill.y=500;
				this.skill.width=84;
				this.skill.height=84;
				this.skill.skin=WxM.instance.imageUrl;
				this.drawMask(10,this.skill);
			}
			//测试粒子
			test(){
				}drawCircle(pointOne){
				this.spp.graphics.drawCurves(pointOne.x,pointOne.y,[0,0,-100,-150,-200,0],"#ff0000",3);
				}drawRoationRect(){
				this.spp=new Sprite();
				var path=[
				["moveTo",30,0],
				["arcTo",this.skill.width,0,this.skill.width,30,30],
				["arcTo",500,300,470,300,30],
				["arcTo",0,300,0,270,30],
				["arcTo",0,0,30,0,30],];
				this.spp.graphics.drawPath(0,0,path,{fillStyle:"#ff0000"});
				this.addChild(this.spp);
				this.skill.mask=this.spp;
				}drawMask(r,img){
				this.spp=new Sprite();
				var path=[
				["moveTo",r,0],
				["arcTo",img.width,0,img.width,r,r],
				["arcTo",img.width,img.height,img.width-r,img.height,r],
				["arcTo",0,img.height,0,img.height-r,r],
				["arcTo",0,0,r,0,r],];
				this.spp.graphics.drawPath(0,0,path,{fillStyle:"#ff0000"});
				this.addChild(this.spp);
				img.mask=this.spp;
				}initView(){
				this.s=new Sprite();
				this.s.x=this.zhuan.width / 2;
				this.s.y=this.zhuan.height / 2;
				this.zhuan.mask=this.s;
				Laya.timer.loop(100,this,this.start);
				}start(){
				this.endAngle=this.endAngle+10;
				this.s.graphics.clear();
				this.s.graphics.drawPie(0,0,50,this.endAngle,270,"#88ee1a");
				}roate(everyTime,startEngle){
				Laya.timer.loop(everyTime,this,this.startRoate);
				}startRoate(){
				this.endAngle=this.endAngle+10;
				this.s.graphics.clear();
				this.s.graphics.drawPie(0,0,50,this.endAngle,270,"#88ee1a");
				}initData(){
				for (var i=1;i <=this.aniNames.length;i++){
					var data=ConfigManager.getConfObject("cfg_anicollision",this.aniNames[i-1]);
					this.aniInfo[i+""]=data;
				}
				}initEvent(){
				this.btnOne.on(Event.CLICK,this,this.clickOne);
				this.btnTwo.on(Event.CLICK,this,this.clickTwo);
				this.btnThree.on(Event.CLICK,this,this.clickThree);
				this.btnFour.on(Event.CLICK,this,this.clickFour);
				this.btnFive.on(Event.CLICK,this,this.clickFive);
				this.btnSix.on(Event.CLICK,this,this.clickSix);
				Laya.timer.loop(500,this,this.clickCarry);
				this.nextBtn.on(Event.CLICK,this,this.nextFish);
				this.preBtn.on(Event.CLICK,this,this.preFish);
				this.closeBtn.on(Event.CLICK,this,this.clickClose);
			}
			//resetBtn.on(Event.CLICK,this,click);
			clickClose(){
				UiManager.closeView(ImpactVIew);
				}clickSix(){
				this.id=6;
				this.updateRecen(this.aniInfo[this.i].colliOffsetX6,this.aniInfo[this.i].colliOffsetY6,this.aniInfo[this.i].colliWidth6,this.aniInfo[this.i].colliHeight6,"动画区域");
				}preFish(){
				this.i=this.i-1;
				if (this.i==0){
					this.i=this.aniNames.length;
				}
				this.updateData(this.data,this.i);
				}nextFish(){
				this.i=this.i+1;
				if (this.i==this.aniNames.length+1){
					this.i=1;
				}
				this.updateData(this.data,this.i);
				}updateData(data,i){
				if (this._sp !=null){
					this._sp.graphics.clear();
					this.removeChild(this._ani);
					this.removeChild(this._sp);
					this._ani=null;
					this._sp=null;
				};
				var cfg_ani=cfg_anicollision.instance(this.aniNames[i-1]);
				this._aniType=cfg_ani.aniType;
				this._sp=new Sprite();
				if (0==this._aniType){
					this._ani=AnimalManger.instance.load(this.aniNames[i-1]);
					this._ani.interval=this.aniInfo[i].aniSpeed;
					this._ani.x=Laya.stage.width / 2;
					this._ani.y=Laya.stage.height / 2;
					this._ani.pivot(this.aniInfo[i].pivotX,this.aniInfo[i].pivotY);
					this._ani.play(0,true);
				}
				else{
					this._skeletonAni=new SpineTemplet(this.aniNames[i-1]);
					this._skeletonAni.pos(Laya.stage.width / 2,Laya.stage.height / 2);
					this._skeletonAni.setPivot(this.aniInfo[i].pivotX,this.aniInfo[i].pivotY);
					this._skeletonAni.play(0,true);
				}
				if (this._ani){
					this._ani.visible=0==this._aniType;
				}
				if (this._skeletonAni){
					this._skeletonAni.visible=1==this._aniType;
				}
				this.updateAniTxt(i);
				this.txtw.text=this.aniInfo[i].colliWidth1;
				this.txth.text=this.aniInfo[i].colliHeight1;
				this.txtx.text=this.aniInfo[i].colliOffsetX1;
				this.txty.text=this.aniInfo[i].colliOffsetY1;
				this.txtCenterX.text=this.aniInfo[i].pivotX;
				this.txtCenterY.text=this.aniInfo[i].pivotY;
				this.aniSpeed.text=this.aniInfo[i].aniSpeed;
				this.txt.text="矩形一";
				if (0==this._aniType){
					this.addChild(this._ani);
				}
				else{
					this.addChild(this._skeletonAni);
				}
				this.addChild(this._sp);
				}clickSwitch(){
				this.updateData(this.data,this.i);
				this.i=this.i+1;
				if (this.i==4){
					this.i=0;
				}
				}updateAniTxt(i){
				this.aniTxt.text=this.aniNames[i-1];
				}clickCarry(){
				this.w=parseFloat(this.txtw.text);
				this.h=parseFloat(this.txth.text);
				this._$6_x=parseFloat(this.txtx.text);
				this._$6_y=parseFloat(this.txty.text);
				this.pX=parseFloat(this.txtCenterX.text);
				this.pY=parseFloat(this.txtCenterY.text);
				this.speed=parseFloat(this.aniSpeed.text);
				this.update(this.id);
				if (0==this._aniType){
					this._ani.pivot(this.pX,this.pY);
					this._ani.interval=this.speed;
				}
				else{
					this._skeletonAni.setPivot(this.pX,this.pY);
				}
				this.aniInfo[this.i].aniSpeed=this.speed;
				this.aniInfo[this.i].pivotX=this.pX;
				this.aniInfo[this.i].pivotY=this.pY;
				this.dx=this._$6_x+this.stage.width / 2-this.w;
				this.dy=this._$6_y+this.stage.height / 2-this.h;
				this._sp.graphics.clear();
				this._sp.graphics.drawRect(this.dx,this.dy,this.w *2,this.h *2,null,"#ffffff");
				}clickFive(){
				this.id=5;
				this.updateRecen(this.aniInfo[this.i].colliOffsetX5,this.aniInfo[this.i].colliOffsetY5,this.aniInfo[this.i].colliWidth5,this.aniInfo[this.i].colliHeight5,"矩形五");
				}updateRecen(x,y,width,height,name){
				this.txth.text=height+"";
				this.txtw.text=width+"";
				this.txtx.text=x+"";
				this.txty.text=y+"";
				this.txt.text=name+"";
				this.dx=x+this.stage.width / 2-this._ani.width;
				this.dy=y+this.stage.height / 2-this._ani.height;
				this._sp.graphics.clear();
				this._sp.graphics.drawRect(this.dx,this.dy,width *2,height *2,null,"#ffffff");
				}clickFour(){
				this.id=4;
				this.updateRecen(this.aniInfo[this.i].colliOffsetX4,this.aniInfo[this.i].colliOffsetY4,this.aniInfo[this.i].colliWidth4,this.aniInfo[this.i].colliHeight4,"矩形四");
				}clickThree(){
				this.id=3;
				this.updateRecen(this.aniInfo[this.i].colliOffsetX3,this.aniInfo[this.i].colliOffsetY3,this.aniInfo[this.i].colliWidth3,this.aniInfo[this.i].colliHeight3,"矩形三");
				}clickTwo(){
				this.id=2;
				this.updateRecen(this.aniInfo[this.i].colliOffsetX2,this.aniInfo[this.i].colliOffsetY2,this.aniInfo[this.i].colliWidth2,this.aniInfo[this.i].colliHeight2,"矩形二");
				}clickOne(){
				Laya.Browser.window.location="https://www.baidu.com/";
				window.open('https://www.baidu.com/');
			}
			//updateRecen(aniInfo.get(i).colliOffsetX1,aniInfo.get(i).colliOffsetY1,aniInfo.get(i).colliWidth1,aniInfo.get(i).colliHeight1,"矩形一");
			update(id){
				switch (id){
					case 1:{
							this.aniInfo[this.i].colliOffsetX1=this._$6_x;
							this.aniInfo[this.i].colliOffsetY1=this._$6_y;
							this.aniInfo[this.i].colliWidth1=this.w;
							this.aniInfo[this.i].colliHeight1=this.h;
							break ;
						}
					case 2:{
							this.aniInfo[this.i].colliOffsetX2=this._$6_x;
							this.aniInfo[this.i].colliOffsetY2=this._$6_y;
							this.aniInfo[this.i].colliWidth2=this.w;
							this.aniInfo[this.i].colliHeight2=this.h;
							break ;
						}
					case 3:{
							this.aniInfo[this.i].colliOffsetX3=this._$6_x;
							this.aniInfo[this.i].colliOffsetY3=this._$6_y;
							this.aniInfo[this.i].colliWidth3=this.w;
							this.aniInfo[this.i].colliHeight3=this.h;
							break ;
						}
					case 4:{
							this.aniInfo[this.i].colliOffsetX4=this._$6_x;
							this.aniInfo[this.i].colliOffsetY4=this._$6_y;
							this.aniInfo[this.i].colliWidth4=this.w;
							this.aniInfo[this.i].colliHeight4=this.h;
							break ;
						}
					case 5:{
							this.aniInfo[this.i].colliOffsetX5=this._$6_x;
							this.aniInfo[this.i].colliOffsetY5=this._$6_y;
							this.aniInfo[this.i].colliWidth5=this.w;
							this.aniInfo[this.i].colliHeight5=this.h;
							break ;
						}
					case 6:{
							this.aniInfo[this.i].colliOffsetX6=this._$6_x;
							this.aniInfo[this.i].colliOffsetY6=this._$6_y;
							this.aniInfo[this.i].colliWidth6=this.w;
							this.aniInfo[this.i].colliHeight6=this.h;
							break ;
						}
					default :{
							break ;
						}
					}
				}initMouseEvent(){
				this.on(Event.MOUSE_OUT,this,this.startEvent);
				}startEvent(){
				}register(){
			}unRegister(){}
			get facton (){
				return null;
			}
			set facton(value){super.facton=value;}
		}

		view.testImpact.ImpactVIew=Laya.ImpactVIew=ImpactVIew;	
		

		class UseTicketPage extends UseTicketPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
				//this.itemBtnObj=null;
				this.canbeCode=true;
				this.exchangeData=null;
				//当前兑换物品的数据
				//this._activePage=NaN;
				//this._activeArr=null;
				//this._activeMaxPage=NaN;
				//------------------欢乐气球------------------------------
				this.leftLimitRot=-90;
				this.rightLimitRot=90;
				this.isClick=true;
				this.faSheGrade=2;
				//1 2 3
				this.rotationSpeed=1;
				this.endY=70;
				this.endX=143;
				this.startY=190;
				this.startX=270;
				this.isHitTarget=false;
				this.hitRange=[[-58,-47],[-44,-30],[-22,-7],[6,21],[31,44],[47,58]];
				//this.balloonArr=null;
				this.hitAirBalloon=0;
				this.chooseFlyBtn=2;
				//选择飞镖类型 1 2 3
				this.balloonLimit=6;
				//this.hitBalloonArr=null;
				//this._itemTabArr=null;
			}
			StartGames(parm=null){
				this.copyBtn.visible=false;
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,null);
				this.bmask_b.on(Event.CLICK,this,null);
				this.initPicture();
				this.closeAccountBox.visible=false;
				this.returnMainBtn.visible=false;
				this._activeArr=ActivityM.instance.activeImg();
				this._startX=this.x;
				this._startY=this.y;
				this.initBox();
				this._activePage=0;
				this._activeMaxPage=this._activeArr.length-1;
				this.bmask.on(Event.CLICK,this,null);
				for (var i=0;i < 5;++i){
					this["itemBtn_"+i].on(Event.CLICK,this,this.selectBox,[i]);
				}
				this.balloonArr=[this.balloon_1,this.balloon_2,this.balloon_3,this.balloon_4,this.balloon_5,this.balloon_6];
				this.returnAccountBtn.on(Event.CLICK,this,this.onReturnAccountBtn);
				this.rankList.renderHandler=new Handler(this,this.rankListRender);
				this.close_btn.on(Event.MOUSE_DOWN,this,this.onClose);
				this.returnMainBtn.on(Event.MOUSE_DOWN,this,this.onCloseBox);
				this.list1.renderHandler=new Handler(this,this.updateExchange);
				this.list_sign.renderHandler=new Handler(this,this.updateSign);
				this.list_gift.renderHandler=new Handler(this,this.updateGift);
				this.accountBtn.on(Event.CLICK,this,this.onCloseAccountBtn);
				this.list_act.on(Event.CLICK,this,this.onClick);
				this.secondBtn.on(Event.CLICK,this,this.faShe,[2]);
				this.costRmbBtn.on(Event.CLICK,this,this.onBuyDailyGift);
				this.list_sign.hScrollBarSkin="";
				this.list1.hScrollBarSkin="";
				this.screenResize();
				this.initTabPage();
				}initPicture(){
				if (ActivityM.instance.activityPictureConfig){
					this.select_0.skin=ActivityM.instance.activityPictureConfig[0];
					this.select_1.skin=ActivityM.instance.activityPictureConfig[1];
					this.select_2.skin=ActivityM.instance.activityPictureConfig[1];
					this.select_3.skin=ActivityM.instance.activityPictureConfig[2];
					this.select_4.skin=ActivityM.instance.activityPictureConfig[3];
				}
				if (WxC.isInMiniGame()){
					this.copyBtn.visible=true;
				}
				}initBox(){
				this.itemBtn_0.visible=true;
				this.itemBtn_1.visible=ActivityM.instance.isShowDirectChanges;
				this.itemBtn_2.visible=ActivityM.instance.isShowGiftBox;
				this.itemBtn_3.visible=true;
				this.itemBtn_4.visible=ActivityM.instance.isShowDailyGift;
				this.itemBtnObj=[this.itemBtn_0,this.itemBtn_1,this.itemBtn_2,this.itemBtn_4,this.itemBtn_3];
				var canShowPage=0;
				for (var i=0;i < this.itemBtnObj.length;i++){
					if (this.itemBtnObj[i].visible){
						this.itemBtnObj[i].x=canShowPage *180+174;
						canShowPage++;
					}
				}
				if (!ActivityM.instance.isShowRankActivity){
					this.accountBtn.gray=true;
					this.secondBtn.gray=true;
					}else{
					this.accountBtn.gray=false;
					this.secondBtn.gray=false;
					this.secondBtn.toggle=true;
				}
				this.selectBox(0);
				}selectBox(page){
				for (var i=0;i < 5;++i){
					this["itemBtn_"+i].selected=page==i;
					this["itemBox_"+i].visible=page==i;
				}
				Laya.timer.clear(this,this.startFlyDarts);
				switch (page){
					case 0:
						this.activityExplain();
						break ;
					case 1:
						this.itemBox_1.visible=true;
						ActivityC.instance.syncExchangeTime();
						this.directChanges();
						break ;
					case 2:
						this.giftBox();
						break ;
					case 3:
						this.rankActivity();
						break ;
					case 4:
						this.updDailyGiftBox();
						break ;
					}
				}activityExplain(){
				this.rewardFlush();
				Laya.timer.once(100,this,this.scrollList);
				this.list_act.array=this._activeArr;
				this.list_act.on(Event.MOUSE_OVER,this,this.activeMouseOver);
				this.list_act.on(Event.MOUSE_OUT,this,this.activeMouseOut);
				this.list_act.tweenTo(this._activePage,3000);
				Laya.timer.once(3000,this,this.activeRecursion);
				}rewardFlush(){
				var actRegiData=ActivityM.instance.actRegisterDate;
				var reg_obj=ActivityM.instance._getCommonActivityConfig(4);
				var reg_arr=[];
				if (reg_obj){
					reg_arr=reg_obj.reward;
				};
				var timeObj=ActivityM.instance._getCommonActivityConfig(4);
				var time_arr=[];
				if (timeObj){
					time_arr=timeObj.time;
				}
				this.list_sign.visible=ActivityM.instance.isShowRegisterRebate;
				var reward=[];
				if (ActivityM.instance.isShowRegisterRebate){
					for (var i=0;i < reg_arr.length;i++){
						if (reg_arr && reg_arr.length > 1){
							reward.push({
								id:reg_arr[i][0]
								,num:reg_arr[i][1],state:actRegiData[i],time:time_arr[i]
							});
						}
					}
					this.list_sign.array=reward;
					}else{
					this.list_act.pos(0,0);
					this.tab1.pos(930,300);
					this.list_sign.visible=false;
				}
				}scrollList(){
				var date=ActivityM.instance.actRegisterTime-1;
				this.list_sign.scrollTo(date);
				}onClick(){
				var _$this=this;
				if (this._activeArr && this._activeArr[this._activePage].view){
					var Ary=this._activeArr[this._activePage].view;
					if (Ary=="shop"){
						GameEventDispatch.instance.event("Shop","tab_package");
						}else if (Ary=="Match"){
						var info=new QuitTipInfo();
						info.state=1;
						info.content="确认进入万年巨鳄关卡？";
						info.confirmCallback=Handler.create(this,function(){
							var cfg=cfg_scene.instance(4);
							var batteryLevel=RoleInfoM.instance.getBattery();
							if (batteryLevel >=cfg.unlock){
								WebSocketManager.instance.send(12003,null);
								LoginM.instance.sceneId=4;
								GameEventDispatch.instance.event("StartLoad",[1]);
								_$this.onClose();
								}else{
								GameEventDispatch.instance.event("MsgTp",cfg.msg_tip_id);
							}
						});
						info.conFirmArgs=null;
						info.autoCloseTime=10;
						GameEventDispatch.instance.event("QuitTip",info);
						}else if (Ary=="MatchGame"){
						this.onClose();
						UiManager.instance.loadView("NewMatch",null,"SMALL_TO_BIG");
						}else if (Ary=="Lottery"){
						this.selectBox(4);
						}else if (Ary=="Rank"){
						this.selectBox(1);
						}else{
						var info=new QuitTipInfo();
						info.state=1;
						info.content="确认进入万年巨鳄关卡？";
						info.confirmCallback=Handler.create(this,function(){
							var cfg=cfg_scene.instance(4);
							var batteryLevel=RoleInfoM.instance.getBattery();
							if (batteryLevel >=cfg.unlock){
								WebSocketManager.instance.send(12003,null);
								LoginM.instance.sceneId=4;
								GameEventDispatch.instance.event("StartLoad",[1]);
								_$this.onClose();
								}else{
								GameEventDispatch.instance.event("MsgTp",cfg.msg_tip_id);
							}
						});
						info.conFirmArgs=null;
						info.autoCloseTime=10;
						GameEventDispatch.instance.event("QuitTip",info);
					}
					}else{
				}
				}refreshActCdk(){
				this.giftBox();
				}updateSign(cell,index){
				var config=cell.dataSource;
				var ele_img=cell.getChildByName("img");
				var ele_days=cell.getChildByName("days");
				var ele_num=cell.getChildByName("num");
				var ele_right=cell.getChildByName("rightBtn");
				var ele_bg=cell.getChildByName("bg");
				var ele_bmask=cell.getChildByName("bmask");
				var sign_day=ActivityM.instance.actRegisterTime;
				ele_img.skin=cfg_goods.instance(config.id).icon;
				ele_days.text="第"+config.time+"天";
				ele_num.text=""+config.num;
				ele_bg.skin="ui/useTicket/img_kuang_02.png";
				ele_bg.offAll(Event.CLICK);
				if (index+1==sign_day){
					ele_bg.skin="ui/useTicket/img_kuang_02aa.png";
					ele_bg.on(Event.CLICK,this,this.onClickSign);
					}else{
					ele_bg.on(Event.CLICK,this,function(){
						GameEventDispatch.instance.event("MsgTipContent","不在签到时间内");
					});
				}
				if (index+1 < sign_day || config.state==1){
					ele_bmask.visible=true;
					}else{
					ele_bmask.visible=false;
				}
				if (config.state==1){
					ele_right.visible=true;
					}else{
					ele_right.visible=false;
				}
				}onClickSign(){
				WebSocketManager.instance.send(40007,null);
				}onBuyDailyGift(evt){
				if (!evt || !evt.target){
					return;
				};
				var comActId=evt.target["DAILY_GIFT_BTN_TAG"];
				if (comActId){
					var giftConfig=ActivityM.instance.getCurDailyGiftStageConfig(comActId);
					var info=new QuitTipInfo();
					info.state=1;
					info.content="确认购买？";
					info.confirmMsg="ShopBuy";
					info.conFirmArgs={id:giftConfig.commodity_id};
					info.autoCloseTime=10;
					GameEventDispatch.instance.event("QuitTip",info);
				}
				}activeMouseOver(){
				Laya.timer.clear(this,this.activeRecursion);
				}activeMouseOut(){
				this.activeRecursion();
				}onScroll(index){
				var _$this=this;
				this._activePage=index;
				Laya.timer.clear(this,this.activeRecursion);
				this.list_act.tweenTo(index,0,new Handler(this,function(){
					Laya.timer.once(3000,this,_$this.activeRecursion);
				}));
				}initTabPage(){
				this._itemTabArr=[this.item0,this.item1,this.item2,this.item3,this.item4,this.item5,this.item6];
				for (var i=0;i < this._itemTabArr.length;i++){
					if ((i+1)<=this._activeArr.length){
						this._itemTabArr[i].visible=true;
						this._itemTabArr[i].on(Event.CLICK,this,this.onScroll,[i]);
						}else{
						this._itemTabArr[i].visible=false;
					}
				}
				if (this._activeArr.length==0){
					this._activeArr.push(
					{img:{skin:"https://sq-img.jjhgame.com/FnUVnf-wF1u-HSYah7vHCL2OTyyh"}});
				}
				this.tab1.anchorX=1;
				this.tab1.anchorY=1;
				}activeRecursion(){
				if (this._activePage < this._activeMaxPage){
					this._activePage=this._activePage+1;
					}else{
					this._activePage=0;
				}
				this.list_act.tweenTo(this._activePage,3000);
				Laya.timer.once(3000,this,this.activeRecursion);
				}directChanges(){
				var obj=ActivityM.instance._getCommonActivityConfig(101);
				if (obj){
					var flush_time=obj.flush_time;
					var tipText="每天";
					for (var i=0;i < flush_time.length;i++){
						tipText+=flush_time[i]+"点";
						if (i < flush_time.length-1){
							tipText+="、";
						}
					}
					tipText+="进行补货，记得来购买";
					this.exchangeTip.text=tipText;
					this.list1.array=obj.exchange;
				}
				this.initCur();
				}initCur(){
				this.list1.refresh();
				}updateExchange(cell,index){
				var _$this=this;
				var config=cell.dataSource;
				var ele_buy_btn=cell.getChildByName("btn");
				var ele_remain=cell.getChildByName("remain");
				var ele_price=ele_buy_btn.getChildByName("price");
				var ele_price_unit=cell.getChildByName("price_unit");
				var ele_img=cell.getChildByName("img");
				var ele_desc=cell.getChildByName("desc");
				var exchangeTimes=ActivityM.instance.exchangeTimes;
				var reward_arr=config.reward;
				var consume_arr=config.consume;
				if (exchangeTimes[index]){
					ele_remain.text="剩余："+exchangeTimes[index];
					}else{
					ele_remain.text="剩余：0";
				}
				ele_desc.text=config.detail;
				if (consume_arr[1] <=100000){
					ele_price.text=parseInt(consume_arr[1])+"";
					}else{
					ele_price.text=(parseInt(consume_arr[1]))/ 100000+"万";
				}
				ele_img.skin=cfg_goods.instance(reward_arr[0]).icon;
				ele_buy_btn.offAll(Event.CLICK);
				ele_price_unit.skin=cfg_goods.instance(consume_arr[0]).icon;
				if (ActivityM.instance.exchangeInterval <=0){
					if (exchangeTimes[index] > 0){
						if (ActivityM.instance.getGoodsNum(consume_arr[0])>=consume_arr[1]){
							ele_buy_btn.stateNum=2;
							ele_buy_btn.skin="ui/common_ex/btn_yellow.png";
							ele_price.gray=false;
							}else{
							ele_buy_btn.stateNum=1;
							ele_buy_btn.skin="ui/common_ex/btn_gray.png";
							ele_price.gray=true;
						}
						}else{
						ele_buy_btn.stateNum=1;
						ele_buy_btn.skin="ui/common_ex/btn_gray.png";
						ele_price.gray=true;
					}
					if (ActivityM.instance.getGoodsNum(consume_arr[0])>=consume_arr[1]){
						if (exchangeTimes[index] > 0){
							ele_buy_btn.on(Event.CLICK,this,function(){
								var info=new QuitTipInfo();
								info.state=1;
								info.content="确认兑换？";
								info.confirmCallback=Handler.create(this,_$this.exchange,[index+1]);
								info.conFirmArgs=_$this.exchangeData;
								info.autoCloseTime=10;
								GameEventDispatch.instance.event("QuitTip",info);
							});
							}else{
							ele_buy_btn.on(Event.CLICK,this,function(){
								GameEventDispatch.instance.event("MsgTipContent","库存不足");
							});
						}
						}else{
						ele_buy_btn.on(Event.CLICK,this,function(){
							GameEventDispatch.instance.event("MsgTipContent","道具不足");
						});
					}
					}else{
					ele_buy_btn.stateNum=1;
					ele_buy_btn.skin="ui/common_ex/btn_gray.png";
					ele_price.gray=true;
					ele_price.text=ActivityM.instance.exchangeInterval+"s";
					ele_buy_btn.on(Event.CLICK,this,function(){
						GameEventDispatch.instance.event("MsgTipContent","30s内不能再次购买");
					});
				}
				}giftBox(){
				var gift_obj=ActivityM.instance._getCommonActivityConfig(102);
				var consume_arr=gift_obj["consume"];
				this.integralBox.visible=false;
				this.conversionBox.visible=false;
				this.convertBox.visible=false;
				this.txt_share_content.text=gift_obj["at_detail"];
				this.list_gift.array=gift_obj["reward"];
				if (ActivityM.instance.exchange==0){
					this.integralBox.visible=true;
					}else{
					this.conversionBox.visible=true;
				}
				this.integral_Icon.skin=cfg_goods.instance(consume_arr[0]).icon;
				this.integral_label.text=consume_arr[1];
				if (ActivityM.instance.actCurrency(consume_arr[0])< consume_arr[1]){
					this.integralBtn.gray=true;
					this.integral_label.gray=true;
					}else{
					this.integralBtn.gray=false;
					this.integral_label.gray=false;
				}
				this.integralBtn.on(Event.CLICK,this,this.onIntegralBtn);
				this.giftBagCode.text=ActivityM.instance.giftCdk;
				this.conversionBtn.on(Event.CLICK,this,this.onConversionBtn);
				this.returnMainBtn.on(Event.CLICK,this,this.onReturnMainBtn);
				this.yesBtn.on(Event.CLICK,this,this.onYesBtn);
				this.copyBtn.on(Event.CLICK,this,this.onCopyBtn);
				}updDailyGiftBox(){
				var comActId=106;
				this.updDailyGiftCostBtn(comActId);
				this.updDailyGiftAward(comActId);
				}updDailyGiftAward(activityCommonId){
				var giftConfig=ActivityM.instance.getCurDailyGiftStageConfig(activityCommonId);
				if (giftConfig){
					var awards=giftConfig.rewards;
					var ctrl=null;
					var award=null;
					for (var i=1,l=awards ? awards.length :0;i <=l;++i){
						ctrl=this["giftItem"+i];
						award=awards[i-1];
						if (!ctrl || !award){
							continue ;
						}
						ctrl.init(award[3],award[2]);
					}
				}
				}updDailyGiftCostBtn(activityCommonId){
				var isAllBuyed=ActivityM.instance.isDailyGiftAllBuyed(activityCommonId);
				this.costRmbBtn.visible=!isAllBuyed;
				this.tipText.visible=isAllBuyed;
				if (!isAllBuyed){
					var giftConfig=ActivityM.instance.getCurDailyGiftStageConfig(activityCommonId);
					var costRmbStr="";
					if (giftConfig){
						costRmbStr=giftConfig.price+"元";
						this.costRmbBtn["DAILY_GIFT_BTN_TAG"]=activityCommonId;
					}
					this.costRmbText.text=costRmbStr;
				}
				}updateGift(cell,index){
				var data=cell.dataSource;
				var ele_img=cell.getChildByName("img");
				var ele_num=cell.getChildByName("num");
				ele_img.skin=cfg_goods.instance(data.prop_id).icon;
				ele_num.text=ActivityM.instance.exchangeConversion(data.prop_id,data.prop_num)+"";
				}onIntegralBtn(){
				var gift_obj=ActivityM.instance._getCommonActivityConfig(102);
				var consume_arr=gift_obj["consume"];
				if (ActivityM.instance.actCurrency(consume_arr[0])< consume_arr[1]){
					GameEventDispatch.instance.event("MsgTipContent","道具不足");
					}else{
					var info=new QuitTipInfo();
					info.state=1;
					info.content="确认兑换礼盒？";
					info.confirmCallback=Handler.create(this,function(){
						WebSocketManager.instance.send(40013,null);
					});
					info.conFirmArgs=null;
					info.autoCloseTime=10;
					GameEventDispatch.instance.event("QuitTip",info);
				}
				}onConversionBtn(){
				this.close_btn.visible=false;
				this.convertBox.visible=true;
				this.returnMainBtn.visible=true;
				}onReturnMainBtn(){
				this.writegiftInput.text="";
				this.close_btn.visible=true;
				this.convertBox.visible=false;
				this.returnMainBtn.visible=false;
				}onYesBtn(){
				var _$this=this;
				var code=this.writegiftInput.text;
				if (code.length==0){
					GameEventDispatch.instance.event("MsgTipContent","礼包码不能为空");
					}else if (code.length > 0 && this.canbeCode){
					this.canbeCode=false;
					WebSocketManager.instance.send(39000,{key:code});
					Laya.timer.once(2000,this,function(){
						_$this.canbeCode=true;
					});
				}
				}onCopyBtn(){
				GameTools.copyText(""+ActivityM.instance.giftCdk);
				}rankActivity(){
				this.refreshRankList();
				this.consume_82.skin=cfg_goods.instance("82").icon;
				this.consumeNum_82.value="x"+ActivityM.instance.actCurrency(82);
				this.faSheGrade=2;
				this.detailLable.text=ActivityM.instance._getCommonActivityConfig(103)["detail"]+"";
				this.initFlyDartsStates();
				}rankListRender(cell,index){
				var config=cell.dataSource;
				var imgBox=cell.getChildByName("imgBox");
				var playimg=imgBox.getChildByName("playimg");
				var integralLabel=cell.getChildByName("Integral");
				var playerName=cell.getChildByName("player_name");
				var rankLabel=cell.getChildByName("rankLab");
				var levelLabel=cell.getChildByName("level");
				var rankIcon=cell.getChildByName("rank_icon");
				var listReward=cell.getChildByName("list_reward");
				listReward.renderHandler=new Handler(this,this.listRewardRender);
				if (config.user_avatar){
					playimg.skin=config.user_avatar;
				}
				integralLabel.text=config.integral+"";
				var name=config.user_nickname;
				if (name.length > 4){
					name=name.substring(0,4)+"...";
				}
				playerName.text=LoginInfoM.instance.filterName(name);
				rankLabel.text=(index+1)+"";
				levelLabel.text="lv."+config.user_level;
				rankIcon.visible=false;
				var award=ActivityM.instance.rankRewards[index];
				var rewards=[];
				for (var i=0;i < award.length;i+=2){
					rewards.push({
						reward_item_id:award[i],
						reward_item_num:award[i+1]
					});
				}
				listReward.array=rewards;
				}listRewardRender(cell,index){
				var data=cell.dataSource;
				var rewardImg=cell.getChildByName("reward_type");
				var rewardLabel=cell.getChildByName("reward_text");
				rewardImg.skin=cfg_goods.instance(data.reward_item_id+"").icon;
				rewardLabel.text='x '+ActivityM.instance.getExchangeConversionDesc(data.reward_item_id,data.reward_item_num);
				}initFlyDartsStates(){
				this.darts.rotation=0;
				this.hitAirBalloon=0;
				this.isHitTarget=false;
				this.isClick=true;
				this.endY=70;
				this.darts.x=this.startX;
				this.darts.y=this.startY;
				Laya.timer.loop(1,this,this.startFlyDarts);
				}startFlyDarts(){
				if (this.darts.rotation >=this.rightLimitRot || this.darts.rotation <=this.leftLimitRot){
					this.rotationSpeed=-this.rotationSpeed;
				}
				this.darts.rotation=this.darts.rotation+this.rotationSpeed;
				}isHaveEnough(num){
				var boo=false;
				switch (num){
					case 1:
						boo=ActivityM.instance.actCurrency(81)>=ActivityM.instance.getBalloonConsume(81);
						break ;
					case 2:
						boo=ActivityM.instance.actCurrency(82)>=ActivityM.instance.getBalloonConsume(82);
						break ;
					case 3:
						boo=ActivityM.instance.actCurrency(83)>=ActivityM.instance.getBalloonConsume(83);
						break ;
					}
				return boo;
				}faShe(grade){
				this.chooseFlyBtn=grade;
				this.refreshRankList();
				if (ActivityM.instance.isShowRankActivity){
					this.secondBtn.gray=false;
					if (this.chooseFlyBtn==this.faSheGrade && this.isClick){
						if (this.isHaveEnough(this.faSheGrade)){
							this.isClick=false;
							Laya.timer.clear(this,this.startFlyDarts);
							this.calculateFlightPath(this.darts.rotation);
							Tween.to(this.darts,{x:this.endX,y:this.endY},300,Ease.linearOut,Handler.create(this,this.endSettlement));
							this.consumeNum_82.value="x"+(ActivityM.instance.actCurrency(82)-1);
							}else{
							GameEventDispatch.instance.event("MsgTipContent","道具不足");
						}
						}else{
						if (this.chooseFlyBtn !=this.faSheGrade && this.isClick){
							this.faSheGrade=grade;
						}
					}
					}else{
					GameEventDispatch.instance.event("MsgTipContent","游戏已结束");
				}
				}refreshRankList(){
				this.hitBalloonArr=ActivityM.instance.getHitBalloonArr(this.chooseFlyBtn);
				for (var i=0;i < this.balloonArr.length;i++){
					this.balloonArr[i].visible=true;
					if (this.hitBalloonArr.length > 0 && this.hitBalloonArr.indexOf(i+1)>=0){
						this.balloonArr[i].visible=false;
					}
				};
				var config=ActivityM.instance.getChooseFlyRankList(this.chooseFlyBtn);
				var gameData=ActivityM.instance._getCommonActivityConfig(103);
				var range=gameData["settle"]["8"+this.chooseFlyBtn];
				for (var i=0;i < range.length;i++){
					var label=this.detailBox.getChildByName("detail_"+i);
					label.text=GameTools.getCoinStr(range[i][1]);
				}
				if (config.score !=null){
					this.myselfIntegral.text=config.score+"";
					}else{
					this.myselfIntegral.text="0";
				}
				ActivityM.instance.rankRewards=gameData["rank_award"]["8"+this.chooseFlyBtn];
				if (ActivityM.instance.unifiedBalloonRanking(config.rank)!="undefined"){
					this.myselfRank.text=ActivityM.instance.unifiedBalloonRanking(config.rank);
					}else{
					this.myselfRank.text="未进入排名";
				}
				if (config.rank_arr.length > 0){
					this.rankList.array=config.rank_arr;
					}else{
					this.rankList.array=null;
				}
				}onReturnAccountBtn(){
				this.returnAccountBtn.visible=false;
				this.closeAccountBox.visible=false;
				this.close_btn.visible=true;
				this.refreshRankList();
				this.initFlyDartsStates();
				}openCloseAccountBox(res){
				this.returnAccountBtn.visible=true;
				this.closeAccountBox.visible=true;
				this.close_btn.visible=false;
				this.endScore.value=res.unit_score+"";
				this.rankLabel.text=res.rank+"";
				this.rewardImg.skin=cfg_goods.instance(res.reward_item_ids).icon;
				this.rewardText.text=res.reward_item_nums[0]+"";
				this.scorestLabel.text="本场最高得分"+res.max_score;
				}onCloseAccountBtn(){
				if (ActivityM.instance.isShowRankActivity){
					this.hitBalloonArr=ActivityM.instance.getHitBalloonArr(this.chooseFlyBtn);
					if (this.hitBalloonArr.length > 0){
						GameEventDispatch.instance.event("MsgTipContent","结算");
						var id=("8"+this.chooseFlyBtn);
						WebSocketManager.instance.send(40018,{type:id});
						}else{
						GameEventDispatch.instance.event("MsgTipContent","没有可领取的奖励");
					}
					}else{
					GameEventDispatch.instance.event("MsgTipContent","游戏已结束");
				}
				}calculateFlightPath(rotation){
				for (var i=0;i < this.hitRange.length;i++){
					var item=this.hitRange[i];
					if (item[0] <=rotation && rotation <=item[1]){
						this.hitAirBalloon=i+1;
						this.endY=70;
						this.isHitTarget=true;
						break ;
					}
				};
				var rot=90-Math.abs(rotation);
				var sanJiaoY=this.darts.height *0.8 *GameTools.CalSinBySheet(rot);
				var sanJiaoX=this.darts.height *0.8 *GameTools.CalCosBySheet(rot);
				var k=(this.darts.y-this.endY)/ sanJiaoY;
				if (rotation >=0){
					this.endX=this.darts.x+(sanJiaoX *k);
					if (!this.isHitTarget && (this.endX+sanJiaoX)> 540){
						this.endX=540-sanJiaoX;
						k=(this.endX-this.darts.x)/ sanJiaoX;
						this.endY=this.darts.y-(k *sanJiaoY);
					}
					}else{
					this.endX=this.darts.x-(sanJiaoX *k);
					if (!this.isHitTarget && (this.endX-sanJiaoX)< 0){
						this.endX=0+sanJiaoX;
						k=(this.darts.x-this.endX)/ sanJiaoX;
						this.endY=this.darts.y-(k *sanJiaoY);
					}
				}
				if (this.hitBalloonArr.indexOf(this.hitAirBalloon)>=0){
					this.isHitTarget=false;
				};
				var id=("8"+this.faSheGrade);
				WebSocketManager.instance.send(40016,{type:id,isHit:this.isHitTarget,seat:this.hitAirBalloon});
				}endSettlement(){
				if (this.isHitTarget){
					this.balloonArr[this.hitAirBalloon-1].visible=false;
					if (this.hitBalloonArr.length < (this.balloonLimit-1)){
						this.hitAirBalloon=0;
						this.isHitTarget=false;
						this.isClick=true;
						this.endY=70;
						this.darts.x=this.startX;
						this.darts.y=this.startY;
						Laya.timer.loop(1,this,this.startFlyDarts);
						}else{
						GameEventDispatch.instance.event("MsgTipContent","结算");
						var id=("8"+this.faSheGrade);
						WebSocketManager.instance.send(40018,{type:id});
					}
					}else{
					GameEventDispatch.instance.event("MsgTipContent","结算");
					var id=("8"+this.faSheGrade);
					WebSocketManager.instance.send(40018,{type:id});
				}
				}refreshAct(){
				this.rewardFlush();
				this.list_sign.refresh();
				}refreshTime(){
				this.list1.refresh();
				}exchange(data){
				WebSocketManager.instance.send(40010,{id:data});
				}onCloseBox(){
				this.returnMainBtn.visible=false;
				this.close_btn.visible=true;
				this.convertBox.visible=false;
				}onClose(){
				UiManager.instance.closePanel("UseTicket",false);
				}screenResize(){
				var contentWidth=600;
				var contentHeight=400;
				var contentStartX=340;
				var contentStartY=160;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				this.returnMainBtn.left=contentStartX-posXOff;
				this.returnMainBtn.top=contentStartY-posYOff;
				this.close_btn.left=contentStartX-posXOff;
				this.close_btn.top=contentStartY-posYOff;
				}syncActivityData(){
				if (!ActivityM.instance.isShowShopRebate){
					GameEventDispatch.instance.event("MsgTipContent","活动已结束");
					this.onClose();
				}
			}
			//注册消息发送事件
			register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("CloseAccount",this,this.openCloseAccountBox);
				GameEventDispatch.instance.on("ActRegister",this,this.refreshAct);
				GameEventDispatch.instance.on("ActCurrency",this,this.initCur);
				GameEventDispatch.instance.on("ActCdk",this,this.refreshActCdk);
				GameEventDispatch.instance.on("ExchangeTime",this,this.refreshTime);
				GameEventDispatch.instance.on("ExchangeInterval",this,this.refreshTime);
				GameEventDispatch.instance.on("UpdFesDailyGift",this,this.updDailyGiftBox);
				GameEventDispatch.instance.on("SyncActivityData",this,this.syncActivityData);
			}
			//取消注册的消息发送事件
			unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("CloseAccount",this,this.openCloseAccountBox);
				GameEventDispatch.instance.off("ActRegister",this,this.refreshAct);
				GameEventDispatch.instance.off("ActCurrency",this,this.initCur);
				GameEventDispatch.instance.off("ActCdk",this,this.refreshActCdk);
				GameEventDispatch.instance.off("ExchangeTime",this,this.refreshTime);
				GameEventDispatch.instance.off("ExchangeInterval",this,this.refreshTime);
				GameEventDispatch.instance.off("UpdFesDailyGift",this,this.updDailyGiftBox);
				GameEventDispatch.instance.off("SyncActivityData",this,this.syncActivityData);
			}
		}

		view.useTicket.UseTicketPage=Laya.UseTicketPage=UseTicketPage;
		UseTicketPage.ITEM_TAB_NUM=5;
		UseTicketPage.DAILY_GIFT_BTN_TAG="DAILY_GIFT_BTN_TAG";	
		

		class WaitPage extends WaitPageUI{
			constructor (){
				super();
			}
			StartGames(parm=null){
				this.visible=false;
				this.wait.play(0,true);
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,this.clickPage);
				this.screenResize();
				}clickPage(event){
				event.stopPropagation();
				}closeWait(){
				Laya.timer.once(200,this,this._$6_close);
			}
			//this.visible=false;
			_$6_close(){
				this.hitTestPrior=false;
				this.visible=false;
				Laya.timer.clear(this,this.startClose);
				}openWait(){
				this.hitTestPrior=false;
				this.visible=true;
				Laya.timer.once(5000,this,this.startClose);
				}startClose(){
				this.visible=false;
				}register(){
				GameEventDispatch.instance.on("OpenWait",this,this.openWait);
				GameEventDispatch.instance.on("CloseWait",this,this.closeWait);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.on("RightWait",this,this.rightClose);
				GameEventDispatch.instance.on("AppOrderCheckOk",this,this.rightClose);
				}rightClose(){
				this.hitTestPrior=false;
				this.visible=false;
				Laya.timer.clear(this,this.startClose);
				}screenResize(){
				this.size(Laya.stage.width,Laya.stage.height);
				}unRegister(){
				GameEventDispatch.instance.off("OpenWait",this,this.openWait);
				GameEventDispatch.instance.off("CloseWait",this,this.closeWait);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				GameEventDispatch.instance.off("RightWait",this,this.rightClose);
				GameEventDispatch.instance.off("AppOrderCheckOk",this,this.rightClose);
				this.wait.visible=false;
			}
		}

		view.wait.WaitPage=Laya.WaitPage=WaitPage;	
		

		class WdloginPageView extends WDLoginPageUI{
			constructor (){
				super();
			}
			StartGames(parm=null){
				this.wxLogin.on(Event.CLICK,this,this.wxLoginClick);
				}wxLoginClick(){
				AndroidInterface.wxLogin();
				}screenResize(){
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.wdlogin.WdloginPageView=Laya.WdloginPageView=WdloginPageView;	
		

		class WxInfoPage extends WxInfoPageUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this.bmask.on(Event.CLICK,this,null);
				WxC.instance.createUserInfoButton("WxInfo");
				this.screenResize();
				}screenResize(){
				var contentWidth=400;
				var contentHeight=291;
				var contentStartX=200;
				var contentStartY=100;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
			}
		}

		view.wxInfo.WxInfoPage=Laya.WxInfoPage=WxInfoPage;	
		

		class BrokePageIVew extends BrokePageUI{
			constructor (){
				super();
				this.reconnectCount=0;
				this.autoReconnectMaxCount=3;
				this.autoConnectInterval=5;
				//自动重连间隔
				this.autoLeftTime=0;
				this.showComsEnable=false;
				this.showConfirmBtn=true;
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.confirmBtn.on(Event.CLICK,this,this.clickConfirm);
				if (WxC.isInMiniGame())
					this.quitBtn.on(Event.CLICK,this,this.clickQuti);
				this.showComsEnable=true;
				this.showConfirmBtn=true;
				if (HeartbeatC.instance.reconnectType==1){
					if (WxC.isInMiniGame())
						this.quitBtn.visible=true;
					GameEventDispatch.instance.event("MsgTp",4);
					this.specialBroke("账号在其他设备登录,请重新连接");
					if (WxC.isInMiniGame())
						this.confirmBtn.visible=false;
				}
				else if (HeartbeatC.instance.reconnectType==2){
					if (WxC.isInMiniGame())
						this.quitBtn.visible=true;
					this.specialBroke("账号被踢出");
					if (WxC.isInMiniGame())
						this.confirmBtn.visible=false;
				}
				else if (HeartbeatC.instance.reconnectType==4){
					if (WxC.isInMiniGame())
						this.quitBtn.visible=false;
					GameEventDispatch.instance.event("MsgTp",5);
					this.specialBroke("服务器异常");
				}
				else if (HeartbeatC.instance.reconnectType==7){
					this.showConfirmBtn=false;
					if (WxC.isInMiniGame())
						this.quitBtn.visible=true;
					this.specialBroke(HeartbeatC.instance.reconnectContent);
				}
				else if (HeartbeatC.instance.reconnectType==5){
					if (WxC.isInMiniGame())
						this.quitBtn.visible=true;
					this.specialBroke("用户校验失败");
					if (WxC.isInMiniGame())
						this.confirmBtn.visible=false;
				}
				else if (HeartbeatC.instance.reconnectType==6){
					if (WxC.isInMiniGame())
						this.quitBtn.visible=false;
					this.specialBroke("网络状态异常");
				}
				else{
					if (WxC.isInMiniGame())
						this.quitBtn.visible=false;
					this.clickConfirm();
				}
				Laya.timer.frameLoop(1,this,this.autoTimeTick);
				this.screenResize();
				this.bmask.on(Event.CLICK,this,this.clickMask);
				}clickQuti(){
				WxC.exitGame();
				}clickMask(){
				}screenResize(){
				var contentWidth=600;
				var contentHeight=400;
				var contentStartX=340;
				var contentStartY=160;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				}specialBroke(tip){
				this.showComsEnable=false;
				this.confirmBtn.visible=this.showConfirmBtn;
				this.reconnectCount=this.autoReconnectMaxCount;
				this.mainContent.text=tip;
				}autoTimeTick(){
				this.autoLeftTime-=Laya.timer.delta / 1000;
				if (this.autoLeftTime <=0 && WebSocketManager.instance.isSocketNull()){
					if (this.reconnectCount < this.autoReconnectMaxCount){
						this.clickConfirm();
					}
					else{
						this.showComs();
					}
				}
				}startReconnect(){
				this.reconnectCount+=1;
				WebSocketManager.instance.reconnect();
				}receiveHandshake(){
				UiManager.instance.closePanel("BrokePage",true);
				}clickConfirm(){
				this.showComsEnable=true;
				this.autoLeftTime=this.autoConnectInterval;
				this.confirmBtn.visible=false;
				if (this.reconnectCount >=3){
					this.mainContent.text="重连中...";
				}
				else{
					this.mainContent.text="第"+(this.reconnectCount+1)+"次自动重连中...";
				}
				this.startReconnect();
				}showOtherDeviceLogin(){
				}showComs(){
				if (!this.showComsEnable){
					return;
				}
				this.confirmBtn.visible=true;
				if (this.reconnectCount <=3){
					this.mainContent.text="自动连接失败，请重新连接";
				}
				else{
					this.mainContent.text="连接失败，请重新连接";
				}
				}wsClose(){
				if (this.autoLeftTime <=0){
					if (this.reconnectCount < this.autoReconnectMaxCount){
						if (WebSocketManager.instance.isSocketNull()){
							console.log("9999999");
							this.clickConfirm();
						}
					}
					else{
						this.showComs();
					}
				}
				}wsError(){
				if (this.autoLeftTime <=0){
					if (this.reconnectCount < this.autoReconnectMaxCount){
						if (WebSocketManager.instance.isSocketNull()){
							this.clickConfirm();
						}
					}
					else{
						this.showComs();
					}
				}
				}register(){
				GameEventDispatch.instance.once("ReceiveHandshake",this,this.receiveHandshake);
				GameEventDispatch.instance.on("WsClose",this,this.wsClose);
				GameEventDispatch.instance.on("WsError",this,this.wsError);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				this.reconnectCount=0;
				Laya.timer.clear(this,this.autoTimeTick);
				GameEventDispatch.instance.off("ReceiveHandshake",this,this.receiveHandshake);
				GameEventDispatch.instance.off("WsClose",this,this.wsClose);
				GameEventDispatch.instance.off("WsError",this,this.wsError);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.brokePage.BrokePageIVew=Laya.BrokePageIVew=BrokePageIVew;	
		

		class OnLogin extends OnLoginUI{
			constructor (){
				super();
				new Filter();
			}
		}

		view.login.OnLogin=Laya.OnLogin=OnLogin;	
		

		class QuitTipView extends QuitTpUI{
			constructor (){
				super();
				//this._count=0;
				//this._confirmTxt=null;
				//this._cancleTxt=null;
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.confirmBtn.on(Event.CLICK,this,this.confirm);
				this.cancelBtn.on(Event.CLICK,this,this.clickCancel);
				this.closeBtn.on(Event.CLICK,this,this.clickClose);
				this.cBtn.on(Event.CLICK,this,this.clickB);
				var info=QuitM.instance.getTipInfo();
				if (info.autoCloseTime > 0){
					Laya.timer.loop(1000,this,this.loopTick);
				}
				this.init();
				this.bmask.on(Event.CLICK,this,this.clickMask);
				this.screenResize();
				}clickQuit(){
				UiManager.instance.closePanel("QuitTip",false);
				var info=QuitM.instance.getTipInfo();
				if (info.quitMsg){
					GameEventDispatch.instance.event(info.quitMsg,info.quitArgs);
				}
				}clickMask(){
				}init(){
				var info=QuitM.instance.getTipInfo();
				this.btnState(info.state);
				this.mainContent.autoSize=false;
				this.mainContent.style.align="center";
				this.mainContent.style.fontSize=22;
				this.mainContent.style.color="#136673";
				this.mainContent.style.bold=true;
				this.mainContent.innerHTML=info.content;
				this.mainContent.style.font="Microsoft YaHei";
				this.mainContent.style.width=491;
				this._count=info.autoCloseTime;
				this.timeContent.visible=info.isHaveTime;
				if (info.isHaveTime==false){
					Laya.timer.clear(this,this.loopTick);
				}
				if (info.autoCloseTime > 0){
					this.timeContent.text="("+this._count+"秒以后自动关闭)";
					}else{
					this.timeContent.text="";
				}
				}clickB(){
				this.confirm();
				if (this.rankCheckBox.selected==true){
					WebSocketManager.instance.send(42004,null);
				}
				}btnState(state){
				var info=QuitM.instance.getTipInfo();
				if (info.leftTxt){
					GameTools.clipTxt(this.clipCancel,info.leftTxt,info.leftTxtColor);
				}
				if (info.rightTxt){
					GameTools.clipTxt(this.clipConfirm,info.rightTxt,info.rightTxtColor);
				}
				if (info.middleTxt){
					GameTools.clipTxt(this.clipMIddle,info.middleTxt,info.middileTxtColor);
				}
				switch (state){
					case 0:{
							this.subscibeBox.visible=false;
							this.cBtn.visible=false;
							this.confirmBtn.visible=true;
							this.cancelBtn.visible=true;
							this.cancelBtn.x=346;
							this.cancelBtn.y=360;
							this.confirmBtn.x=106;
							this.confirmBtn.y=360;
							this.rankCheckBox.visible=false;
							break ;
						}
					case 1:{
							this.cBtn.visible=false;
							this.subscibeBox.visible=false;
							this.confirmBtn.visible=true;
							this.cancelBtn.visible=true;
							this.rankCheckBox.visible=false;
							this.confirmBtn.x=346;
							this.confirmBtn.y=360;
							this.cancelBtn.x=106;
							this.cancelBtn.y=360;
							break ;
						}
					case 2:{
							this.confirmBtn.visible=false;
							this.subscibeBox.visible=false;
							this.cancelBtn.visible=false;
							this.cBtn.visible=true;
							this.rankCheckBox.visible=false;
							break ;
						}
					case 3:{
							this.confirmBtn.visible=false;
							this.subscibeBox.visible=false;
							this.cancelBtn.visible=false;
							this.cBtn.visible=false;
							this.rankCheckBox.visible=false;
							break ;
						}
					case 4:{
							this.confirmBtn.visible=false;
							this.subscibeBox.visible=false;
							this.cancelBtn.visible=false;
							this.cBtn.visible=true;
							this.rankCheckBox.visible=true;
							break ;
						}
					case 5:{
							this.confirmBtn.visible=false;
							this.cancelBtn.visible=false;
							this.cBtn.visible=true;
							this.subscibeBox.visible=true;
							this.rankCheckBox.visible=false;
							break ;
						}
					default :{
							break ;
						}
					}
				}loopTick(){
				this._count=this._count-1;
				this.updateCount(this._count);
				}screenResize(){
				this.bmask.width=Laya.stage.width *2;
				this.bmask.height=Laya.stage.height *2;
				this.size(Laya.stage.width,Laya.stage.height);
				}updateCount(count){
				if (count==0){
					this.clickCancel();
				}
				this.timeContent.text="("+count+"秒以后自动关闭)";
				}clickClose(){
				UiManager.instance.closePanel("QuitTip",false);
				var info=QuitM.instance.getTipInfo();
				if (info.commonMsg){
					GameEventDispatch.instance.event(info.commonMsg,info.commonArgs);
				}
				if (info.closeCallback){
					info.closeCallback.run();
				}
				}clickCancel(){
				UiManager.instance.closePanel("QuitTip",false);
				var info=QuitM.instance.getTipInfo();
				if (info.cancelEvent){
					GameEventDispatch.instance.event(info.cancelEvent,info.cancelEventArgs);
				}
				if (info.commonMsg){
					GameEventDispatch.instance.event(info.commonMsg,info.commonArgs);
				}
				if (info.cancelMsg){
					GameEventDispatch.instance.event(info.cancelMsg,info.cancelArgs);
				}
				if (info.cancelCallback){
					info.cancelCallback.run();
				}
				}confirm(){
				UiManager.instance.closePanel("QuitTip",false);
				var info=QuitM.instance.getTipInfo();
				if (info.confirmEvent){
					GameEventDispatch.instance.event(info.confirmEvent,info.confirmEventArgs);
				}
				if (info.confirmMsg){
					GameEventDispatch.instance.event(info.confirmMsg,info.conFirmArgs);
				}
				if (info.commonMsg){
					GameEventDispatch.instance.event(info.commonMsg,info.commonArgs);
				}
				if (info.confirmCallback){
					info.confirmCallback.run();
				}
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				if (ENV.isShowBannerAndAD()){
					if (WxC.isInMiniGame()&& WxC.compareVersion(WxC.wxSDKVersion,"2.0.6")>=0){
						this.tip_box.y=0;
						WxC.instance.showBannerAD();
						}else{
						this.tip_box.y=60;
					}
					}else{
					this.tip_box.y=60;
				}
				}unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
				Laya.timer.clear(this,this.loopTick);
				if (ENV.isShowBannerAndAD()){
					if (WxC.isInMiniGame()){
						WxC.instance.hideBannerAD();
					}
				}
			}
		}

		view.quitTip.QuitTipView=Laya.QuitTipView=QuitTipView;	
		

		class SgBrokeView extends SgBrokePageUI{
			constructor (){
				super();
				this.reconnectCount=0;
				this.autoReconnectMaxCount=3;
				this.autoConnectInterval=5;
				//自动重连间隔
				this.autoLeftTime=0;
				this.showComsEnable=false;
				this.showConfirmBtn=true;
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.hitTestPrior=false;
				this._startX=this.x;
				this._startY=this.y;
				this.confirmBtn.on(Event.CLICK,this,this.clickConfirm);
				this.showComsEnable=true;
				this.showConfirmBtn=true;
				if (SmallGameHeartbeatC.instance.reconnectType==1){
					GameEventDispatch.instance.event("MsgTp",4);
					this.specialBroke("账号在其他设备登录,请重新连接");
					if (WxC.isInMiniGame())
						this.confirmBtn.visible=false;
				}
				else if (SmallGameHeartbeatC.instance.reconnectType==2){
					this.specialBroke("账号被踢出");
					if (WxC.isInMiniGame())
						this.confirmBtn.visible=false;
				}
				else if (SmallGameHeartbeatC.instance.reconnectType==4){
					GameEventDispatch.instance.event("MsgTp",5);
					this.specialBroke("服务器异常");
				}
				else if (HeartbeatC.instance.reconnectType==7){
					this.showConfirmBtn=false;
					this.specialBroke(HeartbeatC.instance.reconnectContent);
				}
				else if (SmallGameHeartbeatC.instance.reconnectType==5){
					this.specialBroke("用户校验失败");
					if (WxC.isInMiniGame())
						if (WxC.isInMiniGame())
					this.confirmBtn.visible=false;
				}
				else if (SmallGameHeartbeatC.instance.reconnectType==6){
					this.specialBroke("网络状态异常");
				}
				else{
					this.clickConfirm();
				}
				Laya.timer.frameLoop(1,this,this.autoTimeTick);
				this.screenResize();
				this.bmask.on(Event.CLICK,this,this.maskClick);
				}clickquit(){
				WxC.exitGame();
				}maskClick(){
				}screenResize(){
				var contentWidth=600;
				var contentHeight=400;
				var contentStartX=340;
				var contentStartY=160;
				var posXOff=(Laya.stage.width-contentWidth)/ 2;
				var posYOff=(Laya.stage.height-contentHeight)/ 2;
				this.pos(this._startX+posXOff-contentStartX,this._startY+posYOff-contentStartY);
				this.size(Laya.stage.width,Laya.stage.height);
				}specialBroke(tip){
				this.showComsEnable=false;
				this.confirmBtn.visible=this.showConfirmBtn;
				this.reconnectCount=this.autoReconnectMaxCount;
				this.mainContent.text=tip;
				}autoTimeTick(){
				this.autoLeftTime-=Laya.timer.delta / 1000;
				if (this.autoLeftTime <=0 && WebSocketSmallGameManager.instance.isSocketNull()){
					if (this.reconnectCount < this.autoReconnectMaxCount){
						this.clickConfirm();
					}
					else{
						this.showComs();
					}
				}
				}startReconnect(){
				this.reconnectCount+=1;
				WebSocketSmallGameManager.instance.reconnect();
				}receiveHandshake(){
				UiManager.instance.closePanel("SgBrokePage",true);
				}clickConfirm(){
				this.showComsEnable=true;
				this.autoLeftTime=this.autoConnectInterval;
				this.confirmBtn.visible=false;
				if (this.reconnectCount >=3){
					this.mainContent.text="重连中...";
				}
				else{
					this.mainContent.text="第"+(this.reconnectCount+1)+"次自动重连中...";
				}
				this.startReconnect();
				}showOtherDeviceLogin(){
				}showComs(){
				if (!this.showComsEnable){
					return;
				}
				UiManager.instance.closePanel("SgBrokePage",true);
				}wsClose(){
				if (this.autoLeftTime <=0){
					if (this.reconnectCount < this.autoReconnectMaxCount){
						if (WebSocketSmallGameManager.instance.isSocketNull()){
							this.clickConfirm();
						}
					}
					else{
						this.showComs();
					}
				}
				}wsError(){
				if (this.autoLeftTime <=0){
					if (this.reconnectCount < this.autoReconnectMaxCount){
						if (WebSocketSmallGameManager.instance.isSocketNull()){
							this.clickConfirm();
						}
					}
					else{
						this.showComs();
					}
				}
				}register(){
				GameEventDispatch.instance.once("ReceiveSGHandshake",this,this.receiveHandshake);
				GameEventDispatch.instance.on("SGWsClose",this,this.wsClose);
				GameEventDispatch.instance.on("SGWsError",this,this.wsError);
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				this.x=this._startX;
				this.y=this._startY;
				this.reconnectCount=0;
				Laya.timer.clear(this,this.autoTimeTick);
				GameEventDispatch.instance.off("ReceiveSGHandshake",this,this.receiveHandshake);
				GameEventDispatch.instance.off("SGWsClose",this,this.wsClose);
				GameEventDispatch.instance.off("SGWsError",this,this.wsError);
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.sgBrokePage.SgBrokeView=Laya.SgBrokeView=SgBrokeView;	
		

		class UserBanView extends UserBanUI{
			constructor (){
				super();
				this._startX=0;
				this._startY=0;
			}
			StartGames(parm=null){
				this.box.x=Laya.stage.width / 2;
				this.box.y=Laya.stage.height / 2;
				this._startX=this.x;
				this._startY=this.y;
				this.telLable.text=StartParam.instance.getParam("provider_tel")+"";
				this.exitBtn.on(Event.CLICK,this,this.exitGame);
				}exitGame(){
				if (WxC.isInMiniGame()){
					WxC.exitGame();
				}
				else{
					Browser.window.top.postMessage("close","*");
				}
				}screenResize(){
				this.size(Laya.stage.width,Laya.stage.height);
				}register(){
				GameEventDispatch.instance.on("ScreenResize",this,this.screenResize);
				}unRegister(){
				GameEventDispatch.instance.off("ScreenResize",this,this.screenResize);
			}
		}

		view.userBan.UserBanView=Laya.UserBanView=UserBanView;
		Laya.__init([GameConfig]);

		/**LayaGameStart**/
		new Main();

		return Laya;
	}(window));

}());
